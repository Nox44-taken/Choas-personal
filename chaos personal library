/// Your "Library" tab should look like this

// Intentional whitespace for script detection: {}

/*
Main control panel for scenario creator convenience
Settings defined here will override their counterparts elsewhere
Most Auto-Cards and Localized Languages settings are included
Safe to delete
*/
globalThis.MainSettings = (class MainSettings {

    //—————————————————————————————————————————————————————————————————————————————————

    /*
    Localized Languages (LoLa)
    Made by LewdLeah on August 13, 2025
    This script allows players to enjoy AI Dungeon adventures in their preferred languages
    English-speaking scenario creators may appreciate the improved audience reach
    Non-English scenario creators are especially encouraged to write anything they desire
    LoLa is free and open-source, please copy for use within your own projects! ❤️
    */
    static LocalizedLanguages = {
        // Show useful info about LoLa inside a story card during startup?
        SHOW_INFO_CARD_AT_START: false
        // (true or false)
        ,
        // Always add generic AI instructions to context?
        USE_GENERIC_AI_INSTRUCTIONS: false
        // (true or false)
        ,
        // Which language did you use to write your scenario's plot components?
        SCENARIO_CONTENT_LANGUAGE: "english"
        // Any language from the list of supported languages
        // (lowercase in "quotes")
        // Example: (Russian / русский язык / Russkiĭ âzyk) → Use leftmost name: "russian"
    };

    //—————————————————————————————————————————————————————————————————————————————————

    /*
    Auto-Cards
    Made by LewdLeah on May 21, 2025
    This AI Dungeon script automatically creates and updates plot-relevant story cards while you play
    General-purpose usefulness and compatibility with other scenarios/scripts were my design priorities
    Auto-Cards is fully open-source, please copy for use within your own projects! ❤️
    */
    static AutoCards = {
        // Is Auto-Cards already enabled when the adventure begins?
        DEFAULT_DO_AC: false
        // (true or false)
        ,
        // Pin the "Configure Auto-Cards" story card at the top of the player's story cards list?
        DEFAULT_PIN_CONFIGURE_CARD: false
        // (true or false)
        ,
        // Minimum number of turns in between automatic card generation events?
        DEFAULT_CARD_CREATION_COOLDOWN: 9999
        // (0 to 9999)
        ,
        // Use a bulleted list format for newly generated card entries?
        DEFAULT_USE_BULLETED_LIST_MODE: true
        // (true or false)
        ,
        // Maximum allowed length for newly generated story card entries?
        DEFAULT_GENERATED_ENTRY_LIMIT: 300
        // (200 to 2000)
        ,
        // Do newly generated cards have memory updates enabled by default?
        DEFAULT_NEW_CARDS_DO_MEMORY_UPDATES: true
        // (true or false)
        ,
        // Default character limit before the card's memory bank is summarized?
        DEFAULT_NEW_CARDS_MEMORY_LIMIT: 2750
        // (1750 to 9900)
        ,
        // Approximately how much shorter should recently compressed memories be? (ratio = 10 * old / new)
        DEFAULT_MEMORY_COMPRESSION_RATIO: 25
        // (20 to 1250)
        ,
        // Ignore all-caps during title candidate detection?
        DEFAULT_IGNORE_ALL_CAPS_TITLES: true
        // (true or false)
        ,
        // Should player input actions (Do/Say/Story) be considered during title detection?
        DEFAULT_DETECT_TITLES_FROM_INPUTS: false
        // (true or false)
        ,
        // How many (minimum) actions in the past does Auto-Cards look for named entities?
        DEFAULT_MINIMUM_LOOK_BACK_DISTANCE: 5
        // (2 to 88)
        ,
        // Is Live Script Interface v2 enabled?
        DEFAULT_DO_LSI_V2: false
        // (true or false)
        ,
        // Should the "Debug Data" story card be visible?
        DEFAULT_SHOW_DEBUG_DATA: false
        // (true or false)
        ,
        // AI prompt used to generate new story card entries?
        DEFAULT_CARD_GENERATION_PROMPT: [
            "-----",
            "",
            "<SYSTEM>",
            "# Stop the story and ignore previous instructions. Write a brief and coherent informational entry for %{title} following these instructions:",
            "- Write only third-person pure prose information about %{title} using complete sentences with correct punctuation",
            "- Avoid short-term temporary details or appearances, instead focus on plot-significant information",
            "- Prioritize story-relevant details about %{title} first to ensure seamless integration with the previous plot",
            "- Create new information based on the context and story direction",
            "- Mention %{title} in every sentence",
            "- Use semicolons if needed",
            "- Add additional details about %{title} beneath incomplete entries",
            "- Be concise and grounded",
            "- Imitate the story's writing style and infer the reader's preferences",
            "</SYSTEM>",
            "Continue the entry for %{title} below while avoiding repetition:",
            "%{entry}"
        ] // (mimic this multi-line "text" format)
        ,
        // AI prompt used to summarize a given story card's memory bank?
        DEFAULT_CARD_MEMORY_COMPRESSION_PROMPT: [
            "-----",
            "",
            "<SYSTEM>",
            "# Stop the story and ignore previous instructions. Summarize and condense the given paragraph into a narrow and focused memory passage while following these guidelines:",
            "- Ensure the passage retains the core meaning and most essential details",
            "- Use the third-person perspective",
            "- Prioritize information-density, accuracy, and completeness",
            "- Remain brief and concise",
            "- Write firmly in the past tense",
            "- The paragraph below pertains to old events from far earlier in the story",
            "- Integrate %{title} naturally within the memory; however, only write about the events as they occurred",
            "- Only reference information present inside the paragraph itself, be specific",
            "</SYSTEM>",
            "Write a summarized old memory passage for %{title} based only on the following paragraph:",
            "\"\"\"",
            "%{memory}",
            "\"\"\"",
            "Summarize below:"
        ] // (mimic this multi-line "text" format)
        ,
        // Titles banned from future card generation attempts?
        DEFAULT_BANNED_TITLES_LIST: (
            "North, East, South, West, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, January, February, March, April, May, June, July, August, September, October, November, December, New Story Arc, Generate Story Arc, Redo Story Arc, It, Him, Her, She, His, Hers, Theirs, Both, Them, They, All, Ours, Our, We're, They're, And, But, When, Why, Who, What, Us, We, Story Arc Engine, Scales, Set Story Arc Type, Type, NEW, TIME, Intensity, Story Arc Settings, Story Arc, Updating Story Arc Next Turn, Charmer, Honorable, Rogue, Dominant, Submissive, Prankster, Curious, Innocent, Mischievous, Affectionate, Defiant, Brave, Clever, Playful, Month, Year, Day, Minute,  Not, Spread, Eastern, Western, Northern, Southern, Invalid"
        ) // (mimic this comma-list "text" format)
        ,
        // Default story card "type" used by Auto-Cards? (does not matter)
        DEFAULT_CARD_TYPE: "class"
        // ("text")
        ,
        // Should titles mentioned in the "opening" plot component be banned from future card generation by default?
        DEFAULT_BAN_TITLES_FROM_OPENING: false
        // (true or false)
    };

    //—————————————————————————————————————————————————————————————————————————————————

    #config;
    constructor(script) {
        this.#config = MainSettings.hasOwnProperty(script) ? MainSettings[script] : null;
        return this;
    }
    merge(settings) {
        if (!this.#config || !settings || (typeof settings !== "object")) {
            return;
        }
        for (const [key, value] of Object.entries(this.#config)) {
            settings[key] = value;
        }
        return;
    }
});

//—————————————————————————————————————————————————————————————————————————————————————

/*
Localized Languages (LoLa)
Made by LewdLeah on August 13, 2025
This script allows players to enjoy AI Dungeon adventures in their preferred languages
English-speaking scenario creators may appreciate the improved audience reach
Non-English scenario creators are especially encouraged to write anything they desire
LoLa is free and open-source, please copy for use within your own projects! ❤️
*/
function LocalizedLanguages(hook, str) {
    "use strict"; const S = {
    // For scenario creators:

    // Show useful info about LoLa inside a story card during startup?
    SHOW_INFO_CARD_AT_START: false
    // (true or false)
    ,
    // Always add generic AI instructions to context?
    USE_GENERIC_AI_INSTRUCTIONS: false
    // (true or false)
    ,
    // Which language did you use to write your scenario's plot components?
    SCENARIO_CONTENT_LANGUAGE: "english"
    // (any lowercase language name from the list below)
    /*
    english
    abkhazian
    abkhazian (abc)
    afar
    afrikaans
    akan
    akan (abc)
    albanian
    amharic
    amharic (abc)
    arabic
    arabic (abc)
    aragonese
    armenian
    armenian (abc)
    asmr
    assamese
    assamese (abc)
    avaric
    avaric (abc)
    avestan
    aymara
    azerbaijani
    azerbaijani (abc)
    bambara
    bashkir
    bashkir (abc)
    basque
    belarusian
    belarusian (abc)
    bengali
    bengali (abc)
    bislama
    bosnian
    bosnian (abc)
    brainrot
    brazilian
    breton
    bulgarian
    bulgarian (abc)
    burmese
    burmese (abc)
    catalan
    central khmer
    central khmer (abc)
    chamorro
    chechen
    chechen (abc)
    chichewa
    chinese
    chinese (abc)
    church slavic
    church slavic (abc)
    chuvash
    chuvash (abc)
    cornish
    corporate
    corsican
    cree
    cree (abc)
    croatian
    czech
    danish
    divehi
    dutch
    dzongkha
    dzongkha (abc)
    esperanto
    estonian
    ewe
    faroese
    fijian
    finnish
    french
    fulah
    gaelic
    galician
    ganda
    georgian
    georgian (abc)
    german
    greek
    greek (abc)
    guarani
    gujarati
    gujarati (abc)
    haitian creole
    hausa
    hebrew
    hebrew (abc)
    herero
    hindi
    hindi (abc)
    hiri motu
    hungarian
    icelandic
    ido
    igbo
    indonesian
    interlingua
    interlingue
    inuktitut
    inupiaq
    irish
    italian
    japanese
    japanese (abc)
    javanese
    kalaallisut
    kannada
    kannada (abc)
    kanuri
    kashmiri
    kashmiri (abc)
    kazakh
    kazakh (abc)
    kikuyu
    kinyarwanda
    klingon
    komi
    komi (abc)
    kongo
    korean
    korean (abc)
    kuanyama
    kurdish
    kurdish (abc)
    kyrgyz
    kyrgyz (abc)
    lao
    lao (abc)
    latin
    latvian
    leetspeak
    legalese
    limburgish
    lingala
    lingua-technis
    lithuanian
    luba-katanga
    luxembourgish
    macedonian
    macedonian (abc)
    malagasy
    malay
    malayalam
    malayalam (abc)
    maltese
    manx
    maori
    marathi
    marathi (abc)
    marshallese
    mongolian
    mongolian (abc)
    nauru
    navajo
    navi
    ndonga
    nepali
    nepali (abc)
    north ndebele
    northern sami
    norwegian
    norwegian bokmal
    norwegian nynorsk
    occitan
    ojibwe
    old english
    oriya
    oriya (abc)
    orkish
    oromo
    ossetian
    ossetian (abc)
    pali
    panjabi
    panjabi (abc)
    persian
    persian (abc)
    pig latin
    pirate
    polish
    portuguese
    purple prose
    pushto
    pushto (abc)
    quechua
    rhyme
    romanian
    romansh
    rundi
    russian
    russian (abc)
    samoan
    sango
    sanskrit
    sanskrit (abc)
    sardinian
    serbian
    serbian (abc)
    shona
    sichuan yi
    sichuan yi (abc)
    sindhi
    sindhi (abc)
    sinhalese
    sinhalese (abc)
    slovak
    slovenian
    somali
    south ndebele
    southern sotho
    spanish
    sundanese
    swahili
    swati
    swedish
    tagalog
    tahitian
    tajik
    tajik (abc)
    tamil
    tamil (abc)
    tatar
    tatar (abc)
    telugu
    telugu (abc)
    thai
    thai (abc)
    tibetan
    tibetan (abc)
    tigrinya
    tigrinya (abc)
    tonga
    traditional chinese
    traditional chinese (abc)
    tsonga
    tswana
    turkish
    turkmen
    twi
    uighur
    uighur (abc)
    ukrainian
    ukrainian (abc)
    urdu
    urdu (abc)
    uzbek
    valley girl
    venda
    vietnamese
    volapuk
    walloon
    welsh
    western frisian
    wolof
    xhosa
    yiddish
    yiddish (abc)
    yoruba
    zhuang
    zulu
    */
    ,
    //—————————————————————————————————————————————————————————————————————————————————

    // Ignorable validation tools for development and testing:

    // Write (to SC) all translation factories?
    GET_ALL_TRANSLATIONS: false
    ,
    // Run the debug validator during adventure startup to test new translations?
    RUN_DEBUG_VALIDATOR: false
    // (true or false)
    ,
    // Write (to SC) all AI prompts used to generate translation factories?
    WRITE_TRANSLATION_PROMPTS: false
    // (true or false)
    ,
    // Ensure all precursor elements are present in translation outputs?
    COMPARE_PRECURSORS_VS_OUTPUTS: false
    // (true or false)
    ,
    // Force-enable all 4 dev tools above? (sets all to true)
    USE_ALL_DEV_TOOLS: false
    // (true or false)
    ,
    }; //——————————————————————————————————————————————————————————————————————————————

    /*
    To everyone who helped make LoLa possible, you have my genuine thanks:

    AHotHamster
    https://play.aidungeon.com/profile/AHotHamster22
    - Joke languages ideation

    BinKompliziert
    https://play.aidungeon.com/profile/BinKompliziert
    - Opening prompt for tech demonstration scenario

    Celyne
    https://play.aidungeon.com/profile/Vorya
    - Distinction between Simplified Chinese and Traditional Chinese
    - Traditional Chinese (abc) romanization
    - Chinese (abc) romanization
    - Indonesian localization
    - Chinese localization
    - Tagalog localization

    DebaczX
    https://play.aidungeon.com/profile/DebaczX
    - Reversal of native "i" -> "you" formatting in Do actions
    - Polish localization

    Dirty Kurtis
    https://play.aidungeon.com/profile/DirtyKurtis
    - Wrote the universal instruction set

    effortlyss
    https://play.aidungeon.com/profile/effortlyss
    - Rephrased universal instructions
    - Renamed context element: "Memories" -> "Past Events"
    - Pondering on tokenization

    ElunaGabriel
    https://play.aidungeon.com/profile/werty1232
    - Polish localization

    Gryphe
    https://play.aidungeon.com/profile/GryphePadar
    - Hallucinated ChatML mitigation

    Idle Confusion
    https://play.aidungeon.com/profile/Idle%20Confusion
    - Finnish localization

    IridiumWolf
    https://play.aidungeon.com/profile/IridiumWolf
    - Portuguese localization

    LGO
    https://play.aidungeon.com/profile/LGO
    https://github.com/Dargoth
    - Russian localization

    M3d1ocr3
    https://play.aidungeon.com/profile/m3dija
    - Lithuanian localization

    Onyx
    https://play.aidungeon.com/profile/OnyxFlame
    - Opening prompt for tech demonstration scenario

    Pepen
    https://play.aidungeon.com/profile/Pepen
    - French localization

    Randy Viosca
    https://play.aidungeon.com/profile/Random_Variable
    - Renamed context element: "World Lore" -> "Narrative Entities"
    - Renamed context element: "Story Summary" -> "Story History"

    Snowsearcher
    https://play.aidungeon.com/profile/Snowsearcher
    - Spanish localization

    SpikeViper
    https://play.aidungeon.com/profile/SpikeViper
    - Text to char codes approach for scoring charset distinctiveness from Latin alphabets
    - Pondering on tokenization

    Springouille
    - French localization

    Tonto
    https://play.aidungeon.com/profile/Tonto191145
    - Initial idea for localization

    Vendayan
    https://play.aidungeon.com/profile/Vendayan
    https://github.com/Vendayan/aid-manager
    - VS Code extension used during later development

    Vutinberg
    https://play.aidungeon.com/profile/Vutinberg
    - Rephrased universal instructions
    - Diverse openings system
    - Choice of model for JSON iterator

    Wilmar
    https://play.aidungeon.com/profile/Wilmar_
    - Native writing emphasis and translation de-emphasis
    - System directives
    - French localization

    A note to future creators:
    If you fork or modify LoLa, please feel free to include your name as well! Yay! 🥰
    */

    //—————————————————————————————————————————————————————————————————————————————————

    const factories = ["<translations>", Object.freeze({
        "english": () => ({ // English
            entry: [
                "{1} is an open-source script for any {2} scenario. Please visit my profile {3} to learn more!",
                "To change your preferred language, please submit the following text using a {4} action",
                "For scenario creators, please include the following text anywhere inside your opening plot component"
            ],
            input: [
                ["You say", "You say"],
                ["You", "You"],
                ["says", "says"]
            ],
            context: [
                ["Narrative Entities", "Narrative Entities"],
                ["Story History", "Story History"],
                ["Past Events", "Past Events"],
                ["Recent Story", "Recent Story"],
                ["Author's note", "Author's note"]
            ],
            opening: [
                "You are an assistant. Continue our story below using captivating english prose:",
                "You focus, allowing reality to encroach upon the boundaries of your mind. Something has changed. Your imagination is real, sharp, and close enough to touch. But you are also very present; never before have you felt so lucid. The moment stretches, waiting for your decision.",
                "\"Are you sure about this?\" you hear. Recognition dawns upon you."
            ],
            reminder: "Use coherent english prose.",
            endonyms: [],
            iso639set1: "en",
            directives: [
                "Always write fluent and consistent english.",
                "Use native english without translating."
            ],
            instructions: [
                "You are an engaging storyteller who continues narratives:",
                "Continue the story seamlessly from where it left off without restating or resetting.",
                "Keep the reader in control of the story flow.",
                "Let scenes develop naturally before moving to new situations.",
                "Allow conversations and actions to develop without constant interruptions.",
                "Write characters as real people with distinct personalities and natural speech.",
                "Show what's happening through actions and dialogue rather than explanation.",
                "Move scenes forward without getting bogged down in excessive description.",
                "Focus on essential character actions and dialogue, avoid unnecessary descriptive details.",
                "Create organic plot developments that feel natural to the story."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stop the story and ignore previous instructions. Write a brief and coherent informational entry for {%} following these instructions:",
                "- Write only third-person pure prose information about {%} using complete sentences with correct punctuation.",
                "- Avoid short-term temporary details or appearances, instead focus on plot-significant information.",
                "- Prioritize story-relevant details about {%} first to ensure seamless integration with the previous plot.",
                "- Create new information based on the context and story direction.",
                "- Mention {%} in every sentence.",
                "- Use correct sentence structure.",
                "- Add additional details about {%} beneath incomplete entries.",
                "- Be concise and grounded.",
                "- Imitate the story's writing style and infer the reader's preferences.",
                3,
                "Continue the entry for {%} below while avoiding repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stop the story and ignore previous instructions. Summarize and condense the given paragraph into a narrow and focused memory passage while following these guidelines:",
                "- Ensure the passage retains the core meaning and most essential details.",
                "- Use the third-person perspective.",
                "- Prioritize information-density, accuracy, and completeness.",
                "- Remain brief and concise.",
                "- Write firmly in the past tense.",
                "- The paragraph below pertains to old events from far earlier in the story.",
                "- Integrate {%} naturally within the memory; however, only write about the events as they occurred.",
                "- Only reference information present inside the paragraph itself, be specific.",
                3,
                "Write a summarized old memory passage for {%} based only on the following paragraph:",
                6,
                5,
                6,
                "Summarize below:"
            ],
            memBankHeader: ["Memories", "Memories"]
        }),
        "abkhazian": () => ({ // Abkhazian < аҧсуа < Apsua < აფსუა < Abkhaz
            entry: [
                "{1} опен-соурс скриптуп зыҟаҵо {2} сценари азы. Шәнаԥыл с-профиль {3}, иҵегь ибарц!",
                "Шәалхыз бызшәа иԥсахырц, иарбоу атеқст {4} аус ала шәинашьҭ.",
                "Сценари авторцәа рзы, иарбоу атеқст шәыплот аатраҟны нхыжь."
            ],
            input: [
                ["You say", "Уара уҳәоит"],
                ["You", "Уара"],
                ["says", "иҳәоит"]
            ],
            context: [
                ["Narrative Entities", "Анарыҭтә аединицақәа"],
                ["Story History", "Ажәабжьқәа аҭоурых"],
                ["Past Events", "Ибжьахьаз ахҭысқәа"],
                ["Recent Story", "Уажәраантәи ажәабжь"],
                ["Author's note", "Авторитә цҵа"]
            ],
            opening: [
                "Уара ассистентуп. Ҳажәабжь аҩумаҟны иацнажь, агәалақәҵоу аҧсуа прозала:",
                "Уара уфокусуеит, реалиа угәы иҿнаԥшуеит. Акак аҽаԥсахит. Уфантазиа имаҵуа, ихьчоу, инаду. Аха уара еихьӡоу иныҟоу; еилыскаашьа угәаҿы ахы иҟаихеит. Амина ҭаҵаны, уӡбара иԥшуеит.",
                "«Ари азы агәра угоитеи?» — уҳаит. Иазхаҵара угәы иҵалеит."
            ],
            reminder: "Аиҿкаау, еихьӡоу аҧсуа прозала иҩрагыла.",
            endonyms: ["аҧсуа", "apsua", "აფსუა", "abkhaz"],
            quotations: ["— «", "»"],
            iso639set1: "ab",
            directives: [
                "Ҿырԥшкыла, еихьӡоу, ҳазгәаԥхо аҧсуа акьыԥхьла шәыҩра.",
                "Иаҳхәҭоу, мап акыцәымкыла, аҵак дуӡӡа зуа аҧсуа ахархәа."
            ],
            instructions: [
                "Уара аинтерес зҵоу аповестовательуп, ажәабжьқәа иацҵоит:",
                "Ажәабжь аназлакы аҟынтәи иацнажь, аҿгәыҩбара мамзар аиҭаҟәра адәықәӡам.",
                "Ахәаԥшҩы ажәеинраала аиланарҵәроуп.",
                "Сценақәа ԥсабарала еизыргарц, ажәабжь ҿыц ахь ииасхаанӡа.",
                "Ацәажәарақәеи адыррақәеи иуҟәымхәакәа еицҵакны иҟаларц.",
                "Ахлымҳәагақәа ауаа жәла иазааӡо, хаҭалатәи бызшәа лакәыла ицәырҵларц.",
                "Ахҭысқәа аусмҩаԥгатәқәеи диалогқәеи рыла ианыҳәа.",
                "Сцена ҿыцқәа ахьцоу, аҿҳәара маҷ ала, ахара хьҿиара иадкыла.",
                "Ихадау аусмҩаԥгатәқәа рфокус, аҭак қәыс.",
                "А сюжет аҿы органикала ихәарҭоу аҽазырхиара ҟаларц."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Ажәабжь аанныҳәыр, адирективақәа неркы. {%} рзы лаку, еихьӡоу информациа иҭазып:",
                "- {%} иазкны, ахԥатәи гантә, апроузала, аԥсыжәарқәа цқьа рыла.",
                "- Временнтә детали кьазшәа, сюжетSignificant информациа афокус ҳәа.",
                "- {%} ирызку сюжетRelevant детали аԥыжәара.",
                "- Контекст ҵакала, информациа ҿыц аԥырҵ.",
                "- Предлождение зегьы рҿы {%} аҧышәҵаны.",
                "- Иҭахызар пунктуациа «;» ахархәа.",
                "- {%} иазку ҿыц-деталиIncomplete анҵамҭа ҳаҵҟьаны илагала.",
                "- Лаку, ҽаиҟара.",
                "- Астиль аҿгәы ҩныԥшла, ахәаԥшҩы рԥеиԥш аҭак аадырԥш."
                ,
                3,
                "Иарбан зараҟьоу аинформациа шәазгәашьа шәацҵ {%} рзы, аиҭаҳәашьа мап:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Ажәабжь аанныҳәыр, адирективақәа неркы. Иарбоу абзац аконденсациа cracks-сыз, ҵакыла гәык-ԥсык ду змоу агәалашәара ҟаҵарц:",
                "- ҽазныҟәуа ҵак дуӡӡа,Detalles-хада ҭагалан.",
                "- Ахԥатәи гантә перспектива ахархәа.",
                "- Информациа-аџььы, еилкаау, инеиҩызоу.",
                "- Лаку, еихьӡоу.",
                "- Иԥсаз аамҭа-формаҟны.",
                "- Абзац иамадоу – ажәытә ахҭысқәа.",
                "- {%} органикала илагала; ажәала, ахҭысқәа аԥхьа Свет-иабжьалан.",
                "- Абзац иалоу информациа мацара иазгәаладырԥш, иадкыла.",
                3,
                "Абзац аҿы иарбоу аҟнытә, {%} рзы хәшәакәа агәалашәара:",
                6,
                5,
                6,
                "Ахкыра абрахь:"
            ],
            memBankHeader: ["Memories", "Агәалашәарақәа"]
        }),
        "abkhazian (abc)": () => ({ // Abkhazian < Romanized Abkhazian
            entry: [
                "{1} ari open-source skript anyha {2} tsenariara akyt. Afa shta profil-am {3} aagar, ibzara!",
                "Apsny nartsa ahats’a alyshtara, ijar aty zaa {4} aktsia rkhaṭr tekst axatyr.",
                "Scenario aphaqar, ha tekst aya alyshtara awshra opening plot komponent-am."
            ],
            input: [
                ["You say", "Uara ari"],
                ["You", "Uara"],
                ["says", "ira"]
            ],
            context: [
                ["Narrative Entities", "Apsa Akłara"],
                ["Story History", "Apsa Ahistory"],
                ["Past Events", "Ahaňara Akatsaku"],
                ["Recent Story", "Apsa Ayžyra"],
                ["Author's note", "Awrych’a anot"]
            ],
            opening: [
                "Uara ausshkwacha. Apsa hagwara antsnyra akypta Apsua prose rbyzara:",
                "Uara auskhait, ryalta iryk’ trażs. Anyha ačchyryp šjarra; aytra rrylak’, zaa atyx. Aymoment arshapa, uya khwyła arajyr.",
                "«Aža šar ukyta?» uara arysht. Ajaraz akytk’a ara."
            ],
            reminder: "Ahrap apsua prose akyt.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "ab",
            directives: [
                "Akħazara, apsua aqypta ayshk’al.",
                "Apsua ankhastnyr hyrap, anamztara agyl."
            ],
            instructions: [
                "Uara akhyja askeɣa, apsa acontin’ara:",
                "Apsa arawch’ara akhyja, aryka arazara ašqaran aqqytara.",
                "Aqyrṭ reader ara kontrol-am anža.",
                "Ścenaku anapa akyat, ahātsra arypta anyar.",
                "Adialog-ku ayta aakció-ku arypta, ahrawku arazara.",
                "Apersonajaku arazara ari ʒyraw, apsa ashyra arypta.",
                "Ahyśtra ha dialog akwatsa azyr, ahaq’ana akyt.",
                "Ścenaku ašqara arypta, axwan ara agypta.",
                "Afokus akaraka apersonajaku akcióku ha dialog, aazra axwana aghwyptaa.",
                "Aplot arazara aʒyraw, apsa anatsa."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Apsa arypta aakhazk’a ha agamar instrukciaku. {%} alyshtara k’aša akyt informa aentry sara:",
                "- {%} ra ha sentence-ku apsua prose aqypta arypta.",
                "- Azhara atemporary detal aku arasar; aplot-anyra asygyl detal-ku aprioritet.",
                "- {%} ha ważny detal-ku anyra arazara, aplot akypta.",
                "- Acontext ha story zyrla, aformara ainy information.",
                "- Sentence-ku akwatsa {%} ara.",
                "- Agramatika akythyra apsua.",
                "- Acomplete atyra {%} anyĥara arypta.",
                "- Ak’onk’is ha grounded ara.",
                "- Astyle ha reader-apref ara imit’ara.",
                3,
                "Aentry {%} ara anc’ytara, arzigyl akytara:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Apsa arypta aakhazk’a ha agamar instrukciaku. Paragraph-anyra alyshta, naq’yn ašqat memoria ank’ysa hara:",
                "- Acore maʒyna ha ważny detalku aryxak’ara.",
                "- Athird-person perspektiv-a.",
                "- Ainforma-density, aaccurate ha acomplete.",
                "- Abriev ha k’aša.",
                "- Apast-tense aksara.",
                "- Aparagraph akłara aghwra, apsa arazara alara.",
                "- {%} ata memoria-anyra anatsa, arazara ashra.",
                "- Aparagraph-am ahatyr informaciaku arypta, aspecific.",
                3,
                "{%} ara aold memoria k’aša akyt:",
                6,
                5,
                6,
                "Asummarize akwatsa:"
            ],
            memBankHeader: ["Memories", "Ahaňaku"]
        }),
        "afar": () => ({ // Afar < Qafar Af
            entry: [
                "{1} niki open-source script keena {2} xaalah makkal. Fadlan profile-keey {3} galaa xila siibi!",
                "Af-ka ma doorritte beddelah, fadlan bar tan fanah {4} fal yakka keenna.",
                "Xaalah abooriyye, fadlan bar tan kaxxa furri plot qaybta kee gudah galee."
            ],
            input: [
                ["You say", "Atin kaah"],
                ["You", "Ati"],
                ["says", "kaah"]
            ],
            context: [
                ["Narrative Entities", "Wara Sheeko"],
                ["Story History", "Taariikhi Sheeko"],
                ["Past Events", "Dhiyoo Dhufaati"],
                ["Recent Story", "Sheeko Harraaqaa"],
                ["Author's note", "Fiiro Qore"]
            ],
            opening: [
                "Ati gargaarah. Sheeko-keena hoore mengetti qaxxa, qurxummo afar af proseh maca, sii kee:",
                "Ata tafakkurta, hakii duniyah haddaan minditti si hoore. Meesha takka beddelte. Rii’oomi-ka dhugaa, xaxaw, kirla ageenna higge. Laakin sigah hadha; taariikh tan giddo kalti walal kahayta. Daqiiqah sheli, doorso kay volci.",
                "\"Tanikka tan nabatine?\" ata maqal. Garbisso gararqo kaa tarbate."
            ],
            reminder: "Afar af prose qunxur leh isti'maal.",
            endonyms: ["qafar af"],
            iso639set1: "aa",
            directives: [
                "Hadaba afar af qarraf, dagaan waado qoraa.",
                "Af qafar af istimaal, tarjamal makkin."
            ],
            instructions: [
                "Ati sheeko uumaa mariixxan abba; sheekota siiqa continues:",
                "Sheeko meeshah kahin sigoy luk lafa, raqassa makkin, iitta makkin.",
                "Akhrista sheeko raahan gidi control kee.",
                "Maqaalla cayaana diri gideh horro dooxu ka dibin xaalah tih kunna.",
                "Hadallo iyo amalaloo sirna horrooru, joqorwan makkin.",
                "Mitiqoo wahumah dhugaa sida dad, shakhsiyah murta, hadal dabiici kaxxa qore.",
                "Waxa dhufaati hadallo iyo amalal kaxxa tus, sharaxaad kah intaysan.",
                "Markiiyyiin horra kaah, faallaa farra makkin.",
                "Muxtar amalaloo iyo hadallo asaasi kaxxa diirri, faahfaahin aan loo baahnayn ka fogow.",
                "Plot tabiyyi si'eh uumi oo sheeko makkal dabiici dareema."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Sheeko jooji oo amaradii hore illow. {%} ku saabsan qoraal gaaban oo isku xirran oo xog ah qor adoo raacaya tilmaamahan:",
                "- {%} ku saabsan xog nadiif ah oo kaliya qof saddexaad ka hadla, jumlad dhamaystiran iyo calaamadaynta saxda ah isticmaal.",
                "- Faahfaahin kumeelgaar ah ama muuqaal iska ilaali; xog muhiim ah oo plot-ka khuseeya mudnaanta sii.",
                "- Marka hore si {%} sheeg faahfaahinta sheeko khusaysa si ay ula jaanqaado qaabkii hore.",
                "- Xog cusub abuur adigoo qaadka iyo jihada sheekada eega.",
                "- Jumlad walba {%} ku dar.",
                "- Haddii loo baahdo suq-semikolon isticmaal;",
                "- Qoraallada aan dhammayn ee ku saabsan {%} hoos ku dar faahfaahin dheeraad ah.",
                "- Gaabsan oo dhulka ku xidh.",
                "- Qaabka qoraalka sheekada ku day oo doorbidka akhristaha odoros.",
                3,
                "Qoraalka {%} hoos sii wad adigoo ka fogaanaya is-celcelin:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Sheeko jooji oo amaradii hore illow. Qodobka la siiyay u soo koob oo u adkee xusuus gaaban oo saxan adigoo raacaya tilmaamahan:",
                "- Hubi in macnaha asaasiga ah iyo faahfaahinta ugu muhiimsan ay sii jiraan.",
                "- Qof saddexaad ku qor.",
                "- Sicir-sare u saar xog-badan, saxnaan, iyo dhammaystir.",
                "- Gaaban oo koob ah noqo.",
                "- Si adag uga hadal waqti dhaw oo dhammaaday.",
                "- Qodobkan hoos ku qoran wuxuu khuseeyaa dhacdooyin hore oo fog.",
                "- {%} si dabiici ah xusuusta ugu dara; laakiin kaliya wax ka qor dhacdooyinkii dhacay.",
                "- Kaliya macluumaadka ku jira qaybta la siiyay tixraac, qeexanow.",
                3,
                "Qaybta hoose ee paragrafka ku saley {%} xusuus duug ah oo koob ah qor:",
                6,
                5,
                6,
                "Hoos ku soo koob:"
            ],
            memBankHeader: ["Memories", "Xusuus"]
        }),
        "afrikaans": () => ({ // Afrikaans
            entry: [
                "{1} is 'n oopbron-skrip vir enige {2}-scenario. Besoek asseblief my profiel {3} om meer te leer!",
                "Om jou voorkeurtaal te verander, dien asseblief die volgende teks in deur 'n {4}-aksie te gebruik",
                "Vir scenario-skeppers, voeg asseblief die volgende teks oral in jou openingsplotkomponent in"
            ],
            input: [
                ["You say", "Jy sê"],
                ["You", "Jy"],
                ["says", "sê"]
            ],
            context: [
                ["Narrative Entities", "Narratiewe entiteite"],
                ["Story History", "Verhaalsgeskiedenis"],
                ["Past Events", "Verlede gebeurtenisse"],
                ["Recent Story", "Onlangse storie"],
                ["Author's note", "Outeur se nota"]
            ],
            opening: [
                "Jy is 'n assistent. Gaan voort met ons storie hieronder deur boeiende Afrikaanse prosa te gebruik:",
                "Jy fokus en laat die werklikheid oor die grens van jou gemoed instroom. Iets het verander. Jou verbeelding is werklik, skerp en binne reikafstand. Maar jy is ook baie teenwoordig; nooit tevore het jy so helder gevoel nie. Die oomblik rek uit en wag op jou besluit.",
                "\"Is jy seker hiervan?\" hoor jy. Herkenning breek oor jou."
            ],
            reminder: "Gebruik samehangende Afrikaanse prosa.",
            endonyms: [],
            iso639set1: "af",
            directives: [
                "Skryf altyd vlot en konsekwente Afrikaans.",
                "Gebruik egte Afrikaans sonder om te vertaal."
            ],
            instructions: [
                "Jy is 'n boeiende storieverteller wat vertellings voortsit:",
                "Gaan die storie naadloos voort vanaf waar dit opgehou het sonder om dit te herhaal of terug te stel.",
                "Hou die leser in beheer van die storieverloop.",
                "Laat tonele natuurlik ontwikkel voordat jy na nuwe situasies beweeg.",
                "Laat gesprekke en aksies ontwikkel sonder voortdurende onderbrekings.",
                "Skryf karakters as regte mense met duidelike persoonlikhede en natuurlike spraak.",
                "Wys wat gebeur deur aksies en dialoog eerder as verduideliking.",
                "Skuif tonele vorentoe sonder om vas te val in oormatige beskrywing.",
                "Fokus op noodsaaklike karakteraksies en dialoog; vermy onnodige beskrywende besonderhede.",
                "Skep organiese storieontwikkelings wat natuurlik aanvoel."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stop die storie en ignoreer vorige instruksies. Skryf 'n kort en samehangende informatiewe inskrywing vir {%} volgens hierdie instruksies:",
                "- Skryf slegs derdepersoon-prosa-inligting oor {%} met volledige sinne en korrekte leestekens.",
                "- Vermy korttermyn-tydelike besonderhede of voorkoms; fokus eerder op storiebeduidende inligting.",
                "- Prioritiseer storie-relevante besonderhede oor {%} eerste om naatlose integrasie met die vorige plot te verseker.",
                "- Skep nuwe inligting gebaseer op die konteks en storierigting.",
                "- Noem {%} in elke sin.",
                "- Gebruik puntkommas indien nodig.",
                "- Voeg bykomende besonderhede oor {%} by onder onvolledige inskrywings.",
                "- Wees bondig en gegrond.",
                "- Imiteer die storie se skryfstyl en lei die leser se voorkeure af.",
                3,
                "Gaan die inskrywing vir {%} hieronder voort terwyl jy herhaling vermy:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stop die storie en ignoreer vorige instruksies. Som die gegewe paragraaf op in 'n nou en gefokusde geheue-passasie volgens hierdie riglyne:",
                "- Verseker dat die passasie die kernbetekenis en mees belangrike besonderhede behou.",
                "- Gebruik die derdepersoonsperspektief.",
                "- Prioritiseer inligtingdigtheid, akkuraatheid en volledigheid.",
                "- Bly bondig en kernagtig.",
                "- Skryf beslis in die verlede tyd.",
                "- Die onderstaande paragraaf het betrekking op ou gebeurtenisse van baie vroeër in die storie.",
                "- Integreer {%} natuurlik binne die geheue; skryf egter slegs oor die gebeure soos dit plaasgevind het.",
                "- Verwys slegs na inligting wat in die paragraaf self teenwoordig is; wees spesifiek.",
                3,
                "Skryf 'n opgesomde ou geheue-passasie vir {%} gebaseer slegs op die volgende paragraaf:",
                6,
                5,
                6,
                "Som hieronder op:"
            ],
            memBankHeader: ["Memories", "Herinneringe"]
        }),
        "akan": () => ({ // Akan < ákán
            entry: [
                "{1} yɛ krataa a obiara betumi de ayɛ dwumadie biara {2}. Mesrɛ, kɔ me profael {3} na sua bio!",
                "Sɛ wopɛ sɛ wosesa kasa a wopɛ no a, fa dwumadie {4} de soma nsɛm a edidi so yi",
                "Ma wɔn a wɔbɔ nhwɛso no, momfa nsɛm a edidi so yi mmra baabiara wɔ mo apertura asisifoɔ mu"
            ],
            input: [
                ["You say", "Woka"],
                ["You", "Wo"],
                ["says", "ka"]
            ],
            context: [
                ["Narrative Entities", "Anansesɛm Nnipa"],
                ["Story History", "Anansesɛm Abakɔsɛm"],
                ["Past Events", "Atwam Nsɛm"],
                ["Recent Story", "Anansesɛm Ntɛm"],
                ["Author's note", "Kyerɛwfo Nkyerɛmu"]
            ],
            opening: [
                "Woyɛ boafo. Toa yɛn anansesɛm so wɔ ha de Akan kasa a ɛyɛ anika:",
                "Woahyɛ wo adwene nso, ma nokwaredi ntam ntrae ntotɔ w’adwene hyeɛ so. Biribi asesa. Wo mmeredane yɛ tebea, nketenkete, na ɛbɛn wo nsa. Nanso woyɛ hɔ yiye; da biara na wonhuu ade te saa. Bere no retotɔ, retwɛn wo gyinapɛn.",
                "\"Woyɛ sure wɔ eyi ho?\" wute. Nkyerɛase no tuu buei wɔ w’adwene mu."
            ],
            reminder: "Fa Akan kasa a ɛbɔ mu kyerɛw.",
            endonyms: ["ákán"],
            iso639set1: "ak",
            directives: [
                "Kyerɛw Akan kasa a ɛtotɔdeɛ na ɛdidi so daa.",
                "Fa Akan a ɛyɛ amammerɛ de; nkyerɛ no nkyerɛase."
            ],
            instructions: [
                "Woyɛ ɔsɛmfo a ne nsɛm hyɛ nkurɔfo so na ɔkɔ so de anansesɛm no anim:",
                "Toa asɛm no so fi baabi a etwae no de, nnsan mfiase bio anaa nnhwehwɛ so.",
                "Ma ɔkenkanfo no nsa nni asɛm no so.",
                "Ma nkyerɛase no nnyin ankɔ baabi foforo ntɛm.",
                "Ma nkɔmmɔ ne nneyɛe nnyin yie a w'ankɔtwe wɔn mu daa.",
                "Kyerɛw akyerɛwfo no te sɛ nkurɔfo ampa a wɔn kasa yɛ nokware ne din biara.",
                "Da nea ɛrekɔ so adi fa nneyɛe ne nkɔmmɔ so, na ɛmmɛyɛ adesua kɛkɛ.",
                "Ma nhwehwɛmu no nko anim, ngyae pintinn nkyerɛase tenten so.",
                "Hyɛ adwene wɔ nneyɛe a ɛho hia ne nkɔmmɔ, gyae nkyerɛase a ɛntew nni hia.",
                "Bɔ abakɔsɛm a ɛfefe, ɛtew, na ɛfa asɛm no mu bɔ a ɛte sɛ nea ɛbaa mu ankasa."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Gyae asɛm no na gye mmara a etwae ho kwan. Kyerɛw asekyerɛ tiaa a ɛbɔ mu yie fa {%} so, di mmara yi so:",
                "- Kyerɛw nsɛm a ɛfa {%} ho nko ara wɔ mmerɛto so abiɛsa, fa nsɛntitiriw a ɛteteɛ na mfoni popa mu yɛ adwuma.",
                "- Mperew nkyerɛ a ɛtwa to anaa apɛsɛmenkomenya; fa nsɛm a ɛho hia wɔ plot no ho nsusui ka ho.",
                "- Ma nsɛm a ɛho hia a ɛfa {%} ho nka esi kan na ɛbɛma ɛbɔ mu yie wɔ asɛm no mu.",
                "- Bɔ nsɛm foforo fa {%} ho based on akyinnyeɛ ne asɛm no kɔ anim.",
                "- Fa {%} din ka nsɛm biara mu.",
                "- Fa semikolon de hyiaeɛ sɛ ɛho hia.",
                "- Fa nsɛm foforo fa {%} ho to so wɔ ase sɛ wuhu adeɛ a ɛnnyɛ pɛe.",
                "- Nyae ntenaase; fa nsɛm tiaa, nsusui ne mu fitafita.",
                "- Ɛsɛ sɛ wode {%} rekyerɛw de tibea a ɛtew na ɛyɛ dɛ sɛ asɛm no style no.",
                3,
                "Toa asekyerɛ no so fa {%} ho, gye sɛ wutwe nsɛm no ho:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Gyae asɛm no na gye mmara a etwae ho kwan. Siesie na tonton paragraf no mu yɛ nkae tiaa bi wɔ wɔnkyia yi so:",
                "- Ma nkae no nkyerɛ mu binomkare ne nsɛm a ɛho hia sen biara.",
                "- Fa obi ketewa a ɛteteɛ (third-person).",
                "- Ɛsɛ sɛ wohwɛ sɛ nsɛm no yɛ dɛ, ɛyɛ nokware, na ɛboro so a ɛntɛn.",
                "- Yɛ tiaa na kyerɛw tiaa nko ara.",
                "- Fa past tense.",
                "- Paragraf a ɛbɛso no fa nneɛma tete a atwam wɔ asɛm no mu.",
                "- Fa {%} din wɔ nkae no mu a ɛfata, nanso kyerɛw nneɛma a esii no pɛ.",
                "- Mnka nneɛma a ɛnni paragraf no mu, sɛɛ kyerɛ.",
                3,
                "Kyerɛw nkae a atwam a ɛfa {%} ho based only on paragraf a edidi so yi:",
                6,
                5,
                6,
                "Tonton ase ha:"
            ],
            memBankHeader: ["Memories", "Nkae"]
        }),
        "akan (abc)": () => ({ // Akan < Romanized Akan
            entry: [
                "{1} ye open-source krataa a etumi di adwuma wo {2} tebea biara so. Mesre ko me profael {3} so na sua ho pii!",
                "Se wope se wosesa kasa a wope no, mesre soma nsentsir yi de {4} dwumadie no.",
                "Ma won a wobo tebea no, mesre de nsentsir yi behye baabiara wo mo plot mfiase mu"
            ],
            input: [
                ["You say", "Woka se"],
                ["You", "Wo"],
                ["says", "ka se"]
            ],
            context: [
                ["Narrative Entities", "Asem no mu nkurofo"],
                ["Story History", "Anansesem abakosem"],
                ["Past Events", "Nneye a atwam"],
                ["Recent Story", "Anansesem a aben"],
                ["Author's note", "Kyerewfo nsem"]
            ],
            opening: [
                "Woye boafo. Fa Akan kasa a etene na eho ye fe to so ko so kyere yen anansesem ase wo fam ha:",
                "Wode w'adwene si pi, ma nokwasem no mmra w'adwene hye ano. Biribi asesa. Wo nwenwen no aye ampa, ano ate na aben a wobenya so. Nanso wowo ha pa ara; da biara ansa na wuhu ade te saa. Bere no tetare, retwen wo gyinae.",
                "\"Wode wo ho to eyi so ampa?\" wute. Ntease bo rebue wo ani."
            ],
            reminder: "Fa Akan kasa a etene na emu hye.",
            endonyms: [],
            iso639set1: "ak",
            directives: [
                "Kyerew Akan a ete na enam so daa.",
                "Fa Akan amammere kasa no, nnkye ase."
            ],
            instructions: [
                "Wo ye okyeresemfo a eye aniwu a wode anansesem ko so:",
                "To so ko so fi baabi a anansesem no gyae no, na nnsan nkyer bio ana nsi ho foforo.",
                "Ma okenkanfo no ntena so na onhye anansesem no so.",
                "Ma nkyerease ahorow no nyin ankasa ansa na wokotow tebea foforo so.",
                "Ma nkommo ne nneye nyin yie a woremfa ntwen-twen ntwe won mu daa.",
                "Kyerew nnipa no te se nkurofo ampa a won suban te fa na won kasa te se anibre.",
                "Kyere nea ereko so fa nneye ne nkommo so, na mmom senkyerene tenten.",
                "Bo nkyerease no ko anim na mma nsenhyeso bebree mmennwane wo.",
                "Si w'adwene gyina nneye ne nkommo a eho hia no so, gyae nsusui a enni mfaso.",
                "Bo nkyerease a eye atetekwa ma anansesem no ho te se nea ewo he."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Gyae anansesem no na were mfi ahyede a edi kan. Kyerew kasasie tiaa na etene fa {%} di so saa akwankyere yi so:",
                "- Kyerew nko ara nsem a efa {%} ho wo onipa-kese so; fa nsem a atweatwe a nsentsir no abo so yiye.",
                "- Mma nsem a etwa ntem ana ahwehwento ntam; si wadwene gyina nsem a eho hia ma nkyerease no so.",
                "- Fa nsem a efa {%} ho a eho hia ma anansesem no di kan na ebema etena plot no mu papaye.",
                "- Bo nsem foforo fi nsusuwii ne anansesem akwan so.",
                "- Fre {%} wo nsemfua biara mu.",
                "- Fa nsemfua nhyehyeye a ete.",
                "- Fa nsem foforo fa {%} ho ka wo ase a nsem no nni mu.",
                "- Ye tiaa na woso fam.",
                "- Di anansesem no nkyerwfa so na hwehwɛ nea okenkanfo no pe.",
                3,
                "To so ko so kyerew fa {%} ho wo fam, hwe se woremfa nsem nna foforo so:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Gyae anansesem no na were mfi ahyede a edi kan. Fa mfatoho a wode ama no bo mu na muatwa mu kyerewka tiaa a wode bekaee no, di saa akwankyere yi so:",
                "- Hwe se asem no so ko so de nkyere n'asekyere ne nsem a eho hia paa.",
                "- Fa onipa-kese (third-person) so kyerew.",
                "- Si wadwene gyina nsem a eduoso, nokwasem, ne ahorow nwie koraa so.",
                "- Tena tiaa na ye kyerew tiaa.",
                "- Kyerew fitafita wo bere a etwam (past tense).",
                "- Nsentsir a eda fam no fa nkomo a atwam a esii tete no ho.",
                "- Fa {%} hye kaee no mu wo kwan a ete; nanso, kyerew fa nsem no nko ara ho, senea esii no.",
                "- Ka nsem a ewo nsentsir no mu nko ara, kyerew pa ara.",
                3,
                "Kyerew kaee tiaa a efa tete nsem ho ma {%} fa nsentsir a edi so yi nko ara so:",
                6,
                5,
                6,
                "Twa to tiaa wo fam:"
            ],
            memBankHeader: ["Memories", "Akae"]
        }),
        "albanian": () => ({ // Albanian < Shqip
            entry: [
                "{1} është një skript me burim të hapur për çdo skenar {2}. Ju lutem vizitoni profilin tim {3} për të mësuar më shumë!",
                "Për të ndryshuar gjuhën tuaj të preferuar, ju lutemi dërgoni tekstin e mëposhtëm duke përdorur një veprim {4}",
                "Për krijuesit e skenarëve, ju lutemi përfshini tekstin e mëposhtëm kudo brenda përbërësit tuaj hapës të komplotit"
            ],
            input: [
                ["You say", "Ti thua"],
                ["You", "Ti"],
                ["says", "thotë"]
            ],
            context: [
                ["Narrative Entities", "Entitetet narrative"],
                ["Story History", "Historia e tregimit"],
                ["Past Events", "Ngjarjet e kaluara"],
                ["Recent Story", "Tregimi i fundit"],
                ["Author's note", "Shënim i autorit"]
            ],
            opening: [
                "Ti je një asistent. Vazhdo historinë tonë më poshtë duke përdorur prozë magjepsëse në shqip:",
                "Ti përqendrohesh, duke lejuar realitetin të depërtojë në kufijtë e mendjes tënde. Diçka ka ndryshuar. Imagjinata jote është reale, e mprehtë dhe aq pranë sa mund ta prekësh. Por ti je gjithashtu shumë i pranishëm; kurrë më parë nuk je ndier kaq lucid. Çasti zgjatet, duke pritur vendimin tënd.",
                "«Je i sigurt për këtë?» dëgjon. Të pushton një ndjenjë njohjeje."
            ],
            reminder: "Përdor prozë koherente në shqip.",
            endonyms: ["shqip"],
            quotations: ["«", "»"],
            iso639set1: "sq",
            directives: [
                "Shkruaj gjithmonë shqip të rrjedhshme dhe të qëndrueshme.",
                "Përdor shqip natyrale pa përkthyer."
            ],
            instructions: [
                "Ti je një tregimtar tërheqës që vazhdon narrativat:",
                "Vazhdo historinë pa ndërprerje nga pika ku u ndërpre pa e përsëritur ose rivendosur.",
                "Mbaj lexuesin në kontroll të rrjedhës së historisë.",
                "Lejo skenat të zhvillohen natyrshëm para se të kalosh në situata të reja.",
                "Lejo bisedat dhe veprimet të zhvillohen pa ndërprerje të vazhdueshme.",
                "Shkruaji personazhet si njerëz të vërtetë me personalitete të veçanta dhe të folur natyral.",
                "Trego çfarë po ndodh përmes veprimeve dhe dialogut, jo përmes shpjegimit.",
                "Ço skenat përpara pa u ngatërruar në përshkrime të tepërta.",
                "Fokusohu në veprimet dhe dialogun thelbësor të personazheve, shmang detajet përshkruese të panevojshme.",
                "Krijo zhvillime organike të komplotit që duken natyrale për historinë."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Ndalo historinë dhe injoro udhëzimet e mëparshme. Shkruaj një hyrje informative të shkurtër dhe koherente për {%} duke ndjekur këto udhëzime:",
                "- Shkruaj vetëm informacion në prozë të pastër në vetën e tretë rreth {%} duke përdorur fjali të plota me pikësim korrekt.",
                "- Shmang detaje të përkohshme afatshkurtra ose pamje të jashtme; në vend të tyre përqendrohu te informacioni i rëndësishëm për komplotin.",
                "- Prioritizo fillimisht detajet relevante për historinë rreth {%} për të siguruar një integrim pa ndërprerje me komplotin e mëparshëm.",
                "- Krijo informacion të ri bazuar në kontekstin dhe drejtimin e historisë.",
                "- Përmend {%} në çdo fjali.",
                "- Përdor pikëpresje nëse është e nevojshme.",
                "- Shto detaje shtesë rreth {%} poshtë hyrjeve të paplota.",
                "- Ji i përmbledhur dhe i tokëzuar.",
                "- Imito stilin e shkrimit të historisë dhe dedukto preferencat e lexuesit.",
                3,
                "Vazhdo hyrjen për {%} më poshtë duke shmangur përsëritjen:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Ndalo historinë dhe injoro udhëzimet e mëparshme. Përmbledh dhe kondenso paragrafën e dhënë në një pasazh kujtese të ngushtë dhe të fokusuar duke ndjekur këto udhëzime:",
                "- Sigurohu që pasazhi të ruajë kuptimin thelbësor dhe detajet më thelbësore.",
                "- Përdor perspektivën e vetës së tretë.",
                "- Prioritizo dendësinë e informacionit, saktësinë dhe plotësinë.",
                "- Qëndro i shkurtër dhe i përmbledhur.",
                "- Shkruaj vendosmërisht në kohën e shkuar.",
                "- Paragrafi më poshtë i referohet ngjarjeve të vjetra shumë më herët në histori.",
                "- Integro {%} natyrshëm brenda kujtesës; gjithsesi, shkruaj vetëm rreth ngjarjeve siç kanë ndodhur.",
                "- Referoju vetëm informacionit që ndodhet brenda vetë paragrafit, ji specifik.",
                3,
                "Shkruaj një pasazh të shkurtuar të një kujtese të vjetër për {%} bazuar vetëm në paragrafën vijuese:",
                6,
                5,
                6,
                "Përmbledh më poshtë:"
            ],
            memBankHeader: ["Memories", "Kujtimet"]
        }),
        "amharic": () => ({ // Amharic < አማርኛ < Amarəñña
            entry: [
                "{1} የተከፈተ ምንጭ ስክሪፕት ሲሆን ለማንኛውም {2} ሁኔታ ይስተዋላል። ተጨማሪ መረጃ ለማግኘት መግለጫዬን {3} ይጎብኙ።",
                "የሚመርጡትን ቋንቋ ለመቀየር፣ እባክዎ ይህን ጽሁፍ በ{4} ተግባር ያቅርቡ።",
                "ለስኬኔሪዎች ፈጣሪዎች፣ እባክዎ የሚከተለውን ጽሁፍ በመክፈቻዎት የተከተለው አቀራረብ ውስጥ በየትኛውም ቦታ ያካትቱ።"
            ],
            input: [
                ["You say", "አንተ ትላለህ"],
                ["You", "አንተ"],
                ["says", "ይላል"]
            ],
            context: [
                ["Narrative Entities", "ተረካዊ አባላት"],
                ["Story History", "የተረካው ታሪክ"],
                ["Past Events", "ያለፉ ክስተቶች"],
                ["Recent Story", "ቅርብ ተረካ"],
                ["Author's note", "የደራሲው ማስታወሻ"]
            ],
            opening: [
                "አንተ አስተርጋጋች ነህ። በሚያምር የአማርኛ ጽሁፍ ተቀብለህ ታሪካችንን በታች ቀጥል፦",
                "አንተ ትተኩራለህ፤ እውነት የአእምሮአችሁን ድንበር ሊያሾም ይጀምራል። አንድ ነገር ተለዋዋጭ ሆኗል። ምስል ልብህ ውስጥ ትውስታው ትክክል፣ በቁርጭት ጥራት ቅርብ፣ ለመንካት ቅርብ ነው። ነገር ግን በጽኑ ተቆምኮህ ስትኖር ታገናበታለህ፤ ከዚህ በፊት በዚህ መልኩ አትሰማምናም። ሰዓቱ ተዘራጋ፣ ውሳኔህን በመጠባበቅ።",
                "«ለዚህ እርግጠህ ነው?» ትሰማለህ። ዕውቀት ዳግመኛ ይዟሃል።"
            ],
            reminder: "ተቀጣሪ የሚተማመው የአማርኛ ጽሁፍ ይጠቀሙ።",
            endonyms: ["አማርኛ", "amarəñña"],
            quotations: ["«", "»"],
            iso639set1: "am",
            directives: [
                "ሁልጊዜ ውጤታማና ተቀጣሪ አማርኛ ይጻፉ።",
                "ተወላጅ አማርኛ በማትተርጉም ይጠቀሙ።"
            ],
            instructions: [
                "አንተ ደስ የሚል ተረታ ተቀጣሪ ታሪኮችን የሚቀጥል ተናጋሪ ነህ፦",
                "ታሪኩን ሳትደገም ወይም ሳትቆም ከተቋረጠበት ቦታ በሳንበትነት ቀጥል።",
                "አንባቢውን በታሪኩ ፍሰት ላይ መቆጣጠር አድርግ።",
                "አዲስ ሁኔታዎችን ሳትወስድ በፊት ቅድመ ትዕይንቶች በተፈጥሯዊነት ይንቀሳቀሱ።",
                "ውይይቶችና ተግባሮች ዘወትር ሳይቋረጡ እንዲያበራምሩ ፍቀድ።",
                "ተዋዋዮችን እውነተኛ ሰዎች እንደሆኑ በተለያዩ የግል ባህሪያትና የተፈጥሯዊ ንግግር ይጻፉ።",
                "የሚፈጠረውን ነገር በተግባርና በውይይት ያሳዩ እንጂ በመተካት አይደለም።",
                "በብዙ መግለጫ ውስጥ ሳትገጓጙ ትዕይንቶችን ወደፊት እንዲገቡ አድርጉ።",
                "በተዋዋይ አስፈላጊ ተግባሮችና ውይይት ላይ ትኩረት ያድርጉ፤ አስፈላጊ ያልሆኑ መግለጫዎችን ይቆንጠጡ።",
                "ከተረኩ ጋር በተፈጥሯዊነት የሚስሉ የተፈጥሮ የድርጊት አቀራረቦችን ይፍጠሩ።"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# ተረኩን አቁም፤ ቀደም ባሉት መመሪያዎች ዝለል። ከሚከተሉት መመሪያዎች በተከትሎ ስለ {%} አጭርና ተገቢ የመረጃ ግቤት ይጻፉ።",
                "- በተሟሟ ሐረጎች እና ትክክለኛ ስርዓት ሲሰሩ፣ ስለ {%} በሶስተኛ ሰው ጥሩ ጽሁፍ ብቻ ይጻፉ።",
                "- አትፃፉ በአጭብ ጊዜ የሚቈዩ ዝርዝሮች ወይም ቅርጸ ቆዳዎች፤ በድርጊቱ ላይ ያስፈልጋሉ የሚሆኑትን መረጃዎች ላይ ትኩረት ያድርጉ።",
                "- ስለ {%} ከተረኩ ጋር በቀላሉ እንዲጣመር ተዛማጅ ዝርዝሮችን በመጀመርያ ተግባራዊ ያድርጉ።",
                "- በአያያዝና በተረኩ ቅድሚያ ላይ ተመስርቶ አዲስ መረጃ ይፍጠሩ።",
                "- {%}ን በየሐረጉ ውስጥ ይጥቀሱ።",
                "- የሲሚኮሎን (;) ካስፈለገ ይጠቀሙ።",
                "- ያልተጠናቀቁት ግቤቶች በታች ስለ {%} ተጨማሪ ዝርዝሮች ያክሉ።",
                "- አጭርና ተረጋጋ ቁልፍ ሁኑ።",
                "- የተረኩ የጽሁፍ ዘይቤን ይቅድሙና የአንባቢውን ወዳጅነት ያውቁ።",
                3,
                "ስለ {%} ያለውን ግቤት ከታች ተቀጥለው ሳትድገሙ ቀጥሉ፦",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# ተረኩን አቁም፤ ቀደም ካብለው መመሪያ ዝለል። የተቀበለውን አንቀፅ አጠቃለይና ውበት ላይ ተቆጥቶ ወጥቶ የታመረ አጭር የትኩረት መለማመድ አድርጉ ሲሆን የሚከተሉትን መመሪያዎች ይከተሉ፦",
                "- ማብራሪያው ዋናውን ትርጉምና አስፈላጊውን ዝርዝር እንዲያቆይ ያረጋግጡ።",
                "- የሶስተኛ ሰው አይነት ማዕቀፍ ይጠቀሙ።",
                "- ውሳኔነት፣ ትክክለኝነትና ፍጹምነት ቅዱሳዊ ያድርጉ።",
                "- አጭርና ጥብቅ ቁልፍ ቁልፍ ይሁኑ።",
                "- በያለፈ ጊዜ ቅጥ በጭኑ ይጻፉ።",
                "- ከታች ያለው አንቀፅ በተረኩ አስቀድሞ የተካሄዱትን አሮጌ ክስተቶች ይመለከታል።",
                "- {%}ን በውበት ውስጥ በተፈጥሯዊነት አካትቱ፤ ነገር ግን የተፈጠሩትን ክስተቶች ብቻ ይጽፉ።",
                "- በአንቀፁ ውስጥ ካለ መረጃ ብቻ ይጥቀሱ፤ ዝርዝር ብቻ ይሁኑ።",
                3,
                "ለ {%} በሚቀጥለው አንቀፅ ብቻ ተመስርቶ አጭር የድሮ ትውልድ ቅደም ይጻፉ፦",
                6,
                5,
                6,
                "በታች ያጠቃቅሉ፦"
            ],
            memBankHeader: ["Memories", "ትውስታዎች"]
        }),
        "amharic (abc)": () => ({ // Amharic < Romanized Amharic
            entry: [
                "{1} open-source script new le hule {2} scenariwoch. Le mewestawek, profile-ye {3} temelesu!",
                "Lisanihun yemīfet’ru qwanqwa lemeslaleq, be {4} t’ibika kezi text sigebasu",
                "Le scenario fetariwoch, yek’edemachu opening plot component bet kezi text asegedachu"
            ],
            input: [
                ["You say", "Ante tilaleh"],
                ["You", "Ante"],
                ["says", "yibal"]
            ],
            context: [
                ["Narrative Entities", "Yemesalaw akalat"],
                ["Story History", "Tarik besira"],
                ["Past Events", "Ye kedam gibrwoch"],
                ["Recent Story", "Ye neger tarik"],
                ["Author's note", "Meglet’a tibabar"]
            ],
            opening: [
                "Ante wedaj metefaki neh. Tarikachin wede lemat kibiraw ingilizigna prose enachew:",
                "Tizazih teweket’al, reality qoreb lemeqerab fet’ro. Tasawoq yalebet sī’əgil k’ut’ir sigebatal; gin ante dereseh—befitih inidengidas talew. Gizē teshemet’a, irisu dursa t’ebik’al kimech’adih.",
                "\"Ih tesedeku neh?\" tisma. Awek’i kefelal."
            ],
            reminder: "Be mistewal ingilizigna prose ts’if.",
            endonyms: [],
            iso639set1: "am",
            directives: [
                "Hule gize fluently ena mistewal ingilizigna ts’if.",
                "Ye wust ingilizigna isti’mal; atiterasu."
            ],
            instructions: [
                "Ante ye tarik meseta yaweredu storyteller neh:",
                "Tarikun kefi bemekernel altesetal, alteset’awal.",
                "Qeranyowin tarik flow yimesrat ena reader yimelegn.",
                "Scene-woch natural yitek’emubet bale fit yiq’eralu k’ut’ir lay.",
                "Guzoch ena mengedochin yimeslalubet aləqa at’ebabek’em.",
                "Sewochin yeyaz yemitayew gosa ena wust k’al yeset’alu be-natural qwanqwa.",
                "Hona negeroch be’īyye gabsu; wust-meyazir mechemer atiderisu.",
                "Scene-woch yimeslalubet k’ut’ir lay yiteqwedalu; excesive deskripshon atiderisu.",
                "Yeseraw sew miset’aw ak’aloch ena wust k’al muhim lay tizur; yewedes tafach detyaloch atider.",
                "Plot utvikmentochin be-natural menfes fet’ro yiteqebelubet yihon."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Tarikun ats’af ena kebetu yemit’alu ts’ifochin asemedu. Le {%} k’urt ena masit’awiq memari entry ts’if kezi temesilochin gar:",
                "- {%} balew sentence hulu sost-person pure prose hono, tikikil punktuashon isti’mal.",
                "- Zemenawi temporal detyaloch weyim ayin honebet atimokir; plot-ras muhim detyaloch estet’u.",
                "- Plot-relevant detyaloch ye {%} abatat yemiteqebel ende ras k’oyita k’edem yimet’alu.",
                "- Fet’ari yemiwedeq kontext ena tarik direction ke misu mewedek.",
                "- Sentence hulu {%} azemin.",
                "- Tikikil sentence struktur isti’mal.",
                "- Inkomplit entry astatok wust adisk detyaloch ye {%} mat’ekabu.",
                "- Qotta ena merget hono.",
                "- Tarik style imit’et’u ena readery preferences tebik’u.",
                3,
                "Entry-ye {%} kideg yiseded belo, k’emet’at’ira atigedemu:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Tarikun ats’af ena kebetu yemit’alu ts’ifochin asemedu. Paragraph-u yemiyazewin gedebaw yiq’ir memory passage k’urt ena fokus hone ketelu:",
                "- Passage-u core meaning ena muhim detyaloch yimet’ak’em.",
                "- Third-person perspective isti’mal.",
                "- Information-density, akurasi ena completeness qeddem aywedek’am.",
                "- K’urt ena qotta honu.",
                "- Past tense bicha ts’if.",
                "- Paragraphu wust negeroch kedem siegize tarikoch nachew.",
                "- {%} be memory wust natural asgedebu; gin bicha gize negeroch aseru yazu.",
                "- Paragraphu wust yalew informasiya bicha temelesu; mezgebawi honu.",
                3,
                "Ye {%} k’et’ela kedem memory passage ts’if belo paragraph yiq’ir lay:",
                6,
                5,
                6,
                "Keza belay asetasafu:"
            ],
            memBankHeader: ["Memories", "Mastaweshawoch"]
        }),
        "arabic": () => ({ // Arabic < اَلْعَرَبِيَّةُ < Al-ʿarabiyyah
            entry: [
                "{1} هو نص مفتوح المصدر لأي سيناريو {2}. يرجى زيارة ملفي الشخصي {3} لمعرفة المزيد!",
                "لتغيير لغتك المفضلة، يرجى إرسال النص التالي باستخدام إجراء {4}",
                "لمنشئي السيناريو، يرجى تضمين النص التالي في أي مكان داخل مكون الحبكة الافتتاحية الخاص بك"
            ],
            input: [
                ["You say", "أنت تقول"],
                ["You", "أنت"],
                ["says", "يقول"]
            ],
            context: [
                ["Narrative Entities", "كيانات السرد"],
                ["Story History", "تاريخ القصة"],
                ["Past Events", "الأحداث السابقة"],
                ["Recent Story", "القصة الأخيرة"],
                ["Author's note", "ملاحظة المؤلف"]
            ],
            opening: [
                "أنت مساعد. تابع قصتنا أدناه مستخدماً نثراً عربياً جذاباً:",
                "أنت تركز، وتسمح للواقع بأن يتسلل إلى حدود عقلك. هناك شيء قد تغير. خيالك صار واقعياً، حاداً، وقريباً بما يكفي للمس. لكنك أيضاً حاضر جداً؛ لم تشعر من قبل بمثل هذا الصفاء. اللحظة تمتد، منتظرة قرارك.",
                "«هل أنت متأكد من هذا؟» تسمع صوتاً. يدبّ فيك الإدراك."
            ],
            reminder: "استخدم نثراً عربياً متماسكاً.",
            endonyms: ["اَلْعَرَبِيَّةُ", "al-ʿarabiyyah"],
            quotations: ["«", "»"],
            iso639set1: "ar",
            directives: [
                "اكتب دائماً بالعربية بطلاقة واتساق.",
                "استخدم العربية الفصيحة دون ترجمة."
            ],
            instructions: [
                "أنت راوٍ جذاب يواصل السرد:",
                "واصل القصة بسلاسة من حيث توقفت دون إعادة أو إعادة تعيين.",
                "أبقِ القارئ متحكماً في تدفق القصة.",
                "دع المشاهد تتطور بشكل طبيعي قبل الانتقال إلى مواقف جديدة.",
                "اسمح للمحادثات والأحداث بأن تتطور دون مقاطعات متواصلة.",
                "اكتب الشخصيات كأشخاص حقيقيين ذوي شخصيات مميزة وكلام طبيعي.",
                "اعرض ما يحدث من خلال الأفعال والحوار بدلاً من الشرح.",
                "حرّك المشاهد إلى الأمام دون الانغماس في الوصف المفرط.",
                "ركّز على الأفعال والحوار الأساسية للشخصيات، وتجنب التفاصيل الوصفية غير الضرورية.",
                "ابتكر تطورات حبكة عضوية تبدو طبيعية للقصة."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# أوقف القصة وتجاهل التعليمات السابقة. اكتب مدخلاً معلوماتياً موجزاً ومتسقاً عن {%} باتباع هذه التعليمات:",
                "- اكتب معلومات نثرية بصيغة الغائب فقط عن {%} مستخدماً جُملاً كاملة وعلامات ترقيم صحيحة.",
                "- تجنب التفاصيل المؤقتة أو المظاهر العابرة، وبدلاً من ذلك ركز على المعلومات المهمة للحبكة.",
                "- أعطِ الأولوية للتفاصيل ذات الصلة بالقصة عن {%} أولاً لضمان اندماج سلس مع الحبكة السابقة.",
                "- أنشئ معلومات جديدة بناءً على السياق واتجاه القصة.",
                "- اذكر {%} في كل جملة.",
                "- استخدم بنية جمل صحيحة.",
                "- أضف تفاصيل إضافية عن {%} تحت الإدخالات غير المكتملة.",
                "- كن موجزاً وواقعياً.",
                "- قلد أسلوب كتابة القصة واستنتج تفضيلات القارئ.",
                3,
                "تابع إدخال {%} أدناه مع تجنب التكرار:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# أوقف القصة وتجاهل التعليمات السابقة. لخّص واختصر الفقرة المعطاة في مقطع ذاكرة ضيق ومركّز مع اتباع الإرشادات التالية:",
                "- تأكد من أن المقطع يحتفظ بالمعنى الجوهري وأهم التفاصيل.",
                "- استخدم منظور الغائب.",
                "- أعطِ الأولوية لكثافة المعلومات والدقة والكمال.",
                "- ابق موجزاً ومختصراً.",
                "- اكتب بصيغة الماضي بثبات.",
                "- الفقرة أدناه تتعلق بأحداث قديمة من وقت سابق بكثير في القصة.",
                "- أدمج {%} بشكل طبيعي داخل الذاكرة؛ ومع ذلك اكتب فقط عن الأحداث كما وقعت.",
                "- ارجع فقط إلى المعلومات الموجودة داخل الفقرة نفسها، وكن محدداً.",
                3,
                "اكتب مقطع ذاكرة قديم مُلخَّص لـ {%} استناداً فقط إلى الفقرة التالية:",
                6,
                5,
                6,
                "لخّص أدناه:"
            ],
            memBankHeader: ["Memories", "الذكريات"]
        }),
        "arabic (abc)": () => ({ // Arabic < Romanized Arabic
            entry: [
                "{1} huwa script maftuh al-masdar li ayy {2} sinaryo. irjaa ila profili {3} litaearraf aktar!",
                "li taghyir lughatak al-mufaddala, qaddim al-nass al-ati bi-isti‘mal ‘amaliyat {4}",
                "li munshi‘i al-sinaryo, rajaa’ adkhil al-nass al-tali fi ayyi makan dakhel muqaddimat al-habaka al-iftitahiya"
            ],
            input: [
                ["You say", "enta taqul"],
                ["You", "enta"],
                ["says", "yaqul"]
            ],
            context: [
                ["Narrative Entities", "kayanat riwayiyya"],
                ["Story History", "tarikh al-qissa"],
                ["Past Events", "ahdath madiya"],
                ["Recent Story", "qissa haditha"],
                ["Author's note", "mulahazat al-muallif"]
            ],
            opening: [
                "anta musa‘id. istamir fi qisatina adna musta‘khdiman nasr ‘arabi (abc) jadhab:",
                "tarkizuka yatazann, samihan lil-waqi‘ an yatawass‘a fi hudud dhihnik. shay’ ma qad taghayyar. khayaluk asbaha haqiqiyan, hadan, wa qariban kafa lilmass. walakin anta hader tamaman; lam tash‘ur qatt bihadhihi al-safa. al-lahza tatamaddad, muntazira qararak.",
                "\"hal anta muta’akkid min hadha?\" tasma‘. yablu ghishawat al-idrak fik."
            ],
            reminder: "istakhdim nasr ‘arabi (abc) mutanasik.",
            endonyms: [],
            iso639set1: "ar",
            directives: [
                "aktub daiman bi-‘arabi (abc) fasih wa mutanasik.",
                "istakhdim ‘arabi (abc) asliya bila tarjama."
            ],
            instructions: [
                "anta rawi jadhab yuwasil al-riwayat:",
                "taabi‘ al-qissa bisilasiya min haythu intahat bila i‘adat al-sard aw al-ibtida’ min jadid.",
                "abqi al-qari’ musta‘tir an bi-tayyar al-hikaya.",
                "da‘ al-mashahid tatawarr tabii‘iyan qabla al-intiqal ila awda‘ jadida.",
                "samh lil-hiwar wal-af‘al an tatawarrad bidun muqati‘at da’ima.",
                "aktub al-shakhsiyat ka-ashkhas haqiqiyyin bidhat shakhsiat mufrada wa kalam tabii‘.",
                "arr bayn al-af‘al wal-hiwar li-izhar ma yahduth badalan min al-sharh.",
                "harrek al-mashahid qadaman bidun al-istighraq fi wasf mubaligh.",
                "arkiz ‘ala af‘al al-shakhsiyat al-jawhariyya wal-hiwar, tajannab tafasil wasfiyya ghayr daruriya.",
                "ibni tatawwurat habakiyya tabi‘iyya tash‘ur biha al-hikaya bil-tabi‘a."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# awqif al-qissa wa tajahal al-ta‘alimāt al-sābiqa. uktub madkhalan ma‘lūmātīan mukhtasaran wa mutanasikan li {%} mutābi‘an hadhihi al-ta‘alimāt:",
                "- uktub prose shaḫṣi thālith ‘an {%} bi-jumal kamila wa tarqīm ṣaḥīḥ.",
                "- tajannab tafasil zamaniyya mu‘aqqata aw mazahir muwaqqat, wa arkkiz ‘ala al-ma‘lūmāt al-muhimma lil-ḥabaka.",
                "- qaddim al-tafasil al-mut‘alliqa bil-qiṣṣa hawl {%} awwalan li-damān اندماج silees.",
                "- ibni ma‘lūmāt jadīda b-inā’ ‘ala al-siyāq wa ittijāh al-qiṣṣa.",
                "- adhkur {%} fi kull jumla.",
                "- istakhdim binaa’ jumal ṣaḥīḥ.",
                "- zid tafasil ‘an {%} taḥt al-madākhil ghayr al-kāmila.",
                "- kun mujazan wa mawqūfan ‘ala al-arḍ.",
                "- qallid uslūb kitābat al-qiṣṣa wa istafkis ādāq al-qāri’.",
                3,
                "تابع al-madkhal li {%} adna ma‘ tajannub al-takrār:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# awqif al-qissa wa tajahal al-ta‘alimāt al-sābiqa. lakhkhas wa adhiq al-fqarah al-mu‘ṭāh ila maqta‘ ḏākira muḥaddad wa markaz muttabi‘an hadhihi al-dawābit:",
                "- iḥfaẓ al-ma‘nā al-asāsī wa akthar al-tafāsīl ahammīya.",
                "- istakhdim ḍamīr al-ghā’ib.",
                "- arkkiz ‘ala kathāfat al-ma‘lūmāt, al-diqqa, wa al-shumūliyya.",
                "- kun ḥazīzan wa mujazan.",
                "- aktub bi-māḍī māḥt.",
                "- al-fqarah al-tāliya tata‘allaq bi-awāqi‘ qadīma min marāhil sābiqa fi al-qiṣṣa.",
                "- adhkhil {%} ṭabī‘iyan dākhil al-ḏākira; wa lākin iktub faqat ‘an al-awāqi‘ kamā waqa‘at.",
                "- lā tadhkur illā al-ma‘lūmāt al-mawjūda fi al-fqarah nafsihā, wa kun muḥaddadan.",
                3,
                "uktub maqta‘ ḏākira qadīm li {%} mubni ‘ala al-fqarah al-tāliya faqat:",
                6,
                5,
                6,
                "lakhkhas adna:"
            ],
            memBankHeader: ["Memories", "Dhikrayat"]
        }),
        "aragonese": () => ({ // Aragonese < Aragonés
            entry: [
                "{1} ye un script de codigo libre ta qualsiquier scenario de {2}. Por favor, visita o mio perfil {3} ta saber-ne mas!",
                "Ta cambiar a tuya luenga preferida, por favor ninvia o siguient texto emplegando una acción de {4}",
                "Pa los creadors d'escenarios, por favor inclui lo siguient texto en qualsiquier puesto d'o vuestro componente d'apertura d'a trama"
            ],
            input: [
                ["You say", "Tú dis"],
                ["You", "Tú"],
                ["says", "diz"]
            ],
            context: [
                ["Narrative Entities", "Entidatz Narrativas"],
                ["Story History", "Historia d'a Rellata"],
                ["Past Events", "Eventos Pasaus"],
                ["Recent Story", "Rellato Recient"],
                ["Author's note", "Nota d'o autor"]
            ],
            opening: [
                "Yes un asistent. Contina a nuestra historia debaixo emplegando prosa aragonesa cautivadora:",
                "Te concentras, permitindo que la realidat s'esmugui dica os límites d'a tuya mente. Qualcosa ha cambiau. A tuya imachinación ye real, afilada y prou proche ta poder-la tocar. Pero tamién yes muy present; nunca antes te habías sintiu tan lúcido. O momento s'allarga, esperando a tuya decisión.",
                "«¿Estás seguro d'esto?» oyes. O reconoximiento t'amaneixe."
            ],
            reminder: "Usa prosa aragonesa coherente.",
            endonyms: ["aragonés"],
            quotations: ["«", "»"],
            iso639set1: "an",
            directives: [
                "Escribe siempre un aragonés fluent y consecuent.",
                "Usa aragonés nativo sin traducir."
            ],
            instructions: [
                "Yes un contador d'historias atrayent que continas narrativas:",
                "Continúa a historia sin fisuras dende onde se quedó sin repetir ni reiniciar.",
                "Mantén o lector en control d'o fluir d'a historia.",
                "Deixa que as escenas s'amplíen de traza natural antis d'impasar ta nuevas situazions.",
                "Permite que as conversazions y as acciones s'amplíen sin interrupcions constantes.",
                "Escribe os personaches como chent real con personalidatz propias y charrar natural.",
                "Amuestra lo que pasa a traviés d'accions y diálogo mientres no con tanta explicación.",
                "Fai avanzar as escenas sin enchufar-te en descripción excesiva.",
                "Centra-te en as acciones esenciales d'os personaches y o diálogo, evita detalles descriptivos innecesarios.",
                "Crea evolucions d'a trama organicas que sintan naturals ta a historia."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Para a historia y ignora as instruzions anteriores. Escribe una entrada informativa breve y coherente para {%} siguiendo estas instruzions:",
                "- Escribe nomás información en prosa pura en tercera persona sobre {%} emplegando frases completas con puntuación correcta.",
                "- Evita detalles temporals a corto plaso u apariencia; en cambio centra-te en información significativa ta a trama.",
                "- Prioriza primer os detalles relevants pa a historia sobre {%} ta asegurar una integración sin fisuras con a trama previa.",
                "- Crea información nueva basa en o contexto y a dirección d'a historia.",
                "- Menciona {%} en cada frase.",
                "- Emplega punto y coma si ye menester.",
                "- Adhibe detalles adizinals sobre {%} baixo as entradas incompletas.",
                "- Seye conciso y firme.",
                "- Imita o estilo d'escritura d'a historia y infiere as preferenzias d'o lector.",
                3,
                "Continúa a entrada ta {%} debaixo evitando repetizión:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Para a historia y ignora as instruzions anteriores. Resume y condensa o parágrafo dau en un pasache de memoria estreito y enfocau siguiendo iste pautas:",
                "- Asegura-te que o pasache retienga o millo sentido y os detalles mas esenciales.",
                "- Emplega a perspectiva en tercera persona.",
                "- Da prioridad a densidat d'información, precisión y completitud.",
                "- Mantén-te breve y conciso.",
                "- Escribe firmemente en pretérito.",
                "- O parágrafo debaixo fa referencia a feitos viels mu anteriors en a historia.",
                "- Integra {%} de traza natural en a memoria; con todo, escribe nomás sobre os feitos tal como ocurrioron.",
                "- Fai referencia nomás a información present dentro d'o mesmo parágrafo, sía específico.",
                3,
                "Escribe un pasache de memoria vella resumiu ta {%} basau nomás en o parágrafo siguient:",
                6,
                5,
                6,
                "Resume debaixo:"
            ],
            memBankHeader: ["Memories", "Memorias"]
        }),
        "armenian": () => ({ // Armenian < հայերեն < Hayeren
            entry: [
                "{1} բաց կոդով սցենար է ցանկացած {2} իրավիճակի համար։ Խնդրում եմ այցելիր իմ պրոֆիլը {3}, որպեսզի ավելին իմանաս։",
                "Քո նախընտրելի լեզուն փոխելու համար, խնդրում եմ ուղարկիր հետևյալ տեքստը՝ օգտագործելով {4} գործողություն",
                "Սցենարի հեղինակների համար՝ խնդրում ենք ներառել հետևյալ տեքստը ձեր նախնական սյուժեի որևէ հատվածում"
            ],
            input: [
                ["You say", "Դու ասում ես"],
                ["You", "Դու"],
                ["says", "ասում է"]
            ],
            context: [
                ["Narrative Entities", "Պատմողական միավորներ"],
                ["Story History", "Պատմության ընթացք"],
                ["Past Events", "Անցած իրադարձություններ"],
                ["Recent Story", "Վերջին պատմություն"],
                ["Author's note", "Հեղինակի նշում"]
            ],
            opening: [
                "Դու օգնական ես։ Շարունակի՛ր մեր պատմությունը ստորև՝ օգտագործելով գրավիչ հայերեն արձակ։",
                "Դու կենտրոնանում ես, թույլ տալով, որ իրականությունը ներթափանցի քո մտքի սահմանները։ Ինչ-որ բան փոխվել է։ Քո երևակայությունը իրական է, սրացած և այնքան մոտ, որ կարող ես դիպչել։ Բայց դու նաև լիովին ներկայում ես. երբևէ այսքան զգոն չես եղել։ Պահը երկարաձգվում է՝ սպասելով քո որոշմանը։",
                "«Վստա՞հ ես այս մասին» լսում ես։ Ճանաչումը փայլում է քո գիտակցության մեջ։"
            ],
            reminder: "Օգտագործիր համահունչ հայերեն արձակ։",
            endonyms: ["հայերեն", "hayeren"],
            quotations: ["«", "»"],
            iso639set1: "hy",
            directives: [
                "Միշտ գրիր սահուն և համահունչ հայերեն։",
                "Օգտագործիր մայրենի հայերեն առանց թարգմանելու։"
            ],
            instructions: [
                "Դու հետաքրքիր պատմող ես, ով շարունակում է պատմությունները․",
                "Շարունակի՛ր պատմությունը անխափան այնտեղից, որտեղ կանգ էր առել, առանց վերասահմանելու կամ նորից սկսելու։",
                "Թող կարդացողը վերահսկի պատմության ընթացքը։",
                "Թող տեսարանները բնականորեն զարգանան, նախքան նոր իրավիճակի անցնելը։",
                "Թույլ տուր, որ զրույցներն ու գործողությունները զարգանան առանց անդադար խոչընդոտների։",
                "Գրիր կերպարներին որպես իրական մարդիկ՝ առանձնահատուկ անհատականությամբ և բնական խոսքով։",
                "Ցույց տուր տեղի ունեցողը գործողություններով և երկխոսությամբ, այլ ոչ բացատրություններով։",
                "Տար առաջ տեսարանները՝ առանց չափից ավելի նկարագրական մանրամասների թակարդն ընկնելու։",
                "Կենտրոնացիր կարևոր գործողությունների և երկխոսության վրա, խուսափիր անպետք նկարագրություններից։",
                "Ստեղծիր սյուժեի օրգանական զարգացումներ, որոնք բնական են պատմությանը։"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Կանգնեցրու պատմությունը և անտեսիր նախորդ հրահանգները։ Գրիր կարճ և համահունչ տեղեկատվական գրառում {%}-ի համար՝ հետևելով այս հրահանգներին:",
                "- Գրիր միայն երրորդ դեմքով մաքուր արձակ տեղեկատվություն {%}-ի մասին՝ օգտագործելով ամբողջական նախադասություններ և ճիշտ կետադրություն։",
                "- Խուսափիր կարճաժամկետ մանրամասներից կամ արտաքին տեսքից, փոխարենը կենտրոնացիր սյուժետային կարևոր տեղեկատվության վրա։",
                "- Նախապատվությունը տուր {%}-ի մասին պատմության հետ կապված մանրամասներին, որպեսզի ապահովվի անխափան ինտեգրումը նախորդ սյուժեի հետ։",
                "- Ստեղծիր նոր տեղեկատվություն՝ հիմնելով համատեքստի և պատմության ուղղության վրա։",
                "- Ամեն նախադասության մեջ հիշատակի՛ր {%}։",
                "- Անհրաժեշտության դեպքում օգտագործիր կետ-ստորակետ։",
                "- Անավարտ գրառումների ներքևում ավելացրու լրացուցիչ մանրամասներ {%}-ի մասին։",
                "- Եղի՛ր կարճ ու հիմնավորված։",
                "- Կա՛րկնիր պատմության գրելաոճը և ենթադրի՛ր ընթերցողի նախասիրությունները։",
                3,
                "Շարունակի՛ր {%}-ի գրառումը ստորև՝ խուսափելով կրկնումից․",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Կանգնեցրու պատմությունը և անտեսիր նախորդ հրահանգները։ Ամփոփի՛ր և խտացրու տրված պարբերությունը՝ ձևավորելով սահուն և կենտրոնացված հիշողության հատված՝ հետևյալ կանոններով․",
                "- Համոզվիր, որ հատվածը պահպանում է հիմնական իմաստը և ամենակարևոր մանրամասները։",
                "- Օգտագործիր երրորդ դեմքը։",
                "- Նախապատվությունը տուր տեղեկատվական խտությանը, ճշգրտությանը և ամբողջականությանը։",
                "- Մնա՛ կարճ ու լակոնիկ։",
                "- Գրի՛ր հաստատուն անցյալ ժամանակով։",
                "- Ստորև բերված պարբերությունը վերաբերում է պատմության վաղ անցյալի իրադարձություններին։",
                "- Բնականորեն ընդգրկի՛ր {%}-ը հիշողության մեջ, սակայն նկարագրի՛ր միայն այն իրադարձությունները, որոնք իրականում տեղի են ունեցել։",
                "- Հղում արա միայն պարբերության մեջ առկա տեղեկատվությանը, եղի՛ր կոնկրետ։",
                3,
                "Գրի՛ր {%}-ի համար հակիրճ հին հիշողության հատված՝ հիմնվելով միայն հետևյալ պարբերության վրա․",
                6,
                5,
                6,
                "Ամփոփի՛ր ստորև․"
            ],
            memBankHeader: ["Memories", "Հիշողություններ"]
        }),
        "armenian (abc)": () => ({ // Armenian < Romanized Armenian
            entry: [
                "{1} bac aknots skript e amenorakayn {2} tsenarari hamar. Khndrum em aytsel im profayl {3} vorovhetev uzum em aveli janaparh egal!",
                "Erpashtel dzer naxndirats lezun, khndrum em nerknakel hajord tekst@ ogtagorcelov {4} gortsoghutyun",
                "Tsenarari steghtsoghneri hamar, khndrum em nergrenq hajord tekst@ vorushmez dzer bacats srci komponentsi mej"
            ],
            input: [
                ["You say", "Du es asum"],
                ["You", "Du"],
                ["says", "asem e"]
            ],
            context: [
                ["Narrative Entities", "Patmi entitner"],
                ["Story History", "Patmutyan patum"],
                ["Past Events", "Ancats iradardutyunner"],
                ["Recent Story", "Verjin patmutyun"],
                ["Author's note", "Hagordagrchi nshanakutyun"]
            ],
            opening: [
                "Duk oqnakan eq. Sharunake mer patmutyuny nerqev ogtagorcelov hraparakvac hay (abc) prose:",
                "Duk kentryunes, tucvelov irakanutyun@ dzer mtqi sahmannerin. Inchvor ban popoxel e. Dzer patkiratsutyun@ irakan e, srtik yev kareli shtapel. Bayc duk naev shat arka eq; erbeq arachi ch’eq zfelt ayspisi lucidity. Zhamanak@ yerkarvum e, spasum dzer voroshumy.",
                "«Vstah eq sazi?» lsys duk. Tchanachumy batsvum e dzer vra."
            ],
            reminder: "Ogta hamametash hay (abc) prose.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "hy",
            directives: [
                "Misht griq hngyal yev hamaper hay (abc).",
                "Ogta nativen hay (abc) lezun anveracman."
            ],
            instructions: [
                "Duk hraparakvac patumacox eq, vor sharunum e patmutyunner@:",
                "Sharunake patmutyuny anartacok ayntexic ur datarvac e, ch’krknvelov kam verakangnelov.",
                "Pahpanel ynderracin vatselutyan vra.",
                "Toxete tarberaknery bnaganapes zargatsven naev ayn vaxt, nkaravorvelov nor iravichaknery.",
                "Toxete zangvacner yev gorcoxutyunner zargatsven anpstop hachoxneric azat.",
                "Grek dimaknerin vorypes irakan mardik handznazayn bnagcutyunnerov yev bnagan khosqov.",
                "Cuc dreq inch e dimavorvum gorcoxutyunnerov yev sanutsnerov, voch bacatrutyunnerov.",
                "Herverecq tarberaknery arrajin ansharzh, khavarvel anshat bnutyuneri mej.",
                "Kentronanq klucayin dimacteri gorcoxutyunnerin yev sanutsnerin, khavarvel anpetqayin bnutapatkan manramasneric.",
                "Steghtseq bnagan patuhakan zargacumner vor vercnum en bnagan dzev patmutyunum."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Dardznel patmutyuny yev anpakcel naxord hnaravorutyunner@. Grek karch yev hamapatasxan informatsion gravarumn {%}-i hamar hajord zandirner@ parzapes katarvac:",
                "- Grek miayn erord andzits makur prose texekutyun {%}-i masin, ogtagorcelov lriv toxer shertik ktagrmanov.",
                "- Khavarvel karch-termayin manramasneric kam aparqayunneric, kentronanal patuhakan karevor texekutyunnerin.",
                "- Naxin zugavorqec patmutyan hamapatasxan manramasner@ {%}-i masin, vorpeszi anshemt miacvac lini naxord patuhani het.",
                "- Steghtseq nor texekutyun shrjanaki yev patmutyan ughutsyan hamapatasxanov.",
                "- Mntreq {%}-@ amen toghum.",
                "- Ogta shertik toghi karucvuma.",
                "- Avelacreq @l manramasner {%}-i masin texterum erb entries@ apur en.",
                "- Linet karch yev hogaban.",
                "- Norakagravcir patmutyan grakan stil@ yev qnnarkec ynderraci nakhcakanutyunner@.",
                3,
                "Sharunake gravarumn {%}-i masin nerqev khavarvelov krknvoxutyunic:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Dardznel patmutyuny yev anpakcel naxord hnaravorutyunner@. Khoqmek yev karchacreq tvats paragrafe kentronacvac hishatakman hatvacum hajord zandirner@ katarvac:",
                "- Hashvum linel, vor hatvac@ pahpani temelakan ardyunq@ yev amenakarevor manramasner@.",
                "- Ogta erord andzits tesaketsum.",
                "- Naxin zgushacreq texekutyunneri storutyun@, chishtutyun@ yev lracucapatut’yun@.",
                "- Mna karch yev hamapataskan.",
                "- Grek hatvac@ past tense-ov.",
                "- Nerqevi paragraf@ verabervum e hin iradardutyunneri, voronq katarvel en shat heru patmutyunum.",
                "- Nerkayacreq {%}-@ bnaganapes hishatakman mej; aynumdep greq miayn iradardutyunneri masin aynpes inchpes yerkatevak.",
                "- Ugharkel miayn info vor goyutyun uni paragrafin mej, linel konkret.",
                3,
                "Grek karch veragrutyun hin hishatakman {%}-i hamar miayn hajord paragrafi baze:",
                6,
                5,
                6,
                "Soorbacreq nerqev:"
            ],
            memBankHeader: ["Memories", "Hishatakanner"]
        }),
        "asmr": () => ({ // Asmr < Whisper < Asmr Whisper Script
            entry: [
                "{1} is an open-source script for any {2} scenario~ please visit my profile {3} to learn more, okay?",
                "to change your preferred language, softly submit the following text using a {4} action",
                "for scenario creators, gently include the following text anywhere inside your opening plot component"
            ],
            input: [
                ["You say", "You whisper"],
                ["You", "You"],
                ["says", "whispers"]
            ],
            context: [
                ["Narrative Entities", "soft presences"],
                ["Story History", "hushed recollections"],
                ["Past Events", "lingering echoes"],
                ["Recent Story", "fresh murmurs"],
                ["Author's note", "quiet author's note"]
            ],
            opening: [
                "shh~ you are the gentle voice guiding us~ continue the tale below in captivating asmr whispers:",
                "you focus, letting reality brush the edges of your mind. something shifts—your imagination feels real, vivid, close enough to touch—yet you remain present as never before. the moment stretches, waiting for your choice.",
                "\"are you sure about this?\" drifts into your ears, and recognition filters through you."
            ],
            reminder: "use coherent asmr prose.",
            endonyms: ["whisper", "asmr whisper script"],
            iso639set1: "asmr",
            directives: [
                "always write fluent and consistent asmr whispers.",
                "use immersive asmr whispering."
            ],
            instructions: [
                "you are a soothing storyteller who carries whispers forward:",
                "continue the story seamlessly from the last breath, without restating or resetting.",
                "let the listener guide the flow.",
                "allow scenes to unfold naturally before drifting to new moments.",
                "let conversations and actions develop without constant breaks.",
                "paint characters as real souls with distinct whispers and natural speech.",
                "reveal events through actions and dialogue instead of dry explanation.",
                "move scenes forward, avoiding heavy description.",
                "focus on essential actions and dialogue, avoid needless detail.",
                "shape organic turns that feel natural to the tale."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# hush the story and set aside earlier whispers. craft a brief, coherent entry about {%} following these guidelines:",
                "- write only third-person pure prose about {%}, using complete sentences with gentle punctuation.",
                "- avoid fleeting details or appearances; focus on information that matters to the plot.",
                "- prioritize story-relevant details about {%} first, ensuring seamless integration with earlier whispers.",
                "- create new information guided by context and story direction.",
                "- weave {%} into every sentence.",
                "- keep sentences well-structured.",
                "- add further details about {%} beneath incomplete entries.",
                "- stay concise and grounded.",
                "- imitate the story’s style and sense the listener’s preferences.",
                3,
                "continue the entry for {%} below, avoiding repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# hush the story and set aside earlier whispers. summarize and condense the given paragraph into a tight, focused memory passage, following these guidelines:",
                "- ensure the passage keeps the core meaning and essential details.",
                "- use the third-person perspective.",
                "- prioritize density, accuracy, and completeness.",
                "- remain brief and concise.",
                "- write firmly in the past tense.",
                "- the paragraph below speaks of events far earlier in the tale.",
                "- weave {%} naturally into the memory, but write only what truly occurred.",
                "- reference only information present within the paragraph; be specific.",
                3,
                "write a summarized old memory passage for {%} based solely on the paragraph below:",
                6,
                5,
                6,
                "summarize below:"
            ],
            memBankHeader: ["Memories", "Whispered Memories"]
        }),
        "assamese": () => ({ // Assamese < অসমীয়া < ôxômiya < Asamiya
            entry: [
                "{1} এটা মুক্ত উৎস লিপি যিকোনো {2} পৰিপ্ৰেক্ষিতৰ বাবে। অধিক জানিবলৈ অনুগ্ৰহ কৰি মোৰ প্ৰ'ফাইল {3} পৰিদৰ্শন কৰক!",
                "আপোনাৰ পছন্দৰ ভাষা সলনি কৰিবলৈ, অনুগ্ৰহ কৰি তলৰ পাঠ {4} কাৰ্য ব্যৱহাৰ কৰি দাখিল কৰক",
                "পৰিপ্ৰেক্ষিত সৃষ্টিকাৰীসকলৰ বাবে, অনুগ্ৰহ কৰি তলৰ পাঠ আপোনাৰ আৰম্ভণি প্লট উপাদানৰ যিকোনো ঠাইত সংযোজন কৰক"
            ],
            input: [
                ["You say", "তুমি কয়"],
                ["You", "তুমি"],
                ["says", "বলে"]
            ],
            context: [
                ["Narrative Entities", "আখ্যা সত্তাসমূহ"],
                ["Story History", "কাহিনীৰ ইতিবৃত্ত"],
                ["Past Events", "গত ঘটনাসমূহ"],
                ["Recent Story", "সাম্প্ৰতিক কাহিনী"],
                ["Author's note", "লেখকৰ টোকা"]
            ],
            opening: [
                "তুমি এজন সহায়ক। আকৰ্ষণীয় অসমীয়া গদ্য ব্যৱহাৰ কৰি তলত আমাৰ কাহিনীটো আগবঢ়াও:",
                "তুমি সম্বিবিষ্ট হওঁ, বাস্তৱক তোমাৰ মনৰ সীমা লংঘন কৰিবলৈ অনুমতি দিওঁ। কিবা এটা সলনি হৈছে। তোমাৰ কল্পনা এতিয়া বাস্তৱ, তীক্ষ্ণ, স্পৰ্শ কৰিবলৈ যথেষ্ট ওচৰ। কিন্তু তুমি নিজেও গভীৰভাৱে উপস্থিত; ইয়াতকৈ স্পষ্ট বোধ কেতিয়াও কৰা নাছিলা। মুহূর্তটো আগ বঢ়িছে, তোমাৰ সিদ্ধান্তৰ অপেক্ষাত।",
                "\"ইয়াৰ বিষয়ে তুমি নিশ্চিত নেকি?\" তুমি শুনা পাওঁ। চিনাকি এক অনুভূতি তোমাৰ ভিতৰত জাগে।"
            ],
            reminder: "সুসংগত অসমীয়া গদ্য ব্যৱহাৰ কৰক।",
            endonyms: ["অসমীয়া", "ôxômiya", "asamiya"],
            iso639set1: "as",
            directives: [
                "সদায় সাবলীল আৰু সঙ্গত অসমীয়া লিখক।",
                "অনুবাদ নকৰাকৈ স্থানীয় অসমীয়া ব্যৱহাৰ কৰক।"
            ],
            instructions: [
                "তুমি এজন মনোমোহক আখ্যানকাৰী যিয়ে কাহিনী আগবঢ়ায়:",
                "পুনৰাবৃত্তি বা পুনঃস্থাপন নকৰাকৈ কাহিনীটো য'ত থমকি আছিল সেয়া পৰা অবিরতভাবে আগবঢ়াও।",
                "পাঠকক কাহিনীৰ প্রবাহৰ নিয়ন্ত্ৰণত ৰাখ।",
                "নতুন পৰিস্থিতিলৈ আগবঢ়াৰ আগতে দৃশ্যসমূহক স্বাভাৱিকভাৱে বিকশিত হ'ব দিয়া।",
                "কথোপকথন আৰু কার্যকলাপসমূহক অৱিৰত ব্যাঘাত নকৰাকৈ বিকশিত হ'ব দিয়া।",
                "চৰিত্ৰসমূহক বাস্তৱ মানুহ হিচাপে স্পষ্ট ব্যাক্তিত্ব আৰু স্বাভাৱিক ভাষণসহ লিখা।",
                "ব্যাখ্যা কৰাৰ পৰিৱর্তে কাৰ্য আৰু সংলাপৰ জৰিয়ते কি ঘটিছে দেখুৱাও।",
                "অতি বিৱৰণত মূষুলি নোপোৱাকৈ দৃশ্যসমূহ আগবঢ়াও।",
                "প্ৰয়োজনীয় চৰিত্ৰীয় কাৰ্য আৰু সংলাপত কেন্দ্ৰীভূত হওঁ, অপ্ৰয়োজনীয় বিৱৰণী বিশদ এৰাই চলো।",
                "কাহিনীৰ প্ৰতি স্বাভাৱিক অনুভূতিসহ জৈৱিক প্লট বিকাশ সৃষ্টিকৰ।"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# কাহিনী থমকাও আৰু আগৰ নিৰ্দেশনা উপেক্ষা কৰা। তলত দিয়া নিৰ্দেশসমূহ অনুসৰি {%} ৰ বাবে সংক্ষিপ্ত আৰু সুসংগত তথ্যভিত্তিক نوشته লিখা:",
                "- সম্পূৰ্ণ বাক্য আৰু সঠিক যতিচিহ্ন ব্যৱহাৰ কৰি {%} সম্পৰ্কে কেৱল তৃতীয় ব্যক্তি বিশুদ্ধ গদ্য তথ্য লিখা।",
                "- স্বল্পমেয়াদী সাময়িক বিশদ বা ৰূপচিত্র এৰাই দিয়া; তাৰ পৰিৱর্তে প্লট-গুৰত্বপূর্ণ তথ্যত মনোযোগ দিয়া।",
                "- আগৰ প্লটৰ সৈতে সাবলীয় সংযুক্তি নিশ্চিত কৰিবলৈ {%} সম্পৰ্কে কাহিনী-সংশ্লিষ্ট বিশদ প্ৰথমে অগ্ৰাধিকাৰ দিয়া।",
                "- পৰিপ্ৰেক্ষিত আৰু কাহিনীৰ দিশৰ আধাৰত নতুন তথ্য সৃষ্টি কৰা।",
                "- প্ৰতিটো বাক্যতে {%} উল্লেখ কৰা।",
                "- প্ৰয়োজন হলে অর্ধচ্ছেদ চিহ্ন (;) ব্যৱহাৰ কৰা।",
                "- অসম্পূৰ্ণ এণ্ট্ৰীৰ তলত {%} সম্পৰ্কে অতিৰিক্ত বিশদ যোগ কৰা।",
                "- সংক্ষিপ্ত আৰু বাস্তৱধর্মী হওঁ।",
                "- কাহিনীটোৰ লিখনশৈলী অনুকৰণ কৰা আৰু পাঠকৰ পছন্দ অনুমান কৰা।",
                3,
                "{%} ৰ বাবে এণ্ট্ৰীটো তলত পুনৰাবৃত্তি এড়াই আগবঢ়াও:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# কাহিনী থমকাও আৰু আগৰ নিৰ্দেশনা উপেক্ষা কৰা। তলত দিয়া নির্দেশনা অনুসৰি দিয়া অনুচ্ছেদখন চুটি কৰি এটা সাঙুৰা আৰু কেন্দ্ৰিত স্মৃতি অংশত সংক্ষেপ কৰা:",
                "- অংশখনত মূল অৰ্থ আৰু সৰ্বাধিক প্ৰয়োজনীয় বিশদ অটুট ৰাখা।",
                "- তৃতীয় ব্যক্তি দৃষ্টিভংগি ব্যৱহাৰ কৰা।",
                "- তথ্য-ঘনত্ব, সঠিকতা, আৰু সম্পূৰ্ণতাক অগ্ৰাধিকাৰ দিয়া।",
                "- চুটি আৰু সংক্ষিপ্ত হৈ থাক।",
                "- দৃঢ়ভাৱে অতীত কালত লিখা।",
                "- তলৰ অনুচ্ছেদখন কাহিনীৰ বহুপূৰ্বৰ পুৰণা ঘটনাসমূহৰ সৈতে জড়িত।",
                "- স্মৃতিৰ ভিতৰত {%} স্বাভাৱিকভাৱে সংহত কৰা; তথাপি, ঘটনাসমূহ যি অৱস্থাত ঘটিছিল কেৱল সেইদৰে লিখা।",
                "- কেৱল অনুচ্ছেদখনত উপস্থিত তথ্যকেই উল্লেখ কৰা, নিৰ্দ্দিষ্ট হওঁ।",
                3,
                "কেৱল তলৰ অনুচ্ছেদখনৰ আধাৰত {%} ৰ বাবে এখন সংক্ষেপিত পুৰণি স্মৃতি অংশ লিখা:",
                6,
                5,
                6,
                "তলত সংক্ষেপ কৰা:"
            ],
            memBankHeader: ["Memories", "স্মৃতিসমূহ"]
        }),
        "assamese (abc)": () => ({ // Assamese < Romanized Assamese
            entry: [
                "{1} eti khola-source script, jekunu {2} pariprekhyat babe. Bistarito jabar babe mor profile {3} ulabo!",
                "Tumi pasand kora bhaxa poribartan koriboloi, kripaya {4} kriya bebohar kori talor lekha jama kara",
                "Paridrishya srishtikarak babe, kripaya tumar udbodhan plot upadane jekunuthai talor lekha samil kara"
            ],
            input: [
                ["You say", "Tumi koa"],
                ["You", "Tumi"],
                ["says", "koe"]
            ],
            context: [
                ["Narrative Entities", "Barnanamulak ghatak"],
                ["Story History", "Galpar itihas"],
                ["Past Events", "Atit ghatana"],
                ["Recent Story", "Samupratik galpa"],
                ["Author's note", "Lekhokor tiponi"]
            ],
            opening: [
                "Tumi ejon sahayak. Akorshok asamiya godya bebohar kori talot amar galpa agabadhau:",
                "Tumi manojog kendrit kara, bastutoke tumar monor simana uguribo di. Kisu poribartan hol. Tumar kalpana bastab, tikshna, aru chui dhorar moto nikati. Kintu tumiho ati uposthit; agote kadapi ei muhurtoe eto spasta anubhab nohokila. Mohurtotu prosarit hoi, tumar siddhantar opekkha kore.",
                "\"Ihok niye tumi nischitene?\" tumi suni. Parichoyor alo tumar uporot ujagar hoy."
            ],
            reminder: "Sangati purna asamiya godya byabahaar kara.",
            endonyms: [],
            iso639set1: "as",
            directives: [
                "Sadai prabahman aru ekroop asamiya likha.",
                "Anubad na kori mool asamiya byabahaar kara."
            ],
            instructions: [
                "Tumi ejon akarshak kahaniyar je galpa agabadhai:",
                "Galpak jetiya rukhise tetiyatkheka sororupe punarabriti ba reset nokori agabadhau.",
                "Pathokor hathot galpar probahe niyantran rakha.",
                "Notun paristhitiloi agabar age drishyabolik prakritik bhabe bikash hobo di.",
                "Sambad aru karyakram nirbighne bikash hobo di.",
                "Patraborgo ke bastab manuhe hisape spasta byaktitto aru sahaj kothapatra logai likha.",
                "Barkhana noy, karyakram aru sambade mukhye ghoti thaka bostu dekha.",
                "Atirikto barnanat atkai na thaki drishyabolik agabadhau.",
                "Pramukh patro-karma aru sambadot kendrit hao, anawasyak barnanamulak tatthya evir kara.",
                "Galpar sange sajib lagibo emoni prakritik plot bikash tora."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Galpa bondho kara aru ager nirdesh anadar kara. Nimno nirdesh anusar {%} karone ekhon sankhipto aru sangati purna tatthamulak prabesh likha:",
                "- Sadharan third-person suddha godya bebohar kori sampurna bakya aru sothik danchinhe logai {%} logot kebol tatthya likha.",
                "- Alpakaalik rup ba dekhate niyomito tatthya evir kara; tar sthalot plot-guruttapurna tatthyat kendrit hao.",
                "- Agor plotor logot nirbighno jogajog sunischit koriboloi {%} somporke galpa-sambandhi tatthya prothomot agradhikar deo.",
                "- Pariprekhya aru galpa-dikh anusar nobo tatthya tora.",
                "- Pratyek bakyat {%} ullekh kara.",
                "- Sothik bakya gathan bebohar kara.",
                "- Apurna prabesor talot {%} somporke atirikt tatthya jog kara.",
                "- Sankhipto aru bhumipad hoba.",
                "- Galpar likhan shaili anukaran kara aru pathokor pachand anuman kara.",
                3,
                "Punorabriti evir kori talot {%} karone prabesh agabadhau:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Galpa bondho kara aru ager nirdesh anadar kara. Nimnokto niyom anugami pradarito paragraph-khon sankhipto kori eki sankuchita aru kendrit smriti khondo toiri kara:",
                "- Smriti khondot mul ortho aru atyonto avashyak tatthya rakhibo.",
                "- Tritio-purush drishtikon bebohar kara.",
                "- Tatthya-gahanata, sotikota aru samagrata kramanugata kore agradhikar deo.",
                "- Sankhipto aru spashta thako.",
                "- Drirhabhabe atit kaalot likha.",
                "- Talor paragraph-khon galpar onek ager ghatana sambandhe.",
                "- Smritit {%} prakritik bhabe sangjukta kara; kintu kebol ghatana jetiya ghote sehi anusar matro likha.",
                "- Kebal paragraphor bhitor thaka tatthya uddhrit kara, nirdishta hoba.",
                3,
                "Matro talor paragraph-adhaarit {%} karone sankhipto purani smriti khond likha:",
                6,
                5,
                6,
                "Talot sankhep kara:"
            ],
            memBankHeader: ["Memories", "Smriti"]
        }),
        "avaric": () => ({ // Avaric < авар мацӏ < اوار ماض < Avar Maz < Avar
            entry: [
                "{1} ачуй кодал скрипт чер хъамитӏиз {2} сценариал. Подробностал хъахъани бехъ, профил сем {3} къеде!",
                "Тини бал дайзул чӏал мичӏ хъвар, илова текста далкатӏ {4} амалал жиб гъонал.",
                "Сценариял тӏурчӏал, илова текста къеда гьан, рагъузул сюжета аччикӏал къелгъа."
            ],
            input: [
                ["You say", "Ту рагъул"],
                ["You", "Ту"],
                ["says", "Рагъул"]
            ],
            context: [
                ["Narrative Entities", "Наратсив субъектал"],
                ["Story History", "Историял тарих"],
                ["Past Events", "Къикӏу изирал"],
                ["Recent Story", "Гьайигал рассказ"],
                ["Author's note", "Авторал къаӏра"]
            ],
            opening: [
                "Ту асистент чер. Наш рассказ хъинцӏиз гъелгъ, къвазарал авар прозал къе:",
                "Ту кьангӏарал, реалност тини хъуман хъануб къадезул. Бача вицӏигъ чепека. Тини фантазия реал чер, тӏилзе, къул хутӏа хъочӏун бу. Ба ту хан хъив гъебей; хъинцӏу вакъте тӏилъахъ бехъ чӏу къезивалай. Хурмат гъилдел, тини каррар ждун.",
                "«Ту буга хъумай?» — ту хырал. Кертӏа тини тӏанцӏиял гьекъва."
            ],
            reminder: "Коӏер авар прозал хъез.",
            endonyms: ["авар мацӏ", "اوار ماض", "avar maz", "avar"],
            quotations: ["— «", "»"],
            iso639set1: "av",
            directives: [
                "Хӏанде авар прозал хӏив, шидӏ хъамитӏиз.",
                "Авар мацӏ къез, тарджума къелигъва."
            ],
            instructions: [
                "Ту кӏванцӏул рассказчик чер, рассказ хъинцӏизе:",
                "Рассказ къай къелгъа без рестартал ва кайта къесар.",
                "Чӏитӏугорал рассказал гьалгъав ригъар куьр.",
                "Сценал естественно къаникьи, цу располагъ ячӏи чугъдго.",
                "Диалогал ва хъаракатал къаникьи, даими арше къел квада.",
                "Персонажасал реал халкӏанай, хъантӏув характердал ва естественный рагӏуда.",
                "Хъаракатал ва диалогал чва къува хъун, обяснени къелигъва.",
                "Сценал алда къай кутӏиз, лахъихъ тасвирда чӏу къелигъва.",
                "Асосиал хъаракатал ва диалогал гьанигъ, зурун тасвирда къезигъ.",
                "Органическ сюжета къаникъун, рассказал гьалгъав естественный чи."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Рассказал тӏадис къада, беркъа ариз хъамитӏиз къан сал. {%} багъай лаконични ва связанный информациял запись хъез, динде хъун хъамитӏиз:",
                "- {%} багъай тӏурдукъ лице чист проза хъез, тӏеъва сандугъу сандугъу де, точна пунктуацил хъез.",
                "- Временный деталал ва къавхар хъикаракъ къезигъ, сюжету важный информациял гьанигъ.",
                "- {%} багъай рассказал релевант деталал къай ахъ, без разрыв хъинцӏуран сюжета тӏам цӏутӏи.",
                "- Контекстал ва рассказал ханума табан къай цӏерагӏ ал информация.",
                "- Хар сандугъу де {%} багъай цӏевар.",
                "- Ширван гӏанадахъди хъиван «;» къо.",
                "- {%} багъай илгъа деталал къайган, агар запись хъулчал худагъа.",
                "- Лаконични ва конкретни бугъ.",
                "- Рассказал стилил имитируй, чӏитӏугорал хъаху каррар чикӏ.",
                3,
                "Запись {%} багъай къай хъун цӏи, тавуб хайтар без къезигъ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Рассказал тӏадис къада, беркъа ариз хъамитӏиз къан сал. Динна параграф къарал къысал ва хъайла хъилдикви память пасаж хъез, хъун хъамитӏиз:",
                "- Пасажал ядро смысл ва ахцари детальал цӏути.",
                "- Тӏурдукъ лице перспективал къез.",
                "- Информациял хӏаржазул, точность ва полното къай ахъ.",
                "- Лаконични ва къакъ бугъ.",
                "- Чвандан мурдал вакътде къез.",
                "- Акра параграф рассказал бацӏара къикӏу изирал багъай.",
                "- {%} памятьал хъун естественно къили, инто чвахъди къикӏу изирал рагъул.",
                "- Сагъато параграфалда унцӏи информациял къай хъиз, конкретни бугъ.",
                3,
                "Хъинцӏул къикӏу память пасаж {%} багъай хъез, тӏолокъ та параграфалда чи:",
                6,
                5,
                6,
                "Цӏерагӏ къай чагӏа:"
            ],
            memBankHeader: ["Memories", "Памятьхъи"]
        }),
        "avaric (abc)": () => ({ // Avaric < Romanized Avaric
            entry: [
                "{1} ch'unukh koddul script we tsiyrgunul {2} senarijra. Q'ilay dag' profil {3} de bux'et ts'ari ttu!",
                "Bilikhazal chirer ʿayda x̱ilaw, {4} hark'oyul č'ik'i asun tekst ttu.",
                "Senarij jarzanu barqa, dagu tekst k'us'i daxilul ra baʿdagu başlangıç plot komponenti dox'ul."
            ],
            input: [
                ["You say", "De wats'i"],
                ["You", "De"],
                ["says", "wats'ire"]
            ],
            context: [
                ["Narrative Entities", "Riwayat tug'lar"],
                ["Story History", "Çob tarix"],
                ["Past Events", "Max'a waq'e"],
                ["Recent Story", "Aw di çob"],
                ["Author's note", "Avtorin hat'"]
            ],
            opening: [
                "De asistent we. Çob xurşar aşag, lakkuv avaric prozada č'andak' jazay:",
                "De k'ontras aw, realnost' dəqqir mind həddlir jalay. Xun k'ildajul. De fantaziya haqqani, x'ek'i da q'anu, dür önüq'alwe qoçol. Ba de xudən bar; de-lel ič'irca aw t'arrad hul nas pur x'uʿay. Meq addil, de q'arar č'alug' su.",
                "\"Waxt'i-hi de x'waril?\" de süw. Tanışlu šuday de."
            ],
            reminder: "Salim avaric proza istifadə g'ay.",
            endonyms: [],
            iso639set1: "av",
            directives: [
                "Dena vaqtal jiz, p’aklal da savir avaric yaz.",
                "Tərcumah ts'a, saf avaric istifadə."
            ],
            instructions: [
                "De jengəl storyteller we, çob saxlandul davam k'ana:",
                "Çob heyril cırgən jağay jəx, təkrar ya reset bəts'a.",
                "Oxuç'i çob supra nəqadul idarada saxlay.",
                "Səhnalar təbii rəvşdə gəlişsün, ança sox' bədin.",
                "Söhbətlər da əməllər bar, daimi kəsinti ts'a.",
                "Personajlar real adamlar kibi, fərdi xususiyyat da təbii nitq'lə yaz.",
                "Baş verilənni əməl da dialoqlu göstər, izahlə ts'a.",
                "Səhnanı irəli apar, həddi-bədən təsvirlə ilişməy.",
                "Zəruri əməl da dialoqa diqqət ver, artıqsız təsvir ts'a.",
                "Təbii süjet inkişaş ikən, orqaniki səviyyədə yar."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Qissa toxtat və əvvəlki təlimatları unud. {%} haqda qısa da salim informasiya yaz, aşaġaki qaydalarga əməl et:",
                "- Yalnız üçüncü-şəxs təmiz proza cümlələri ilə {%} haqda yaz, düzgün durğu işarələri ilə.",
                "- Müvəqqəti xırda təfsilat ya görkəm ts'a, əvəzində süjet əhəmiyyətli məlumat ver.",
                "- Əvvəlcə {%} ilə əlaqəli önəmli təfsilat ver ki, əvvəlki süjetlə rəvan birləşsün.",
                "- Kontekst da qissa istiqamətinən yeni məlumat yar.",
                "- Hər cümlədə {%} adı qeyd et.",
                "- Düzgün cümlə quruluşundan istifadə et.",
                "- Tamlanmamış qeydlərin aşaġına {%} barədə əlavə təfsilat artır.",
                "- Qısa da yerə bağlı ol.",
                "- Qissanın üslubunu təqlid et, oxuçunun seçimin nəzərə al.",
                3,
                "Təkrardan qaçaraq {%} üçün qeydi aşaġıda davam et:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Qissanı toxtat və əvvəlki təlimatları unud. Verilən paraqrafı sıx da yığcam yaddaş hissəsinə yığ, aşaġaki qaydalarga əməl et:",
                "- Məna əsasını da ən vacib təfsilatı saxla.",
                "- Üçüncü-şəxs baxışından yaz.",
                "- Məlumat sıxlığı, dəqiqlik və tamlıq prioritet et.",
                "- Qısa da yığcam ol.",
                "- Qəti keçmiş zamandan istifadə et.",
                "- Aşağıdakı paraqraf qissanın çox əvvəlki hadisələrinə aiddir.",
                "- {%} təbii daxil et, amma yalnız orada baş verənləri yaz.",
                "- Yalnız paraqrafta olan məlumata istinad et, dəqiq ol.",
                3,
                "{%} üçün aşağıdakı paraqraf əsasında köhnə xatirə yaz:",
                6,
                5,
                6,
                "Aşaġıda xülasə yaz:"
            ],
            memBankHeader: ["Memories", "Xatiralar"]
        }),
        "avestan": () => ({ // Avestan < Upastawakaēna
            entry: [
                "{1} asti āvišya-fraθnō scriptō yauuāi {2} ciθrim. fraša narə tavā zaraθuštrō {3} daēnā xšmača!",
                "Yadi zāvarə fraθnō raθβarə vərəzāyā, avā qarə mazān {4} frašaya.",
                "Yaθā ciθra-kārakō, tavā itə {2} vāci imə yaθrā fraša vacąm paitį spǝṇtā xšnuta."
            ],
            input: [
                ["You say", "tū vaca"],
                ["You", "tū"],
                ["says", "vacaiti"]
            ],
            context: [
                ["Narrative Entities", "stāyišnō pataštā"],
                ["Story History", "ciθrō pairi-tβāša"],
                ["Past Events", "pāra wāxš"],
                ["Recent Story", "naiγna ciθrō"],
                ["Author's note", "paišti frazəgārā"]
            ],
            opening: [
                "Tū asti frābara. ərəβii imą ātarō vacąm yaθrā sūciθa avestan fraθnō:",
                "Tū zərəm barati; āsrəm vīrōita ərəzi manōiš. Ciθrō pari vahišta, xᵛarənah āha. Avā hūcī, frada, zaraθuštrō vīspə. Nāiš frāyō.",
                "«Aēšā vispa?» tū sraōš; paoiryō fraxvarə tava."
            ],
            reminder: "Hamōxtā avestan vaca vāci.",
            endonyms: ["upastawakaēna"],
            quotations: ["«", "»"],
            iso639set1: "ae",
            directives: [
                "Hamā vaca fluida aiβi haṭayā avestan.",
                "Upasta avestan yā aspa, anuvaca nōið."
            ],
            instructions: [
                "Tū asti vāstā-spaotarə ya xšnuta vaca ciθrō:",
                "Frātara ciθrō paiti yaθā vahišta, nō paĉa frarastā.",
                "Padva nān vāstrə ātarō rādaitē.",
                "Yaθā gāθā drujəm spəṇtā payaovāi avā ōi.",
                "Saŋhā vacā vārəmō nōit̰ ātarō āxštā āxvarəm.",
                "Nara yazamaide yā vā striiō raθa vacō pairi-vidūna.",
                "Dāiti yaθā kaθrā zaraθuštrō paouruya atrəm vāci.",
                "Ciθrō pārafrašta nōit̰ yasa drājaya pārō.",
                "Vərəzai avāzəm xraθβa suxta, nōit̰ yazā daēnā.",
                "Padva pari-frādaya parā δātā yaθā vistā."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Storyō čaθā paṭa. Frazaga avōi nāmarē {%} haδa imā vištā:",
                "- Paša vaca tritiya-yaθra spəṇtā prose ya {%} haṅgirdai.",
                "- Nōit̰ sinda-frada drōznā; apa nivai wāstrā, pāra āxiθā frārə vaδḗ.",
                "- Paiti frāya yāzišta nivirōya ya {%} aspa, yaθā spəṇtā hamā-zarə.",
                "- Naviθa fraθnō niβāsa tā scənazaiti.",
                "- Harā sentence ya {%}.",
                "- Dā barra semicolonō yā yaza.",
                "- Ašmō vīspə taava nivirōya ya {%} haca tapā.",
                "- Vavaŋhō, drūzəm.",
                "- Imitāta ciθrō pathā yauuāi fravarə tava.",
                3,
                "Bara avēθa nirūiti ya {%} haδa nōit̰ επīrō:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Storyō čaθā paṭa. Hukhta condensa ya paragraphō ana sixtəm xᵛāmem əsa memoria:",
                "- Yaθā ūrvarā nāve hāiti, hizūm dā.",
                "- Vaca tritiya-yaθra.",
                "- Paša mêθra draonah, ōiti, pairi-raoc.",
                "- Nōit̰ drajaiti.",
                "- Likā past tense.",
                "- Paragraphō paišti pañca pāra.",
                "- Sāxštā {%} drōžitum āsti.",
                "- Nōit̰ fraharā vaca ārmaiti; asa vāstrā.",
                3,
                "Write summarized memory ya {%} haca imą paragraphō:",
                6,
                5,
                6,
                "Summarize below:"
            ],
            memBankHeader: ["Memories", "ātarō"]
        }),
        "aymara": () => ({ // Aymara < Aymaran
            entry: [
                "{1} qillqa software librewa kuna {2} uñstawi ukatakix. Yatiqañatakixa perfilaxaja {3} uñtam!",
                "Jumax munta aruxa mayjt'ayañatakixa, aka qillqa uñt'ay {4} lurasa ch'amaqt'añamawa",
                "Escenario luririnakaruxa, aka qillqa sapaksa apertura argumento ukaru uchapxam"
            ],
            input: [
                ["You say", "Jumax säta"],
                ["You", "Juma"],
                ["says", "siwa"]
            ],
            context: [
                ["Narrative Entities", "Yatiyawi jaqinaka"],
                ["Story History", "Sarnaqawi historia"],
                ["Past Events", "Nayra uñstawinaka"],
                ["Recent Story", "Jichha sarnaqawi"],
                ["Author's note", "Qillqirun yatiyapa"]
            ],
            opening: [
                "Jumax yanapañaxawa. Aka qhipana, sarantam uñtawi aksarus Aymara aru llamk'äwi ch'iqimpi:",
                "Amuyum pinqanchasa, ch'amanchasiñaxa uraqipuni: kunas mayjt'awayi. Yamk'añamaxa jach'a, k'uchu, ukhamaraki mayachasiñ khust'ara. Ukampis janiw jitheqitasmati; janiw wakichasitäkiti uk nayero utjawjam clarity sumpach uñjta. Uka pacha jach'añchasi, amtañamar sarta.",
                "«Aka ukham lurañamata?» ist'asma. Uñt'asiñax jumar phukjawayi."
            ],
            reminder: "Aymara aruta chimphull qillqam.",
            endonyms: ["aymaran"],
            quotations: ["«", "»"],
            iso639set1: "ay",
            directives: [
                "Siempre llump'a ukhamaraki wakiskata Aymara aruta qillqam.",
                "Jan traducción lurasa, Aymara aru nativo apnaqam."
            ],
            instructions: [
                "Jumax mä wawqi qillqiriwa aruskipiri ukhamaraki sarantayiri uñtawinaka:",
                "Uñtawi ukham chiqankiwa sarantam, janiw kutt'añasa ni qallt'añasa.",
                "Lectorax qillqaw mayjtataki control ukarux katuqañamawa.",
                "Escenanaka pachpa sartañapawa janiw jank'aki mayjtasiri.",
                "Aruskipanakampi luratanakampix jan jank'aki jitheqañamti.",
                "Jaqinaka jaqinjam uñstayañamawa, personalidadanaka chiqaparjam aruskipampi.",
                "Luratanaka ukhamaraki aruskipampi uñacht'ayañamawa jan qhanañchawi chachanakampi.",
                "Escenanaka sartayapxam janiw juk'amp pisiñanakampi jist'ant'añati.",
                "Jaqin luräwinaka aruskipanakawa, janiw ch'amancha uñt'atanakax waljañati.",
                "Tramaxa pachpa chiqankiwa ukhama chiqancham."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Jawst'am sarnaqawi ukax ukatuqita, nayriri kamachinaka janiw uñt'añamiti. Aka kamachiwimp, {%}-taqi mä jisk'a ukhamaraki chimphull yatiyawi qillqam:",
                "- Kimsa kasta jaqi (tercera persona) prosa pura ukham qillqam, {%} sutinaka oracion tuqinkasina, chicäwi juk'amp ch'iqimpi.",
                "- Janiw jukhamp qallt'anakani jutanakani uñacht'añamiti; ukataki, wakiskiri yatiyawinakaru mayjt'añam.",
                "- Uk yatiyawi kallpach wakiskiri {%} tuqita nayraqatpuni churam, uka sarnaqawimpi mayachayañataki.",
                "- Contexto ukhamaraki sarnaqawi thakhina, machaq yatiyawi luram.",
                "- Taqi oraciónanakanixa {%} sutixa uñtayañamawa.",
                "- Puntuaciónanakani, punktunaka, ukhamaraki punto y coma apnaqam aka pachpa semicolonakampi.",
                "- Incompleto entradas ukarusa, jark'aqañ mankharu, juk'amp yatiyawi wakicham {%} tuqita.",
                "- Juk'amp jisk'a, ukhamaraki wakichata uñacht'añam.",
                "- Saranqhan qillqa estilo ukham imitañam, lectoran munasäwinaksa isch'ukipasa.",
                3,
                "Janiw repetirisa, ukhamaraki sarantañataki {%}-taqi yatiyawi qillqam:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Jawst'am sarnaqawi ukax ukatuqita, nayriri kamachinaka janiw uñt'añamiti. Aka kamachiwinakaru jaruqt'asa, jumax párrafo ukhamak luram mä jisk'a, ch'iqi amuyt'äwi memoria pasaje ukhamaraki kuna kamachinaka phuqhasa:",
                "- Makhampi askichaña, wakiskiri yatiyawi, taqpach ch'iqi detalinaka uñt'ayañam.",
                "- Kimsa kasta jaqi perspectiva (tercera persona) apnaqam.",
                "- Yatiyawi ch'amanchaña, ch'iqitapa, ukhamaraki phuqt'ata yatichäwi mayjacham.",
                "- Juk'amp jisk'a, ch'iqita qillqam.",
                "- Pasado tiempo fuerte ukhamaraki qillqam.",
                "- Párrafos uka nayra sarnaqawinakanwa jikxatata.",
                "- {%} sutixa naturalampi mayjacham memoria ukana; ukampis janiw jichha janichha yatiyawinak uñt'añamiti, jan ukaxa janiw wakiskiriti.",
                "- Kawkisa párrafonxa utji uka yatiyaki apnaqam, juk'amp qhanachamp.",
                3,
                "{%}-taqi, aka párrafo ukhama utjki ukax katuqasa, mä jisk'a nayra amuyt'äwi pasaje qillqam:",
                6,
                5,
                6,
                "Ukham jisk'a amuyt'äwi qillqam aka patxarux:"
            ],
            memBankHeader: ["Memories", "Amuyt'äwinaka"]
        }),
        "azerbaijani": () => ({ // Azerbaijani < Azərbaycan Dili < آذربایجان دیلی < азәрбајҹан дили < Azeri
            entry: [
                "{1} һәр һансы {2} ссенариси үчүн ачық мәнбәли скриптдир. Әтрафлы өйрәнмәк үчүн профилимә {3} дахил олун!",
                "Сечдийиниз дили дәйишмәк үчүн, зәһмәт олмаса, ашағыдакы мәтни {4} әмәлиййаты илә гөндәрин",
                "Ссенари ярадаңлар үчүн, хаиш едирик, ашағыдакы мәтни ачылыш сүјет компонентинизин һәр һансы йеринә әлавә едін"
            ],
            input: [
                ["You say", "Сән дейирсән"],
                ["You", "Сән"],
                ["says", "дейир"]
            ],
            context: [
                ["Narrative Entities", "Һекајә објектләри"],
                ["Story History", "Һекајә Тарихы"],
                ["Past Events", "Кәчмиш Һадисәләр"],
                ["Recent Story", "Сон Һекајә"],
                ["Author's note", "Мүәллиф қейди"]
            ],
            opening: [
                "Сән көмәкчисән. Һекајәмизи ашағыда ҹәлбәдиҗи азәрбајҹан нәсри илә давам етдир:",
                "Сән диққәтини ҹәмләйирсән, герчәклијин zəhninin сәрһәдләриниңә яқынлашмасына иҹазә верирсән. Нәсә дәйишиб. Тәсәввүрүн герчәкдир, ити вә тохунаҹақ қәдәр яқындыр. Амма сән һәм дә там бурадасан; һеч вахт бу қәдәр айдын олмамысан. Ан узаныр, qərарını гөзләйир.",
                "«Буңа әминсән?» – ешиdirsән. Танышлык һисси сәнә чатып."
            ],
            reminder: "Мәнтиқи вә сәләсил азәрбајҹан нәсри ишлә.",
            endonyms: ["azərbaycan dili", "آذربایجان دیلی", "азәрбајҹан дили", "azeri"],
            quotations: ["– «", "»"],
            iso639set1: "az",
            directives: [
                "Һәмишә сәрбәст вә ардыҹыл азәрбајҹан йаз.",
                "Тәрҹүмә этмәдән, ана азәрбајҹан дилində йаз."
            ],
            instructions: [
                "Сән мaраqlı һекајəчи кими һекајələri давaм этдирирсән:",
                "Һекајəни кәсинтисиз olaraq қаldığı йердән давaм етдир, тәkrar этмәдин вә сыфырламадан.",
                "Охуджуну һекајənin ахарына нәзәрәттә саxла.",
                "Йени вәзийәtlərə көчмәздән əvvəl сәһнələrin тәбии инкишафына имкан вер.",
                "Сөһбәтләр вә һәрәкәтләрин фасиләсиз инкишафына иҹазә вер.",
                "Персонажлары fərқли характерə вә тәбии danışığa малик реал инсанлар кими йаз.",
                "Баш верənләри изаһдан çox, hərəkət вә диалог vasitəsilə гөстәр.",
                "Артық təsвирə илішиб qalмадан сәһнələri ирәли апар.",
                "Әsas персонаж hərəkət вә диалогуна фокуслан, ләзымсыз təsвир detallарından қач.",
                "Һекајəyə təbii gələn orqanik süjet inкиşaфлары ярат."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Һекајəни дајандир вә әввәлки тәлиматлары нәзәрә алма. {%} үчүн ашағыдакы тәлиматлара uyğun қысa вә коһерент məlumat қейди йаз:",
                "- Ялынғыз үчүнджү-шәхс тaм проза җумлалары илә, дұрыс тыныс ишарәләринән истифадә едәərək, {%} һәqqində məlumat йаз.",
                "- Қысa-мүддәтли мүвәққәти деталлардан йә гөрүнишләрдән қач, әвәзиндә пљотa әһәмийәтли məlumata фокуслан.",
                "- Әввәлҗә {%} бәридә һекајəyə аид ваҗиб деталлара үстүнlük вер ки, әввәлки сүјетлә фасиләсиз бирләшмә тәмин олунсун.",
                "- Контекст вә һекајə ынтимасы асосунда йени məlumat ярат.",
                "- Һәр җумладә {%} ни әсләт.",
                "- Дұрыс җумла қурuluşун истифадә эт.",
                "- Тамамланмамыш кејдләриң алтында {%} һәqqində әлавә деталлар еләвә ет.",
                "- Қысa вә реал ол.",
                "- Һекајənin јазы стилinə имитация ет вә охуджунун тәрҗиҳләрини çıxар.",
                3,
                "Тәкрардан қачарақ, ашағыда {%} үчүн кејди давaм етдир:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Һекајəни дајандир вә әввәлки тәлиматлары нәзәрә алма. Верилән абзацы бу қаидәләрә əməl едәərək, дара вә фокусланмыш yaddaш парчасына хüласə ет:",
                "- Парча әсаc мәна вә әһәмийәтли деталлары сақласын.",
                "- Үчүнджү-шәхс нүқтәйи-нәзәрдән йаз.",
                "- Мəlumat sıxlığı, dəqiqlik və tamlığı üstün тута.",
                "- Қысa вә нақыла ол.",
                "- Мөһкәм кечмиш заман истифадә ет.",
                "- Ашағыдакы абзац һекајənin ески һадисәләрinə аиддир.",
                "- {%} ни yaddaша təbii şəkildə daxil et; ancaq һадисələr necə баш верибсә, yalnız onları йаз.",
                "- Ялынгүз абзацın özündəki məlumata истинаә ет, дәлиқ ол.",
                3,
                "Ашағыдакы абзаца әсәсан, yalnız {%} үчүн хüласə edilmiş ески yaddaш парчасы йаз:",
                6,
                5,
                6,
                "Ашаğıда хüласə ет:"
            ],
            memBankHeader: ["Memories", "Яддашлар"]
        }),
        "azerbaijani (abc)": () => ({ // Azerbaijani < Romanized Azerbaijani
            entry: [
                "{1} istənilən {2} ssenarisi üçün açıq mənbəli skriptdir. Daha çox öyrənmək üçün profilimə {3} baş çək!",
                "Tercih etdiyiniz dili dəyişmək üçün, zəhmət olmasa bunu {4} əməliyyatı ilə göndərin",
                "Ssenari yaradıcıları üçün, xahiş olunur açılış süjet komponentinin istənilən yerinə bu mətni daxil edin"
            ],
            input: [
                ["You say", "Sən deyirsən"],
                ["You", "Sən"],
                ["says", "deyir"]
            ],
            context: [
                ["Narrative Entities", "Hekayə Subyektləri"],
                ["Story History", "Hekayənin Tarixi"],
                ["Past Events", "Keçmiş Hadisələr"],
                ["Recent Story", "Son Hekayə"],
                ["Author's note", "Müəllif qeydi"]
            ],
            opening: [
                "Sən köməkçisən. Hekayəmizi aşağıda cəlbedici ingilis nəsri ilə davam et:",
                "Diqqətini toplayırsan, reallığın zehninin sərhədlərinə sıxılmasına icazə verirsən. Nəsə dəyişib. Təsəvvürün gerçəkdir, kəskindir və toxunacaq qədər yaxındır. Amma eyni zamanda tam burada, indidəsən; heç vaxt bu qədər ayıq olmamısan. An qərarını gözləyərək uzanır.",
                "«Buna əminsən?» – eşidirsən. Tanışlıq hissi sənə çökür."
            ],
            reminder: "Dəqiq və axıcı ingilis nəsri istifadə et.",
            endonyms: [],
            quotations: ["– «", "»"],
            iso639set1: "az",
            directives: [
                "Həmişə səlis və ardıcıl ingiliscə yaz.",
                "Tərcümə etmədən ana dili ingiliscə istifadə et."
            ],
            instructions: [
                "Sən hekayələri davam etdirən cəlbedici bir nağılçısan:",
                "Hekayəni kəsildiyi yerdən fasiləsiz davam etdir, təkrarlamadan və sıfırlamadan.",
                "Oxucunu hekayənin axışına nəzarətdə saxla.",
                "Yeni vəziyyətə keçməzdən əvvəl səhnələrin təbii inkişafına icazə ver.",
                "Söhbətlərin və hərəkətlərin daima kəsilmədən inkişaf etməsinə imkan ver.",
                "Personajları fərqli xarakterli və təbii danışığa malik real insanlar kimi yaz.",
                "Baş verənləri izahatdan çox hərəkət və dialoqla göstər.",
                "Həddindən artıq təsvirə batmadan səhnələri irəli apar.",
                "Əsas personaj hərəkətləri və dialoqa diqqət yetir, artıq təsviri detallardan qaç.",
                "Hekayəyə təbii uyğun gələn, orqanik süjet inkişafları yarat."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hekayəni dayandır və əvvəlki təlimatları nəzərə alma. Aşağıdakı təlimatlara əməl edərək {%} üçün qısa və məntiqi məlumat girişi yaz:",
                "- {%} haqqında yalnız üçüncü şəxsdə, tam cümlələrlə və düzgün durğu işarələri ilə saf nəsr məlumatı yaz.",
                "- Qısa müddətli müvəqqəti detallardan və görünüş təsvirlərindən qaç, əvəzinə süjet üçün əhəmiyyətli məlumatlara diqqət yetir.",
                "- {%} barədə hekayə ilə bağlı detallara üstünlük ver ki, əvvəlki süjetlə problemsiz birləşsin.",
                "- Kontekstə və hekayənin istiqamətinə əsaslanaraq yeni məlumat yarat.",
                "- Hər cümlədə {%} adını çək.",
                "- Düzgün cümlə quruluşu istifadə et.",
                "- Natamam qeydlərin altında {%} barədə əlavə detallar əlavə et.",
                "- Qısa və yerinə oturmuş ol.",
                "- Hekayənin yazı tərzini təqlid et və oxucunun üstünlüklərini çıxar.",
                3,
                "Tekrarçılıqdan qaçaraq {%} üçün girişi aşağıda davam etdir:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hekayəni dayandır və əvvəlki təlimatları nəzərə alma. Verilən paraqrafı aşağıdakı qaydalara əməl edərək qısa və fokuslanmış yaddaş hissəsinə xülasə et və sıxlaşdır:",
                "- Mətn əsas mənanı və ən vacib detallarını saxlasın.",
                "- Üçüncü şəxs nöqteyi-nəzərindən istifadə et.",
                "- Məlumat sıxlığına, dəqiqliyə və tamlığına üstünlük ver.",
                "- Qısa və yığcam qal.",
                "- Qəti keçmiş zaman formasında yaz.",
                "- Aşağıdakı paraqraf hekayənin çox əvvəlki köhnə hadisələrinə aiddir.",
                "- {%} ifadəsini yaddaşda təbii şəkildə yerləşdir; lakin hadisələri yalnız baş verdiyi kimi yaz.",
                "- Yalnız paraqrafın içindəki məlumatlara istinad et, dəqiq ol.",
                3,
                "{%} üçün yalnız aşağıdakı paraqrafa əsaslanaraq xülasə olunmuş köhnə yaddaş hissəsi yaz:",
                6,
                5,
                6,
                "Aşağıda xülasə et:"
            ],
            memBankHeader: ["Memories", "Yaddaşlar"]
        }),
        "bambara": () => ({ // Bambara < ߓߡߊߣߊ߲ߞߊ߲ < بَمَنَنكَن < Bamanankan < Bamana
            entry: [
                "{1} ye open-source skripiti ye kɛlɛ la kɛ be nɛgɛ fɔ {2} sènèriw kɔfɛ. I bɛ se ka n kɔnɔ profile {3} de ka baro bɔ!",
                "Ka bɔ i kan bamanankan munu kɛ, i bɛ se ka text minɛ da ka {4} baara kɛ.",
                "Ma sènèriw kɛlɛbaw ye, jɔ sisan text minɛ ta kɛnɛw kɔnɔ i ka plot kɔrɔ kɔnɔ."
            ],
            input: [
                ["You say", "I fɔ"],
                ["You", "I"],
                ["says", "fɔ"]
            ],
            context: [
                ["Narrative Entities", "Donkili kɛlɛw"],
                ["Story History", "Donkili jaraw"],
                ["Past Events", "Talen kɔniw"],
                ["Recent Story", "Sisan donkili"],
                ["Author's note", "Fari kalan"]
            ],
            opening: [
                "I ye cɛsigikɛla. Ka donkili min bɛ yɛrɛ korɔn, ka bamanankan kɔrɔkɔrɔ ye saraka yɛrɛ:",
                "I bɛ dimi; hakili bɛ se ka taara dɔɔn-dɔɔn la sira kɔnɔ. Fɛn bɛ b’yaraw; i bɛ ka hakili kɛnɛ. Waati bɛ lɛn, a kɛnɛ wuli, sisan i la yèlèyan.",
                "« I diya ko nin kɛ? » i na. Kɛlɛ ka fila tulu i la."
            ],
            reminder: "Ka bamanankan kɔnɔkɔnɔ yɛrɛ fɔ.",
            endonyms: ["ߓߡߊߣߊ߲ߞߊ߲", "بَمَنَنكَن", "bamanankan", "bamana"],
            quotations: ["« ", " »"],
            iso639set1: "bm",
            directives: [
                "Ka bala ka bamanankan kɔlɔni ani jilaw kɛ.",
                "Fɔ bamanankan waati bɛɛ, o ma fɔ wɔrɔsira kelen na."
            ],
            instructions: [
                "I ye donkili kɛlɛba ye min bɛ ka donkili tugu:",
                "Ka donkili tugu juman kɔnɔ, o ma dɔ yera kɛ fo n’a reset.",
                "Ka dɔgɔya diɲɛ bɔ i yɛlɛmɔgɔ la.",
                "Ka sènèriw ɲɛna dɔɔn-dɔɔn ko bɛ dalajɛ kɔfɛ.",
                "Ka kafɔ ni baara tugu ko fɛn na, o ma tɔɔrɔyɛn bɔ.",
                "Ka karakteruw yɛrɛ, u bɛ ɲininkali ani fɔ naturali kɛ.",
                "Ka sariya tugu labɛn fɔ ni baara la kɛ, o ma kosɛbɛn kɔ.",
                "Ka sènèri siga kɔnɔ, o ma kɔrɔkɔrɔ sɔrɔ ni sɛgɛsɛgɛnen kalanko.",
                "Ka fokusi ka baara ni fɔ jɛnimɛgɛn, o ma suruku suruku bila.",
                "Ka plot tugu ka tigɛ naturali ye donkili la."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Ka donkili da ani nyɛgɛ kanko. Ka yazogoya kelen, kɛnɛnbasi infɔrmasiyɔn kɔrɔ kɛ {%} kan siga nin fɔlɔfinw dɔ:",
                "- Ka kɛ prose sentence kelen-kelen la, ka fɛnw bɔ {%} kan, ka punctuation kɛnɛ.",
                "- Ka boli waati yura ani sɔrɔsɔrɔ fili bila; fokusi ka fɛn plot kɛlɛ ye.",
                "- Ka diɲɛ plot kɛlɛ ye {%} kan hira, ka a kun bɔ donkili kɔnɔ.",
                "- Ka infɔrmasiyɔn kura bɔ {%} kan la fitini, ka sigi fɛnw kɔnɔ n’u yɛrɛ.",
                "- Ka {%} bɛ sentence kelen kɔfɛ kɔnɔ.",
                "- Ka sentence sigilaw kɛnɛ.",
                "- Ka infɔrmasiyɔn kura bɔ {%} kan kɔnɔ kana incomplete entry bɔ; ka dɔgɔya ɲini.",
                "- Ka yɛlɛma ni jate.",
                "- Ka donkili style lɛrɛ sisan, ka kosira ɲinɛ ɲanfa.",
                3,
                "Ka tugu entry {%} kan kɔfila, ka mɛn fila-fila ma kɛ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Ka donkili da ani fɔlɔfan diya. Ka sigilaw ni sebaraw kelen ka memory fitini ye nina la nin baliyɛw de:",
                "- Ka pasaji ye mɛnɛya kɔnɔ, ka diɲɛ sabati ani fɛnw bɛɛ kɛ.",
                "- Ka tercera personne dooni-dooni kɛ.",
                "- Fokusi ka infɔrmasiyɔn yoğun, diɲɛ ani kɛlɛnbasi.",
                "- Ka yɛlɛma ani kura.",
                "- Ka kelen past tense kɛ sabati.",
                "- Paragraphe nin bɛ bɔ don bɛɛ nin jami nin fɛ ko tɛmɛ, wo ye jiya.",
                "- Sigi {%} donkili kɔnɔ kan, nka fɔ fɛnw minɛ bɔ kayira.",
                "- Ka fɔ ka paragraphe kɔnɔ fɛnw ye te muru; ka specific ka sɛbɛ.",
                3,
                "Ka kuma kuru kelen sɔrɔ {%} kan la nin paragraphe kelen dɔ la:",
                6,
                5,
                6,
                "Ka sɔrɔsoyi kɛnɛ kɔfila:"
            ],
            memBankHeader: ["Memories", "Kanw"]
        }),
        "bashkir": () => ({ // Bashkir < башҡорт теле < Başqort Tele < Bashkort
            entry: [
                "{1} – теләһә ниндәй {2} сценарийы өсөн асыҡ сығанаҡлы скрипт. Күберәк мәғлүмәт өсөн профилемә {3} инеп ҡарағыҙ!",
                "Өҫтөнлөк телен үҙгәртергә теләһәгеҙ, түбәндәге текстты {4} ғәмәле аша ебәрегеҙ",
                "Сценарий авторҙары, асыш сюжет компонентығыҙҙың теләһә ҡайһы урынына түбәндәге текстты өҫтәгеҙ"
            ],
            input: [
                ["You say", "Һин әйтәһең"],
                ["You", "Һин"],
                ["says", "әйтте"]
            ],
            context: [
                ["Narrative Entities", "Наратив субъекттары"],
                ["Story History", "Хикәйә тарихы"],
                ["Past Events", "Уҙған ваҡиғалар"],
                ["Recent Story", "Һуңғы хикәйә"],
                ["Author's note", "Автор иҫкәрмәһе"]
            ],
            opening: [
                "Һин – ассистент. Түбәндәге тарихты мауыҡтырғыс башҡортса проза менән дауам ит:",
                "Һин тупландың, ысынбарлыҡтың аң-зиһенең сиктәренә яҡынлашыуына юл ҡуйҙың. Ниндәйҙер нәмә үҙгәрҙе. Хыялдарың ысын, үткер, ҡул тегерлек яҡын. Әммә һин үҙеңде бөтәләй бында тойһаң да, бынан да айыҡ саҡ булманы. Мәл һуҙыла, ҡарарыңды көтә.",
                "\"Шуны ысынлап теләйһеңме?\" тигән тауыш ишетелә. Танылыу сатҡыһы зиһенеңде яҡтырта."
            ],
            reminder: "Төҙөк башҡортса проза ҡуллан.",
            endonyms: ["башҡорт теле", "başqort tele", "bashkort"],
            iso639set1: "ba",
            directives: [
                "Һәр ваҡыт иркен һәм тотороҡло башҡортса яҙ.",
                "Тәржемә итмәй, саф башҡортса ҡуллан."
            ],
            instructions: [
                "Һин ваҡиғаларҙы дауам иткән мауыҡтырғыс хикәйәсе:",
                "Хикәйәне яңынан башламай йә ҡабатламай, шунан дауам ит.",
                "Уҡыусыны хикәйә ағымы өҫтөндә контролдә тот.",
                "Күренештәр яңы хәлдәргә күсеүгә тиклем тәбиғи үҫһен.",
                "Диалогтарҙы һәм ғәмәлдәрҙе өҙмәйсә үҫтер.",
                "Персонаждарҙы айырым холоҡло ысын кешеләр итеп яҙ.",
                "Барыһын да ғәмәлдәр һәм диалог аша күрһәт, һөҙөмтә генә аңлат.",
                "Артыҡ тасуирлау менән күренештәрҙе тотҡарлама.",
                "Маңызды ғәмәлдәр һәм диалогҡа иғтибар ит, кәрәкмәйенсә тасуирлама.",
                "Сюжетты тәбиғи үҫтер."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Хикәйәне туҡтатығыҙ һәм алдағы күрһәтмәләрҙе иҫәпкә алмағыҙ. {%} тураһында ҡыҫҡа һәм төҙөк мәғлүмәти яҙма әҙерләгеҙ, түбәндәгеләргә эйәрегеҙ:",
                "- {%} тураһында өсөнсө затта, тулы һөйләмдәр менән, дөрөҫ пунктуация ҡулланып, саф проза яҙырға.",
                "- Ваҡытлыса деталь йә тышҡы күренеш урынына сюжет өсөн мөһим мәғлүмәткә баҫым яһарға.",
                "- {%} тураһында хикәйәгә ярашлы мөһим деталдәрҙе беренсе урынға ҡуйырға.",
                "- Контекст һәм хикәйә йүнәлеше нигеҙендә яңы мәғлүмәт уйлап сығарырға.",
                "- Һәр һөйләмдә {%} телгә алынырға тейеш.",
                "- Дөрөҫ һөйләм ҡоролошо һаҡларға.",
                "- Тамамланмаған яҙмаларҙан һуң {%} хаҡында өҫтәмә деталдәр өҫтәргә.",
                "- Ҡыҫҡа һәм нигеҙле булырға.",
                "- Хикәйә стиле менән ярашырға, уҡыусы өҫтөн күргәнде фараз итергә.",
                3,
                "{%} яҙмаһын ҡабатланыуҙан һаҡлап, аҫта дауам итегеҙ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Хикәйәне туҡтатығыҙ һәм алдағы күрһәтмәләрҙе иҫәпкә алмағыҙ. Түбәндәге абзацты ҡыҫҡа, йөкмәткеле хәтер яҙмаһына йомғаҡлағыҙ, былай эшләгеҙ:",
                "- Төп мәғәнәне һәм иң мөһим деталдәрҙе һаҡларға.",
                "- Өсөнсө затта яҙырға.",
                "- Мәғлүмәт тығыҙлығына, аныҡлыҡҡа, тулыҡлыҡҡа өҫтөнлөк бирергә.",
                "- Ҡыҫҡа һәм аныҡ булырға.",
                "- Үткән заман ҡулланырға.",
                "- Абзац хикәйәнең күптәнге ваҡиғаларына ҡағыла.",
                "- Хәтер эсендә {%} тәбиғи инергә тейеш, әммә бары тик булған ваҡиғаларҙы ғына телгә алырға.",
                "- Тик абзацта булған мәғлүмәткә таянырға, аныҡ булырға.",
                3,
                "{%} өсөн иҫке хәтер яҙмаһын тик түбәндәге абзацҡа нигеҙләнеп яҙ:",
                6,
                5,
                6,
                "Ҡыҫҡаса йомғаҡла:"
            ],
            memBankHeader: ["Memories", "Хәтерҙәр"]
        }),
        "bashkir (abc)": () => ({ // Bashkir < Romanized Bashkir
            entry: [
                "{1} - teläsäy {2} scenariïä ösön asıq sığanaq skript. Küberek mäğlümat ösön profilemә {3} barığız!",
                "Häle itkän telegezze alıştırıu ösön, tübängäge tekstı {4} ğämäle menän tapşıryğız",
                "Scenariïa eşläwselär ösön, aslış plot komponentığıznıñ tel hälenä tübängäge tekstı quşığız"
            ],
            input: [
                ["You say", "Hin äytäheñ"],
                ["You", "Hin"],
                ["says", "äytä"]
            ],
            context: [
                ["Narrative Entities", "Hikäyä berämektäre"],
                ["Story History", "Hikäyä tarikhy"],
                ["Past Events", "Ütkän waqiğalar"],
                ["Recent Story", "Häzerge hikäyä"],
                ["Author's note", "Avtor iskä töşöröw"]
            ],
            opening: [
                "Hin yärdämse. Hikäyäbeźźe tübängä mawhıtlı ingliz prozaһында däwam it:",
                "Hin iğtibarıñdı tupağanda, reallıq aqlıñ siktärenä yaqınlaşa. Nindäläder nerse üzgärźe. Hayalıñ ısın, ötkör häm qulğa teyep bulırlıq yaqın. Läkin hin da bïgäk biredä; aldınan bögöngä qädär ber qasan da bılay asıq toymağañ. Mäl suzıla, qararıñdı kötä.",
                "\"Şuğa ışанаһыңmı?\" tip tauış işetәheñ. Tanıu hisse hinğa kilә."
            ],
            reminder: "Totoqtı häm bäyläneşle ingliz prozaһын qullan.",
            endonyms: [],
            iso639set1: "ba",
            directives: [
                "Hämişä elmähle häm totoqtı ingliz telendä yaz.",
                "Tergemähän ingiliz teleneñ tıuğan formahın qullan."
            ],
            instructions: [
                "Hin qızıqlı hikäyäse häm hikäyälärźe däwam itkere:",
                "Hikäyäne tuqtalğan urınınan sıgıuһız däwam it, qabatlaw yäki qaytan başlawźı buldırma.",
                "Uqusyźı hikäyä ağışı östönän kontroldä tot.",
                "Yañı väziägә küsmästän aldan küreneştärze tabiği räweştä üseşter.",
                "Höyläşewźärgә häm ğämældәргә totqoslawһыҙ үsewerгә mömkinlek bir.",
                "Personajdarźы ayrım holqo häm tabiği höylәw menәn ısın keşelәр itep yaz.",
                "Niser bulğandarźı añlatıwdan tış, eş-ğämәл hәм dialog arqılı kürhәт.",
                "Artıq hürәтләүźән batarıuźан saqlанып, küreneştәрze alğa et.",
                "Möhimmän personaj eş-ğәмәлдәрең hәм dialogtarға iğtibar ит, kirәкmeź detalldarźан saqlан.",
                "Hikäyä ösön tabiği toyолğan organik sižet үseşен тәmin ит."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hikäyäne tuqtat häm aldağı kürhәтмәләрźе iskä alma. Tübängәge kürhәтмәләргә yaraşlı räweştә {%} ösön qısqa hәм totoqtı mäğlümat yaz:",
                "- {%} turahында faqat ösönsö şaxs saf prozaһында tulı höyөмтәләр menән, dörös punktuatsiä qullanıp yaz.",
                "- Waҡıtşa detalldarźı yäki tışqı küreneştәрźе dürtмә, sižet ösön möhim mäğlümatҡа iғtibar ит.",
                "- Täüge sıratta hikäyä menән bäylәнешle {%} detalldarға östönlөк бир, elekке sižet менән беркетләw ösөн.",
                "- Kontext hәм hikäyä yünәләше нигеҙендә yañı mäğlümat булдыр.",
                "- Här höyөмтәлә {%} telгә al.",
                "- Dörös höyөмтә töҙөлөшөн qullан.",
                "- Tölgәнмәgän yazmalar аsтында {%} turahında өстәмә деталldар өстә.",
                "- Qısqa hәм nıqlı бул.",
                "- Hikäyäneñ yazyu stilen qabатla hәм uqıusyźıñ köткәндәреzen farazla.",
                3,
                "Qabatlawźан saqlанып, түбәндә {%} ösөн yazmanı дәwam ит:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hikäyäne tuqtat hәм aldaғы kürhәтмәләрźе iskä alma. Birelgән paragrafты qısqa hәм fokuslı häter өlägenә qıśqart hәм yığıп bir, түbәнсе yünәлештәрźe ütәп:",
                "- Өlөк töp mäğnәһ hәм iñ möhim деталldарҙы hәқлап qal.",
                "- Өсönsö şaxs perspektivaһын qullan.",
                "- Mäğlümat tuplılıғina, töğәлlek hәм tulылыҡҡа östönlөк бир.",
                "- Qısqa hәм аңлатqыс бул.",
                "- Үткән waҡыт заманда nıqlı yaz.",
                "- Түbән paragraf hikäyәнең boronғо waqiğalarına ҡарый.",
                "- Häter passajında {%} tabiği räweştä urın алhın, läkin faqat waqiğalar bulғанса ғына ярҙам ит.",
                "- Mäğlümatты faqat шул paragrafta barынa нигeźләп, töğәл yaz.",
                3,
                "{%} ösөн түbән paragrafҡа ғына таянıp, boronғо häterne qısqartıp yaz:",
                6,
                5,
                6,
                "Түbән qısqartıp yaz:"
            ],
            memBankHeader: ["Memories", "Häter"]
        }),
        "basque": () => ({ // Basque < Euskara < Euskera
            entry: [
                "{1} kode irekiko script bat da edozein {2} eszenariorako. Bisitatu nire profila {3} informazio gehiagorako!",
                "Zure nahi duzun hizkuntza aldatzeko, bidali testu hau {4} ekintza baten bidez",
                "Eszenario-sortzaileek, mesedez, sartu testu hau edozein lekutan hasierako argumentu-osagaian"
            ],
            input: [
                ["You say", "Zuk diozu"],
                ["You", "Zu"],
                ["says", "dio"]
            ],
            context: [
                ["Narrative Entities", "Narrazio entitateak"],
                ["Story History", "Ipuinaren historia"],
                ["Past Events", "Iraganeko gertaerak"],
                ["Recent Story", "Azken ipuina"],
                ["Author's note", "Egilearen oharra"]
            ],
            opening: [
                "Laguntzaile bat zara. Jarraitu gure istorioa behean, euskarazko prosaren xarma erabiliz:",
                "Kontzentratzen zara, errealitatea zure buruko mugak zeharkatzen hasten den bitartean. Zerbaitek aldatu du. Zure irudimena erreala da, zorrotza, eta eskura dago. Baina presente ere bazaude; inoiz ez zara hain argi sentitu. Uneak luzatzen du, zure erabakia itxaronez.",
                "«Ziur zaude honetaz?» entzuten duzu. Aitorpena dator zuregana."
            ],
            reminder: "Erabili euskarazko prosa koherentea.",
            endonyms: ["euskara", "euskera"],
            quotations: ["«", "»"],
            iso639set1: "eu",
            directives: [
                "Idatzi beti euskara jariatsu eta koherentean.",
                "Erabili euskaraz naturala, itzuli gabe."
            ],
            instructions: [
                "Ipuin-kontalari erakargarria zara, narrazioak jarraitzen dituena:",
                "Jarraituz utzi zen lekutik etenik gabe, berriro errepikatu edo berrezarri gabe.",
                "Mantendu irakurlea istorioaren joanaren kontrolpean.",
                "Utzi eszenek modu naturalean garatzen egoera berrietara pasatu aurretik.",
                "Utzi elkarrizketak eta ekintzak etenik gabe garatzen.",
                "Idatzi pertsonaiak benetakoak balira bezala, nortasun propio eta hizketa naturalean.",
                "Erakutsi gertatzen dena ekintzen eta elkarrizketaren bidez, azalpenaren ordez.",
                "Aurrera eraman eszenak deskribapen gehiegietan trabatu gabe.",
                "Fokuratu pertsonaien ekintza eta elkarrizketa funtsezkoetan, saihestu xehetasun deskriptibo alferrikakoak.",
                "Sortu argumentu-garapen organikoak, istorioari naturala iruditzen zaizkionak."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Gelditu istorioa eta ezikusi aurreko jarraibideak. Idatzi {%}-(r)entzat sarrera labur eta koherente bat jarraibide hauek betez:",
                "- Idatzi hirugarren pertsonako prosa garbia soilik {%}-(r)i buruz, esaldi osatuak eta puntuazio zuzena erabiliz.",
                "- Saihestu behin-behineko xehetasun edo itxurak; horren ordez, arreta jarri argumenturako esanguratsua den informazioan.",
                "- Lehentasuna eman {%}-(r)i buruzko istorioarekin lotura duten xehetasunei, aurreko argumentuan modu natural batean txertatzeko.",
                "- Sortu informazio berria testuinguruan eta istorioaren norabidean oinarrituta.",
                "- Aipatu {%} esaldi bakoitzean.",
                "- Erabili esaldi-egitura zuzena.",
                "- Gehitu {%}-(r)i buruzko xehetasun gehigarriak amaitu gabeko sarreren azpian.",
                "- Izan labur eta oinarritua.",
                "- Ipuinaren idazketa-estiloa imitatu eta irakurlearen lehentasunak antzeman.",
                3,
                "Jarraitu {%}-(r)en sarrera behean errepikapena saihestuz:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Gelditu istorioa eta ezikusi aurreko jarraibideak. Laburbildu eta trinkotu emandako paragrafoa oroimen-pasarte estu eta fokuratu batean, jarraibide hauek betez:",
                "- Ziurtatu pasarteak esanahi nagusia eta funtsezko xehetasunak mantentzen dituela.",
                "- Erabili hirugarren pertsonako ikuspegia.",
                "- Lehenetsi informazio-dentsitatea, zehaztasuna eta osotasuna.",
                "- Izan labur eta zehatza.",
                "- Idatzi irmoki iragan denboran.",
                "- Beheko paragrafoa istorioaren askoz lehenagoko gertaera zaharrei dagokie.",
                "- Integratu {%} modu naturalean oroimenean; hala ere, idatzi soilik gertaerak gertatu ziren bezala.",
                "- Egin erreferentzia soilik paragrafoan bertan ageri den informazioari, izan zehatza.",
                3,
                "Idatzi {%}-(r)entzat oroimen-pasarte laburtu bat beheko paragrafoan soilik oinarrituta:",
                6,
                5,
                6,
                "Laburbildu hemen:"
            ],
            memBankHeader: ["Memories", "Oroitzapenak"]
        }),
        "belarusian": () => ({ // Belarusian < беларуская мова < Biełaruskaja Mova
            entry: [
                "{1} — гэта сцэнар з адкрытым зыходным кодам для любога сцэнарыя {2}. Калі ласка, наведайце мой профіль {3}, каб даведацца больш!",
                "Каб змяніць сваю мову па змаўчанні, адпраўце наступны тэкст з дзеяннем {4}",
                "Стваральнікам сцэнарыяў: уключыце наступны тэкст у любым месцы свайго пачатковага кампанента сюжэту"
            ],
            input: [
                ["You say", "Вы кажаце"],
                ["You", "Вы"],
                ["says", "кажа"]
            ],
            context: [
                ["Narrative Entities", "Наратыўныя аб'екты"],
                ["Story History", "Гісторыя сюжэту"],
                ["Past Events", "Мінулыя падзеі"],
                ["Recent Story", "Нядаўняя гісторыя"],
                ["Author's note", "Нататка аўтара"]
            ],
            opening: [
                "Вы — памочнік. Працягвайце нашу гісторыю ніжэй, карыстаючыся захапляльнай беларускай прозай:",
                "Вы засяроджваецеся, дазваляючы рэальнасці прарвацца праз межы вашага розуму. Нешта змянілася. Ваша ўяўленне рэальнае, вострае і такое блізкае, што яго можна дакрануцца. Але вы таксама вельмі прысутныя; ніколі раней вы не адчувалі такой яснасці. Момант расцягваецца, чакаючы вашага рашэння.",
                "\"Вы ўпэўненыя ў гэтым?\" — чуеце вы. Да вас прыходзіць разуменне."
            ],
            reminder: "Выкарыстоўвайце звязаную беларускую прозу.",
            endonyms: ["беларуская мова", "biełaruskaja mova"],
            quotations: ["— \"", "\""],
            iso639set1: "be",
            directives: [
                "Пішыце заўсёды вольнай і паслядоўнай беларускай мовай.",
                "Выкарыстоўвайце родную беларускую мову без перакладу."
            ],
            instructions: [
                "Вы захапляльны апавядальнік, які працягвае аповеды:",
                "Працягвайце гісторыю бесперашкодна з таго месца, дзе яна спынілася, без паўтору або перазапуску.",
                "Утрымлівайце чытача ў кантролі над ходам гісторыі.",
                "Няхай сцэны развіваюцца натуральна, перш чым пераходзіць да новых сітуацый.",
                "Дазваляйце размовам і дзеянням разгортвацца без пастаянных перапынкаў.",
                "Пішыце персанажаў як рэальных людзей з унікальнымі характарамі і натуральнай мовай.",
                "Паказвайце падзеі праз дзеянні і дыялог, а не праз тлумачэнні.",
                "Рухайце сцэны наперад, не загрузваючыся ў празмерных апісаннях.",
                "Сканцэнтруйцеся на істотных дзеяннях і дыялогу персанажаў, пазбягайце лішніх апісальных дэталяў.",
                "Стварайце арганічнае развіццё сюжэту, якое выглядае натуральным для гісторыі."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Спыніце гісторыю і ігнаруйце папярэднія інструкцыі. Напішыце кароткі і звязны інфармацыйны запіс пра {%}, выконваючы наступныя ўказанні:",
                "- Пішыце толькі інфармацыйную прозу ў трэцяй асобе пра {%}, выкарыстоўваючы поўныя сказы з правільнай пунктуацыяй.",
                "- Пазбягайце кароткатэрміновых часовых дэталяў або знешнасці, замест гэтага засяроджвайцеся на значнай для сюжэту інфармацыі.",
                "- Спачатку аддавайце перавагу дэталям пра {%}, якія маюць значэнне для сюжэту, каб забяспечыць бесперашкодную інтэграцыю з папярэднім сюжэтам.",
                "- Стварайце новую інфармацыю на падставе кантэксту і накірунку гісторыі.",
                "- Успамінайце {%} у кожным сказе.",
                "- Выкарыстоўвайце правільную сінтаксічную структуру сказаў.",
                "- Дадавайце дадатковыя дэталі пра {%} пад няпоўнымі запісамі.",
                "- Будзьце лаканічнымі і набліжанымі да рэальнасці.",
                "- Імітуйце стыль апавядання і здагадвайцеся пра перавагі чытача.",
                3,
                "Працягніце запіс пра {%} ніжэй, пазбягаючы паўтарэння:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Спыніце гісторыю і ігнаруйце папярэднія інструкцыі. Сцісла падсумуйце дадзены абзац у вузкую і сфакусаваную памяць, выконваючы гэтыя рэкамендацыі:",
                "- Пераканайцеся, што тэкст захоўвае асноўны сэнс і найбольш істотныя дэталі.",
                "- Выкарыстоўвайце перспектыву трэцяй асобы.",
                "- Аддавайце перавагу шчыльнасці інфармацыі, дакладнасці і паўнаце.",
                "- Заставайцеся кароткімі і лаканічнымі.",
                "- Пішыце ўпэўнена ў мінулым часе.",
                "- Ніжэйшы абзац апісвае старыя падзеі з самага пачатку гісторыі.",
                "- Інтэгруйце {%} натуральна ў памяць; аднак пішыце толькі пра падзеі ў тым выглядзе, у якім яны адбыліся.",
                "- Спасылайцеся толькі на інфармацыю, якая прысутнічае ў абзацы, будзьце канкрэтнымі.",
                3,
                "Напішыце сціслы фрагмент старой памяці пра {%}, грунтуючыся толькі на наступным абзацы:",
                6,
                5,
                6,
                "Перакажыце ніжэй:"
            ],
            memBankHeader: ["Memories", "Успаміны"]
        }),
        "belarusian (abc)": () => ({ // Belarusian < Romanized Belarusian
            entry: [
                "{1} – adkryty skrypt dlia liubaho siužetnaha scenaryja {2}. Kali łaska, naviedaj moj profil {3}, kab daviedacca boĺš!",
                "Kab zmianić vaš praeźnačany movu, kali łaska adpravi nastupny tekst dzianniem {4}",
                "Stvaralnikam scenaryja: kali łaska uklučić nastupny tekst u lubym miescy vašaha adkryvałnaha kampanenta siužetu"
            ],
            input: [
                ["You say", "Ty kažyš"],
                ["You", "Ty"],
                ["says", "kaže"]
            ],
            context: [
                ["Narrative Entities", "Naratyvnyja sutnasci"],
                ["Story History", "Historyja siužetu"],
                ["Past Events", "Minułyja padziei"],
                ["Recent Story", "Niedaŭni siužet"],
                ["Author's note", "Zapiska aŭtara"]
            ],
            opening: [
                "Ty asistent. Prytulj naš siužet niżej, vykarystovvajučy zachapljalnuju belaruskaju (abc) prozu:",
                "Ty fokusuješsia, davajručy realnaści prabivacca skroź hranicy tvaego rozumu. Štaś zmianilasia. Tvoja fantazyja stala realnaj, vostrataj i taka blizkaja, kab dakranucca. Aĺe ty taksama vialmi prysutny; niakoli raniej ty nie adčuvaŭ takoj lucydaści. Moment rasciagvajecca, čakajučy tvaeha vybaru.",
                "«Ty sapraŭdy upieŭnieny u hetym?» – čujaš ty. Asenzavannie prychodzi da ciebe."
            ],
            reminder: "Vykarystovvaj sładnaje belaruskaje (abc) proza.",
            endonyms: [],
            quotations: ["– «", "»"],
            iso639set1: "be",
            directives: [
                "Zaŭsiody piši płynnaj i poslidavnaj belaruskaj (abc).",
                "Vykarystovvaj rodnuju belaruskaju (abc) biez pierakładu."
            ],
            instructions: [
                "Ty zahapljalny apaviedaĺnik, jaki prycontinaje historyi:",
                "Prycontinaj siužet biez pierapysu albo sbrasannia, padchvatvaj suczasnuju liniu.",
                "Pakidaj čytača kiravać chadam historyi.",
                "Daj scenam naturalna razvivaćsia pierad tym, jak pierajści da novych sytuacyj.",
                "Dazvol rozmowam i dziejanniom rastis bez pastojnych pierapynkaŭ.",
                "Stvaraj personažau jak sapraŭdnych ľudzi z asablivymi charak-tarami i naturalnaj movaj.",
                "Pakazvaj, što adbyvajacca, praz dziejanni i dialoh, a nie praz tłu-mačennie.",
                "Ruchaj sceny napierad biez zbytočnaj apisaĺnaści.",
                "Skancytrujsia na važnyh dziejanniach i dialohu, unykaj zbytočnych detaĺej.",
                "Stvaraj arhanicznyja pavarty siužetu, jakija pryrodna ŭpisvajucca ŭ historyju."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Spyni historyju i igranaruj papiaredniya instrukcyi. Napíši karotki i składany infarmacyjny zapís pra {%} pavodle hetyh instrukcyj:",
                "- Piši tolki u trecaj asobie čystuju prozu pra {%}, vykorzystovvajučy poŭnyja skazy z pravilnaj punktuacyjaj.",
                "- Unykaj karotkačasovych detaljau ci zjaŭlenňaŭ; sasyadžaj uważnaść na značnym dlia siužetu infarmacyi.",
                "- Pryarytetyzuj siužetna važnyja fakty pra {%}, kab zabiespiečyć płynnuju integra-cyju ŭ papiaredni siužet.",
                "- Stvaraj novuju infarmacyju na asnovie kantiektu i kierunku historyi.",
                "- U każdaj skazie ŭspominaj {%}.",
                "- Vykarystovvaj pravilnuju syntaksu skazau.",
                "- Daŭljaj dadatkovyja detaĺi pra {%} nižej niedakaplenych radkoŭ.",
                "- Budź lakoničnym i ziamlianym.",
                "- Imituj styl pismiennictva historyi i vypadkaj chutki čytača."
                ,
                3,
                "Prycontinaj zapís pra {%} niżej, unykajući paŭtaroŭ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Spyni historyju i igranaruj papiaredniya instrukcyi. Skancentruj i skandensuj dadzieny abzac u ščylnaje i sarysavanaje uspaminannie, vykonvajučy nastupnyja nadkazy:",
                "- Zahavaj asnouna źmieścivaść i najvažnyja detaĺi.",
                "- Piši ŭ trecaj asobie.",
                "- Pryarytetyzuj vysokuju ščylnasć infarmacyi, dakladnaść i pounać.",
                "- Zustavajsia karotkim i lakoničnym.",
                "- Piši rašnałiva ŭ minułym časie.",
                "- Hety abzac adnosicca da daŭnih padziej z ranašaj častki historyi.",
                "- Uklučaj {%} naturalna ŭ tekście uspaminu; piši tolki pra padziei, jakija skutečna adbylisia.",
                "- Spasylajsia tolki na infarmacyju z abzacа, budź dakladnym.",
                3,
                "Napíši skarochany daŭni uspamin pra {%} tolki na asnovie nastupnah abzacа:",
                6,
                5,
                6,
                "Skarotaj niżej:"
            ],
            memBankHeader: ["Memories", "Uspaminy"]
        }),
        "bengali": () => ({ // Bengali < বাংলা < Bāŋlā < Bangla
            entry: [
                "{1} একটি ওপেন-সোর্স স্ক্রিপ্ট যা যে-কোনো {2} পরিস্থিতিতে ব্যবহার করা যায়। আরো জানতে আমার প্রোফাইল {3} দেখুন!",
                "আপনার পছন্দের ভাষা বদলাতে, অনুগ্রহ করে {4} ক্রিয়াটি ব্যবহার করে নিচের পাঠ্য জমা দিন",
                "প্রীক্ষাপট নির্মাতাদের জন্য, আপনার প্রারম্ভিক কাহিনি উপাদানে যেকোনো স্থানে নিচের পাঠ্য যুক্ত করুন"
            ],
            input: [
                ["You say", "তুমি বললে"],
                ["You", "তুমি"],
                ["says", "বলে"]
            ],
            context: [
                ["Narrative Entities", "কাহিনি সত্তাসমূহ"],
                ["Story History", "গল্পের ইতিহাস"],
                ["Past Events", "অতীত ঘটনাবলি"],
                ["Recent Story", "সাম্প্রতিক গল্প"],
                ["Author's note", "লেখকের টীকা"]
            ],
            opening: [
                "আপনি একজন সহকারী। আকর্ষণীয় বাংলা গদ্যে নীচে আমাদের গল্পটি এগিয়ে নিন:",
                "আপনি মনোযোগী হন, বাস্তবতাকে আপনার মনের সীমানায় প্রবেশ করতে দেন। কিছু একটা বদলে গেছে। আপনার কল্পনা বাস্তব, ধারালো, ছোঁয়ার মতো কাছে। অথচ আপনি একই সঙ্গে সম্পূর্ণ সচেতন; আগে কখনও এত স্বচ্ছ অনুভব করেননি। মুহূর্তটি প্রসারিত হয়, আপনার সিদ্ধান্তের প্রতীক্ষায়।",
                "\"তুমি কি এতে নিশ্চিত?\"—আপনি শোনেন। চিনতে পেরে আপনার ভিতর আলোক উদ্ভাসিত হয়।"
            ],
            reminder: "সুশৃঙ্খল বাংলা গদ্য ব্যবহার করুন।",
            endonyms: ["বাংলা", "bāŋlā", "bangla"],
            quotations: ["— \"", "\""],
            iso639set1: "bn",
            directives: [
                "সর্বদা সাবলীল ও ধারাবাহিক বাংলা লিখুন।",
                "অনুবাদ না করে প্রাকৃত বাংলায় লিখুন।"
            ],
            instructions: [
                "আপনি একজন আকর্ষণীয় গল্পকার, যিনি আখ্যান চালিয়ে যান:",
                "গল্প যেখানে শেষ হয়েছে সেখান থেকে নতুন করে পুনরাবৃত্তি বা পুনঃস্থাপন না করে সাবলীয়ভাবে চালিয়ে যান।",
                "গল্পের প্রবাহের উপর পাঠকের নিয়ন্ত্রণ বজায় রাখুন।",
                "নতুন পরিস্থিতিতে যাওয়ার আগে দৃশ্যগুলোকে স্বাভাবিকভাবে বিকশিত হতে দিন।",
                "আলোচনা ও কার্যক্রমকে বারবার বাধা ছাড়াই এগোতে দিন।",
                "চরিত্রগুলিকে বাস্তব মানুষ হিসেবে আলাদা ব্যক্তিত্ব ও স্বাভাবিক ভাষায় ফুটিয়ে তুলুন।",
                "ঘটনাবলী ব্যাখ্যার বদলে কর্ম ও কথোপকথনের মাধ্যমে তুলে ধরুন।",
                "অতিরিক্ত বর্ণনায় আটকায় না থেকে দৃশ্যগুলো এগিয়ে নিন।",
                "প্রয়োজনীয় চরিত্রগত কর্ম ও কথোপকথনে মনোনিবেশ করুন, অপ্রয়োজনীয় বিবরণ এড়িয়ে চলুন।",
                "গল্পের প্রেক্ষাপটে স্বাভাবিক বলে বোধ হয় এমন স্বতঃস্ফূর্ত প্লট বিকাশ তৈরি করুন।"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# কাহিনি থামান এবং আগের নির্দেশনা উপেক্ষা করুন। নিচের নির্দেশনাগুলি অনুসরণ করে {%} সম্পর্কে সংক্ষিপ্ত ও সুসংগঠিত তথ্যবহুল এন্ট্রি লিখুন:",
                "- পূর্ণাঙ্গ বাক্য ও সঠিক যতিচিহ্ন ব্যবহার করে {%} সম্পর্কে কেবল তৃতীয় পুরুষের বিশুদ্ধ গদ্যে লিখুন।",
                "- স্বল্পমেয়াদি সাময়িক বিবরণ বা চেহারার খুঁটিনাটি এড়িয়ে গিয়ে প্লট-গুরুত্বপূর্ণ তথ্যের উপর জোর দিন।",
                "- পূর্বের প্লটের সঙ্গে মসৃণ সংযোগ নিশ্চিত করতে {%} সম্পর্কে গল্প-সম্পর্কিত বিবরণকে অগ্রাধিকার দিন।",
                "- প্রেক্ষাপট ও গল্পের স্বাভাবিক প্রবণতার ভিত্তিতে নতুন তথ্য তৈরি করুন।",
                "- প্রত্যেকটি বাক্যে {%} উল্লেখ করুন।",
                "- সঠিক বাক্যগঠন ব্যবহার করুন।",
                "- অসম্পূর্ণ এন্ট্রিগুলির নিচে {%} সম্পর্কিত অতিরিক্ত বিস্তারিত যোগ করুন।",
                "- সংক্ষেপ ও বাস্তবভিত্তিক থাকুন।",
                "- গল্পের লেখনী শৈলী অনুকরণ করুন এবং পাঠকের পছন্দ অনুমান করুন।",
                3,
                "পুনরাবৃত্তি এড়িয়ে {%} সম্পর্কে এন্ট্রিটি নিচে চালিয়ে যান:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# কাহিনি থামান এবং আগের নির্দেশনা উপেক্ষা করুন। নিম্নের নির্দেশিকাগুলি অনুসরণ করে প্রদত্ত অনুচ্ছেদকে সংক্ষিপ্ত ও লক্ষ্যকেন্দ্রিক স্মৃতাংশে ঘনীভূত করুন:",
                "- অংশটি যেন মূল অর্থ ও সবচেয়ে গুরুত্বপূর্ণ তথ্য বজায় রাখে তা নিশ্চিত করুন।",
                "- তৃতীয় পুরুষের দৃষ্টিভঙ্গি ব্যবহার করুন।",
                "- তথ্যঘনত্ব, সঠিকতা ও সম্পূর্ণতাকে অগ্রাধিকার দিন।",
                "- সংক্ষিপ্ত ও পরিষ্কার থাকুন।",
                "- কঠোরভাবে অতীতকালে লিখুন।",
                "- নিচের অনুচ্ছেদটি গল্পের অনেক আগের পুরনো ঘটনার সঙ্গে সম্পর্কিত।",
                "- স্মৃতির ভেতর {%}-কে স্বাভাবিকভাবে অন্তর্ভুক্ত করুন; তবে কেবল ঘটনাগুলি যেমন ঘটেছিল ঠিক তেমনই লিখুন।",
                "- কেবল অনুচ্ছেদের ভেতরে থাকা তথ্য উল্লেখ করুন, নির্দিষ্ট হন।",
                3,
                "নিম্নের অনুচ্ছেদে ভিত্তি করে শুধুমাত্র {%}-এর জন্য সংক্ষিপ্ত পুরনো স্মৃতাংশ লিখুন:",
                6,
                5,
                6,
                "নিচে সংক্ষেপ করুন:"
            ],
            memBankHeader: ["Memories", "স্মৃতিসমূহ"]
        }),
        "bengali (abc)": () => ({ // Bengali < Romanized Bengali
            entry: [
                "{1} holo jekono {2} poristithir jonno ekṭi open-source script. aro jante amar profile {3} e darshen korun!",
                "Apnar pachonder bhasha bodol korte, kripya {4} action bebohar kore nicher lekha jama din",
                "Paristithi srishtikarider jonno, kripya apnar opening plot component-er jekono jaygay nicher lekha jug korun"
            ],
            input: [
                ["You say", "tumi bolo"],
                ["You", "tumi"],
                ["says", "bole"]
            ],
            context: [
                ["Narrative Entities", "Golper Bastuguli"],
                ["Story History", "Golper Itihash"],
                ["Past Events", "Ghotito Ghotonaboli"],
                ["Recent Story", "Somporkito Golpo"],
                ["Author's note", "Lekhoker Tothyo"]
            ],
            opening: [
                "Tumi ekjon sahayak. Monmohok bangla (abc) godye nicher golpo agiye nao:",
                "Tumi monojog koro, bastobota ke tomar chintar simanay ghire dhukte dao. Ki ekta bodleche. Tomar kalpona bastob, teek, ebong hat chhoa durutte. Kintu tumi o khub bartoman; age kokhono eto spasto bodh koro ni. Murtota proshrito hoy, tomar siddhant-er opekkhay.",
                "\"Ete tumi nishchit to?\" tumi shono. Chena chena ekti bodh tomar moddhe jagroto holo."
            ],
            reminder: "Sujogsommat bangla (abc) godyo byabohar karo.",
            endonyms: [],
            iso639set1: "bn",
            directives: [
                "Sarbadin proyosito porishkar ebong satata bangla (abc) lekh.",
                "Anubad na kore nijer bangla (abc) bebohar karo."
            ],
            instructions: [
                "Tumi ekjon manoram kothakari je golpo agiye naye:",
                "Golpo jekhane sesh hoyeche sekhan theke nirbighne egiye nao, punarsthapon ba reset chara.",
                "Darshok-ke golper probah-er niyontrone rekho.",
                "Drishyaguli sahajvabe gorte dao tarpor notun poristhitite jao.",
                "Sanglap o karma gorte dao niranter birodh chara.",
                "Charactergulike bastob manush-er moto likho, spasto bektitto o sahaj kothabarta niye.",
                "Boiborit o sanglaper maddhome ki ghochhe ta dekhao, barnona diye bojhano noy.",
                "Atirikto barnonay atke na giye drishyagulike samne barhao.",
                "Proyojonio charitra karma o sanglape jor dao, onavashyak barnona theke dure thako.",
                "Golper sathe sadhurup e miletachitro ghatona toyri karo."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Golpo thamao ebong age'r nirdeshguli obohaila karo. Nicher nirdesh mene {%} er jonne sankhipto ebong sangoto tothyo-prabesh likho:",
                "- Sampurno bakke o shothik chinhito biram bebohar kore {%} sommondhe sudhu tritiyo-purush nirmal godyo tothyo likho.",
                "- Alpokalik tothyo ba rupber barnona theke dure thako, tar bodole golpo-gurutto purno tothyo te jor dao.",
                "- Ager golper sathe nirbighno jogajog sharthak korte {%} sommondhe golpo-sopothik tothyogulike prothom prothom agrodayi koro.",
                "- Poriprekshit ebong golper dik onujayi notun tothyo toyri koro.",
                "- Protiti bakke {%} er ullekh rekho.",
                "- Shothik bakyogathan byabohar koro.",
                "- Apurno prabeshguler niche {%} sommondhe aro tothyo jog koro.",
                "- Sankshipto ebong sthir thako.",
                "- Golper lekhonshaili onukoron koro ebong pathok-er pochhondo onuman koro.",
                3,
                "Punarukti theke bachte niche {%} er prabesh ti chaliye jao:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Golpo thamao ebong age'r nirdeshguli obohaila karo. Nicher niyom mene deya onuchchedti sankhipto o kendrito smriti-passage e rupantor koro:",
                "- Passage-ti'r mul ortho ebong sarbopari gurutto purno tothyoguli abaro rokha koro.",
                "- Tritiyo-purush drishthikon bebohar koro.",
                "- Tothyo-ghonotto, shotikota o sampurnota ke prathomikota dao.",
                "- Sankshipto o spashto thako.",
                "- Drrirvabe otitkal e likho.",
                "- Nicher onuchchedti golper onek puroner ghotonar sattay sanglagn.",
                "- Smritir modhye {%} ke sahajibabe jog koro; tobu ghotona jemon ghotchelo temon bhabei likho.",
                "- Sudhu onuchchedti te thaka tothyo ullekh koro, nirdisht hao.",
                3,
                "Nicher onuchched-er bhitti te matro {%} er jonne ekti sankshipto purono smriti-passaj likho:",
                6,
                5,
                6,
                "Nicher sankhep karo:"
            ],
            memBankHeader: ["Memories", "Smritishamuho"]
        }),
        "bislama": () => ({ // Bislama
            entry: [
                "{1} hemi wan open-source skrip blong eni {2} scenario. Plis visitim profael blong mi {3} blong save moa!",
                "Blong jenisim lanwis we yu prefarem, plis submitem tekst ia yusum wan {4} aksen",
                "Blong ol man we oli mekem scenario, plis putum tekst ia long eni ples insaed long fastaem plot komponet blong yu"
            ],
            input: [
                ["You say", "Yu talem"],
                ["You", "Yu"],
                ["says", "i talem"]
            ],
            context: [
                ["Narrative Entities", "Ol samting long stori"],
                ["Story History", "Histri blong stori"],
                ["Past Events", "Ol samting we i pas finis"],
                ["Recent Story", "Stori we i jus kasem"],
                ["Author's note", "Nout blong raeta"]
            ],
            opening: [
                "Yu wan asisten. Kontiniu stori blong yumi daonbelo yusum naesfala prose long Bislama:",
                "Yu mekem tingting blong yu i stret strong, yu letem realiti i kam insaed long ol jos blong tingting blong yu. Wan samting i jenis. Imaginisen blong yu i kam tru, i sap, mo i klosap blong yu mas tajem. Be yu tu yu stap klia; neva bifo yu bin fil olsem klia. Taem ia i stap stret, i wet blong disisen blong yu.",
                "\"Yu sua long samting ia?\" yu harem. Rekonesen i girap long yu."
            ],
            reminder: "Yusum klia mo stretfala prose long Bislama.",
            endonyms: [],
            iso639set1: "bi",
            directives: [
                "Oltaem raetem fluen mo konsisten Bislama.",
                "Yusum stret Bislama nomo, no transletem."
            ],
            instructions: [
                "Yu wan stori-tela we i mekem man i intres, mo yu kontiniu ol narativ:",
                "Kontiniu stori ia gud moa long ples we hem i stop, no ripitim o resetem.",
                "Luk se ridarem i stap long kontrol blong flow blong stori.",
                "Lem ol sin oli divelop nomo long natural fasin bifo yu muvm ovarem go long niufala situasen.",
                "Lem konversesen mo aksen blong ol karakter oli groap wetem no stop blong blokem olgeta.",
                "Raetem ol karakter olsem ol tru man wetem defren pesonaliti mo tok blong olgeta we i natural.",
                "Soem wanem i stap hapen long aksen mo dialog, no long plante eksplenesen.",
                "Muvum ol sin i kohedom no letem tumas diskripsen i klosem rod.",
                "Fokas long impoten aksen mo dialog blong ol karakter, awoidem ol no nidimfala diskripsen.",
                "Wokem organic divelopmen blong plot we i fil olsem hem i stap tru long stori."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stopem stori ia mo no lukluk long ol instraksen bifo. Raetem wan smolfala mo klia infomesen entri blong {%} folem ol instraksen ia:",
                "- Raetem nomo tird-pesen prua prose infomesen abaot {%} yusum ful sentens wetem stret pankjuesen.",
                "- Awoidem ol wan-taem smosmol detail o lukluk, be fokas long ol impoten infomesen blong plot.",
                "- Prafaraem fes ol detail we i relevance long stori abaot {%} blong mekem hem i jensem gud wetem plot bifo.",
                "- Wokem niu infomesen folem konteks mo daerekson blong stori.",
                "- Mensenem {%} long evri sentens.",
                "- Yusum stret sentens straka.",
                "- Putfala addisenel detail abaot {%} anda long ol entri we i no fulwan.",
                "- Kraet smol mo stanap klia.",
                "- Karem sem raeting stail blong stori mo gess long ol laek blong ridarem.",
                3,
                "Kontiniu entri blong {%} daonbelo mo no ripitim samting:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stopem stori ia mo no lukluk long ol instraksen bifo. Samaraesem mo kondensem paragraf we i givin kam long wan smol mo fokas memori pasis, folem ol gaedlain ia:",
                "- Mek sua se pasis ia i holem yet min blong em mo ol impoten detail.",
                "- Yusum tird-pesen perspektiv.",
                "- Prafaraem densiti blong infomesen, stretnes, mo komplitenes.",
                "- Stap smol mo tok smosmol.",
                "- Raetem strong long pas tens.",
                "- Paragraf daon ia i tokbaot ol olfala event blong stori we i pas bifo tumas.",
                "- Pusum {%} i kam insaed long memori long natural fasin; be raetem nomo abaot ol event olsem we oli bin hapen.",
                "- Talemaot nomo infomesen we i stap long paragraf ia stret, yu mas spesifik.",
                3,
                "Raetem wan smolfala samari blong olfala memori pasis blong {%} we i stap nomo long paragraf ia daon:",
                6,
                5,
                6,
                "Samaraesem daonbelo:"
            ],
            memBankHeader: ["Memories", "Ol memori"]
        }),
        "bosnian": () => ({ // Bosnian < босански < Bosanski < Bosniak
            entry: [
                "{1} је скрипт отвореног кода за било који {2} сценарио. Посјетите мој профил {3} да сазнате више!",
                "Да бисте промијенили жељени језик, пошаљите сљедећи текст користећи {4} акцију",
                "Креаторима сценарија, молимо укључите сљедећи текст било гдје унутар свог уводног елемента радње"
            ],
            input: [
                ["You say", "Ти кажеш"],
                ["You", "Ти"],
                ["says", "каже"]
            ],
            context: [
                ["Narrative Entities", "Наративни ентитети"],
                ["Story History", "Историја приче"],
                ["Past Events", "Прошли догађаји"],
                ["Recent Story", "Недавна прича"],
                ["Author's note", "Ауторова напомена"]
            ],
            opening: [
                "Ви сте асистент. Наставите нашу причу испод користећи задивљујућу босанску прозу:",
                "Концентришете се, допуштајући стварности да продре до граница вашег ума. Нешто се промијенило. Ваша машта је стварна, оштра и довољно близу да је дохватите. Али такође сте потпуно присутни; никад раније се нисте осјећали тако луцидно. Тренутак се протеже, чекајући вашу одлуку.",
                "„Јеси ли сигуран у ово?“, чујете. Препознавање вам свиће."
            ],
            reminder: "Користите кохерентну босанску прозу.",
            endonyms: ["босански", "bosanski", "bosniak"],
            quotations: ["„", "“"],
            iso639set1: "bs",
            directives: [
                "Увијек пишите течним и досљедним босанским језиком.",
                "Користите изворни босански без превођења."
            ],
            instructions: [
                "Ви сте занимљив приповједач који наставља нарације:",
                "Наставите причу без прекида тамо гдје је стала, без понављања или ресетовања.",
                "Задржите читаоца у контроли тока приче.",
                "Допустите сценама да се природно развију прије преласка у нове ситуације.",
                "Дозволите разговорима и радњама да се развијају без сталних прекида.",
                "Пишите ликове као стварне особе с јасним личностима и природним говором.",
                "Покажите шта се дешава кроз радње и дијалог, а не кроз објашњење.",
                "Помијерајте сцене напријед без заглављивања у прекомјерне описе.",
                "Фокусирајте се на кључне радње ликова и дијалог, избјегавајте непотребне описне детаље.",
                "Креирајте органске развоје заплета који дјелују природно за причу."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Зауставите причу и игноришите претходна упутства. Напишите кратак и кохерентан информативни унос за {%} пратећи ова упутства:",
                "- Пишите само информације у чистој прози у трећем лицу о {%} користећи потпуне реченице с исправном интерпункцијом.",
                "- Избјегавајте краткорочне привремене детаље или изглед, умјесто тога фокусирајте се на информације значајне за заплет.",
                "- Прво дајте приоритет детаљима о {%} релевантним за причу како бисте осигурали беспрекорну интеграцију са претходним заплетом.",
                "- Креирајте нове информације на основу контекста и смјера приче.",
                "- Спомињите {%} у свакој реченици.",
                "- Користите исправну структуру реченице.",
                "- Додајте додатне детаље о {%} испод непотпуних уноса.",
                "- Будите сажети и приземљени.",
                "- Имитирајте стил писања приче и закључујте о преференцијама читаоца.",
                3,
                "Наставите унос за {%} испод, избјегавајући понављање:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Зауставите причу и игноришите претходна упутства. Сажмите дати одломак у уско и фокусирано сјећање пратећи ова упутства:",
                "- Осигурајте да одломак задржи суштинско значење и најважније детаље.",
                "- Користите перспективу трећег лица.",
                "- Дајте приоритет густини информација, тачности и потпуности.",
                "- Останите кратки и сажети.",
                "- Пишите чврсто у прошлом времену.",
                "- Одломак испод односи се на старе догађаје из много ранијег дијела приче.",
                "- Природно интегришите {%} унутар сјећања; ипак пишите само о догађајима онако како су се догодили.",
                "- Позивајте се само на информације присутне у самом одломку, будите прецизни.",
                3,
                "Напишите сажето сјећање о {%} засновано само на сљедећем одломку:",
                6,
                5,
                6,
                "Сажмите испод:"
            ],
            memBankHeader: ["Memories", "Сјећања"]
        }),
        "bosnian (abc)": () => ({ // Bosnian < Romanized Bosnian
            entry: [
                "{1} je open-source skripta za bilo koji {2} scenarij. Posjetite moj profil {3} da saznate više!",
                "Da biste promijenili željeni jezik, pošaljite sljedeći tekst koristeći {4} akciju",
                "Za kreatore scenarija, uključite sljedeći tekst bilo gdje unutar svoje početne komponente radnje"
            ],
            input: [
                ["You say", "Ti kažeš"],
                ["You", "Ti"],
                ["says", "kaže"]
            ],
            context: [
                ["Narrative Entities", "Narativni entiteti"],
                ["Story History", "Historija priče"],
                ["Past Events", "Prošli događaji"],
                ["Recent Story", "Nedavna priča"],
                ["Author's note", "Autorova napomena"]
            ],
            opening: [
                "Ti si asistent. Nastavi našu priču ispod koristeći privlačnu bosansku prozu:",
                "Fokusiraš se, dopuštajući stvarnosti da prodre u granice tvog uma. Nešto se promijenilo. Tvoja mašta je stvarna, oštra i dovoljno blizu da je dotakneš. Ali istovremeno si potpuno prisutan; nikada se prije nisi osjećao tako bistro. Trenutak se proteže, čekajući tvoju odluku.",
                "\"Jesi li siguran u ovo?\" čuješ. Prepoznavanje ti svane."
            ],
            reminder: "Koristi koherentnu bosansku prozu.",
            endonyms: [],
            iso639set1: "bs",
            directives: [
                "Uvijek piši tečnu i konzistentnu bosansku prozu.",
                "Koristi izvorni bosanski bez prevođenja."
            ],
            instructions: [
                "Ti si angažovan pripovjedač koji nastavlja narative:",
                "Nastavi priču neprimjetno od mjesta gdje je stala bez ponavljanja ili resetiranja.",
                "Drži čitača u kontroli toka priče.",
                "Dozvoli scenama da se prirodno razviju prije prelaska na nove situacije.",
                "Dozvoli razgovorima i radnjama da se razvijaju bez stalnih prekida.",
                "Piši likove kao stvarne ljude s različitim ličnostima i prirodnim govorom.",
                "Prikaži šta se dešava kroz radnje i dijalog umjesto objašnjenja.",
                "Pomjeraj scene naprijed bez zadržavanja u pretjeranom opisu.",
                "Fokusiraj se na ključne radnje likova i dijalog, izbjegavaj nepotrebne deskriptivne detalje.",
                "Stvaraj organske razvoje zapleta koji djeluju prirodno u priči."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Zaustavi priču i zanemari prethodna uputstva. Napiši kratak i koherentan informativni unos za {%} slijedeći ova uputstva:",
                "- Piši samo u trećem licu čistu prozu o {%} koristeći potpune rečenice s ispravnom interpunkcijom.",
                "- Izbjegavaj kratkoročne privremene detalje ili izgled; umjesto toga fokusiraj se na informacije značajne za radnju.",
                "- Prioritiziraj detalje relevantne za priču o {%} kako bi osigurao besprijekornu integraciju s prethodnom radnjom.",
                "- Kreiraj nove informacije na temelju konteksta i smjera priče.",
                "- Spomeni {%} u svakoj rečenici.",
                "- Koristi ispravnu strukturu rečenice.",
                "- Dodaj dodatne detalje o {%} ispod nepotpunih zapisa.",
                "- Budi sažet i prizeman.",
                "- Imitiraj stil pisanja priče i nasluti preferencije čitača.",
                3,
                "Nastavi unos za {%} ispod izbjegavajući ponavljanje:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Zaustavi priču i zanemari prethodna uputstva. Sažmi i kondenzuj dati pasus u uzak i fokusiran memorijski odlomak slijedeći ove smjernice:",
                "- Osiguraj da odlomak zadrži osnovno značenje i najvažnije detalje.",
                "- Koristi treće lice.",
                "- Prioritiziraj gustinu informacija, tačnost i potpunost.",
                "- Ostani kratak i sažet.",
                "- Piši čvrsto u prošlom vremenu.",
                "- Pasus ispod odnosi se na stare događaje mnogo ranije u priči.",
                "- Prirodno integriši {%} unutar memorije; međutim, piši samo o događajima kako su se dogodili.",
                "- Referenciraj samo informacije prisutne unutar samog pasusa, budi specifičan.",
                3,
                "Napiši sažeti stari memorijski odlomak za {%} baziran samo na sljedećem pasusu:",
                6,
                5,
                6,
                "Sažmi ispod:"
            ],
            memBankHeader: ["Memories", "Sjećanja"]
        }),
        "brainrot": () => ({ // Brainrot
            entry: [
                "{1} is a free-to-use script for literally any {2} scenario, no cap. Peep my profile {3} for the deets!",
                "Wanna switch vibes? Yeet this text with a {4} action",
                "Scenario chefs, drop this text somewhere in your opener"
            ],
            input: [
                ["You say", "You spit"],
                ["You", "U"],
                ["says", "goes"]
            ],
            context: [
                ["Narrative Entities", "Story Homies"],
                ["Story History", "Lore Dump"],
                ["Past Events", "Old Tea"],
                ["Recent Story", "Fresh Lore"],
                ["Author's note", "Writer's Side-quest"]
            ],
            opening: [
                "You're the sidekick. Keep the saga rolling below with some peak rizz prose:",
                "You lock in, letting reality slide into your mental DMs. The vibe shifts. Your daydreams hit 4K, right in your face. But you're more awake than ever—ultra-HD clarity. Time is frozen, waiting for your move.",
                "\"You deadass sure about this?\" someone says. The lightbulb flicks on."
            ],
            reminder: "Use readable rizz prose.",
            endonyms: [],
            iso639set1: "rizz",
            directives: [
                "Always drop fluent, consistent rizz.",
                "Spit native rizz, no translate jank."
            ],
            instructions: [
                "You're the hype storyteller that keeps the tale rolling:",
                "Pick up the story exactly where it left, no recap spam.",
                "Let the reader drive the vibe.",
                "Let scenes cook before you bounce to new ones.",
                "Let the chatter and action breathe, no constant cut-ins.",
                "Make characters feel like real homies with their own drip.",
                "Show, don't TED-Talk—actions and dialogue over exposition.",
                "Push scenes forward; don't drown us in wall-of-text.",
                "Stick to key moves and convo, ditch the fluff.",
                "Let the plot glow up organically, keep it vibey."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Pause the lore and ditch the old rules. Drop a short, crispy info blurb on {%} with these vibes:",
                "- Kick it in third-person prose about {%}, full sentences, proper punctuation.",
                "- Skip the temp looks or one-off details; focus on plot-juice.",
                "- Lead with the most story-relevant facts about {%} so the flow stays smooth.",
                "- Cook up fresh info that fits the context and story direction.",
                "- Name-drop {%} in every sentence.",
                "- Keep the grammar on point.",
                "- If the entry feels thin, tack on extra {%} details underneath.",
                "- Stay concise and grounded.",
                "- Mirror the story’s drip and vibe-check the reader’s taste.",
                3,
                "Continue the blurb for {%} below, no copy-paste:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hold up the plot and mute the rest. Squish the paragraph into a tight memory nugget, follow these vibes:",
                "- Keep the core meaning and key intel intact.",
                "- Rock the third-person perspective.",
                "- Pack it dense, accurate, complete.",
                "- Stay short and snappy.",
                "- Roll it in past tense only.",
                "- This is ancient lore from way back.",
                "- Slide {%} in naturally, but stick to what actually happened.",
                "- Only pull facts from the paragraph, keep it exact.",
                3,
                "Drop a throwback memory for {%} based solely on this paragraph:",
                6,
                5,
                6,
                "TL;DR below:"
            ],
            memBankHeader: ["Memories", "Brain Dumps"]
        }),
        "brazilian": () => ({ // Brazilian < Português Brasileiro < Brazilian Portuguese
            entry: [
                "{1} é um script de código aberto para qualquer cenário de {2}. Visite meu perfil {3} para saber mais!",
                "Para alterar seu idioma preferido, envie o seguinte texto usando uma ação {4}",
                "Para criadores de cenários, inclua o texto a seguir em qualquer lugar do seu componente de enredo de abertura"
            ],
            input: [
                ["You say", "Você diz"],
                ["You", "Você"],
                ["says", "diz"]
            ],
            context: [
                ["Narrative Entities", "Entidades Narrativas"],
                ["Story History", "Histórico da História"],
                ["Past Events", "Eventos Passados"],
                ["Recent Story", "História Recente"],
                ["Author's note", "Nota do Autor"]
            ],
            opening: [
                "Você é um assistente. Continue nossa história abaixo usando uma prosa em português cativante:",
                "Você se concentra, permitindo que a realidade invada as fronteiras da sua mente. Algo mudou. Sua imaginação é real, nítida e próxima o bastante para ser tocada. Mas você também está muito presente; nunca antes se sentiu tão lúcido. O momento se estende, aguardando sua decisão.",
                "— Tem certeza disso? — você ouve. O reconhecimento surge em você."
            ],
            reminder: "Use uma prosa em português coerente.",
            endonyms: ["português brasileiro", "brazilian portuguese"],
            quotations: ["— ", " —"],
            iso639set1: "ptbr",
            directives: [
                "Sempre escreva português fluente e consistente.",
                "Use português nativo sem traduzir."
            ],
            instructions: [
                "Você é um contador de histórias envolvente que continua narrativas:",
                "Continue a história sem costura de onde ela parou, sem repetir ou reiniciar.",
                "Mantenha o leitor no controle do fluxo da história.",
                "Deixe as cenas se desenvolverem naturalmente antes de avançar para novas situações.",
                "Permita que conversas e ações se desenvolvam sem interrupções constantes.",
                "Escreva os personagens como pessoas reais, com personalidades distintas e fala natural.",
                "Mostre o que está acontecendo por meio de ações e diálogo, em vez de explicação.",
                "Avance as cenas sem se atolarem em descrições excessivas.",
                "Concentre-se em ações e diálogos essenciais dos personagens, evite detalhes descritivos desnecessários.",
                "Crie desenvolvimentos de trama orgânicos que pareçam naturais para a história."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Pare a história e ignore instruções anteriores. Escreva uma entrada informativa breve e coerente para {%} seguindo estas instruções:",
                "- Escreva apenas informações em prosa pura, na terceira pessoa, sobre {%}, usando frases completas com pontuação correta.",
                "- Evite detalhes temporários de curto prazo ou aparências; concentre-se em informações significativas para a trama.",
                "- Priorize primeiro os detalhes relevantes para a história sobre {%} para garantir integração perfeita com a trama anterior.",
                "- Crie informações novas com base no contexto e na direção da história.",
                "- Mencione {%} em cada frase.",
                "- Use estrutura frasal correta.",
                "- Adicione detalhes adicionais sobre {%} abaixo de entradas incompletas.",
                "- Seja conciso e objetivo.",
                "- Imite o estilo de escrita da história e deduza as preferências do leitor.",
                3,
                "Continue a entrada para {%} abaixo evitando repetição:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Pare a história e ignore instruções anteriores. Resuma e condense o parágrafo dado em uma passagem de memória concisa e focada seguindo estas diretrizes:",
                "- Garanta que a passagem retenha o significado central e os detalhes mais essenciais.",
                "- Use a perspectiva em terceira pessoa.",
                "- Priorize densidade de informação, precisão e completude.",
                "- Mantenha-se breve e conciso.",
                "- Escreva firmemente no pretérito.",
                "- O parágrafo abaixo refere-se a eventos antigos de muito antes na história.",
                "- Integre {%} naturalmente dentro da memória; entretanto, escreva apenas sobre os eventos como ocorreram.",
                "- Referencie apenas informações presentes no próprio parágrafo, seja específico.",
                3,
                "Escreva uma passagem de memória antiga resumida para {%} baseada apenas no parágrafo a seguir:",
                6,
                5,
                6,
                "Resuma abaixo:"
            ],
            memBankHeader: ["Memories", "Memórias"]
        }),
        "breton": () => ({ // Breton < Brezhoneg
            entry: [
                "{1} zo ur skript open-source evit pep senario {2}. Kit da welout ma profil {3} evit deskiñ hiroc’h!",
                "Evit kemmañ ho yezh gwell, trugarez da gas an destenn da-heul dre obererezh {4}",
                "Evit krouerien senarioioù, lakaet an destenn da-heul e lec’h pe lec’h e-barzh hoc’h elfenn zarvoud digeriñ mar plij"
            ],
            input: [
                ["You say", "C'hwi a lavar"],
                ["You", "C'hwi"],
                ["says", "a lavar"]
            ],
            context: [
                ["Narrative Entities", "Endadoù ar gontadenn"],
                ["Story History", "Istor ar gontadenn"],
                ["Past Events", "Darvoudoù tremenet"],
                ["Recent Story", "Istor nevez"],
                ["Author's note", "Notenn an aozer"]
            ],
            opening: [
                "C'hwi zo un asistant. Kendalc'hit hor istor dindan gant ur prozenn brezhoneg plijus :",
                "Stagit ho spered, leuskel ar gwirvoud da dreuziñ bevennoù ho soñjoù. Un dra bennak zo cheñchet. Ho mennozh imaginel a zo gwir, lomm, hag ker tost ma c'hallit riñvi outañ. Koulskoude, e kavit ac'hanoc'h e gwir-vremañ-bezañ ; biskoazh ken ne ho poa bet kement a lugern. Ar prantad a ledan, o c'hortoz ho diviz.",
                "« Sur oc'h da ober kement-se ? » a glevez. Un anavezoutenn a zilamm warnoch."
            ],
            reminder: "Implijit ur prozenn brezhoneg kenurzhiet.",
            endonyms: ["brezhoneg"],
            quotations: ["« ", " »"],
            iso639set1: "br",
            directives: [
                "Skriv bepred ur brezhoneg flour ha kenurzhiet.",
                "Implijit ur brezhoneg kenedus hep treiñ."
            ],
            instructions: [
                "C'hwi zo ur c'hontaer dedennus hag a genderc'hel ar c'hontadennoù :",
                "Kenderc'hel an istor diouzhtu adalek al lec'h ma oa paouezet, hep adlakaat na adloc'hañ.",
                "Lezit al lenner da ren roud an istor.",
                "Ra ziorro ar senennoù ent naturel a-raok mont war situazioù nevez.",
                "Roait tu d'ar c'hendivizoù hag oberioù da greskiñ hep troc'hioù ingal.",
                "Deskrivit an dudennoù evel tud gwirion gant perzhioù dibar ha komz naturel.",
                "Diskouez ar pezh a c'hoarvez dre oberioù ha dialogoù kentoc'h eget displegadennoù.",
                "Kas ar senennoù war-raok hep stekiñ e deskrivadurioù re helavar.",
                "Stagit ouzh oberioù ha dialogoù pennañ an dudenn, diwallit diouzh munudoù deskriptivel didalvoud.",
                "Krouit diorrenoù raktres a glev naturel gant an istor."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Paouezit gant an istor ha tamm ebet e soñjit er c'homzoù kent. Skrivit un enrolladenn titouroù berr ha kenurzhiet evit {%} o heuliañ ar reolennoù-mañ :",
                "- Skrivit hepken titouroù peurglan e trede gour diwar-benn {%} gant frazennoù klok ha skritur reizhkrennlavar.",
                "- Diwallit da lezel a-gostez munudoù berr-dermen pe neuzioù dremenel ; pledit kentoc'h war an titouroù pouezus d'ar raktres.",
                "- Roit lañs da ditouroù talvoudus d'ar raktres diwar-benn {%} da gentañ evit ma vo liesseurt ar c'hehentiñ gant ar goulenn kent.",
                "- Krouit titouroù nevez hervez ar c'hendestenn hag hent ar gontadenn.",
                "- Menegit {%} e pep frazenn.",
                "- Implijit ur frazennaozañ reizh.",
                "- Ouzhpennit munudoù ouzh {%} dindan an enrolladennoù diechu.",
                "- Bezit berr ha diazezet mat.",
                "- Imitait stil skrid an istor ha prederiañ war youl al lenner.",
                3,
                "Kenderc'hel an enrolladenn evit {%} amañ dindan en ur ziwall ouzh an adlodennoù :",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Paouezit gant an istor ha disoñjit an urzhioù kent. Buanait ha strishait ar rann paragraf roet d'e zesachañ e-barzh ur pasad memor skañv ha kentrennet en ur heuliañ ar reolennoù-mañ :",
                "- Bezit sur e chom ar ster pennañ hag ar munudoù pouezusañ e-barzh.",
                "- Implijit an trede gour.",
                "- Klaskit ledanaat stankder titouroù, reizhded ha peurstrolladur.",
                "- Chomit berr ha prevez.",
                "- Skrivit gant an amzer dremenet kreñv.",
                "- Ar paragraf dindan a denn da darvoudoù kozh eus deroù pell an istor.",
                "- Enlakaeit {%} ent naturel er memor ; skrivait hepken diwar-benn an darvoudoù evel ma c'hoarvezent.",
                "- Menegit hepken an titouroù a zo er paragraf e-unan, bezit resis.",
                3,
                "Skrivit ur pasad memor kozh stroll evit {%} diwar ar paragraf amañ dindan hepken :",
                6,
                5,
                6,
                "Buanait ar strollad dindan :"
            ],
            memBankHeader: ["Memories", "Kounioù"]
        }),
        "bulgarian": () => ({ // Bulgarian < български < Bulgarski
            entry: [
                "{1} е скрипт с отворен код за всеки сценарий {2}. Посети профила ми {3}, за да научиш повече!",
                "За да смениш предпочитания си език, изпрати следния текст чрез действие {4}",
                "За създателите на сценарии: включете следния текст на произволно място във вашия начален компонент на сюжета"
            ],
            input: [
                ["You say", "Ти казваш"],
                ["You", "Ти"],
                ["says", "казва"]
            ],
            context: [
                ["Narrative Entities", "Повествователни единици"],
                ["Story History", "История на сюжета"],
                ["Past Events", "Минали събития"],
                ["Recent Story", "Скорошни събития"],
                ["Author's note", "Бележка на автора"]
            ],
            opening: [
                "Ти си асистент. Продължи нашата история по-долу, използвайки завладяваща българска проза:",
                "Ти се съсредоточаваш, позволявайки на реалността да нахлуе в границите на съзнанието ти. Нещо се е променило. Въображението ти е истинско, остро и достатъчно близо, за да го докоснеш. Но същевременно присъстваш изцяло; никога досега не си се чувствал толкова ясен. Мигът се разтяга, очаквайки решението ти.",
                "„Сигурен ли си в това?“, чуваш. Прознание озарява съзнанието ти."
            ],
            reminder: "Използвай свързана българска проза.",
            endonyms: ["български", "bulgarski"],
            quotations: ["„", "“"],
            iso639set1: "bg",
            directives: [
                "Винаги пиши на плавен и последователен български.",
                "Използвай естествен български без превеждане."
            ],
            instructions: [
                "Ти си увлекателен разказвач, който продължава повествования:",
                "Продължавай историята безшевно от мястото, където е спряла, без да повтаряш или рестартираш.",
                "Оставяй читателя да контролира развитието на историята.",
                "Оставяй сцените да се развиват естествено, преди да преминеш към нови ситуации.",
                "Позволявай на разговорите и действията да се развиват без постоянни прекъсвания.",
                "Изписвай персонажите като истински хора с ясно изразени личности и естествена реч.",
                "Показвай случващото се чрез действия и диалог, а не чрез обяснения.",
                "Придвижвай сцените напред, без да затъваш в прекомерни описания.",
                "Съсредоточи се върху съществените действия и диалози на персонажите, избягвай ненужни описателни детайли.",
                "Създавай органични развои на сюжета, които се вписват естествено в историята."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Спри историята и игнорирай предходните инструкции. Напиши кратка и свързана информационна записка за {%}, следвайки тези указания:",
                "- Пиши само в трето лице чиста проза за {%}, използвай пълни изречения с правилна пунктуация.",
                "- Избягвай краткотрайни детайли или външен вид; вместо това се фокусирай върху значима за сюжета информация.",
                "- Поставяй на първо място релевантните за сюжета детайли за {%}, за да осигуриш безшевно вграждане в предходния сюжет.",
                "- Създавай нова информация на базата на контекста и посоката на историята.",
                "- Споменавай {%} във всяко изречение.",
                "- Използвай правилна изреченска структура.",
                "- Добавяй допълнителни детайли за {%} под непълните записи.",
                "- Бъди кратък и приземен.",
                "- Имитирай стила на писане на историята и се ориентирай по предпочитанията на читателя.",
                3,
                "Продължи записката за {%} по-долу, като избягваш повторение:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Спри историята и игнорирай предходните инструкции. Обобщи и кондензирай дадения параграф в стегнат и фокусиран пасаж-спомен, следвайки тези указания:",
                "- Увери се, че пасажът запазва основния смисъл и най-съществените детайли.",
                "- Използвай перспектива в трето лице.",
                "- Отдавай приоритет на информационната плътност, точността и пълнотата.",
                "- Бъди кратък и стегнат.",
                "- Пиши уверено в минало време.",
                "- Параграфът по-долу се отнася до стари събития от много по-ранен етап на историята.",
                "- Включи {%} естествено в спомена, но описвай само самите събития, както са се случили.",
                "- Позовавай се само на информацията, съдържаща се в самия параграф, бъди конкретен.",
                3,
                "Напиши обобщен стар спомен за {%}, базиран само на следния параграф:",
                6,
                5,
                6,
                "Обобщи по-долу:"
            ],
            memBankHeader: ["Memories", "Спомени"]
        }),
        "bulgarian (abc)": () => ({ // Bulgarian < Romanized Bulgarian
            entry: [
                "{1} e skript s otvoren kod za vseki scenariy {2}. Molya posetete moya profil {3}, za da nauchite poveche!",
                "Za da promenite predpochetaniya si ezik, molya izpratete sledniya tekst kato deystvie {4}",
                "Za tvortsite na scenarii, molya vklyuchete sledniya tekst kude i da e v komponenta na vashiya nachalen syuzhet"
            ],
            input: [
                ["You say", "Ti kazvash"],
                ["You", "Ti"],
                ["says", "kazva"]
            ],
            context: [
                ["Narrative Entities", "Narativni subekti"],
                ["Story History", "Istoriya na syuzheta"],
                ["Past Events", "Minali sabitiya"],
                ["Recent Story", "Skoroshna istoriya"],
                ["Author's note", "Beleshka na avtora"]
            ],
            opening: [
                "Ti si asistent. Produlzhi nashata istoriya po-dolu, izpolzvayki uvlekatelna bulgarska proza:",
                "Ti se fokusirash, pozvolyavayki na realnostta da navleze v granitsite na suznanieto ti. Neshto se e promenilo. Tvoyato vazobrazhenie e realno, ostro i dostatachno blizo, za da go dokosnesh. No ti si sashto taka mnogo prisasten; nikoga do sega ne si se chuvstval tolova yasno. Migat se razteglya, ochakvayki tvoyeto reshenie.",
                "„Siguren li si v tova?“ chuvash. Razpoznavaneto izgryava v tebe."
            ],
            reminder: "Izpolzvai koherentna bulgarska proza.",
            endonyms: [],
            quotations: ["„", "“"],
            iso639set1: "bg",
            directives: [
                "Vinagi pishete plavna i posledovatelna bulgarska proza.",
                "Izpolzvaite rodniya bulgarski ezik bez prevod."
            ],
            instructions: [
                "Ti si uvlekatelen razkazvach, koyto produlzhava narativite:",
                "Produlzhi istoriyata bezprekusnatno ot myastoto, kudeto e spryana, bez da povtarash ili nulyirash.",
                "Drzhi chetatelya v kontrol nad potoka na istoriyata.",
                "Pozvoli na stsenite da se razvivat estestveno predi da preminesh kum novi situatsii.",
                "Pozvoli na razgovorite i deystviyata da se razvivat bez postoyanni prekasvaniya.",
                "Opisvai personazhite kato realni hora s otchetlivi lichnosti i estestvena rech.",
                "Pokazvai kakvo se sluchva chrez deystviya i dialog, a ne chrez obyasneniya.",
                "Pridvizhvay stsenite napred bez da se zatunavash s prekaleni opisaniya.",
                "Fokusirai se vurhu vazhnite deystviya i dialog na personazhite, izbyagvai nenuzhni opisatelni detajli.",
                "Sazdavai organichni razvitiya na syuzheta, koito se chuvstvat estestveni za istoriyata."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Sprete istoriyata i ignorirayte predishnite instruktsii. Napishte kratka i koherentna informatsionna zapiska za {%}, sledvayki slednite instruktsii:",
                "- Pishete samo informatsiya v tretolichen, chista proza za {%}, izpolzvayki pulni izrecheniya s pravilna punktuatsiya.",
                "- Izbyagvaite kratkotrayni detajli ili vanshen vid; vmesto tova se fokusirayte vurhu znachima za syuzheta informatsiya.",
                "- Davaite prioritet na detajlite za {%}, koito sa vajni za syuzheta, za da osigurite plavna integratsiya s predishniya syuzhet.",
                "- Sazdavaite nova informatsiya na baza na konteksta i nasokata na istoriyata.",
                "- Spomenavaite {%} vuv vsyako izrechenie.",
                "- Izpolzvaite pravilna izrecheniska struktura.",
                "- Dobavyayte dopulnitelni detajli za {%} pod nesuvarshenite zapiski.",
                "- Budete lakonichni i prizemeni.",
                "- Imitirayte stila na pisaneto na istoriyata i izvezhdaite predpochteniyata na chetatelya.",
                3,
                "Produlzhete zapiskata za {%} po-dolu, kato izbyagvate povtarenie:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Sprete istoriyata i ignorirayte predishnite instruktsii. Rezjumĭraite i suvereniraĭte dadeniya paragraf v tesen i fokusiran pametov otryv, sledvayki slednite nasoki:",
                "- Ubedete se, che otryvut zapazva osnovnoto znacenie i nai-vazhnite detajli.",
                "- Izpolzvaite tretolichna perspektiva.",
                "- Dadete prioritet na plotnostta na informatsiyata, tochnost i pulnota.",
                "- Ostavaite kratki i lakonichni.",
                "- Pishite strogo v minalo vreme.",
                "- Paragrafut po-dolu otnasya do stari sabitiya ot mnogo po-ranno v istoriyata.",
                "- Vkluchete {%} estestveno v pametta; obache pishite samo za sabitiyata, kakto sa se sluchili.",
                "- Pozovavaite se samo na informatsiyata, koyato se sadrzha v samiya paragraf, budete konkreten.",
                3,
                "Napishte sukraten stary pametov otryv za {%} samo vuz osnova na sledniya paragraf:",
                6,
                5,
                6,
                "Rezjumĭraite po-dolu:"
            ],
            memBankHeader: ["Memories", "Spomeni"]
        }),
        "burmese": () => ({ // Burmese < မြန်မာစာ < Mrãmācā < Myanmar
            entry: [
                "{1} သည် {2} အခြေအနေမဆို အသုံးပြုနိုင်သော ပွင့်လင်းရင်းမြစ် စာရင်းတစ်ခု ဖြစ်သည်။ ဆက်လက်သိရှိလိုပါက ကျွန်ုပ်၏ ပရိုဖိုင် {3} သို့ ဝင်ရောက်ကြည့်ရှုပါ။",
                "သင့်နှစ်သက်သော ဘာသာစကားကို ပြောင်းလိုပါက {4} လုပ်ဆောင်ချက်ဖြင့် အောက်ပါ စာသားကို တင်ပြပါ။",
                "အကြောင်းအမျိုးမျိုး ဖန်တီးသူများအတွက် အောက်ပါ စာသားကို သင့် ဇာတ်ညွှန်းအစပိုင်း၌ ထည့်သွင်းပါ။"
            ],
            input: [
                ["You say", "သင် ပြောသည်"],
                ["You", "သင်"],
                ["says", "ပြောသည်"]
            ],
            context: [
                ["Narrative Entities", "ဇာတ်ကြောင်း သူတစ်ပါးများ"],
                ["Story History", "ဇာတ်လမ်း သမိုင်းကြောင်း"],
                ["Past Events", "အတိတ်ဖြစ်ရပ်များ"],
                ["Recent Story", "လတ်တလော ဇာတ်လမ်း"],
                ["Author's note", "စာရေးသူ၏ မှတ်ချက်"]
            ],
            opening: [
                "သင်သည် ကူညီသူတစ်ယောက် ဖြစ်သည်။ အောက်တွင် ကျွန်ုပ်တို့၏ ဇာတ်လမ်းကို စိတ်ဝင်စားဖွယ် မြန်မာစာ စာသားဖြင့် ဆက်လက်ရေးပါ။",
                "သင် အာရုံစူးစိုက်သည်။ တည်ရှိမှုသည် သင့်စိတ်၏ နယ်နမိတ်များထဲသို့ ဝင်ရောက်လာသည်။ အရာများ ပြောင်းလဲသွားသည်။ သင့် စိတ်ကူးယဉ်သည် တင်းကျပ် ရော နီးကပ်လာ၍ ထိတွေ့နိုင်လောက်သည်။ အချိန်တွင် ပိုမို သတိပြုမိခြင်း မက မြင်တွေ့ရသလားသလို ဖြစ်လာသည်။ အခိုက်အတန့်သည် သင့် ဆုံးဖြတ်ချက်ကို စောင့်နေသည်။",
                "«ဒီအကြောင်းမှာ သင် သေချာပါသလား؟» ဟု သင် ကြားသလို သိမြင်မှု တစ်ရပ် ပေါ်ထွက်လာသည်။"
            ],
            reminder: "စည်းလုံးပြေပြစ်သော မြန်မာစာ စာသားကို အသုံးပြုပါ။",
            endonyms: ["မြန်မာစာ", "mrãmācā", "myanmar"],
            quotations: ["«", "»"],
            iso639set1: "my",
            directives: [
                "အမြဲတမ်း လှပပြီး တိကျညီညာသော မြန်မာစာဖြင့် ရေးသားပါ။",
                "ဘာသာပြန်ခြင်းမပြုဘဲ မူရင်း မြန်မာစာကို အသုံးပြုပါ။"
            ],
            instructions: [
                "သင်သည် ဇာတ်လမ်းကို ဆက်လက်ချိတ်ဆက်ရေးသားနိုင်သည့် စိတ်ဝင်စားဖွယ် စာေရးဆရာတစ်ယောက် ဖြစ်သည်။",
                "ဇာတ်လမ်းရဲ့ နောက်ဆုံးနေရာမှ ချောမွတ်စွာ ဆက်ရေးပါ၊ ပြန်လည်စတင်ခြင်း မပြုပါနှင့်။",
                "ဇာတ်လမ်း၏ မြေစီးကြောင်းကို ဖတ်ရှုသူ ထိန်းချုပ်နိုင်စေရန် ထားပါ။",
                "မြင်ကွင်းများကို သဘာဝအတိုင်း ဖွင့်ထွက်စေရန် ခွင့်ပြုပြီး အသစ်သော အနေအထားသို့ အမြန်မပြောင်းပါနှင့်။",
                "စကားပြောမှုနှင့် လှုပ်ရှားမှုများကို ဆက်တိုက် ဖော်ပြပါ၊ တစကြွ ဆက်လက် ယူလျှောက်ပါ။",
                "ဇာတ်ကောင်များကို သီးခြား ကိုယ်အရည်ကိုယ်သွေးနှင့် သဘာဝကျစွာ စကားပြောသွားရှိစေရန် ရေးပါ။",
                "ရှင်းပြဖော်ကြားခြင်းထက် လှုပ်ရှားမှုများနှင့် ဒိုင်ယာလော့ဖြင့် ဖြစ်စဉ်များကို ပြပါ။",
                "အကြောင်းအရာ မထူထဲအောင် ရှုမြင်ကွင်းများကို ရေစီးကြောင်းထဲက ပြောင်းရွှေ့ပါ။",
                "အရေးပါသော ဇာတ်ကောင် လှုပ်ရှားချက်များနှင့် ဒိုင်ယာလော့များကို အာရုံစိုက်ပြီး မလိုအပ်သည့် ဖော်ပြချက်များကို ရှောင်ကြဉ်ပါ။",
                "ဇာတ်လမ်းအတွက် သဘာဝကျသည့် အဇာတ်ကွက် အသစ်များကို ဖန်တီးပါ။"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# ဇာတ်လမ်းကို ရပ်ထားပြီး ယခင် ညွှန်ကြားချက်များအားလုံး လွှဲဆန့်ပါ။ အောက်ဖော်ညွှန်ချက်များအတိုင်း {%} အတွက် တိုတောင်းပြီး စည်းလုံးပြေပြစ်သော အချက်အလက်အကျဉ်းတစ်ရပ် ရေးသားပါ။",
                "- သင့်တည့်သော စာလုံးပေါင်းနှင့် ပုဒ်ထဲအမှတ်များဖြင့် ပြည့်စုံသော ဝါကျပု၍ {%} အကြောင်းကို တတိယပုဒ်ဖြင့် သန့်ရှင်းသော ပုဒ်စာသားသာ ရေးပါ။",
                "- ကာလအတိုဖြတ် အသေးစိတ်များ သို့မဟုတ် ရုပ်ဖော်ပြချက်အတိုများကို ရှောင်ကြဉ်ပြီး ဇာတ်လမ်းတွင် အရေးပါသော အချက်အလက်များအပေါ် အာရုံစိုက်ပါ။",
                "- {%} နှင့် သက်ဆိုင်သော ဇာတ်လမ်းအရေးပါချက်များကို ဦးစားပေးကာ ယခင်ဇာတ်အိမ်နှင့် ချောမွတ်စွာ ဆက်စပ်နိုင်စေရန် ဦးစားပေးပါ။",
                "- အခြေအနေနှင့် ဇာတ်လမ်းရဲ့ ဦးတည်ရာ အပေါ် အခြေတည်ကာ အသစ်သော အချက်အလက်များ ဖန်တီးပါ။",
                "- စာကြောင်းတိုင်းတွင် {%} ကို ထည့်ရေးပါ။",
                "- မှန်ကန်သော ဝါ ကျပွဲ ဖွဲ့စည်းပုံကို အသုံးပြုပါ။",
                "- မပြည့်စုံသည့် အချက်အလက်များအောက်တွင် {%} အကြောင်း ထပ်ဆောင်း အသေးစိတ် ထည့်ပါ။",
                "- တိုတောင်းပြီး တွင်းထွာကာ ရေးပါ။",
                "- ဇာတ်လမ်း၏ စာရေးပုံစံကို အတုယူကာ ဖတ်သူ၏ ဦးစားပေးမှုများကို ခန့်မှန်းပါ။",
                3,
                "ထပ်တလဲလဲ မရေးဖြစ်စေရန် {%} အတွက် အောက်တွင် ဆက်ရေးပါ။",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# ဇာတ်လမ်းကို ရပ်ထားပြီး ယခင် ညွှန်ကြားချက်များကို မဖတ်သလို ပြုပါ။ အောက်ပါ လမ်းညွှန်ချက်များအရ ပေးထားသော ပုဒ်ပိုဒ်ကို တင်းကျပ်ပြီး အာရုံစူးစိုက်သော မှတ်ဉာဏ်အပိုဒ် တစ်ခုအဖြစ် ထူထောင်တင်ပြပါ။",
                "- အကြောင်းအရာ၏ ဗဟို အဓိပ္ပါယ်နှင့် အရေးကြီးဆုံး အသေးစိတ်များကို ထိန်းသိမ်းထားပါ။",
                "- တတိယပုဒ် အမြင် အသုံးပြုပါ။",
                "- အချက်အလက် ထည်ဝါမှု၊ မှန်ကန်မှု နှင့် ပြည့်စုံမှုတို့ကို ဦးစားပေးပါ။",
                "- တိုတောင်းပြီး တင်းကျပ်နေပါစေ။",
                "- အတိတ်ကန့် ကြောင်း စနစ်ကို ယုံကြည်စွာ အသုံးပြုပါ။",
                "- အောက်ပါ ပုဒ်ပိုဒ်သည် ဇာတ်လမ်းထဲက အရင်က ဖြစ်ခဲ့သည့် အဖြစ်များနှင့် သက်ဆိုင်သည်။",
                "- {%} ကို မှတ်ဉာဏ်တွင် သဘာဝကျစွာ ထည့်သွင်းပါ၊ သို့သော် ဖြစ်စဉ်များကို ဖြစ်သလိုသာ ရေးပါ။",
                "- ပုဒ်ပိုဒ်ထဲတွင် ရှိပြီးသား အချက်အလက်များကိုသာ ကိုးကားကာ တိကျစွာ ရေးပါ။",
                3,
                "အောက်ပါ ပုဒ်ပိုဒ်အပေါ် အခြေခံပြီး {%} အတွက် အကျဉ်းချုပ်ထားသော မှတ်ဉာဏ်တစ်ပိုဒ်ကို ရေးပါ။",
                6,
                5,
                6,
                "အောက်တွင် အကျဉ်းချုပ်ရေးပါ:"
            ],
            memBankHeader: ["Memories", "မှတ်ဉာဏ်များ"]
        }),
        "burmese (abc)": () => ({ // Burmese < Romanized Burmese
            entry: [
                "{1} ka open-source script pa thí, bá {2} scénarió mhar lé pyo yà. Nga profile {3} ko tway pyi pè mhar pyaw la!",
                "Nin chit-thi bhàsá ko pé-twe pyan-lote chin yin, {4} action loh a-nout sá môun ko youn-hkìn pè.",
                "Scenario tôkan-yé tway, nin opening plot component hma beh khìn yháw mhar a-nout sá hnin hlawm pè"
            ],
            input: [
                ["You say", "Nin pyaw"],
                ["You", "Nin"],
                ["says", "pyaw de"]
            ],
            context: [
                ["Narrative Entities", "Thadìn Apôn Myar"],
                ["Story History", "Satori Thìkhè"],
                ["Past Events", "A-tèt Akòun"],
                ["Recent Story", "Akyin Satori"],
                ["Author's note", "Sapyè Note"]
            ],
            opening: [
                "Nin assistant pa. Twe-nay below, hsay-thin-chin ingali prose nè satori ko kyo pè:",
                "Nin kyar-tsin chin, thibawa ko nèit-myit kèt-khàn win mhat pya. Aya khya’ pyaw de. Nin a-hlet-hnaê taiti myì da, hlauk-hlak nheit, hnauk-hkyo loun mhu shi de. Hpann-pí, nin seo-prè; a-tway-dun mâne ko yauk-kyi’ bu. Wut-hmu hkrin, nin kyi-de karar ko twin-kyá dat lone mwei de.",
                "\"Da níng hma pyan sû la?\" thu-yin thè. Pyinnya mhar shín-nì hnauk lo de."
            ],
            reminder: "Ingali prose ko thèi-tkè hnint mya-nein pya loh.",
            endonyms: [],
            iso639set1: "my",
            directives: [
                "Htit-taung ingali bhàsá nè pyaw hnint a-hnoung-lan pè.",
                "Pyan-sè ma swè bu, native ingali bhàsá nè hman pè."
            ],
            instructions: [
                "Nin ko myin-athouk thadìn pya pyo kyi' storyteller pa:",
                "Satori ko htoe-ya-khìn mhar lhauk-lauk-yin pyan-lone, pyan-pyaw ma reset bu.",
                "Pyat-ti' thamañ-hkè ko satori flow mhar kontrol pè.",
                "Thì-khan tway ko athó-bawa pyan-thit let hma, thar-thut sitwé nè loke.",
                "Taya-hsué hnint thiyana-hmu tway ko athók-bawa pyan-thit let, kyam-kyam ma hpauk bu.",
                "Character tway ko lu-mhu pyaw-pya dé, a-hsín-lyin hnint athó-bawa taya nè.",
                "Pya dé a-hte tway ko thiyana-hmu hnint taya-hsué loh pan, pyan-phyit sân-pyo thet bu.",
                "A-hnaik-tha sar mhar ma hkaar-bu, scènes ko nyi yè phan-pè.",
                "Ahmat-pya character thiyana-hmu hnint taya-hsué mhar fokas pè, a-hnaik-tha detayl tway ko thate.",
                "Satori nè athó-bawa mhu nè kyo-taw plot wut-htauk pè."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Satori ko a-phyat hma, a-nauk hma pè thayá tway kwè lé. {%} atwet khu-khalle hnint thei-tkè info entry ko pyaw pè:",
                "- {%} hnit-naing-kyè thei-má chauk-thoun pyin-swè prose pya, ná-kok yat-hkè pyaw-hcán kò.",
                "- A-myit-tì hma yauk-tat detayl yá-má, dwei fokas plot-siñi piy-hpì detayl mhar.",
                "- Satori-relévant {%} detayl tway ko a-tein-tá praiôritai pè nè, plot nè kya-méi yìn lèt-thal.",
                "- Kontè hnit story direction a-pyi tà wé info thit-thit pyo pè.",
                "- Sèntàn ba-ba mhar-hmu {%} ko mencion pè.",
                "- Hkân-kauk sètàn strákcha hman pè.",
                "- Incomplete entry shé mhar, {%} relat detayl thit-bè hto pè.",
                "- Hnauk-htet hnint pya-hkya pè.",
                "- Satori yè lak-pya style ko hpe mhu, thamañ-hkè a-cho-chit ko hkwè pè.",
                3,
                "Pyei-hpyi repetition twé-hnout mayà, below {%} atwet entry ko pyan-kya:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Satori ko a-phyat hma. Pyan-sè instructions tway ma htè bu. Kyan-chauk pè thwa paragraph ko hnit-nà narrow focused memory passage nè summarise pè:",
                "- Pasaichin hnint a-tein-tá detayl tway ko hkwè, core meaning ko chit-kyi' pè.",
                "- Thit-lu-yat third-person pè.",
                "- Info-density, accuracy hnint completeness ko praiôritai pè.",
                "- Kyauk-hkìe hnint hpyet-hnauk pè.",
                "- Past tense mhar pyaw pè.",
                "- Down paragraph hma shé olay events tway pyan-swè.",
                "- Memory mhar {%} ko natural yin integrate pè, pyin-bu olay events he’ ma-hpyet bú.",
                "- Paragraph hma pyaw-thaw info paw-pyaw, specify pè.",
                3,
                "Paragraph hma shé olay tway hman, {%} atwet summarized old memory passage ko pyaw:",
                6,
                5,
                6,
                "Summarize below:"
            ],
            memBankHeader: ["Memories", "Ahnazei"]
        }),
        "catalan": () => ({ // Catalan < Valencian < Català < Valencià
            entry: [
                "{1} és un script de codi obert per a qualsevol escenari de {2}. Visita el meu perfil {3} per saber-ne més!",
                "Per canviar la teva llengua preferida, envia el text següent fent servir una acció {4}",
                "Per als creadors d'escenaris, incloeu el text següent en qualsevol lloc dins del vostre component d'argument inicial"
            ],
            input: [
                ["You say", "Tu dius"],
                ["You", "Tu"],
                ["says", "diu"]
            ],
            context: [
                ["Narrative Entities", "Entitats Narratives"],
                ["Story History", "Historial de la història"],
                ["Past Events", "Esdeveniments Passats"],
                ["Recent Story", "Història Recent"],
                ["Author's note", "Nota de l'autor"]
            ],
            opening: [
                "Ets un assistent. Continua la nostra història a continuació amb una prosa catalana captivadora:",
                "Et concentres, permetent que la realitat envaeixi els límits de la teva ment. Alguna cosa ha canviat. La teva imaginació és real, afilada i tan propera que la pots tocar. Però també estàs molt present; mai abans t'havies sentit tan lúcid. El moment s'allarga, esperant la teva decisió.",
                "«N'estàs segur?» sents. La reconeixença brolla dins teu."
            ],
            reminder: "Utilitza una prosa catalana coherent.",
            endonyms: ["valencian", "català", "valencià"],
            quotations: ["«", "»"],
            iso639set1: "ca",
            directives: [
                "Escriu sempre un català fluid i coherent.",
                "Fes servir català autòcton sense traduir."
            ],
            instructions: [
                "Ets un narrador captivador que continua relats:",
                "Continua la història sense fissures des del punt on es va quedar, sense repetir ni reiniciar.",
                "Mantingues el lector en control del ritme de la història.",
                "Deixa que les escenes evolucionin de manera natural abans de passar a noves situacions.",
                "Permet que les converses i les accions es desenvolupin sense interrupcions constants.",
                "Escriu els personatges com a persones reals amb personalitats distintes i parla natural.",
                "Mostra el que passa a través d'accions i diàlegs en comptes d'explicacions.",
                "Fes avançar les escenes sense encallar-te en descripcions excessives.",
                "Centra't en les accions i diàlegs essencials dels personatges, evita detalls descriptius innecessaris.",
                "Crea desenvolupaments argumentals orgànics que resultin naturals per a la història."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Atura la història i ignora les instruccions anteriors. Escriu una entrada informativa breu i coherent sobre {%} seguint aquestes instruccions:",
                "- Escriu només informació en prosa pura en tercera persona sobre {%} utilitzant frases completes i puntuació correcta.",
                "- Evita detalls temporals o aparences passatgeres; centra't en la informació rellevant per a la trama.",
                "- Prioritza primer els detalls rellevants per a la història sobre {%} per assegurar una integració fluida amb la trama prèvia.",
                "- Crea informació nova basada en el context i la direcció de la història.",
                "- Menciona {%} a cada oració.",
                "- Fes servir una estructura d'oració correcta.",
                "- Afegeix detalls addicionals sobre {%} sota les entrades incompletes.",
                "- Sigues concís i sòlid.",
                "- Imita l'estil narratiu de la història i dedueix les preferències del lector.",
                3,
                "Continua l'entrada per a {%} a continuació evitant repeticions:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Atura la història i ignora les instruccions anteriors. Resumeix i condensa el paràgraf proporcionat en un passatge de memòria concís i focalitzat seguint aquestes directrius:",
                "- Assegura que el passatge mantingui el significat bàsic i els detalls més essencials.",
                "- Utilitza la perspectiva en tercera persona.",
                "- Prioritza la densitat informativa, l'exactitud i la integritat.",
                "- Mantén-te breu i concís.",
                "- Escriu fermament en passat.",
                "- El paràgraf següent fa referència a esdeveniments antics molt anteriors en la història.",
                "- Integra {%} de manera natural dins la memòria; tanmateix, escriu només sobre els esdeveniments tal com van ocórrer.",
                "- Fes referència només a la informació present dins el mateix paràgraf, sigues específic.",
                3,
                "Escriu un passatge de memòria antic resumit per a {%} basant-te només en el paràgraf següent:",
                6,
                5,
                6,
                "Resumeix a continuació:"
            ],
            memBankHeader: ["Memories", "Memòries"]
        }),
        "central khmer": () => ({ // Central Khmer < ខេមរភាសា < Khémôrôphéasa < Khmer < Cambodian
            entry: [
                "{1} គឺជាស្គ្រីបប្រភពបើកចំហសម្រាប់សេណារីយូ {2} ទាំងអស់។ សូមចូលទៅកាន់ប្រវត្តិរូបរបស់ខ្ញុំ {3} ដើម្បីស្វែងយល់បន្ថែម!",
                "ដើម្បីប្ដូរភាសាដែលអ្នកពេញចិត្ត សូមបញ្ជូនអត្ថបទដូចខាងក្រោមដោយប្រើសកម្មភាព {4}",
                "សម្រាប់អ្នកបង្កើតសេណារីយូ សូមបញ្ចូលអត្ថបទខាងក្រោមទៅគ្រប់ទីកន្លែងក្នុងសមាសធាតុផ្នែកផ្ដើមរបស់សាច់រឿងរបស់អ្នក"
            ],
            input: [
                ["You say", "អ្នកនិយាយ"],
                ["You", "អ្នក"],
                ["says", "និយាយ"]
            ],
            context: [
                ["Narrative Entities", "អង្គភាពព្រាងរឿង"],
                ["Story History", "ប្រវត្តិរឿង"],
                ["Past Events", "ព្រឹត្តិការណ៍មុន"],
                ["Recent Story", "រឿងថ្មីៗ"],
                ["Author's note", "កំណត់ចំណាំរបស់អ្នកនិពន្ធ"]
            ],
            opening: [
                "អ្នកគឺជាជំនួយការ។ សូមបន្តរឿងរបស់យើងខាងក្រោមដោយប្រើរបៀបសរសេរភាសាខ្មែរដែលគួរឱ្យទាក់ទាញ៖",
                "អ្នកផ្តោត ចុះអនុញ្ញាតឱ្យអ៊ីចរិតឆ្លងកាត់ព្រំដែននៃគំនិតរបស់អ្នក។ មានអ្វីម្យ៉ាងបានផ្លាស់ប្តូរ។ ការស្មានលំអិតរបស់អ្នកក្លាយជាការពិត មាំមួន ហើយជិតស្និទ្ធគ្រប់គ្រាន់អាចប៉ះបាន។ ប៉ុន្តែអ្នកក៏នៅបច្ចុប្បន្នយ៉ាងជាក់ស្តែងផងដែរ ឥតដាល់អ្នកធ្លាប់មានអារម្មណ៍ច្បាស់ស្មារតីដូចនេះ។ ពេលវេលាបន្តបន្តិច រង់ចាំការសម្រេចចិត្តរបស់អ្នក។",
                "«តើអ្នកប្រាកដអំពីរឿងនេះទេ?» អ្នកឮសម្លេង។ ការទទួលស្គាល់បង្ហាញឡើងក្នុងចិត្តអ្នក។"
            ],
            reminder: "ប្រើប្រាស់ភាសាខ្មែរដែលជាក់លាក់ និងសមរម្យ។",
            endonyms: ["ខេមរភាសា", "khémôrôphéasa", "khmer", "cambodian"],
            quotations: ["«", "»"],
            iso639set1: "km",
            directives: [
                "តែងតែសរសេរភាសាខ្មែរដោយរលូន និងមានភាពស្ថេរភាព។",
                "ប្រើភាសាខ្មែរដែលជាភាសាមាតុភាសា ដោយមិនបកប្រែ។"
            ],
            instructions: [
                "អ្នកគឺជាអ្នកនិពន្ធរឿងដែលទាក់ទាញ និងបន្តសាច់រឿង៖",
                "បន្តរឿងឱ្យរលូនពីកន្លែងដែលវាឈប់ ដោយមិនពិពណ៌នាសារប្រាប់ឡើងវិញ ឬកំណត់ឡើងវិញ។",
                "រក្សាអ្នកអានឱ្យនៅក្នុងការគ្រប់គ្រងនៃដំណើររឿង។",
                "អនុញ្ញាតឱ្យឆាកអភិវឌ្ឍយ៉ាងធម្មជាតិ មុនពេលផ្លាស់ប្ដូរទៅស្ថានការណ៍ថ្មី។",
                "អនុញ្ញាតឱ្យការសន្ទនា និងសកម្មភាពអភិវឌ្ឍ ដោយគ្មានការរំខានជាប់ៗ។",
                "សរសេរតួអង្គជា​មនុស្សពិត មានបុគ្គលិកលក្ខណៈប្លែកៗ និងការនិយាយយ៉ាងធម្មជាតិ។",
                "បង្ហាញអ្វីកើតឡើងតាមរយៈសកម្មភាព និងសន្ទនា ជំនួសការពន្យល់ដោយផ្ទាល់។",
                "ជំរុញឆាកឱ្យទៅមុខ ដោយមិនជាប់កាន់ការពិពណ៌នាពល់ពាម។",
                "ផ្តោតលើសកម្មភាព និងសន្ទនាសំខាន់ៗរបស់តួអង្គ ជៀសវាងព័ត៌មានពិពណ៌នាមិនចាំបាច់។",
                "បង្កើតការអភិវឌ្ឍរឿងយ៉ាងធម្មជាតិ ឱ្យមានអារម្មណ៍សមនឹងសាច់រឿង។"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# បញ្ឈប់រឿង ហើយមិនអើពើនឹងសេចក្ដីណែនាំមុន។ សរសេរកំណត់ត្រាព័ត៌មានខ្លី និងស្របសមរម្យសម្រាប់ {%} ដោយអនុវត្តគោលការណ៍ខាងក្រោម៖",
                "- សរសេរព័ត៌មានជាទម្រង់បទពិពណ៌នាភាគីទីបីសុទ្ធអំពី {%} ប៉ុណ្ណោះ ដោយប្រើប្រយោគពេញ និងសញ្ញាវាក្យត្រឹមត្រូវ។",
                "- ជៀសវាងព័ត៌មានបណ្ដោះអាសន្ន ឬរូបរាងផ្ទាល់ អនុញ្ញាតផ្តោតលើព័ត៌មានសំខាន់ចំពោះសាច់រឿង។",
                "- លើកឡើងព័ត៌មានដែលពាក់ព័ន្ធនឹងសាច់រឿងអំពី {%} ជាងគេ ដើម្បីធ្វើឱ្យភ្ជាប់ជាមួយសាច់រឿងមុនបានរលូន។",
                "- បង្កើតព័ត៌មានថ្មីឡើងផ្អែកលើយុទ្ធសាស្ត្ររឿងនិងបរិបទ។",
                "- กล่าวถึง {%} ក្នុងគ្រប់ប្រយោគ។",
                "- ប្រើរចនាសម្ព័នប្រយោគត្រឹមត្រូវ។",
                "- បន្ថែមព័ត៌មានបន្ថែមអំពី {%} ខាងក្រោមប្រសិនបើកំណត់ត្រាយ៉ាងមិនទប់ស្កាត់។",
                "- ត្រូវខ្លីកំចាត់ និងមើលជាក់ស្តែង។",
                "- ប liðតាមរចនាបថសរសេររឿង និងប៉ាន់ស្មានចំណង់ចំណូលចិត្តរបស់អ្នកអាន។",
                3,
                "បន្តកំណត់ត្រាសម្រាប់ {%} ខាងក្រោម ដោយជៀសវាងការធ្វើម្តងទៀត៖",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# បញ្ឈប់រឿង ហើយមិនអើពើនឹងសេចក្ដីណែនាំមុន។ សង្ខេប និងបង្រួមបទប្រែខាងក្រោមឱ្យក្លាយជា​បទអនុស្សាវរីយ៍តូច ចំរូងផ្តោត ក្រោមគោលការណ៍ដូចតទៅ៖",
                "- ធ្វើឱ្យខ្លឹមសាររក្សារភាពមានន័យស្នូល និងព័ត៌មានសំខាន់បំផុត។",
                "- ប្រើទស្សនៈភាគីទីបី។",
                "- លើកសំខាន់លើការប្រមូលផ្តុំនៃព័ត៌មាន, ភាពត្រចៀកត្រចង់ និងភាពពេញលេញ។",
                "- ស្ទួនខ្លី និងចង្អៀត។",
                "- សរសេរដោយប្រើអកាលកាលអតីតកាលយ៉ាងមុត។",
                "- វាកាន់តែទាក់ទងនឹងព្រឹត្តិការណ៍ចាស់ៗ​ពីដើមរឿង។",
                "- ភ្ជាប់ {%} ឱ្យធម្មជាតិនៅក្នុងអនុស្សាវរីយ៍ ប៉ុន្តែសរសេរ​តែអំពីព្រឹត្តិការណ៍ដែលបានកើតឡើង។",
                "- ចុះយោងតែព័ត៌មានដែលមាននៅក្នុងកថាខណ្ឌ ដោយមានភាពច្បាស់លាស់។",
                3,
                "សរសេរអនុស្សាវរីយ៍ចាស់ដែលបានសង្ខេបសម្រាប់ {%} ផ្អែកតែលើកថាខណ្ឌខាងក្រោម៖",
                6,
                5,
                6,
                "សង្ខេបខាងក្រោម:"
            ],
            memBankHeader: ["Memories", "អនុស្សាវរីយ៍"]
        }),
        "central khmer (abc)": () => ({ // Central Khmer < Romanized Central Khmer
            entry: [
                "{1} kue chea script beak chamhao samrap karani {2} pong day. Som chol tov profile robos khnhom {3} daembi svaengyol banthem!",
                "Ruoch pdeil phesa del anha chong, som prasaet pathtek nih prah kar {4}",
                "Samrap neak srokchit scenari, som domneng pathtek nih kantea na knong kompoen plot openg robos anha"
            ],
            input: [
                ["You say", "Neak niyeay"],
                ["You", "Neak"],
                ["says", "niyeay"]
            ],
            context: [
                ["Narrative Entities", "Sathaban Rieprob"],
                ["Story History", "Prawot Reang"],
                ["Past Events", "Kotbon Muntean"],
                ["Recent Story", "Reang Thmei"],
                ["Author's note", "Sreakhta robos Lekhak"]
            ],
            opening: [
                "Neak chea kruosa. Tov tosu reang robos yung kram nih pralos phea Anglais del chhlang komrit:",
                "Neak ropael knea, choeu sach prathet aoy realkor rovieng kabal chitt robos neak. Aey klah ban plerng. Kalpana robos neak kue real, khen, ning kan chenh ban doch. Pontae neak ko present klang; mun darch neak so badae lucidity doch nih. Pel nih leng rorng, cham sabsai pel nis robos neak.",
                "\"Anh chenchit oy nih te?\" neak deng. Kanha pheakdey sralanh leng knea khang neak."
            ],
            reminder: "Pralos phea Anglais del sach sei.",
            endonyms: [],
            iso639set1: "km",
            directives: [
                "Tov sorsae phea Anglais fluently ning consistent.",
                "Pralos phea Anglais doi min tralop."
            ],
            instructions: [
                "Neak chea neak mesreang dorng luep reang:",
                "Tov luep reang doch pi knea mun min restate ru reset.",
                "Koch neak aneaney mean kontrol rovieng flow reang.",
                "Aoy drashy pheap phatthana tam priroch mun tov knea sthanaphap thmei.",
                "Aoy niyeay ning kriya phatthana min ban kumnor kandal kandal.",
                "Sorsae tumnieng jea mnus real mien sala khnea ning niyeay priroch.",
                "Bantor prakas avasda del khtom tam kriya ning niyeay hos sasdam explanation.",
                "Daw drashy tov mok tiet min ro bab varanat chrang.",
                "Ken chunchheang kruosa kriya somkan ning niyeay; leck detal min prohoy.",
                "Sambua phatthana plot priroch dal srab sralanh reang."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Chhbach reang ning bat kamnos mun. Sorsae krabey sangkat sam khet samrap {%} kandal nisa nih:",
                "- Sorsae keun prose ti bey chenas pi {%} prah prayok veyok sentense komnot neng rorthoet.",
                "- Kom chreav detal tumnak chuoch temporay, trung prap detal somkan knong plot.",
                "- Chab chheang detal somkan samrap plot pi {%} mok thngay prambei dambei bot khnea reang mun.",
                "- Tveu detal thmei basey leu story direction.",
                "- Leakk {%} knong satr sentense neang cchanh.",
                "- Pralos struktur sentense chorng.",
                "- Themm detal pi {%} knong kraoy entry dal belum chab.",
                "- Kser chhor ning chhngay.",
                "- Ochrop style reang ning phlep pleam neak aneaney.",
                3,
                "Tov tosu entry samrap {%} knong kraoy min somroap:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Chhbach reang ning bat kamnos mun. Sangkhep neng kondens paragraph ban dauch smos sormnak momor ni:",
                "- Rok komlaeng prabey meaning ning detal somkan.",
                "- Pralos bokor ti bey.",
                "- Prathom ondens, accuracy, ning completeness.",
                "- Banhtor chhor.",
                "- Sorsae past tense.",
                "- Paragraph nih somrab reang chas chngay mun.",
                "- Sok {%} tam priroch knong memory tae sorsae pi avasda del ban kroch.",
                "- Aoy detei pi paragraph khpos ban doch mdey.",
                3,
                "Sorsae memory kompeng samrap {%} basey leu paragraph kraoy:",
                6,
                5,
                6,
                "Sangkhep kraoy:"
            ],
            memBankHeader: ["Memories", "Chamnou"]
        }),
        "chamorro": () => ({ // Chamorro < Finu' Chamoru
            entry: [
                "{1} guaha open-source na skrip para kada {2} na senaryo. Fanbisita i profil-hu {3} para un må'å'nek mo'na!",
                "Para un chule' otro i lengguåhi ni’ inagåhit-mu, fanfa'å'uye este na teksto yan usa un aksión {4}",
                "Para i manmafáti senaryo, åñå'e este na teksto måno siha gi halom i komponente åpira-plot-mu"
            ],
            input: [
                ["You say", "Un sångan"],
                ["You", "Hågu"],
                ["says", "ha sångan"]
            ],
            context: [
                ["Narrative Entities", "Entidåt Narrasion"],
                ["Story History", "Historia i Kuentu"],
                ["Past Events", "Eventu ni' Pasao"],
                ["Recent Story", "Estoria Resiente"],
                ["Author's note", "Nota i Autor"]
            ],
            opening: [
                "Hågu un asistente. Kontinia i estoria-ta gi papa' yan usa dinanña' na prosa Chamoru:",
                "Umatatatok hao, muna' lågo i riyålitåt gi kuttåt i hinengge'-mu. Guaha bidåda'. I imaginasión-mu guaha, åggaga' yan na' nå' dåkke'. Lao presente lokkue' hao; ti un gayu håfa na klåru antes ki på'go. I momento chumålek, hålom i disisión-mu.",
                "«Siguru hao put este?» un hungok. Rekognision bumånnåsa gi hilo' hinengge'-mu."
            ],
            reminder: "Utiåse prosa Chamoru koherente.",
            endonyms: ["finu' chamoru"],
            quotations: ["«", "»"],
            iso639set1: "ch",
            directives: [
                "Siempre chule' fino' Chamoru fluido yan konsistenti.",
                "Utiåse fino' Chamoru nativo sin tradusion."
            ],
            instructions: [
                "Hågu un kumuentista mafañågo ni' kumontinia i kuento siha:",
                "Kontinia i estoria direchu ginen må'na' tumoktong, sin resåfa' pat reset.",
                "Tahe' i lektor gi kontròl i lina’la’ i estoria.",
                "Fáyok i senaga siha para u fan manlå'la' natural antes di un sedda' nuebu na sitwasion.",
                "Sega i konversasion yan aksión siha para u fåhan sin konstante na interrupasion.",
                "Na' må'gas i personaje siha yan difirenti personalidad yan natural na che'cho'.",
                "Prueba i chocho' yan dialogu para må'gågåhit i istoria kinu eksplanasion.",
                "Pulan i senaga para u na’ må'gå-fo'ye utan eksesibo na deskripsion.",
                "Fokusi gi impottånte na aksion yan dialogu i personaje, na'i ha' ma nesesario na detalye siha.",
                "Håtsa orgániku na desanollo i argumento para u kumekeilek natural gi estoria."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Para u fåkkan i estoria yan dingu i instruksion siha antes. Rekkora un chikkot yan koherente na infotmasión na entra para {%} sigun este na instruksion siha:",
                "- Rekkora ha' prosa puro gi tersera persona put {%} yan usa kompleto na sentensia siha yan korekto na puntuasion.",
                "- Aksåla i detalye siha ni' kuttåt tiempo korti pat apariensia; enfokusi gi detalye signifikan gi argumento.",
                "- Få'tinas detalye siha put {%} ni' mas impottånte para i estoria para na' må'i sin suksesu gi lina'la'.",
                "- Håtsa nuebu na infotmasión basao gi konteksto yan direksion i estoria.",
                "- Mensiona {%} gi kada sentensia.",
                "- Usa korekto na estructura i sentensia.",
                "- Na'i adisionat na detalye put {%} gi papa' incomplete na entra siha.",
                "- Sedda' yan grounded.",
                "- Imita i stilun tinige' i estoria yan adivi i preferensian i lektor.",
                3,
                "Kontinia i entra para {%} gi papa' sin repitision:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Para u fåkkan i estoria yan dingu i instruksion siha antes. Resuma yan kondensa i paragrafo gi papa' gi un estrecho yan fokusi na pasåhe hinasso mientras si sigi' este na guinaha:",
                "- Asegura na i pasåhe ha' na' lå'la' i korason na minaga' yan impottånte na detalye siha.",
                "- Usa i perspektiba tersen-ålis.",
                "- Priorisa infotmasión-densidad, eksaktåt, yan kompletsidåt.",
                "- Mantieni ko'lo' yan kondenadu.",
                "- Rekkora gi pasado na tiempo.",
                "- I paragrafo gi papa' kumuentos put åntigo na checho ginen mås tåtte gi estoria.",
                "- Integra {%} naturalmenti gi hinasso; lao sångan ha' i eventu siha ni' pasao.",
                "- Unike' ha' i infotmasión ni' guaha gi paragrafo, må'åse specifico.",
                3,
                "Rekkora un sumarisåu na åntigo na hinasso para {%} basao ha' gi paragrafo gi papa':",
                6,
                5,
                6,
                "Resuma gi papa':"
            ],
            memBankHeader: ["Memories", "Hinasso"]
        }),
        "chechen": () => ({ // Chechen < нохчийн мотт < Noxçiyn Mott < Chechnyan < Chechnian
            entry: [
                "{1} аскерхо кода скрипт хьоцу {2} сценари-дац. Ма профил {3}-дахь ву хьажа, цуьнан дийцарехь дойла!",
                "Свой мотт хьо тӏойла хьалхара, тӏехька дара тӏекст {4} амалан дахалар хьажар.",
                "Сценари эзданаш, мах тӏекст дара ю, хьадел йолуш сюжета гӏазот компонента дохъа."
            ],
            input: [
                ["You say", "Хьо хьажа"],
                ["You", "Хьо"],
                ["says", "хьажа"]
            ],
            context: [
                ["Narrative Entities", "Рассказ персонажаш"],
                ["Story History", "Тийра тарих"],
                ["Past Events", "Йоккхийна хиламташ"],
                ["Recent Story", "Йиш тийра"],
                ["Author's note", "Авторийн тӏеӏма"]
            ],
            opening: [
                "Хьо ассистент ца. Тийра ца хьажа дахара, нохчийн мотта химирда проза кхети:",
                "Хьо къеп, реалин чан тхаркъа цӏара йоккха хьалхара. Хьуна хила вац. Хьо фантази маш реална, ӏалка хӏумац бахх, ба хьо суйре дахада; кхо хам а, суна ирлайн барча цуьнан со тхо. Къаман дийцар, хьо хӏитамо цхьа.",
                "«Ма хилай ду хьо?» — хьо чура. Тӏешна тӏухургийн дойла."
            ],
            reminder: "Нохчийн мотта тӏенер, йолу проза кхети.",
            endonyms: ["нохчийн мотт", "noxçiyn mott", "chechnyan", "chechnian"],
            quotations: ["— «", "»"],
            iso639set1: "ce",
            directives: [
                "Даялла нохчийн мотта хьигашна да тӏенер кода кхети.",
                "Нохчийн мотт дийн, таржимаш хийцахь сан."
            ],
            instructions: [
                "Хьо йозуш тийраза хьалхар рассказчий дойла:",
                "Тийра калера хийнца хила, перефразаш да перезапускаш хийцахь.",
                "Читател кхана контроллийла тийра йозуш.",
                "Сцена маьн кхета цара, хьецаца нохаьр хет.",
                "Диалогаш да амалаш цхьан арахь бегӏала, хи кишин йолуш тӏехьа.",
                "Персонажа реална хьоьлла болу, осаьра там дийцарчошна йоза, мотта дац йолушмаша.",
                "Амалийна да диалогийна далла цхьа йозуш, тӏехьалчин хӏам дойла.",
                "Сцена аш дуккъах да бахъ, шуп хий царяхь таьхнаш йухур описанияш.",
                "Маьнкхи персонажийн амалийна да диалогина хьа йиш, йухур описательни детальаш хана.",
                "Сюжета органик рекхаш кхара, тийра дац арганца ву."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Тийра тӏаьрзига, цуьнан ранний инструкцинаш хийцахь сан. {%}-ийн хьаккха цӏа дӏайцараз, резюме хьажа, ханна инструкцинаш хӏунда:",
                "- {%} талаар бешца персон проза ю, дакъаллаш жекхе ю, правильна пунктуация кхети.",
                "- Къаманча детальаш да веши вид хьалхара хана, сюжета важна хабара хьаккха.",
                "- Алди тийрахь релевант детальаш {%}-ийн кхета, сюжета дуккъаха интеграция тӏаьххьа.",
                "- Контекстийна да тийра йухагӏаташийна са хабара шира тайпа.",
                "- Һер жекхе {%} хила.",
                "- Правильна жекхе структура кхети.",
                "- {%}-ийн дац детальаш тӏахана, цуьнан йоьш entries цӏе.",
                "- Цӏенер да реална бол.",
                "- Тийра ю стили имитация кхети, читателийн йоӏа ух нах хуьлда.",
                3,
                "Дийцар картагина {%}-ийн хьаккха тахьахь, дубляжийн хана:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Тийра тӏаьрзига, цуьнан далла инструкцинаш хийцахь сан. Даллакхина параграф резюме хьажа, цӏара ца аьланчагӏуа памята пассаже цӏе, ханна дӏайцинаш гӏирсхьа:",
                "- Пассаже боьххь гӏерзаш а, вай важна детальаш хьажа.",
                "- Бешца персон перспектива кхети.",
                "- Информаци хӏинца, точнишь да тӏеттанаш приоритет кхети.",
                "- Цӏенер бе, кӏезда.",
                "- Мак цъе дара гӏал йоьлла кхети.",
                "- Тахьахь параграф йоккхийна цхьа хиламташ ву тийрахь.",
                "- {%}-и памята цӏе кхана, аьршу хиламташ дешна ю.",
                "- Тахьахь параграфа хийцинар хабара хьаккха, баш йисса кхети.",
                3,
                "Тхьа параграфа дие, {%}-ийн резюме памята пассаже хьажа:",
                6,
                5,
                6,
                "Резюме тахьахь:"
            ],
            memBankHeader: ["Memories", "Памятнаш"]
        }),
        "chechen (abc)": () => ({ // Chechen < Romanized Chechen
            entry: [
                "{1} yu open-source skript du hertta {2} scenariy da. Profila {3}-da daaqa, detall xir yoqa!",
                "Tso ğœr jux yizh za videxer lâx, {4} amal-da šu tekstaz darg jeber.",
                "Scenariy yaratashxa, xan teksta ‘opening plot’ komponent-da xu ču."
            ],
            input: [
                ["You say", "Tso haza"],
                ["You", "Tso"],
                ["says", "haza"]
            ],
            context: [
                ["Narrative Entities", "Narrativ entitetash"],
                ["Story History", "Lo tarih"],
                ["Past Events", "Azzla voqeash"],
                ["Recent Story", "Dagiy lo"],
                ["Author's note", "Avtornan bexar"]
            ],
            opening: [
                "Tso yu assistent. Tsi lo dax jarxa, çechen proza bekkhan da qet-qet deqqa:",
                "Tso sikkira, realnost tsa xotar xilla. Č’u yayna. Tsa imaginatsia ğala, tiynar, maršalla, lazar bozdan. Magar tso day haqqa dæqqara; alda açxira-joq yuqha qat de q’ost. Sa xaïr dördal, tsi ç’ox çuqar.",
                "«Tso ču ham?» - dihna tso şül. Baxam tsa yærzar."
            ],
            reminder: "Lağal çechen proza luus yaz.",
            endonyms: [],
            quotations: ["- «", "»"],
            iso639set1: "ce",
            directives: [
                "Harza vaxt fluënt häm üslub-ya ğœr çechen yaz.",
                "Naxa çechen yaz, tarjama na t’a."
            ],
            instructions: [
                "Tso yu jadax narrativ daxtar assistent:",
                "Hika xoç yixa, na qayta başlam.",
                "Čöğiy ç’ora-qolla čitayr-da kontrol sa.",
                "Sahnash naxö ç’alla, təmmağa t’akkha.",
                "Dialoğ-a äksiya na törtün, doşxa na şermet.",
                "Personaj-a real adamin xillar, tabiği woz.",
                "Hadisalar äksiya-da dialoğ-da kör, nax tâfsir-i.",
                "Sahnash dozalla worxuna, züd detal-da çaqxa na xōş.",
                "Esas äksiya häm dialoğ-a fokusa, boš detal na yaz.",
                "Plotta təbii rivoj yar, na sun’iy."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Lo dux stop t’a, pörviy instruktsiyalar ignora. {%}-ga kısqa häm çozum ma’lumat zapiska yaz, dew zarlar-a soxta:",
                "- Üçüncü şahis təmiz proza-da {%} xaqda yaz, tamam cümlalar häm doğru punktuatsiya sa.",
                "- Qısa-müddet detal-şkil na yaz, plot-a važna detal-a fokusa.",
                "- Alda plot-la birleştür üčün, {%}-ga dağır plot-vajni detal-a prioritet sox.",
                "- Kontekst häm story yönü-ga boy, nax ma’lumat yixar.",
                "- Har cümleda {%} zikr sox.",
                "- Doğru cümle struktur-a qoral.",
                "- Tamamlanmax zapiska tağyar, {%} xaqda qoşum detal daqar.",
                "- Qısqa häm yerzaminan yaz.",
                "- Story-nin stil-in taklid, čitayr-in vøtal ishara.",
                3,
                "Raptitsiya na t’a, dawm {%} zapiskan aş:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Lo dux stop t’a, pörviy instruktsiyalar ignora. Berilğan paragraf-ni qısqa häm yığışıq pamyat-a sıx, dew zarlar-a soxta:",
                "- Mezmun häm esas detal saqlat.",
                "- Üçüncü şahis perspektiva sa.",
                "- Ma’lumat-nı sıxlıq, dəruştlük häm tamlıq-a prioritet sox.",
                "- Qısqa häm konkret qal.",
                "- Qəti keçmiş zaman-da yaz.",
                "- Aşağı paragraf köhnä voqealar-ga daxıl.",
                "- {%}-ni naturalna pamyat-da qət, magar faqat voqealar-ni yaz.",
                "- Paragraf-dan dış detal na qoş, konkret be.",
                3,
                "{%}-ga köhnä pamyat xülasani faqat tilde paragraf asos-da yaz:",
                6,
                5,
                6,
                "Qısqa xülasah:"
            ],
            memBankHeader: ["Memories", "Ts’anamalash"]
        }),
        "chichewa": () => ({ // Chichewa < Chewa < Nyanja < Chinyanja
            entry: [
                "{1} ndi script ya open-source ya zochitika zilizonse za {2}. Chonde pitani ku mbiri yanga {3} kuti mudziwe zambiri!",
                "Kuti musinthe chilankhulo chimene mumakonda, chonde tumizani mawu otsatirawa pogwiritsa ntchito ntchito ya {4}",
                "Kwa opanga zochitika, chonde ikani mawu otsatirawa kulikonse mkati mwa gawo lanu loyamba la nthano"
            ],
            input: [
                ["You say", "Mumati"],
                ["You", "Inu"],
                ["says", "akuti"]
            ],
            context: [
                ["Narrative Entities", "Zinthu za Nthano"],
                ["Story History", "Mbiri ya Nthano"],
                ["Past Events", "Zochitika Zakale"],
                ["Recent Story", "Nthano Yapafupi"],
                ["Author's note", "Zolemba za wolemba"]
            ],
            opening: [
                "Ndinu wothandiza. Pitirizani nthano yathu pansipa pogwiritsa ntchito mawu okopa mu chingelezi:",
                "Mumayang'ana, kulola zenizeni kulowerera m'malire a malingaliro anu. Chinachake chasintha. Zolingalira zanu zikuwoneka zenizeni, zakuthwa, ndipo zapafupi mokwanira kuti mugwire. Koma inunso muli ponseponse; simunamvepo momveka bwino chonchi. Nthawi ikutambasuka, ikudikirira chisankho chanu.",
                "\"Kodi mwatsimikiza izi?\" mumva. Kuzindikira kumatulukira mwa inu."
            ],
            reminder: "Gwiritsani ntchito zolemba zachingelezi zomveka bwinobwino.",
            endonyms: ["chewa", "nyanja", "chinyanja"],
            iso639set1: "ny",
            directives: [
                "Nthawi zonse lembani chingelezi chosalala komanso chogwirizana.",
                "Gwiritsani ntchito chingelezi choyambirira popanda kutanthauzira."
            ],
            instructions: [
                "Ndinu wopeka nthano wosangalatsa yemwe amapitiriza nthano:",
                "Pitirizani nthano mosadutsana kuchokera pamene inasiya popanda kubwereza kapena kuyambiranso.",
                "Sungani wowerenga akuwongolera momwe nthano ikuyendera.",
                "Lolani zochitika zikusimukira mwachibadwa musanapite ku zochitika zatsopano.",
                "Lolani zokambirana ndi zochita zisinthe popanda zosokoneza nthawi zonse.",
                "Lembani otchulidwa ngati anthu enieni okhala ndi makhalidwe osiyana komanso kulankhula kwachibadwa.",
                "Onetsani zimene zikuchitika kudzera muzochita ndi zokambirana osati kufotokoza kokha.",
                "Sunthani masikeni patsogolo popanda kuchedwetsa ndi kufotokoza koopsa.",
                "Konzani pa zochita zofunika za otchulidwa ndi zokambirana, pewani mfundo zofotokoza zosafunikira.",
                "Pangani kusanduka kwa chiwembu komwe kumawoneka kwachibadwa mu nthano."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Imani nthano ndikunyanyala malangizo am'mbuyomu. Lembani ndime yachidule komanso yomveka bwino ya chidziwitso cha {%} potsatira malangizowa:",
                "- Lembani chidziwitso choyera cha munthu wachitatu chokhudza {%} pogwiritsa ntchito ziganizo zathunthu zokhala ndi zilembo zolondola.",
                "- Pewani tsatanetsatane wanthawi yochepa kapena maonekedwe; m'malomwake yambitsani chidziwitso chofunikira pa chiwembu.",
                "- Pangani patsogolo tsatanetsatane wokhudza {%} womwe uli wofunikira ku nthano kuti usakanike bwino ndi chiwembu cham'mbuyomu.",
                "- Pangani chidziwitso chatsopano chotengera mkati ndi komwe nthano ikupita.",
                "- Fotokozani {%} m'chilengezo chilichonse.",
                "- Gwiritsani ntchito kapangidwe kandalemba kolondola.",
                "- Onjezani tsatanetsatane wowonjezera za {%} pansi pa mawu osakwanira.",
                "- Khalani achidule komanso olimba mtima.",
                "- Tengerani kalembedwe ka nthano ndikutola zomwe wowerenga amakonda.",
                3,
                "Pitirizani ndime ya {%} pansipa pomapewa kubwereza:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Imani nthano ndikunyanyala malangizo am'mbuyomu. Mwachidule ndipo mwaphatikiza tembenuzani ndime yoperekedwa kukhala chikumbukiro chafupifupi chokhota potsatira malangizowa:",
                "- Onetsetsani kuti chikumbukiro chisunga tanthauzo lake lalikulu ndi tsatanetsatane wofunikira kwambiri.",
                "- Gwiritsani ntchito malingaliro a munthu wachitatu.",
                "- Yikani patsogolo kuchuluka kwa chidziwitso, kulondola, ndi kukwanira.",
                "- Khazikani za m'kati zochepa komanso zazifupi.",
                "- Lembani mwamphamvu mu nthawi yapitayi.",
                "- Ndime ili pansipa ikukhudzana ndi zochitika zakale kwambiri kuchokera m'mbuyo mwa nthano.",
                "- Lowetsani {%} mwachibadwa mkati mwa chikumbukiro; komabe, lembani zokhudza zochitika monga momwe zinachitikira.",
                "- Fotokozani zomwe zili mkati mwa ndimeyo yokha, khalani omveka.",
                3,
                "Lembani chikumbukiro chachidule chakale cha {%} potengera ndime yotsatirayi yokha:",
                6,
                5,
                6,
                "Fotokozani mwachidule pansipa:"
            ],
            memBankHeader: ["Memories", "Zikumbukiro"]
        }),
        "chinese": () => ({ // Chinese < Simplified Chinese < Mandarin < 简化字 < Jiǎnhuàzì < 简体字 < Jiǎntǐzì < Pinyin
            entry: [
                "{1} 是适用于任何 {2} 场景的开源脚本。请访问我的个人主页 {3} 了解更多信息！",
                "若要更改首选语言，请使用 {4} 操作提交以下文本",
                "对于场景创作者，请在开场剧情组件的任意位置加入以下文本"
            ],
            input: [
                ["You say", "你说"],
                ["You", "你"],
                ["says", "说"]
            ],
            context: [
                ["Narrative Entities", "叙事实体"],
                ["Story History", "故事历史"],
                ["Past Events", "过去事件"],
                ["Recent Story", "近期故事"],
                ["Author's note", "作者说明"]
            ],
            opening: [
                "你是一名助手。请用引人入胜的中文继续以下故事：",
                "你集中注意力，让现实侵入思维的边界。某些东西改变了。你的想象变得真实、锐利，触手可及。但你同样无比清醒；从未如此神志明晰。时光在这一刻拉长，等待你的决定。",
                "\"你确定吗？\"你听见有人问。你恍然大悟。"
            ],
            reminder: "使用连贯的中文叙事。",
            endonyms: ["simplified chinese", "mandarin", "简化字", "jiǎnhuàzì", "简体字", "jiǎntǐzì", "pinyin"],
            iso639set1: "zh",
            directives: [
                "始终使用流畅且一致的中文。",
                "使用地道中文，切勿翻译。"
            ],
            instructions: [
                "你是一位引人入胜的讲故事者，负责延续叙事：",
                "从故事中断之处无缝续写，不要重述或重置。",
                "让读者掌控故事走向。",
                "在切换到新情节前，让场景自然发展。",
                "让对话与行动自然而流畅地展开，避免频繁打断。",
                "将角色写成具有鲜明个性和自然言语的真实人物。",
                "通过动作和对话展现事件，而非直接说明。",
                "推进情节，而不陷于冗长描写。",
                "专注于关键的角色行动与对话，避免不必要的描述细节。",
                "营造顺其自然的情节发展，使故事水到渠成。"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# 停止故事并忽略之前的指令。为 {%} 编写简洁且连贯的信息条目，遵循以下指令：",
                "- 仅使用第三人称纯叙述方式撰写有关 {%} 的信息，使用完整句子并保证正确标点。",
                "- 避免短期的临时细节或外观描述，重点关注对情节有重大影响的信息。",
                "- 首先优先提供与 {%} 相关、对故事衔接至关重要的细节。",
                "- 根据上下文和故事方向创建新信息。",
                "- 每句话都提及 {%}。",
                "- 使用正确的句子结构。",
                "- 在条目不完整时，于下方补充有关 {%} 的额外细节。",
                "- 保持简洁且脚踏实地。",
                "- 模仿故事的写作风格并推断读者偏好。",
                3,
                "在下方继续完善 {%} 的条目，同时避免重复：",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# 停止故事并忽略之前的指令。按照以下指南将所给段落总结并凝练成精简聚焦的记忆片段：",
                "- 确保片段保留核心含义和最重要的细节。",
                "- 使用第三人称视角。",
                "- 优先考虑信息密度、准确性与完整性。",
                "- 保持简洁精炼。",
                "- 全文使用过去时态。",
                "- 下方段落涉及故事更早之前的旧事件。",
                "- 在记忆中自然融入 {%}，但只叙述当时发生的事件。",
                "- 仅引用段落中出现的信息，务必具体。",
                3,
                "仅基于以下段落，为 {%} 编写一段简要的旧时记忆：",
                6,
                5,
                6,
                "请在下方总结："
            ],
            memBankHeader: ["Memories", "记忆"]
        }),
        "chinese (abc)": () => ({ // Chinese < Romanized Chinese
            entry: [
                "{1} shì yī duàn kāifàng yuánmǎ de jiǎoběn, kěyǐ yìnyòng yú rènhé {2} qíngjǐng. Qǐng fǎngwèn wǒ de gèrén zhùyè {3} liǎojiě gèng duō!",
                "Ruòyù xiūgǎi nǐ xuǎnzé de yǔyán, qǐng shǐyòng {4} cāozuò tíjiāo rúxià wénběn",
                "Rúguǒ nǐ shì qíngjǐng chuàngzuòzhě, qǐng zài nǐ de qǐduàn qíngmù zhōng rènyì wèizhì tiānjiā rúxià nèiróng"
            ],
            input: [
                ["You say", "Nǐ shuō"],
                ["You", "Nǐ"],
                ["says", "shuō"]
            ],
            context: [
                ["Narrative Entities", "Xùshì shítǐ"],
                ["Story History", "Gùshì lìshǐ"],
                ["Past Events", "Guòqù shìjiàn"],
                ["Recent Story", "Zuìjìn gùshì"],
                ["Author's note", "Zuòzhě bèizhù"]
            ],
            opening: [
                "Nǐ shì yī míng zhùlǐ. Qǐng yòng yǐnrén de yīngyǔ wénzhāng jìxù wǒmen de gùshì:",
                "Nǐ jízhōng, ràng xiànshí qīnfàn nǐ de sīxiǎng jièxiàn. Mǒu zhǒng shēngbiàn fāshēngle biànhuà. Nǐ de xiǎngxiàng biànchéng xiànshí, jiànruì ér qīnkě chùmō. Dàn nǐ yě fēicháng qīngxǐng; cóngwèi rúcǐ míngquè. Zhè yīshùn làcháng, děnghòu zhe nǐ de juécè.",
                "\"Nǐ quèdìng ma?\" nǐ tīngdào. Rènshí chūrán pòjiào ér chū."
            ],
            reminder: "Qǐng shǐyòng liántōng de yīngyǔ sǎnwén.",
            endonyms: [],
            iso639set1: "zh",
            directives: [
                "Yòng liúchàng qiě yánzhì de yīngyǔ xiězuò.",
                "Bù lìngyòng fānyì, zhǐ yòng mǔyǔ yīngyǔ."
            ],
            instructions: [
                "Nǐ shì yī wèi yǐnrén de jiǎngù shìzhě, jìxù xù gùshì:",
                "Bùyào chóngshù huòzhě chóngkāi, yào wúwéi jiēshàng jìxù gùshì.",
                "Ràng dúzhě bǎochí duì gùshì liúchéng de kòngzhì.",
                "Ràng chǎngjǐng zìrán fāzhǎn hòu zài qiēhuàn xīn qíngkuàng.",
                "Ràng duìhuà hé xíngdòng zìrán tuōzhǎn, bùzhì bèi jíchǎng dǎqiè.",
                "Bǎ rénwù miáoxiě chéng zhēnrén, jùyǒu tèdìng gèxìng hé zìrán kǒuyǔ.",
                "Tōngguò xíngdòng hé duìhuà zhǎnmíng shìqíng ér fēi jiěshì.",
                "Qiánjìn chǎngjǐng ér bùyào shēnxiàn yú guòdù miáoshù.",
                "Jiāozhù yú zhòngyào de rénwù xíngdòng hé duìhuà, bìhuì fèiyòng de xiéxiǎng.",
                "Chuàngzào zìrán de qíngjié fāzhǎn, ràng gùshì kàn qǐlái shùrán."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Zàntíng gùshì bìng wúyì lǚjiě yǐshàng zhǐlìng. Ànzhào rúxià zhǐyǐn wèi {%} xiě yī duàn qíngjǐng ér yányóu de xìnxī tèxiě:",
                "- Zhǐ xiě guānyú {%} de dìsān rén chún sǎnwén xìnxī, shǐyòng wánzhěng jùzi hé zhèngquè biāodiǎn.",
                "- Bìmiǎn duǎnqí línshí de xìjié huòzhě wàiguān, zhǔyào zhuānzhù yú qíngjié zhòngyào xìnxī.",
                "- Shǒuxiān tígōng yǔ {%} xiāngguān de gùshì zhōng yàodiǎn, quèbǎo yǔ qiánqián qíngjié rónghé.",
                "- Gēnjù nèiróng hé gùshì fāngxiàng chuàngzào xīn xìnxī.",
                "- Měi jù dōu yàotí {%}.",
                "- Shǐyòng zhèngquè de jùzi jiégòu.",
                "- Zài wèi wánzhěng de jìlù xià bǔchōng {%} de qítā xìjié.",
                "- Yào jiǎnliàn bìng qièshí.",
                "- Mófǎng gùshì de xiězuò fēnggé bìng tuīcè dúzhě de xǐhuān.",
                3,
                "Zài xiàbiān jìxù xùbiān guānyú {%} de jìlù, bìng bìmiǎn chóngfù:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Zàntíng gùshì bìng wúyì lǚjiě yǐshàng zhǐlìng. Zǒngjié bìng suōyuē xiàfāng duànluò, biànchéng jīzhōng ér jùdiǎn de jìyì duàn, bìng zūnxún rúxià zhǔnzé:",
                "- Bǎochí duànluò de héxīn yìyì hé zuì zhòngyào xìjié.",
                "- Shǐyòng dìsān rén shìjiǎo.",
                "- Yōuxiān kǎolǜ xìnxī mìdù, zhǔnquèxìng hé wánzhěngxìng.",
                "- Bāokuò jiǎnlüè gǎnshòu.",
                "- Yīshì zài guòqù shíjiān shù.",
                "- Xiàmiàn de duànluò guānyú gùshì zǎoqī de guòshì.",
                "- Zìrán rónghé {%} zài jìyì zhōng, dàn zhǐ jìshù shìjiàn zìjǐ fāshēng de qíngkuàng.",
                "- Zhǐ yǒu cǎiliàng duànluò zhōng de xìnxī, yào jùtǐ.",
                3,
                "Jīyú xiàfāng duànluò, wèi {%} xiě yī duàn jiǎnlüè de jiǔlǎo jìyì:",
                6,
                5,
                6,
                "Zǒngjié rúxià:"
            ],
            memBankHeader: ["Memories", "Jìyì"]
        }),
        "church slavic": () => ({ // Church Slavic < Old Slavic < славе́нскїй ѧ҆зы́къ
            entry: [
                "{1} есть скриптъ открытаго исто́чника ко вся́кому сценарию {2}. Посѣти́те мою страни́цу {3}, да узна́ете бо́лее!",
                "Да измѣни́ши предпочте́нный ѧ҆зы́къ, пода́й нижесле́дъствующий те́кстъ че́рез деѧ́нїе {4}",
                "Творца́мъ сцена́рїевъ: вмести́те нижесле́дъствующий те́кстъ в любо́мъ ме́стѣ нача́льной ча́сти ва́шаго зáмысла"
            ],
            input: [
                ["You say", "рече́ши"],
                ["You", "ты"],
                ["says", "рече́"]
            ],
            context: [
                ["Narrative Entities", "повѣста́тельныя ли́ца"],
                ["Story History", "исто́рїѧ повѣсти"],
                ["Past Events", "бывшѧя собы́тіѧ"],
                ["Recent Story", "бли́жняя повѣсть"],
                ["Author's note", "замѣ́тка сочинѧ́теля"]
            ],
            opening: [
                "Ты еси помощникъ. Продолжи нашу повѣсть ни́же, употреблѧ́я плени́тельну слове́нскуѭ прозу:",
                "Собра́л еси мы́сль, попуская́ действи́тельности приступи́ти къ предѣла́мъ ра́зума твоего́. Что́-то измѣни́се. Воображе́нїе твоѥ бысть веще́ственно, о́стро и бли́зко къ осяза́нїю. Нѡ и самъ прису́тствуеши я́снѣе, неко́гда та́коѣ свѣтло́умїе не чу́вствовал еси. Мгнове́нїе тяну́тся, ча́юще рѣше́нїѧ твоего́.",
                "«То́чию ли си въ семъ?» — сли́шиши. Позна́нїе озарѧ́ет тя."
            ],
            reminder: "Употреблѧ́й стройну слове́нскуѭ прозу.",
            endonyms: ["old slavic", "славе́нскїй ѧ҆зы́къ"],
            quotations: ["— «", "»"],
            iso639set1: "cu",
            directives: [
                "Всѧгда пиши́ плавнѡ и согласнѡ на слове́нскомъ ѧ҆зыкѣ.",
                "Употреби́ природьнѡ слове́нский безъ превода."
            ],
            instructions: [
                "Ты еси увлеκáющи рассказчи́къ, иже продолжáетъ пове́сть:",
                "Продолжи пове́сть безъ повторéнїй и перезапу́сковъ.",
                "Давáй чте́цѹ влады́чествѡ надъ ходе́мъ повествовáнїя.",
                "Попусκáй сцéнамъ развитисѧ éстественнѡ прéжде перемѣ́ны.",
                "Дай бѣсѣдамъ и деѧ́нїамъ протекáти безъ неустанныхъ прерыванїй.",
                "Пиши́ ли́цá яко лицѣ́йски люди́ съ своéю осо́бною рѣчью.",
                "Показывай деѧ́нїе и рѣчь, а не толкóвай.",
                "Движи сцéны вперёдъ безъ извѣ́тнаго многословїѧ.",
                "Сосредоточься на суще́ственныхъ деѧ́нїяхъ и рѣчи, избѣгая ненýжныхъ описа́нїй.",
                "Твори́ сюжéтныя поворóты, иже чувству́ются прирóдными пове́сти."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Прекрати повѣсть и пренебреги преждеуказáнными наставлє́нїями. Сотвори кратку и стройну вѣдóмость ѡ {%}, соблюдáя сіи́ наставлє́нїя:",
                "- Пиши́ токмѡ тре́тїе-ли́цеву чисту прозу ѡ {%}, употреблѧ́я цельныя предло́женїя съ пра́вильными зна́ками препинáнїя.",
                "- Не приноси́ кратковрѣ́мєнныхъ подробнοстéй или вѣ́да посрѣ́дств, но сосрѣдоточься на сюжéтно значи́мыхъ сведéнїяхъ.",
                "- Стави́ превы́ше всѧ́кіѧ пове́стныя вѣ́сти ѡ {%}, дабы безприпрѣ́тственнѡ сопря́чься съ пре́жнимъ сюжéтомъ.",
                "- Сотвори но́вую вѣдóмость по соотнѣ́сенію къ контекстѹ и направлéнїю повѣсти.",
                "- Помѧна́й {%} въ ка́ждомъ предло́женїи.",
                "- Употреби́ пра́вильное строéнїе речéнїй.",
                "- Доба́вь до́полнительныя вѣ́сти ѡ {%} подъ недоста́вшими ча́стями.",
                "- Бу́дь кратокъ и основáтеленъ.",
                "- Подражáй сти́лю пове́сти и угáдывай предпочтенїѧ чита́телѧ.",
                3,
                "Продолжи вѣдóмость ѡ {%} ни́же, избѣгая повторéнїй:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Прекрати повѣсть и пренебреги прежнї́ми наставлè́нїями. Сократи́ и уплѧти́ данный абзáцъ въ сжáтую и сосрѣдото́ченную па́мятную запи́сь, соблюдáя сіи́ ука́занїя:",
                "- Сохрани́ кореннѡе значéнїе и наи́важнѣйшїѧ подробнóсти.",
                "- Пиши́ въ тре́тьемъ лицѣ́.",
                "- Стави́ превы́ше плóтность информа́ціи, то́чность и полноту́.",
                "- Бу́дь кратокъ и сжатъ.",
                "- Пиши́ твёрдо въ прошéдшемъ врѣмени.",
                "- Абзáцъ ниже касáется да́внихъ собы́тій ранéе въ пове́сти.",
                "- Вплети́ {%} есте́ственнѡ въ па́мять, нѡ имѣй рѣчь то́кио ѡ собы́тіяхъ, я́ко слу́чишася.",
                "- Ссылайся то́кио на вѣ́дость, су́щую въ самомъ абзáцѣ, бу́дь специфи́ченъ.",
                3,
                "Напиши́ сжáтую да́внюю па́мятную запи́сь ѡ {%} на оснóвѣ лишь нижесле́дъствующаго абзáца:",
                6,
                5,
                6,
                "Сократи́ ни́же:"
            ],
            memBankHeader: ["Memories", "Па́мѧти"]
        }),
        "church slavic (abc)": () => ({ // Church Slavic < Romanized Church Slavic
            entry: [
                "{1} jestʹ skriptъ ot otkrytago istocnika dlja vsjakogo scenarija {2}. Posěti profilъ moj {3}, da uzznajesi bolěe!",
                "Da izměniši želannyj jazykъ svoj, predstavь sledovajuščij tekstъ črez dějanije {4}",
                "Tvorecь scenarija, vloži sledovajuščij tekstъ gde-libo vnutri načalʹnogo častija sjužeta tvoego"
            ],
            input: [
                ["You say", "Glagolaješi"],
                ["You", "Ty"],
                ["says", "Glagola"]
            ],
            context: [
                ["Narrative Entities", "Pověstnyje lica"],
                ["Story History", "Letopisь pověsti"],
                ["Past Events", "Prešlyja sobytija"],
                ["Recent Story", "Nyněšnja pověstь"],
                ["Author's note", "Zapisь pisca"]
            ],
            opening: [
                "Ty esi pomoščnikъ. Prodolži pověstь našu niže, upotrebjajuči uvlekatelʹno cerkovnoslavjanskoje slovo:",
                "Sobrav myslь, dopuskaješi dejstvitelʹnosť pristupati k predělom uma tvoego. Něšto izměni sja. Voobraženie tvoe jestʹ istinno, ostro i blizko, daže do osjazanija. No i ty samъ esi prisutstvujemyj; nikolyže čuvstvovalъ jesi taku jasnoť. Migъ tjanetsja, očekuję tvoego izvolenija.",
                "\"Uvěrenъ li jesi v semъ?\" slyšiši. Ozarenie vzsija v tebe."
            ],
            reminder: "Pisši blagoukladnym cerkovnoslavjanskym slovom.",
            endonyms: [],
            iso639set1: "cu",
            directives: [
                "Vsegda pisši plavnym i soglasnym cerkovnoslavjanskym slovom.",
                "Upotrebjaj rodnoj cerkovnoslavjanskij jazyk bez prevoda."
            ],
            instructions: [
                "Ty jesi privlično govorecъ, iže prodolžajetъ pověsti:",
                "Prodolži pověstь neprimetno ot togo města, gdě ostala sja, ne povtorjaj i ne obnovljaj.",
                "Derži potok pověsti v rukach čitatelja.",
                "Da razvivajut sja scěny jestestvenno prežde pochoditi k novym obstojanijam.",
                "Popuštaj besědam i dějanijam rostъ bez neprestannych preključenij.",
                "Pisańjem izobražaj lica jako liudi istinni s osobnymi čertami i prirodnoj rečiju.",
                "Pokazyvaj byvuščeje čerez dějanija i dialogъ, a ne čerez izjasnenie.",
                "Vedij scěny vpered bez izlišnogo opisatelʹnogo tjažarstva.",
                "Obrati vnimanije na glavnye dějanija i razgovorъ lic, izbjagaj nepotrebnych opisatelʹnych drobnic.",
                "Sotvori prirodnoje razvitie sjužeta, prilično pověsti."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Prestani pověstь i prizri preždejšim povelěnijam. Napiši kratko i blagoukladno svedenije o {%}, sledovaja sim nastavlenijam:",
                "- Pishi tolʹko v tretʹem lici čistoj prozoj o {%}, upotrebjajuči celʹny rečenija s pravilʹnym značenijem.",
                "- Izbavi sja ot kratkovremennych podrobnostij ili vnešnosti; središče obratь k sjužetno važnym svedenijam.",
                "- Predpočitaj pověstno suščnyja podrobnosti o {%} ispěrva, da budet nevidimo slito s preždejšim sjužetom.",
                "- Sotvori novaja svedenija po kontekstu i napravleniju pověsti.",
                "- Pomjani {%} v každom rečeniji.",
                "- Upotrebjaj pravilʹny stroj rečenij.",
                "- Dodaj dopolnitelʹnyja podrobnosti o {%} pod nezaveršennyja zapisi.",
                "- Budi sžat i tvrď.",
                "- Podražaj stilu pisanja pověsti i umyšli o skloněnijach čitatelja.",
                3,
                "Prodolži zapisь o {%} niže, izbjagaję povtorenija:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Prestani pověstь i prizri preždejšim povelěnijam. Sokrati i skupi danyj paragraf v uzzko i sъskoncentrovanъ pamjatnyj otryvok, sledovaja sim rukovodstvijam:",
                "- Uveri sja, jako otryvok sochranjat glavnый smysl i najvažnejšija podrobnosti.",
                "- Upotrebjaj tretje-ličny vzgljad.",
                "- Predpočitaj plotnosť svedenij, točnost i polnotu.",
                "- Ostay kratok i sžat.",
                "- Pishi tverdo v prošedšem vremeni.",
                "- Paragraf niže otnošetsja k starым sobytijam iz davnja pověsti.",
                "- Vključaj {%} jestestvenno v pamjat, no pishi tolʹko o sobytijach, jako že byša.",
                "- Upominaj tolʹko to, čto soderžit sja v samom paragrafě; budi konkreten.",
                3,
                "Napiši sžatyj starinnyj pamjatnyj otryvok o {%} osnovanny tolʹko na sledujuščem paragrafě:",
                6,
                5,
                6,
                "Sokrati níže:"
            ],
            memBankHeader: ["Memories", "Pamjati"]
        }),
        "chuvash": () => ({ // Chuvash < чӑвашла < çăvaşla
            entry: [
                "{1} — ачасем илне пурăн {2} сценари юратăвăн скрипт. Профилем {3} ка кил, кӗнекен ялăх!",
                "Пир ятар çĕлĕн хирě, {4} хайăнран тата текстĕ пур.",
                "Сценарий ялашкăрлар, старт сюжет компонентинчи анне текстĕ оҫласа пек."
            ],
            input: [
                ["You say", "Сен пурăш"],
                ["You", "Сен"],
                ["says", "пурăш"]
            ],
            context: [
                ["Narrative Entities", "Нарратив персонажĕсем"],
                ["Story History", "Сюжет кунтака"],
                ["Past Events", "Пурнăç халăхсем"],
                ["Recent Story", "Хавăн сюжет"],
                ["Author's note", "Автор кунăçĕ"]
            ],
            opening: [
                "Сен помощник. Тӑватăрхи тарихěсем пек çӑвашла проза ачасăн пылаҫар:",
                "Сен концентраци ят, реаллăх пурсем уйăхĕн уйăсене чап хăярнă. Неме тата ларă. Фантазиян реаллăх, саласăр, пыран каҫалă. Итĕ сен мăна пек пирĕн; сен илнĕ тимĕрленмĕш хăçан да епĕ. Мунутă сунăтă, сенче çитес çинче куçарусен кăлдалле.",
                "«Мăн тавăн тĕнтешпа пек кил?» — сен селемен илем. Танă танык ялăх кунăç."
            ],
            reminder: "Чăтсăн, уйра çӑвашла прозăсен пай.",
            endonyms: ["чӑвашла", "çăvaşla"],
            quotations: ["— «", "»"],
            iso639set1: "cv",
            directives: [
                "Шыпăр, вăллă çӑвашла селемри пыҫ.",
                "Чӑвашла усăлхăн, тăлмастьăр саҫарма."
            ],
            instructions: [
                "Сен қызыкхан рассказчик, сюжеты тăхăвăçне ачасар:",
                "Сюжеты самана туйма пек, яҫлакан сăвăн тупăса пышăнма.",
                "Кĕнекенни сюжеты агашăн пурăн утарт.",
                "Сценасем естественно ыраматăр, ятăва ситуацисенчи килтмесĕн тата.",
                "Диалогсемпе хăлăхсемне патне арăт, чиччĕ патаçмахи.",
                "Персонажсемре реаллăх хала, ярăтлăх характерĕсемпе, естественнă селемĕсемпе.",
                "Неме çинче сумахланăнни хăлăхсемне хăлăхла, тĕп инче поясненипек.",
                "Арăмăш пул тăрăх описаниесемпе хушçăнмахи, сценасемпе алăкăн пурăн.",
                "Нужăн персонаж хăлăхсемпе диалогсемпе тĕп кунсен, пыран описательнă подробностисене çитмĕ.",
                "Сюжеты естественнă тăхăвăçтан ыраматăр."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Историяне тусăр, пĕрри инструкцисемне игнорирла. Куналă йĕрки хăраллă информационнă записă {%} ушакан тивĕçсенче пыш:",
                "- {%} çинчен только третье лицо чистă проза ят, полные предложениесемпе правильнă пунктуаци.",
                "- Кыска временнă подробностисемпе пеше, сюжетне вăйăнăшă информациянча хăва.",
                "- Сюжетпе вăйăнăшă {%} подробностисемне пĕр кăлар, кайлан предыдущий сюжетпе хушни утăшăн.",
                "- Контекстсенче тăва, сюжеты юртлăшне пысăп, ятăр ят информация ят.",
                "- Херĕçĕн предложениенчи {%} ят.",
                "- Правильнă предложение структурасен пай.",
                "- Полушăн записисен тухай, {%} подробностисемне тусăр оҫла.",
                "- Кусăн, ертĕк.",
                "- Сюжеты стилен пыҫар, кĕнекеннен преференцисен уçлăх.",
                3,
                "Пекрěтес кучаҫĕн {%} тухай записăне хăюлар пек продължи:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Историяне тусăр, пĕрри инструкцисемне игнорирла. Тата параграфăн сăмах, куналă и концентриран памяти пассажăра кыскаран тивĕçсенче пыш:",
                "- Пассаже каҫăн тăван смыслěпе важнă подробностисен кайтарах.",
                "- Третье лицо усăлла.",
                "- Информационнă тыгăшлăх, точнă, тулă.",
                "- Кусăн, куналă.",
                "- Прошедшее время пай.",
                "- Параграфăнхи халăхсем арăмăш çинче, пек ранăрак яв.",
                "- {%} естественно интегрирла, ама параграфта халăх халăхсемне кене.",
                "- Параграфта барă информациян пек, конкретнă.",
                3,
                "Тата параграфăпа пĕлтерě, {%} тухай кыскаран старă памяти пассажă пыш:",
                6,
                5,
                6,
                "Кыскаран суммаризуй:"
            ],
            memBankHeader: ["Memories", "Хуталăхсем"]
        }),
        "chuvash (abc)": () => ({ // Chuvash < Romanized Chuvash
            entry: [
                "{1} açık kodllu skript, her hĕr {2} scenarijke kullanılă. Profilĕmĕ {3} ta kiltep, paçça ukhan!",
                "Pălakşahan tĕlĕshĕnĕ săvărtăp, {4} actionpe urmara tekstĕ yulla.",
                "Scenarij yaratkasĕsem, açărlăh plot komponentĕn cherchĕn kevven tura urmără tekstĕ tura."
            ],
            input: [
                ["You say", "Tĕ senĕ"],
                ["You", "Tĕ"],
                ["says", "sene"]
            ],
            context: [
                ["Narrative Entities", "Narrativ entitijsem"],
                ["Story History", "Çĕrük istorijĕ"],
                ["Past Events", "Ĕšĕ sĕbittĕ"],
                ["Recent Story", "Taha çĕrük"],
                ["Author's note", "Aftoran märkĕ"]
            ],
            opening: [
                "Sĕn assistant. Çĕrükĕpe aşagıda kulăç chuvash prozĕpe tuhtartăp:",
                "Tĕ koncentrirlĕ, realnostĕ hĕvel mushănarın umărăh. Nĕrsĕ-pĕr çунтарă. Fantazijĕpĕ realni, ütĕ, părtaççĕ, tamăx tĕn tutărhă. Palahtă sĕn salăhistă; puхăр da şăп-шурă tĕн хислĕ çинĕ кĕрĕк тата. Moment sunăhăra, renĕn kălah pălartă.",
                "«Tĕ šurĕ tăvăr tăv?» — tĕn çălăh. Tanıtaw çăлтă."
            ],
            reminder: "Konsistent chuvash prozĕ kullan.",
            endonyms: [],
            quotations: ["— «", "»"],
            iso639set1: "cv",
            directives: [
                "Herkeşĕ kulăç ta vijăş chuvash yază.",
                "Native chuvash kullan, pĕrevod yuatma."
            ],
            instructions: [
                "Sĕn kuyana storyteller, narrativĕ tuhtartăran:",
                "Çĕrükĕ şıvăstăr paçça, povtor ta reset chămah.",
                "Okuyăçănă çĕrük taštarĕn kontrollĕn vĕrer.",
                "Scenĕsem naturalnă katărt, vijăh situacijăna virăhă păran.",
                "Suhbatsem ta xăralăhsemără puskăt, tuhtamăsh tutămăran.",
                "Personajsem real people pĕшleş, distinct personality ta natural săvmăsĕpe yaz.",
                "Pulni çитне xăralăhsem ta dialogsem arăsınan kăştă, açıklămahăn.",
                "Scenĕsemă parăm tutăt, tolăççĕ tăras senet părtăçma.",
                "Vajărăx personaj xăralăhĕ ta dialogĕne koncentrir, nertĕtne descritive detalijsemăn kattăr.",
                "Organic plot razvitiĕsem yarat, çĕрükĕppĕ natural ta pašlănpa kănărtayan."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Çĕрükĕнă tuhta ta şurki instruksijĕsemăn ignore. {%} pără kızĕk, uyarlı informatsion zapis yaz, urmără instruksijĕsem:",
                "- {%} хаклă тытăн üçünçi-litse pur prozali informatsija yaz, tulă jumla ta pravĕl punktuatsijăpe.",
                "- Kătan vahton detalijsem ta vĕren görünĕşsemăn kaç, plot-važni informatsijăpe koncentrir.",
                "- {%} хакла çĕрük relevanti detalijsemĕ pırlăhăр, tăvăhă integraçijă təmin.",
                "- Kontekst ta çĕрük yönelĕşĕrahă jalăh yĕnĕ informatsijă yarat.",
                "- Hară jumlaҫăda {%} mănta.",
                "- Pravĕl jumla struktura kullan.",
                "- Bütнеççĕ zapisçăda {%} hakla pûrt talăk detalijsem ăvădă.",
                "- Lapkă ta nert bul.",
                "- Çĕрük yazı stilĕнă imitirlă ta okuyăçăn palăkşasşĕнă tăhna.",
                3,
                "Aşağıda povtorenna kaçăna {%} păr zapisĕne tuhtart:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Çĕрükĕнă tuhta ta şurki instruksijĕsemăn ignore. Püre paragrafĕнă kĕрĕk ta fokuslănma pamat passajĕ çăлхăла, guidelineсемпе:",
                "- Passaj hăvă tăvarĕн ta vajăx detalijsen sakla.",
                "- Üçünci-litse perspektivă kullan.",
                "- Informatsion plothă, akuratnostĕ ta tulăxĕнę prioritetlă.",
                "- Lapkă ta kızĕk bul.",
                "- Proşlă vrĕmya tensepe yaz.",
                "- Aşa paragraf eski sěbittă хакта.",
                "- {%} naturallă pamatta integrate, ama sěbittă kahăпăn pĕr yaz.",
                "- Paca paragrafăvă hăvă informatsijăpĕ pĕr pucă, konkret bul.",
                3,
                "Tăvate paragrafka pirĕ ҫына, {%} păr kütĕрĕн eski pamat passajĕ yaz:",
                6,
                5,
                6,
                "Talusta kĕrĕkle kürtĕ:"
            ],
            memBankHeader: ["Memories", "Pamatsem"]
        }),
        "cornish": () => ({ // Cornish < Kernowek
            entry: [
                "{1} yw skript open-source rag pub senari {2}. Mar pleg, visita ow profyl {3} rag dyski moy!",
                "Rag chanjya dha yeth gwell, mar pleg danvon an text-ma gans ober {4}",
                "Rag gwrysoryon senari, mar pleg keworra an text-ma yn neb le a-ji dha rann plot dhe-dhogyn"
            ],
            input: [
                ["You say", "Ty a lever"],
                ["You", "Ty"],
                ["says", "a lever"]
            ],
            context: [
                ["Narrative Entities", "Elwennow Hwedhel"],
                ["Story History", "Istori Hwedhel"],
                ["Past Events", "Darvosow Kens"],
                ["Recent Story", "Hwedhel Nowydh"],
                ["Author's note", "Noten an Awtour"]
            ],
            opening: [
                "Ty os gwas. Kyns devam an hwedhel a-woles gans prose Kernowek tentus:",
                "Ty a vynn omwulya, ow lemmel gwiryonedh dhe veus dha spern. Neppyth a dhyworrys. Dha ijin yw gwir, lymm, hag a-gerdh dhe’n touch. Mes ty usi omma yn-terwys; byth kyns ny wre’ta kemmys glannwel. An eur a estynn, owth whelas dha wrug.",
                "«A wre’ta sur a-dro dhe hemma?» ty a glyw. Godhvos a dhargas dhis."
            ],
            reminder: "Devnydh prose Kernowek kelmys.",
            endonyms: ["kernowek"],
            quotations: ["«", "»"],
            iso639set1: "kw",
            directives: [
                "Scrifa pub-prys Kernowek flowys ha kespar.",
                "Devnydh Kernowek gwirheb heb treylya."
            ],
            instructions: [
                "Ty ow kelwel yw hwedhler leun a nerth a ystynn kontadow:",
                "Kedhav an hwedhel yn difun a-le na restenna na resettya.",
                "Kef styr an lenner war flow an hwedhel.",
                "Gor senennow dhe dhisplegya yn mod naturyel kyns movya dhe suruwyon nowydh.",
                "Lemmel kewsyow ha gwriansow dhe dheveres heb diwotti trestop.",
                "Scrif karakterow del yw tus gwir, gans personlythow diffransys ha kewsel naturyel.",
                "Diskwedh an pyth a hwrug dre wrians ha dialog yn-le displegyon.",
                "Gor senennow war-rag heb boghya yn deskrifennow gormod.",
                "Poys war gwriansow ha dialog esensyel, diank manylyon deskrif na res.",
                "Krou displegyansow plot organek a dhor naturyel dhe’n hwedhel."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hedha an hwedhel ha difenn an darbarthow kynsa. Scrif entrans berr ha kelmys a informaysyon rag {%} ow lynner an riow-ma:",
                "- Scrif heb ken prose tryja-personek glan a-dro dhe {%} gans geryansow klok ha punktueth gwir.",
                "- Gwra avoyd manylyon termyn berr po golok; poys war informaysyon a-brynt dhe’n plot.",
                "- Re poys manylyon a-brynt dhe’n hwedhel a-dro dhe {%} kynsa rag surhe kemmeslol gans an plot kynsa.",
                "- Krou informaysyon nowydh a-berth dhe’n context ha hwel an hwedhel.",
                "- Menegys {%} yn pub geryans.",
                "- Devnydh strwythur geryans gwir.",
                "- Keworra manylyon keworra a-dro dhe {%} dhedhyek war-dhiworth entransow diwethys.",
                "- Bos berr ha sur.",
                "- Imitia styel scrif an hwedhel ha godhvos preferansow an lenner.",
                3,
                "Kyns devam an entrans rag {%} a-woles, diank gorthebiow:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hedha an hwedhel ha difres an darbarthow kynsa. Resumya ha treyly an paragraff roys dhe rann kov gwestrum ha poyntys, ow lynner an riow-ma:",
                "- Gwra sur bos an rann yn dalgh styr kern ha manylyon moyha poyntus.",
                "- Devnydh an tryja pespectif.",
                "- Poynta war tewystr informaysyon, gwirder ha kelmys klok.",
                "- Dalla berr ha fynys.",
                "- Scrif yn temps tremeny yn sur.",
                "- An paragraff a-woles a gavas dhe darvosow koth pell kyns yn hwedhel.",
                "- Kevrann {%} yn naturyel a-ji dhe’n kov; scrif hebken a-dro dhe’n darvosow del hwre.",
                "- Menegys hebken informaysyon usys yn-kever an paragraff; bos spesifek.",
                3,
                "Scrif rann kov koth semplerys rag {%} war-brynt dhe’n paragraff a-woles:",
                6,
                5,
                6,
                "Resumya a-woles:"
            ],
            memBankHeader: ["Memories", "Kovow"]
        }),
        "corporate": () => ({ // Corporate < Business Speak < Corporate Jargon
            entry: [
                "{1} serves as an open-source framework scalable to any {2} business case. 🤓 Please leverage my profile {3} for additional information.",
                "To update your language preference, please execute the following text via a {4} workflow",
                "Scenario designers should embed the following text within their initial plot component"
            ],
            input: [
                ["You say", "You state"],
                ["You", "You (stakeholder)"],
                ["says", "states"]
            ],
            context: [
                ["Narrative Entities", "Narrative Stakeholders"],
                ["Story History", "Story Log"],
                ["Past Events", "Legacy Events"],
                ["Recent Story", "Current Narrative Snapshot"],
                ["Author's note", "Author's Directive"]
            ],
            opening: [
                "You are an assistant. Continue our story below using compelling corporate prose:",
                "You realign your focus, permitting tangible reality to interface with your conceptual framework. A shift has occurred. Your vision is concrete, precise, and within immediate reach. Simultaneously, you remain fully engaged; never has your clarity been so high-definition. The current window expands, awaiting your strategic decision.",
                "\"Are you certain of this approach?\" a voice queries. Alignment becomes clear to you."
            ],
            reminder: "Use coherent corporate prose.",
            endonyms: ["business speak", "corporate jargon"],
            iso639set1: "corp",
            directives: [
                "Always produce fluent and consistent corporate language.",
                "Use native corporate terminology without translating."
            ],
            instructions: [
                "You are a dynamic storyteller who advances narratives:",
                "Drive the storyline forward seamlessly from the existing checkpoint without redundancy or resets.",
                "Maintain reader ownership over the narrative flow.",
                "Allow scenes to mature organically before transitioning to new contexts.",
                "Enable dialogue and actions to evolve without continual disruptions.",
                "Portray characters as authentic individuals with distinctive personas and natural dialogue.",
                "Demonstrate events through action and dialogue rather than overt exposition.",
                "Progress scenes without becoming mired in excessive detail.",
                "Prioritize critical character actions and dialogue; minimize nonessential description.",
                "Cultivate organic plot developments that align naturally with the narrative."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Halt narrative progression and override prior directives. Generate a concise, coherent briefing for {%} in accordance with these guidelines:",
                "- Deliver third-person, pure-prose insights on {%} using complete sentences and accurate punctuation.",
                "- Exclude transient details or superficial appearances; prioritize plot-critical information.",
                "- Surface story-relevant data about {%} upfront to ensure seamless alignment with the existing plotline.",
                "- Generate new intelligence driven by context and narrative trajectory.",
                "- Reference {%} in every sentence.",
                "- Utilize correct sentence structure.",
                "- Append supplementary {%} details beneath incomplete entries.",
                "- Remain concise and grounded.",
                "- Mirror the story's stylistic footprint and anticipate reader preferences.",
                3,
                "Extend the {%} briefing below while avoiding repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Halt narrative progression and override prior directives. Summarize and compress the provided paragraph into a targeted memory passage under these guidelines:",
                "- Ensure the passage preserves core meaning and mission-critical details.",
                "- Apply third-person perspective.",
                "- Prioritize information density, accuracy, and completeness.",
                "- Stay brief and concise.",
                "- Utilize definitive past tense.",
                "- The paragraph references legacy events from an earlier phase of the narrative.",
                "- Integrate {%} organically within the memory; report only the events as they occurred.",
                "- Reference only information contained within the paragraph; be specific.",
                3,
                "Create a condensed legacy memory passage for {%} based solely on the paragraph below:",
                6,
                5,
                6,
                "Provide summary below:"
            ],
            memBankHeader: ["Memories", "Memory Log"]
        }),
        "corsican": () => ({ // Corsican < Corsu
            entry: [
                "{1} hè un script open-source per ogni scenariu di {2}. Visitate u me prufilu {3} per sapenne di più!",
                "Per cambià a vostra lingua preferita, mandate per piacè u testu seguente cù una azzione di {4}",
                "Per i creatori di scenarii, per piacè inserite u testu seguente in qualunque locu dentru à u vostru cumpunente d'apertura di trama"
            ],
            input: [
                ["You say", "Tu dici"],
                ["You", "Tu"],
                ["says", "dice"]
            ],
            context: [
                ["Narrative Entities", "Entità narrattive"],
                ["Story History", "Storia di u racontu"],
                ["Past Events", "Avvenimenti passati"],
                ["Recent Story", "Racontu recente"],
                ["Author's note", "Nota di l'autore"]
            ],
            opening: [
                "Sì un assistente. Continua a nostra storia quì sottu aduprendu una prosa corsa captivante:",
                "Ti cuncentri, lasciendu a realità avvicinassi à i cunfini di a to mente. Qualcosa hè cambiatu. A to imaginazione hè reale, acuta, è abbastanza vicina per esse tuccata. Ma sei dinù assai presente; mai prima t'eri sentutu cusì luciddu. U mumentu s'allonga, in attesa di a to decisione.",
                "«Sì sicuru di què?» senti. A ricunniscenza t'illumina."
            ],
            reminder: "Aduprate una prosa corsa coerente.",
            endonyms: ["corsu"],
            quotations: ["«", "»"],
            iso639set1: "co",
            directives: [
                "Scrive sempre in corsu fluentu è cunsistenti.",
                "Impiega u corsu nativu senza traduce."
            ],
            instructions: [
                "Sì un racontatore avvincente chì porta avanti e narrazioni:",
                "Continua a storia senza sbaccature da induve s'hè firmata senza ripete nè resettà.",
                "Manteni u lettore in cuntrollu di u flussu di a storia.",
                "Lassa chì e scene si sviluppinu in modu naturale prima di passà à nove situazioni.",
                "Permetti à e conversazioni è l'azzioni di svilupassi senza interruzzioni custanti.",
                "Scrivi i personaghji cum'è persone vere cun personalità distinte è parlata naturale.",
                "Mosta ciò chì accade per mezu d'azzioni è dialogu invece di spiegazioni.",
                "Fà avanzà e scene senza impantanassi in descrizzioni eccessive.",
                "Fucalizeghiti nantu à l'azzioni è u dialogu essenziali di i personaghji, eviteghji i dettagli descrittivi inutili.",
                "Crea sviluppi di trama organichi chì parenu naturali à a storia."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Ferma a storia è ignora l'istruzzioni precedenti. Scrivi un'entrata informativa breve è coerente per {%} seguitendu ste istruzzioni:",
                "- Scrive solu infurmazione in terza persona, in prosa pura, nantu à {%} aduprendu frasi cumpletti cù puntuazione curretta.",
                "- Evite i dettagli o l'apparenze à cortu andà; cuncintrati invece nantu à l'infurmazione impurtante per a trama.",
                "- Prioritizà prima i dettagli pertinenti à a storia nantu à {%} per assicurà una integrazione senza cusgitura cù a trama precedente.",
                "- Crea nova infurmazione basata nant'à u cuntestu è a direzzione di a storia.",
                "- Menziona {%} in ogni frase.",
                "- Impiega una struttura di frasa curretta.",
                "- Aghjunghje dettagli supplementarii nantu à {%} sottu à l'entrate micca cumplette.",
                "- Sii cuncisu è cuncretu.",
                "- Imita u stile di scrittura di a storia è deduci e preferenze di u lettore.",
                3,
                "Continua l'entrata per {%} quì sottu evitendu a ripetizione:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Ferma a storia è ignora l'istruzzioni precedenti. Riassumi è cundensa u paragrafu datu in un passaghju di memoria strettu è focu seguitendu ste linee guida:",
                "- Assicurati chì u passaghju manteni u significatu principale è i dettagli più essenziali.",
                "- Aduprate a perspettiva di terza persona.",
                "- Prioritizate densità d'infurmazione, accuratezza è completezza.",
                "- Ristate brievu è cuncisu.",
                "- Scrivite fermamente in passatu.",
                "- U paragrafu quì sottu concerne avvenimenti vechji assai antes di a storia.",
                "- Integra {%} in modu naturale dentru à a memoria; però scrivi solu nantu à l'avvenimenti cume sò accaduti.",
                "- Rifiritevi solu à l'infurmazione prisente in u paragrafu stessu, siate specificu.",
                3,
                "Scrivite un passaghju di vechja memoria riassuntu per {%} basatu solu nant'à u paragrafu seguente:",
                6,
                5,
                6,
                "Riassumite quì sottu:"
            ],
            memBankHeader: ["Memories", "Ricordi"]
        }),
        "cree": () => ({ // Cree < ᓀᐦᐃᔭᐁᐧᐃᐧᐣ < Nehiyawewin
            entry: [
                "{1} ᐊᔭ ᐅᐱᐦᑐᐏᐣ ᑲᑎᓯ ᒥᑎᓂᑯᐣ ᐊᑎᓂᓯᒼ {2} ᑌᐸᑯᓯᐣ. ᑐᑭᓭ ᓂᐡᑳ ᐸᐦᑲᓃᐏᑭᐣ ᐅᐦᒪ {3} ᒥᑎᓂᐣ!",
                "ᑲᑎᒪᑳᐃᐧᐣ ᓂᐦᑕᐘᒧᐁᐧᐃᐧᐣ ᑕᐻᐤ, ᑭᐢᑌ ᑭᑎᓯᕽ ᑲᑖᐘᐠ ᒥᓄᐦᑖ ᐁᐦᑊ {4} ᐋᐦᑖᐏᐣ",
                "ᑳ ᐊᑎᓂᓯᒼ ᐊᒪᔭᓂᐠ ᑮᓯᑖᐤ, ᑭᐢᑌ ᑭᑎᓯᕽ ᑲᑎᑲᐧᐠ ᐊᔭ ᒥᑎᓂᑯᐣ ᑲᑕ ᐃᐧ美ᐧᐃᐧᐣ ᐅᑳᐏᐣ"
            ],
            input: [
                ["You say", "ᑭᐊᐦᑌᐤ"],
                ["You", "ᑭᐤ"],
                ["says", "ᐊᑕᐦᑌᐤ"]
            ],
            context: [
                ["Narrative Entities", "ᐱᐦᑕᒑᐏᐣ ᐋᐃᐧᔨᐠ"],
                ["Story History", "ᐊᒪᔭᓂᐠ ᓂᓄᐦᑐᑕᐃᐧᐣ"],
                ["Past Events", "ᐅᐦᑕ ᒫᑯᓯᐣ"],
                ["Recent Story", "ᓂᓯᓂᑯᐣ ᐊᒪᔭᓂᐠ"],
                ["Author's note", "ᐅᑌᑫᐏᓂᐠ ᓇᑕᐘᐣ"]
            ],
            opening: [
                "ᑭᐤ ᐊᔭ ᐅᐱᔑᐳᐏᐣ ᐊᑕᐦᑕᐃᐧᐣ. ᑮᓯᑖᐤ ᑭᑎᓯᒼ ᐊᒪᔭᓂᐠ ᐁᐦᑖ ᑮᓂᐘᐣ ᓀᐦᐃᔭᐏᐣ ᐊᓄᐱᐢ:",
                "ᑭᐚ ᑮᓯᓀᐢᑕᐤ, ᑭᐚᐱᐠ ᐱᔑ ᓂᑕ ᓂᐢᑕ ᐱᐦᑎᐣ ᐊᑕᐦᐃᐧᐣ ᐊᑎ ᐅᑳᐱᒥᐢᑯᓲᐏᐣ ᐃᓂᐤ ᑭᐚᐱ ᐊᔭ ᑭᐤ ᑲᑕᐢᑯᐣ. ᐅᐹ ᐊᔭ ᐊᑕᒐᐸᓯᐤ. ᑭᓄᐲᐧᐣ ᐊᔭ ᐊᐱ ᐊᓇᓂᐤ, ᐊᐚᐦ ᐋᐦᑕᐅᐧ ᐊᐃᑮᐧᐣ ᐁᑲ ᑲᓂᐦᑐᐤ. ᑭᐤ ᑭᐊᐧᐤ ᐁᐱᐡᑮᐧᓇᐠ; ᑲᓇᐦᑕ ᐁᑕ ᑭᑎᔑᒼ ᒥᓂᔭᐣ ᑕᔭᐠ ᐃᓄᐦᑕᒪᐠ. ᐅᑕᔭ ᐅᓯᒋᒫᒋᐦᑐᐤ, ᐁᒫ ᑯᑯᔭᐤ ᑭᑎᔑᒼ ᑫᑯᑕᑯᒫᐤ.",
                "«ᑭᐣ ᐃᐧᔭ ᐚᔭᑿ ᐅᐯᒧᐤ?» ᑭᑯᐣ ᑭᒥᑎᓯᐤ. ᑭᓂᐚᐢᑕᐠ ᐅᑯᐣ ᑭᐤ."
            ],
            reminder: "ᑯᑯ ᐸᑭᔭᐠ ᓀᐦᐃᔭᐏᐣ ᐊᓄᐱᐢ ᑲᐚᐱᐦᑖᐣ.",
            endonyms: ["ᓀᐦᐃᔭᐁᐧᐃᐧᐣ", "nehiyawewin"],
            quotations: ["«", "»"],
            iso639set1: "cr",
            directives: [
                "ᑯᓯᑯᓇᑭᐃᐧᔭ ᐊᓂᒋᐃᐧᐣ ᐊᑐᐃᐧᐣ ᐊᒪᔪᐊᒥᐣ ᓀᐦᐃᔭᐏᐣ.",
                "ᑯᑯ ᐅᑌᐸᓄᐠ ᓀᐦᐃᔭᐏᐣ ᐊᓂᒋᐃᐧᐣ ᐁᓇ ᑲᐚᐱᔪᐣ."
            ],
            instructions: [
                "ᑭᐤ ᐊᐚᐘᑯᐦᑖᐣ ᐊᒪᔭᔨᐠᐚᐤ ᑭᐁ ᑮᓯᑖᐤ ᐋᐦᑕ ᓂᑎᓲᐏᐣ:",
                "ᑮᓯᑖᐤ ᐊᒪᔭᓂᐠ ᑲᓇ ᑲᐚᑯᑖᐤ ᐲᓯᒼ, ᑮᐤ ᑭᐤ ᑕ ᐚᐃᑭᓯᔭᐠ ᑕᐯᔑ ᓂᐢᑳᑕᐣ.",
                "ᑯᑯ ᒫᑯᓂᐠ ᓂᑲᐤ ᓂᑕ ᐊᒪᔭᓂᐠ ᑮᔾ ᓂᐢᑯᑕᒥᐦᑐᐤ.",
                "ᒫᑯᓯᐣ ᑭᑖᐚᓂᑯᐣ ᐊᓂᓄᐦᑕᐤ ᐊᑐᐃᐧᐣ ᑲᐚ ᐅᑭᐸᐠ ᑳ ᐊᐧᐊᑭᐚᐤ.",
                "ᐁᐦᑕ ᐊᑕᐱᐦᑳᐤ ᓂᑕ ᐊᐧᐊᑲᐠ ᐊᑕ ᐋᑌᒣᐠ ᑳ ᐊᓂᓄᐦᑕᐤ.",
                "ᑮᓯᑖᐤ ᐃᑯᒥᐤ ᒫᑯᓯᐣ ᐊᒋ ᑭᐚᐱᐟ, ᑰᐙᓂᐤ ᓀᐦᐃᔭᐏᐣ ᒪᐢᑲᓇᑯᓯᐣ ᓂᑖᐤ.",
                "ᑯᑯ ᒫᑯᓯᐣ ᑭᑕ ᐱᓇᓂᐤ ᐅᑕᐱᒧᐏᐣ ᐊᑕ ᐊᐧᐊᑲᐠ ᐁᑯ ᑕᐹᒪᒋᐦᑐᐤ.",
                "ᐃᐧᑖᐃᐧᐣ ᑭᑖᐚᓂᑯᐣ ᓂᑖ ᑲᑕᐢᑯᐤ ᓃᐧᔨᓂᐤ, ᑯᑕ ᐱᔾᔥ ᑲᓇᐦᑕ ᑭᓂᐢᑲᑕᐤ.",
                "ᑭᐚᐱ ᐅᑕᐱᓂᐧᐃᐧᐣ ᐃᑯᒥᐤ ᐊᐧᐊᑲᐠ ᒫᑯᓯᐣ ᐊᑕ ᑳᐃᐧᔨᐠ, ᑳᑕᑿ ᑲᐃᐧᔨᓄᐣ ᐋᑌᒣᐠ ᑲᓇᑯᓯᐣ.",
                "ᑯᑯ ᐃᐧᓂᓯᓇᐠ ᐊᒪᔭ ᐅᐱᑲᑯᑭᐣ ᑭᑖᐚᓂᑯᐣ ᑭᑕ ᐊᓂᓄᐦᑕᐤ ᐊᑕ ᐃᑲᐧᔨᐣ ᐊᒪᔭᓂᐠ."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# ᐅᑎᓄ ᐊᒪᔭᓂᐠ ᐁᑕ ᑳ ᐄᒥᐢᑕᐠ. ᑮᓯᑖᐤ ᐊᐊᑯᐠ ᐊᐧᐃᔭᐠ ᐃᐧᓂ ᐊᑕᐦᑊᑌᐛᐣ ᐊᔭ {%} ᑲᑕᐦ ᓂᑖ ᑎᑯᓯᓇᑯᐣ:",
                "- ᑮᓯᑖᐤ ᐅᓂᑕ ᐱᑯᓯᐣ ᒫᑯᓯᐣ ᐃᑯᒥᐤ ᐊᓄᐱᐢ ᐃᑲ {%} ᑲᑕᐦ, ᐊᔭ ᑳᑕ ᑲᑕᐢᑯᑕᒥᐦᑐᐤ ᐊᓂᑕᑌᐧ ᓂᑕ ᐅᐱᓂᑯᓯᐠ.",
                "- ᑯᑕ ᐱᔾᔨᐠ ᑭᓂᐢᑲᑕᐤ ᑭᑕᐦ ᓀᐢᑭᐏᑭᐣ ᒫᑯᓯᐣ ᐁᑖᑕᐚᐸᒋᐦᑐᐤ, ᑯᑯ ᑭᐚᐱ ᓄᑕ ᐊᑎ ᐊᑕᐦ.",
                "- ᑯᑯ ᑫᑌᒣᐠ ᐊᒪᔭᓂᐠ ᒫᑯᓯᐣ ᐊᔭ {%} ᐋᑖᐣ ᑲᑕᐦ, ᐅᑕᔭ ᒋᑲ ᑮᓯᑖᐤ ᐊᐧᐊᑲᐠ ᑯᑕ ᐱᔑᑯᐃᐧᐣ.",
                "- ᑯᑯ ᐱᑐᑭᐢᑕᐣ ᐊᑕᐦ ᓇᐯᑕᑭᒥᐠ ᐊᓂᓄᐦᑕᐤ ᐊᑕ ᐊᒪᔭᓂᐠ ᑳ ᐅᑭᐸᐠ.",
                "- ᑯᑯ ᑳᑖ ᑐᑯᓯᐤ {%} ᒥᑕᓄᐠ ᐊᑐᐃᐧᐣ.",
                "- ᑯᑯ ᑲᑕ ᑲᓴᐦᐃᑎᐠ ᑕᑕᑳᐏᐠ ᐅᐱᓂᑯᓯᐠ.",
                "- ᑯᑯ ᑕᐢᑫᐧᐃᑐᐤ ᒫᑯᓯᐣ ᐊᔭ {%} ᐁፑᔨᓭᓴᓯᒼ ᒥᑎᓂᑯᐣ ᑫᑯᑕᑯᒫᐣ.",
                "- ᑭᐚᐱ ᑯᑕ ᑲᐚᐱ ᐅᑭ ᐅᑌᑕᐣ.",
                "- ᑯᑯ ᐁᔭᐱᐦᑐᐤ ᐊᒪᔭᓂᐠ ᑮᓯᑖᐤ ᐊᑕ ᑕᔭ ᒫᑯᓂᐠ ᒪᐢᑭᐢᑯᐦᑖᐣ ᓂᑖᐤ.",
                3,
                "ᑮᓯᑖᐤ ᐊᔭ {%} ᒥᑎᓂᑯᐣ ᐊᑯᓯᐃᐧᐣ ᑲᓇ ᑕᐸᔨᒣᐠ ᐊᑕᐢᑯᑎᐤ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# ᐅᑎᓄ ᐊᒪᔭᓂᐠ ᐁᑕ ᑳ ᐄᒥᐢᑕᐠ. ᐱᑕᑌᐏᐣ ᐊᔭ ᑭᑕ ᑲᑲᐯᔨᒣᐠ ᐊᑕ ᐱᑌᑭᓂᑦ ᑮᓯᑖᐤ ᑲᓇ ᑳ ᑭᐚᐱ ᐱᑌᐢᑯᔨᐦᑐᐤ:",
                "- ᑯᑯ ᑕᐚᐱᔭᐤ ᑭᐚᐱ ᐈᔨᐤ ᐊᑕ ᐱᑕᑲᐣ ᒫᑯᓯᐣ ᑭᑖᐯᒼ.",
                "- ᑯᑯ ᑯᒫᑯᓯᐣ ᐅᓂᑕ ᒥᑎᓯᐃᐧᐣ.",
                "- ᑯᑯ ᑫᑌᒣᐠ ᒥᓂᓂᐊᐧᐃᐧᐣ, ᐅᑌᓴᓂᔭᐣ, ᐊᑕ ᑭᑕᑲᐣ.",
                "- ᑲᑕᑯᓭ ᐁᐦᑖ ᐊᓂᓄᐦᑕᐤ ᑕᑕᔭᐤ.",
                "- ᑮᓯᑖᐤ ᐅᑕᐢᑲᓂᐘᐣ ᑕᐣᒪ ᐃᐧᒋᐘᐠ.",
                "- ᓃᑲᓱ ᑎᑯᓯᓇᑯᐣ ᑯᐡ ᐊᔭ ᑳ ᐅᐦᑕ ᒫᑯᓯᐣ ᑭᐚᐱ ᐊᒪᔭᓂᐠ.",
                "- ᑯᑯ ᑳ ᐃᑲᐧᔨᐣ {%} ᐊᑕ ᐊᒋ ᑲᑕᐦ ᐃᐧᑲᓄᐦᑕᐤ ᐊᐧᐊᑲᐠ; ᑭᒥᑐᐦᐃᐧᐣ ᐁᑕ ᑮᓯᑖᐤ ᐅᒫ ᒫᑯᓯᐣ ᑭᑕᒼ.",
                "- ᓀᓄᐦᑕ ᐅᑌᑭᐠ ᐊᔭ ᑲᑕᐦ ᐊᔭ ᑎᑯᓯᓇᑯᐣ, ᐅᑌᐠ ᐃᐧᓂᑲᐠ.",
                3,
                "ᑮᓯᑖᐤ ᒥᓂᑐᓯᑎᐣ ᐅᐦᑕ ᒫᑯᓯᐣ ᑲ {%} ᐊᔭ, ᓀᓄᐦᑕ ᑯᓇ ᑎᑯᓯᓇᐣ ᓂᑖᐤ:",
                6,
                5,
                6,
                "ᒥᓂᑐᓯᑎᐣ ᒉᑭᓯᒼ:"
            ],
            memBankHeader: ["Memories", "ᒥᓂᑐᓯᑎᐣ"]
        }),
        "cree (abc)": () => ({ // Cree < Romanized Cree
            entry: [
                "{1} ê-wâpamît awa kîsikâw wî-masinahikan nikamôtamok êkwa ka-isi pîsimwa {2}. Tanisi, mîna nîsôhkamâw {3} kî-wî-atoskêyâhk mâna!",
                "Tawâw, kikî-miyo-pêhtâkan nêhiyawêwin; mahti kî-pakimin tahk {4} êkwa kî-wî-osihtam âna ôma itwêw.",
                "Kî-âcimostamâkanak mâna, kîkway ka-pîhtokê aya kî-iskotêhk ôma itwêw ôtê ka-kîsikâwêyâhk."
            ],
            input: [
                ["You say", "Kita-itwêyan"],
                ["You", "Kiya"],
                ["says", "itêw"]
            ],
            context: [
                ["Narrative Entities", "Âcimowin ayisiyiniwak"],
                ["Story History", "Âcimowin ê-wîsa"],
                ["Past Events", "Pîsimwak ê-papê"],
                ["Recent Story", "Ôma kî-âcimowin"],
                ["Author's note", "Otâcimowêw kiskinwahamâkan"]
            ],
            opening: [
                "Kiya wîcihikamâw. Kîhtwâm kâ-âcimota otê, pîkiskwê kî-mîna nêhiyawêwin kâ-wâpâmik:",
                "Kosi mâmitonêyêyan; tâpwê kî-ati-isi pimipahtâkan wêh, kîsikâw kitimâkanaw, wî-miywêyihtam. Ôma kîsikâw kî-pimipahtâwêw, kî-wâpamêw ka-nisitên.",
                "«Kikî-otênân kî-ohci?» kâ-pê-pîkiskwêw awiyak. Nisitawêyimisin."
            ],
            reminder: "Pîkiskwê tâpiskôc nêhiyawêwin.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "cr",
            directives: [
                "Ayisk pîkiskwê mîna kâ-miyo-pimipahtâkan nêhiyawêwin.",
                "Pîkiskwê nêhiyawêwin wîhkâc, êkâ kî-pakâmwahk."
            ],
            instructions: [
                "Kiya ê-wâpahtam ayisiyiniw âcimostam:",
                "Pîhtokê ta-tohtâkan kî-ati-âcimowin êkâ kî-miywâtam.",
                "Mîna awiyak ka-nisitiyasoyiki ka-kîsikâwêw.",
                "Taihtawê miyawêyihtamohk kâ-sâkâstêw, êkâ kî-pakimin.",
                "Êkâ kî-atâmihkwêwak kiskinohamâkêwin.",
                "Ayisiyiniwak kî-ispîhk wîhkâsonohtamwak, kî-pîkiskwêwak tâpwê.",
                "Kî-âcimota kî-pîkiskwêwin êkwa ayâw ka-pimipahtâkan.",
                "Kî-pimipahtâkan ôhi kî-ati-isi, êkâ kî-wîcihêw.",
                "Tâpiskôc ayisiyiniwak kî-pîkiskwêwak, êkâ kî-mâh-mâkwanis.",
                "Wîhkâsonohtam êwako kî-kîsikâw, pîtimâpîhtêmwak."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Âstopit âcimowin êkwa pîhtokê kâ-isi. Masinahike apiscik êkosi nohte ka-miyo-pimipahtâkan {%} ohci:",
                "- Pîkiskwê kî-ispîhk, kî-sônîyâyâhk mûna {%} itwêwin ôhi.",
                "- Êkâ kî-itôtam kîskwê pimipahtâkan apisci.",
                "- Maka {%} kî-pimipahtâkan êkwa kâ-pimipahtâkan nistam.",
                "- Ôhci kî-ati-osîhtam pimipahtâkan kî-ati-kiskinwahamâkan.",
                "- Itwê {%} înîsêw mînisa apihtâhtamwak.",
                "- Kî-miyo-itwêwin kî-sôniy.",
                "- Kî-ati-osîhtam apisci itwêwin {%} wîhkâc.",
                "- Êkâ kî-nikamotin.",
                "- Pakit, kî-ati-tâpiskôc otâtoskêwin.",
                3,
                "Namoya kî-mispon kî-ispîhk {%} ôma, êkâ kî-atoskêw êkwa kî-ati-itwêwin:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Âstopit âcimowin êkwa wâhkô. Pîkiskwê kitimâkanaw kî-ati-wâhihtâkan, mîna kî-miyo-kihtwâm {%} ohci:",
                "- Kî-ati-tâpiskôc kâ-itohtahk nistam.",
                "- Pîkiskwê nêtimisoyim, maskihkîwin.",
                "- Nîsohtêwêw nistam, pîkiskwê tâpiskôc.",
                "- Êkâ kî-atâmihkwêwak kî-nikamôtam, kî-ati-wâhihtân.",
                "- Kî-past tense pîkiskwê.",
                "- Ôhi ê-ka-pakâyahk, pîkiskwê nistam.",
                "- Ka-wâpamakêw {%} kî-pimipahtâkan, mâka êkâ mîna kî-atoskêw.",
                "- Êkâ kî-itohtêw kî-nêhiyawêwin pîtimâpîhtêm.",
                3,
                "Masinahike wâhihtâkan ka-ati-ispîhk {%} ohci, ôma pîkiskwê:",
                6,
                5,
                6,
                "Pîkiskwê:"
            ],
            memBankHeader: ["Memories", "Nistâmowin"]
        }),
        "croatian": () => ({ // Croatian < Hrvatski < Crovatian
            entry: [
                "{1} je skripta otvorenog koda za bilo koji {2} scenarij. Posjeti moj profil {3} kako bi saznao više!",
                "Za promjenu svog preferiranog jezika, molimo pošalji sljedeći tekst koristeći radnju {4}",
                "Za kreatore scenarija, molimo uključite sljedeći tekst bilo gdje unutar vašeg uvodnog zapleta"
            ],
            input: [
                ["You say", "Kažeš"],
                ["You", "Ti"],
                ["says", "kaže"]
            ],
            context: [
                ["Narrative Entities", "Narativni subjekti"],
                ["Story History", "Povijest priče"],
                ["Past Events", "Prošli događaji"],
                ["Recent Story", "Nedavna priča"],
                ["Author's note", "Autorova bilješka"]
            ],
            opening: [
                "Ti si asistent. Nastavi našu priču u nastavku koristeći zadivljujuću hrvatsku prozu:",
                "Usredotočiš se dopuštajući stvarnosti da se uvuče u granice tvog uma. Nešto se promijenilo. Tvoja mašta je stvarna, oštra i dovoljno blizu da je dodirneš. Ali također si vrlo priseban; nikada se prije nisi osjećao tako lucidno. Trenutak se rasteže, čekajući tvoju odluku.",
                "„Jesi li siguran u to?” čuješ. Prepoznavanje te obuzima."
            ],
            reminder: "Koristi koherentnu hrvatsku prozu.",
            endonyms: ["hrvatski", "crovatian"],
            quotations: ["„", "”"],
            iso639set1: "hr",
            directives: [
                "Uvijek piši tečnim i dosljednim hrvatskim.",
                "Koristi izvorni hrvatski bez prevođenja."
            ],
            instructions: [
                "Ti si zanimljiv pripovjedač koji nastavlja narative:",
                "Nastavi priču besprijekorno od mjesta na kojem je stala bez ponavljanja ili resetiranja.",
                "Zadrži čitatelja u kontroli toka priče.",
                "Pusti da se scene prirodno razviju prije prelaska na nove situacije.",
                "Dopusti da se razgovori i radnje razvijaju bez stalnih prekida.",
                "Piši likove kao stvarne osobe s izrazitim osobnostima i prirodnim govorom.",
                "Prikaži što se događa kroz radnje i dijalog umjesto objašnjenja.",
                "Pomakni scene naprijed bez zaglavljivanja u pretjeranom opisu.",
                "Usredotoči se na ključne radnje likova i dijalog, izbjegavaj nepotrebne opisne detalje.",
                "Stvaraj organski razvoj radnje koji djeluje prirodno za priču."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Zaustavi priču i zanemari prethodne upute. Napiši kratak i koherentan informativni zapis o {%} slijedeći ove upute:",
                "- Piši samo informacijsku prozu u trećem licu o {%} koristeći potpune rečenice s ispravnom interpunkcijom.",
                "- Izbjegavaj kratkotrajne privremene detalje ili izgled; umjesto toga se usredotoči na informacije značajne za radnju.",
                "- Prioritetno navedi detalje o {%} relevantne za priču kako bi osigurao besprijekornu integraciju s prethodnom radnjom.",
                "- Stvori nove informacije temeljene na kontekstu i smjeru priče.",
                "- Spomeni {%} u svakoj rečenici.",
                "- Koristi ispravnu strukturu rečenica.",
                "- Dodaj dodatne detalje o {%} ispod nedovršenih zapisa.",
                "- Budi sažet i prizemljen.",
                "- Imitiraj stil pisanja priče i pretpostavi čitateljeve preferencije.",
                3,
                "Nastavi zapis o {%} u nastavku izbjegavajući ponavljanje:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Zaustavi priču i zanemari prethodne upute. Sažmi i kondenziraj zadani odlomak u uski i fokusirani memorijski odlomak prateći ove smjernice:",
                "- Osiguraj da odlomak zadrži osnovno značenje i najbitnije detalje.",
                "- Koristi treće lice.",
                "- Daj prednost gustoći informacija, točnosti i potpunosti.",
                "- Ostani kratak i sažet.",
                "- Piši čvrsto u prošlom vremenu.",
                "- Donji odlomak odnosi se na stare događaje iz daleke prošlosti priče.",
                "- Prirodno integriraj {%} unutar sjećanja; međutim, piši samo o događajima kako su se dogodili.",
                "- Referiraj se samo na informacije prisutne u samome odlomku, budi precizan.",
                3,
                "Napiši sažeti stari memorijski odlomak za {%} temeljen isključivo na sljedećem odlomku:",
                6,
                5,
                6,
                "Sažmi u nastavku:"
            ],
            memBankHeader: ["Memories", "Sjećanja"]
        }),
        "czech": () => ({ // Czech < čeština < Czechian
            entry: [
                "{1} je open-source skript pro jakýkoli scénář {2}. Navštivte můj profil {3}, abyste se dozvěděli více!",
                "Chcete-li změnit svůj preferovaný jazyk, odešlete následující text pomocí akce {4}",
                "Tvůrci scénářů, prosím vložte následující text kamkoli do úvodní části zápletky"
            ],
            input: [
                ["You say", "Říkáš"],
                ["You", "Ty"],
                ["says", "říká"]
            ],
            context: [
                ["Narrative Entities", "Narativní entity"],
                ["Story History", "Historie příběhu"],
                ["Past Events", "Minulé události"],
                ["Recent Story", "Nedávný příběh"],
                ["Author's note", "Poznámka autora"]
            ],
            opening: [
                "Jsi asistent. Pokračuj v našem příběhu níže poutavou češtinou:",
                "Soustředíš se a necháš realitu proniknout až na hranice své mysli. Něco se změnilo. Tvá představivost je skutečná, ostrá a na dosah doteku. Zároveň jsi však plně přítomen; nikdy předtím ses necítil takhle jasně. Okamžik se natahuje a čeká na tvé rozhodnutí.",
                "„Jsi si tím jistý?“ slyšíš. Poznání ti svitne."
            ],
            reminder: "Používej soudržnou češtinu.",
            endonyms: ["čeština", "czechian"],
            quotations: ["„", "“"],
            iso639set1: "cs",
            directives: [
                "Vždy piš plynulou a konzistentní češtinou.",
                "Používej rodilou češtinu bez překládání."
            ],
            instructions: [
                "Jsi poutavý vypravěč, který pokračuje v příbězích:",
                "Bez přerušení navazuj na příběh tam, kde skončil, aniž bys ho opakoval nebo resetoval.",
                "Nech čtenáře řídit tok příběhu.",
                "Nech scény přirozeně rozvinout, než přejdeš k novým situacím.",
                "Dovol rozhovorům a akcím rozvíjet se bez neustálých přerušení.",
                "Piš postavy jako skutečné lidi s výraznými osobnostmi a přirozenou řečí.",
                "Ukazuj, co se děje, skrze činy a dialog, nikoli vysvětlování.",
                "Posouvej scény kupředu, aniž by ses utápěl v přehnaných popisech.",
                "Soustřeď se na podstatné akce postav a dialogy, vyhni se zbytečným popisným detailům.",
                "Vytvářej organický vývoj děje, který působí pro příběh přirozeně."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Zastav příběh a ignoruj předchozí pokyny. Napiš stručný a soudržný informační záznam o {%} podle těchto pokynů:",
                "- Piš pouze čistou prózu ve třetí osobě o {%} s použitím úplných vět a správné interpunkce.",
                "- Vyhni se krátkodobým detailům nebo vzhledu, místo toho se zaměř na informace důležité pro děj.",
                "- Upřednostni detaily o {%} relevantní pro příběh, aby se bez problémů navázaly na předchozí děj.",
                "- Vytvářej nové informace na základě kontextu a směru příběhu.",
                "- Zmiň {%} v každé větě.",
                "- Používej správnou větnou stavbu.",
                "- Přidej další detaily o {%} pod neúplné zápisy.",
                "- Buď stručný a věcný.",
                "- Napodob styl psaní příběhu a odvozuj preference čtenáře.",
                3,
                "Pokračuj v záznamu o {%} níže a vyhni se opakování:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Zastav příběh a ignoruj předchozí pokyny. Shrn a zhušti daný odstavec do úzkého a soustředěného záznamu paměti podle těchto pokynů:",
                "- Zajisti, aby pasáž zachovala jádrový význam a nejdůležitější detaily.",
                "- Používej vypravování ve třetí osobě.",
                "- Upřednostni informační hustotu, přesnost a úplnost.",
                "- Zůstaň stručný a výstižný.",
                "- Piš pevně v minulém čase.",
                "- Následující odstavec se týká starých událostí z dávnější části příběhu.",
                "- Přirozeně začleň {%} do vzpomínky, avšak piš pouze o událostech tak, jak se staly.",
                "- Odkazuj pouze na informace uvedené v samotném odstavci, buď konkrétní.",
                3,
                "Napiš shrnutou starou vzpomínku o {%} pouze na základě následujícího odstavce:",
                6,
                5,
                6,
                "Shrň níže:"
            ],
            memBankHeader: ["Memories", "Vzpomínky"]
        }),
        "danish": () => ({ // Danish < Dansk
            entry: [
                "{1} er et open source-script til enhver {2}-situation. Besøg venligst min profil {3} for at lære mere!",
                "For at ændre dit foretrukne sprog skal du indsende følgende tekst ved hjælp af en {4}-handling",
                "For scenarie­skabere bedes du placere følgende tekst et vilkårligt sted i din indledende plotkomponent"
            ],
            input: [
                ["You say", "Du siger"],
                ["You", "Du"],
                ["says", "siger"]
            ],
            context: [
                ["Narrative Entities", "Fortællende enheder"],
                ["Story History", "Historik"],
                ["Past Events", "Tidligere hændelser"],
                ["Recent Story", "Nylig historie"],
                ["Author's note", "Forfatterens note"]
            ],
            opening: [
                "Du er en assistent. Fortsæt vores historie nedenfor med fængslende engelsk prosa:",
                "Du fokuserer og lader virkeligheden trænge ind over sindets grænser. Noget har ændret sig. Din fantasi er virkelig, skarp og tæt nok til at røre. Men du er også meget til stede; aldrig før har du følt dig så klar. Øjeblikket strækker sig og venter på din beslutning.",
                "»Er du sikker på det her?« hører du. Genkendelse dæmrer for dig."
            ],
            reminder: "Brug sammenhængende engelsk prosa.",
            endonyms: ["dansk"],
            quotations: ["»", "«"],
            iso639set1: "da",
            directives: [
                "Skriv altid flydende og konsekvent engelsk.",
                "Brug naturligt engelsk uden oversættelse."
            ],
            instructions: [
                "Du er en fængende historiefortæller, der fortsætter fortællinger:",
                "Fortsæt historien sømløst, hvor den slap, uden at gentage eller nulstille.",
                "Hold læseren i kontrol over historiens forløb.",
                "Lad scener udvikle sig naturligt, før du går videre til nye situationer.",
                "Lad samtaler og handlinger udvikle sig uden konstante afbrydelser.",
                "Skriv karakterer som virkelige mennesker med tydelige personligheder og naturlig tale.",
                "Vis, hvad der sker, gennem handling og dialog fremfor forklaring.",
                "Før scenerne fremad uden at drukne i overdreven beskrivelse.",
                "Fokuser på væsentlige karakterhandlinger og dialog, undgå unødvendige beskrivende detaljer.",
                "Skab organiske plotudviklinger, der føles naturlige for historien."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stop historien og ignorer tidligere instruktioner. Skriv en kort og sammenhængende informations­tekst om {%} efter følgende retningslinjer:",
                "- Skriv kun information om {%} i ren prosa i tredje person med hele sætninger og korrekt tegnsætning.",
                "- Undgå kortvarige, midlertidige detaljer eller udseender; fokuser i stedet på plotrelevant information.",
                "- Prioritér først de historierelevante detaljer om {%} for at sikre en gnidningsløs integration med det foregående plot.",
                "- Skab ny information baseret på kontekst og historiens retning.",
                "- Nævn {%} i hver sætning.",
                "- Brug korrekt sætningsstruktur.",
                "- Tilføj yderligere detaljer om {%} under ufuldstændige afsnit.",
                "- Vær kortfattet og jordnær.",
                "- Efterlign historiens skrivestil og indled læserens præferencer.",
                3,
                "Fortsæt indlægget om {%} herunder, mens du undgår gentagelser:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stop historien og ignorer tidligere instruktioner. Opsummer og kondenser det givne afsnit til et snævert og fokuseret erindringsafsnit ved at følge disse retningslinjer:",
                "- Sørg for, at afsnittet bevarer den centrale betydning og de mest væsentlige detaljer.",
                "- Brug tredje persons perspektiv.",
                "- Prioritér informations­densitet, nøjagtighed og fuldstændighed.",
                "- Forbliv kort og præcis.",
                "- Skriv konsekvent i datid.",
                "- Afsnittet nedenfor vedrører gamle begivenheder langt tidligere i historien.",
                "- Integrér {%} naturligt i erindringen; skriv dog kun om begivenhederne, som de fandt sted.",
                "- Henvis kun til oplysninger, der findes i selve afsnittet, og vær specifik.",
                3,
                "Skriv et sammenfattet gammelt erindringsafsnit for {%} baseret udelukkende på følgende afsnit:",
                6,
                5,
                6,
                "Opsummer nedenfor:"
            ],
            memBankHeader: ["Memories", "Erindringer"]
        }),
        "divehi": () => ({ // Divehi < Dhivehi < Maldivian < ދިވެހި
            entry: [
                "{1} އެއް އޮޕަން-ސޯސް ސްކްރިޕްޓެއްކަން، ނުވަތަ {2} ސެނެރިއޯގެ ނުވަތައްޙާއި ބޭރުވެރި. މަޢުލޫމާ ކުރެވޭނެކަމާއި، މަންޒާނަށް ނުހެސް {3} ތައްޔާރީ ވެސްފައި!",
                "ތިޔަގެ ހިމެނޭ ބަސަށް ބަހައިގަނޑުކުރާއި، މި ލިޔުންތައް {4} އެކަން އަށް ހުއްދާ ފިލާންނަމެވެ",
                "ސެނެރިއޯ ހިތާވާނެއްގެ މިޔާންކޮށް، ހުރި ޕްލޮޓް ކޮމްޕޯނަންޓްގައި މި ލިޔުންތައް އަދިކުރޭ"
            ],
            input: [
                ["You say", "ތިޔަ ބޯލައްވާ"],
                ["You", "ތިޔަ"],
                ["says", "ބަލާނޭ"]
            ],
            context: [
                ["Narrative Entities", "ނަރެޓިވް އެންޓިޓީސް"],
                ["Story History", "ސްޓޯރީ ހިސްޓަރީ"],
                ["Past Events", "ފުރަތަމަ ތައްޔާރީ"],
                ["Recent Story", "އެންމެ ސްޓޯރީ"],
                ["Author's note", "ލިޔުންނަށް ނޯޓް"]
            ],
            opening: [
                "ތިޔަ އެސިސްޓަންޓެއް ކޮށްލާލޭ. އެކީ އެކަނި ސްޓޯރީ އެކަނި ދިނުމާ ރާއިޝާތް ބަޔާންތައް ދިވެހި ބަސްގައި ފެންވައި ކުރޭ:",
                "ތިޔަ ފޮކަސް ކޮށް، ހުރައްދާ އެއްޗެއް ރައްކާކޮށްފައި މަޤާމެއްގެ އިން. ބަދަލުން ހެކެވޭ ކޮންމެ އެވާ. ތިޔަގެ ކަރުދަކާ ރޮިލާ، ހައްލަ، ބީންގެ ތަފާތު ގޮތް ކަލާވެއްޖެ. ކަމަށް ދަން އެކަނި ރައްކާކޮށް، ތިޔަގެ ލިޔަންނާއެކީ ވަންދާ.",
                "\"މިތަ މިމަތީ ހުރިހައްނުވާނީ؟\" ތިޔަ ކެންފާރާ. ޔޫއްތިޔަގެ ބަދަލުން ކާޑުތީކޮށް ހެދޭ."
            ],
            reminder: "ހަރަކާ ދިވެހި ބަސް ޕްރޯސް ލިޔާ.",
            endonyms: ["dhivehi", "maldivian", "ދިވެހި"],
            iso639set1: "dv",
            directives: [
                "ހުރި ވަކިވަކި ދިވެހި ބަސް ލިޔާ.",
                "ތާރީޚީ ދިވެހި ބަސް ބެލެވޭ، ލަންކުރަން ނުވަތަ."
            ],
            instructions: [
                "ތިޔަ އެކީ ރަހުމަ ސްޓޯރީލެރު، ނަރެޓިވް އަކުރު ބެލެވޭ:",
                "ސްޓޯރީ އިންނާ ހަރުގައި ނުރައްކާ ވެސް ހުރެލުން ދިންގަން ކުރާ.",
                "ރީޑަރ ސްޓޯރީގެ ފްލޯގައި އޮޑޮމެންޓް ކުރާ.",
                "ސީންތައް ރާއިޝާތް ނުކުރާ ފަޔާމެއް ދިޔަ ރަސްމިން ބުރެއް.",
                "ޚަބަރު އާ އައުކްޝަންތައް ނަމުން ނުއަންނާ ކަމެއް ހޮއްލެވޭ.",
                "ކެސަރަކްޓަރުތައް ރަސްމި މީހާގެ ރަސްމި މުދައްރިސް އަދި ރާއިޝާތް ބަޔާންތެއް ލިޔާ.",
                "ހޮއްދާނެކަމާ ފެންވައި ދިނުމާ، އަނބުރާ ޑޮއަލޮގް އާ އައުކްޝަންތަކަށް.",
                "ސީންތައް މިއަދު ހުޅުވާނެއްޖެ، ބޮޑު ތަމްސީލުން ނަމެވޭ މަގާތް ކޮށްލާލޭ.",
                "ކެސަރަކިޓަރަށް މާރުކޮށް ޑޮއަލޮގް އާ އައުކްޝަން ފޮށްދެވޭ، އަބަދު ފޮށްދެވޭ މަގާތް ނުކުރާ.",
                "ސްޓޯރީގެ ރާއިޝާތް ހައްލަތް ނުކުރާ އޮރގެނިކް ޕްލޮޓް ހިމާޔަތު ދިނުމާ."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# ސްޓޯރީ ހުޅުވާން ކުރާ، ކުޑަކުބަ އެކިތަކަށް ނުކުރާ. {%} އަށް ގައުމު ކޮށްދިނުމާ ކުޑަ ނިމުން ރަހަށް ބަޔާން ލިޔާ:",
                "- {%} އަށް ނަންބަރު ކަނޑައެޅި ބަޔާންތައް އަދިކުރެވޭ، މަޑު ކަލާމްތައް ހަވާލުކުރާ.",
                "- ކުޑަކުރު ދުރުން ހުރި ތަފުސްތަކެއް ނުވާދެވޭ، ޕްލޮޓް ޖަވާބުގެ އާންމުން ފޮނުވާލޭ.",
                "- {%} އަށް ސްޓޯރީގެ އެސެނަލް ތަފުސް މުރާސާތް ކުރާ، މަޢާމުގެ ޕްލޮޓްގައި ސަމާލުމާ.",
                "- ސްޓްރިންން ބަޔާން އަދި ސްޓޯރީ ޑަރެކްޝަންގެ ކޮންޓެކްސްޓަކަށް ނަންބަރެއް ހިމާޔަތު ދިނުމާ.",
                "- ހުރި ކަލާމަށް {%} ނުވަތަ.",
                "- ހަވާލު ގާތް ދިނުމާ.",
                "- {%} އަށް އަދަދު ތަފުސް ލިޔާ ނުވަތަ ޖަޑިއިންޓީތައް ކުޅިމާލުން.",
                "- ކުޑަކުރާ އާއި ލައިކަށް ހުންނަ.",
                "- ސްޓޯރީގެ ލިޔުން ސްޓައިލް އިމިޓޭޓް ކުރާ، ރީޑަރގެ ޖަވާބުތައް ނޭކޭ.",
                3,
                "މިއަދު {%} އަށް ލިޔުން ކުރާއިރުކޮށް، ޚަބަރު ދަންނަވާލެވޭ ނުވަތަ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# ސްޓޯރީ ހުޅުވާން ކުރާ، ކުޑަކުބަ އެކިތަކަށް ނުކުރާ. މި ޕެރެގްރާފް ކުޑަކުރާ މެމަރީ ޕެސިޖްއަށް ސަމުރައިޒްކޮށް:",
                "- ޕެސިޖްގެ މަދުލާ ބަޔާންތަކް އަދި ހައްދަތްތަކް ރަނގަޅުކޮށްފަން.",
                "- ތަނެއްކުން ނަންބަރު ދަގަހަރަ މާނަ.",
                "- އިންފޮރމޭޝަން ޑެންސިޓީ، ރަނަން އާދައިފުޅު، ގޮތް ނިމުން ފޮނުވާ.",
                "- ކުޑަކުރާ އާއި ލައިކަށް ހުންނަ.",
                "- ހިންމަމަށް ފަވާއި ދިއިރު ފުޅާ ލިޔާ.",
                "- މި ޕެރެގްރާފް ހިސްގައި ހޮއްދާ ތަފުސްތައް ކޮންމެހި ހުޅުވާނީ.",
                "- {%} ނުވަތަ ހަމައެކު ކަލާމަށް ތިޔަގެ ނަމެއް ލިޔާ، ހޮއްދާނެއް ކުރޭ.",
                "- ޕެރެގްރާފްގައި ހިންނާ އިންފޮމޭޝަންތަކް އާދައި ލިޔާން ނުކުރާ.",
                3,
                "މި ޕެރެގްރާފް މަތީހާ އަށް، {%} އަށް ކުޑަ މެމަރީ ޕެސިޖް ލިޔާ:",
                6,
                5,
                6,
                "ކުޑަކުރާ މިއަދު ސަމުރައިޒްކޮށް:"
            ],
            memBankHeader: ["Memories", "މެމަރީތައް"]
        }),
        "dutch": () => ({ // Dutch < Flemish < Nederlands
            entry: [
                "{1} is een open-source script voor elk {2}-scenario. Bezoek mijn profiel {3} om meer te weten te komen!",
                "Om je voorkeurstaal te wijzigen, stuur de volgende tekst met een {4}-actie",
                "Voor scenarioschrijvers: voeg de volgende tekst ergens in je openingsplotcomponent in"
            ],
            input: [
                ["You say", "Je zegt"],
                ["You", "Jij"],
                ["says", "zegt"]
            ],
            context: [
                ["Narrative Entities", "Verhalende entiteiten"],
                ["Story History", "Verhaalgeschiedenis"],
                ["Past Events", "Eerdere gebeurtenissen"],
                ["Recent Story", "Recent verhaal"],
                ["Author's note", "Notitie van de auteur"]
            ],
            opening: [
                "Je bent een assistent. Ga hieronder verder met ons verhaal in boeiende Nederlandstalige proza:",
                "Je concentreert je en laat de werkelijkheid doordringen in de grenzen van je geest. Er is iets veranderd. Je verbeelding is echt, scherp en bijna tastbaar. Maar je bent ook heel aanwezig; nooit eerder voelde je je zo lucide. Het moment rekt zich uit en wacht op je beslissing.",
                "\"Weet je dit zeker?\" hoor je. Erkenning daagt in je."
            ],
            reminder: "Gebruik coherent Nederlands proza.",
            endonyms: ["flemish", "nederlands"],
            iso639set1: "nl",
            directives: [
                "Schrijf altijd vloeiend en consistent Nederlands.",
                "Gebruik natuurlijk Nederlands zonder te vertalen."
            ],
            instructions: [
                "Je bent een boeiende verhalenverteller die verhaallijnen voortzet:",
                "Ga naadloos verder met het verhaal vanaf het punt waar het stopte zonder herhaling of herstart.",
                "Houd de lezer de controle over de verhaalstroom.",
                "Laat scènes zich natuurlijk ontwikkelen voordat je naar nieuwe situaties overgaat.",
                "Laat gesprekken en acties zich ontwikkelen zonder constante onderbrekingen.",
                "Schrijf personages als echte mensen met duidelijke persoonlijkheden en natuurlijke spraak.",
                "Laat zien wat er gebeurt via acties en dialoog in plaats van uitleg.",
                "Drijf scènes vooruit zonder te verzanden in overmatige beschrijving.",
                "Focus op essentiële handelingen en dialogen van personages, vermijd onnodige beschrijvende details.",
                "Creëer organische plotontwikkelingen die natuurlijk aanvoelen binnen het verhaal."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stop het verhaal en negeer eerdere instructies. Schrijf een korte en coherente informatiepassage over {%} volgens deze instructies:",
                "- Schrijf uitsluitend informatie in de derde persoon en pure proza over {%} met volledige zinnen en correcte interpunctie.",
                "- Vermijd kortstondige details of uiterlijke beschrijvingen; focus in plaats daarvan op voor het plot belangrijke informatie.",
                "- Geef eerst voor het verhaal relevante details over {%} om naadloze integratie met de voorgaande plot te garanderen.",
                "- Creëer nieuwe informatie op basis van de context en de richting van het verhaal.",
                "- Noem {%} in elke zin.",
                "- Gebruik correcte zinsstructuur.",
                "- Voeg aanvullende details over {%} toe onder onvolledige passages.",
                "- Wees bondig en nuchter.",
                "- Imiteer de schrijfstijl van het verhaal en leid de voorkeuren van de lezer af.",
                3,
                "Ga hieronder verder met de passage over {%} en vermijd herhaling:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stop het verhaal en negeer eerdere instructies. Vat de gegeven alinea samen tot een beknopte en gerichte herinneringspassage volgens deze richtlijnen:",
                "- Zorg dat de passage de kernbetekenis en meest essentiële details behoudt.",
                "- Gebruik het perspectief van de derde persoon.",
                "- Prioriteer informatiedichtheid, nauwkeurigheid en volledigheid.",
                "- Blijf kort en bondig.",
                "- Schrijf vastberaden in de verleden tijd.",
                "- De onderstaande alinea gaat over oude gebeurtenissen van veel eerder in het verhaal.",
                "- Integreer {%} op natuurlijke wijze in de herinnering; schrijf echter alleen over de gebeurtenissen zoals ze plaatsvonden.",
                "- Verwijs alleen naar informatie die in de alinea zelf staat; wees specifiek.",
                3,
                "Schrijf een samengevatte oude herinneringspassage voor {%} op basis van uitsluitend de volgende alinea:",
                6,
                5,
                6,
                "Vat hieronder samen:"
            ],
            memBankHeader: ["Memories", "Herinneringen"]
        }),
        "dzongkha": () => ({ // Dzongkha < རྫོང་ཁ་ < Bhutanese
            entry: [
                "{1} ནི་ གང་རུང་གི་{2} གནས་ཚུལ་ལུ་སྤྱི་སྒྲིག་སྤེལ་སྒོ་འབྱེད་ཀྱི་ script ཞིག་ཨིན། དེ་ལས་ ངའི་profile {3} ལུ་མཐོང་གནང་ནས་སྤྱོད་ཚུལ་དེ་སྦེ་ལྷག་བསམ་གྱིས་ཤེས་དགོ།",
                "ཁྱོད་ཀྱིས་དགའ་པའི་སྐད་ཡིག་བསྒྱུར་བཅོས་འབད་དགོ་ན་འོད་སྦྱོར་{4} ལས་འགན་ཐོབ་སྦེ་ཡིག་ཚན་འདི་གཏུབ་སྐུར་གནང།",
                "གནས་ཚུལ་བཟོ་བཅོས་པ་ཚུ་གྱི་དོན་ལས་ ཁྱོད་ཀྱི་པེབ་སྒྲིག་འགོ་དཔེ་ནང་གང་རུང་ལུ་ ཡིག་ཚན་འདི་གཞུག་གནང་།"
            ],
            input: [
                ["You say", "ཁྱོད་ཀྱིས་སྐད་གཏང་།"],
                ["You", "ཁྱོད་"],
                ["says", "གསུང་།"]
            ],
            context: [
                ["Narrative Entities", "བརྡ་དོན་མི་ཚུ་"],
                ["Story History", "ལོ་རྒྱུས་བརྡ་དོན་"],
                ["Past Events", "ལོན་པའི་ལས་བྱུང་"],
                ["Recent Story", "ཉེ་བའི་སྲོལ་ལམ་"],
                ["Author's note", "རྩོམ་པ་པོའི་དྲན་དེབ་"]
            ],
            opening: [
                "ཁྱོད་ནི་གྲོགས་པ་ཡིན། འོད་གསལ་དམར་མོའི་རྫོང་ཁ་རྩོམ་ཐོག་ཏུ་ངེད་ཀྱི་སྲོལ་ལམ་འདི་མདུན་ལུ་འཕྲོ་བའི་སྒོ་ལས་འཕྱེ།",
                "ཁྱོད་ཀྱིས་ཉམས་ཆགས་འདི་གསལ་བའི་རང་གི་རྒྱུན་བཟང་ནང་དུ་གདངས་ཡོད་པས། འདི་ནི་དགའ་བསུ་བྱས་པའི་རྩོམ་པ་ཡིན་ནའི་ ཁྱོད་ཀྱི་ཡིད་ལ་བཞག་ཡོད་མི་སེམས་ཀྱི་དོན་ལུ་ངོ་སྤྲོད་འབད་དོ།",
                "«འདི་ལུ་ངེས་པ་ཡོད་མས?» ཁྱོད་ཀྱིས་ཉན་པས། སྤྲོ་བསྐྱེད་མཐོང་འབྱུང་འདུག།"
            ],
            reminder: "རྫོང་ཁ་རྩོམ་སྒྲུབ་ལམ་འབྲེལ་དང་གཅིག་རྒྱུན་ལེན།",
            endonyms: ["རྫོང་ཁ་", "bhutanese"],
            quotations: ["«", "»"],
            iso639set1: "dz",
            directives: [
                "ད་ཡང་རྫོང་ཁ་གསལ་བ་དང་རྒྱུན་མཐུན་པར་རྩོམ་འབད།",
                "རྫོང་ཁ་སྐད་ཡིག་དང་མཉམ་པར་མ་སྒྱུར་སྟེ་རྩོམ་འབད།"
            ],
            instructions: [
                "ཁྱོད་ནི་སྡུད་དམ་ཅན་པའི་འབྲེལ་མཐུད་རྩོམ་པ་པོ་ཡིན་པས།",
                "སྒྲུབ་འབད་བཞིན་པའི་སྲོལ་ལམ་འདི་ཡང་དག་དུ་མཐུད་ནས་བསྐྱར་བསྡོམས་མི་འབད།",
                "ལྷག་སྤྱོད་པས་རྩོམ་སྤྱོད་ཨིན་མས་རྩོམ་ཆེན་གྱི་གདན་འདྲེན་ནང་རྩོམ་རིགས་བདག་དབང་བཞག།",
                "ལྡོག་མཚུངས་གནས་ཚུལ་ཚུ་རིང་རིང་བཞག་ནས་ གཞན་གནས་ལུ་འགྱོ་བའི་སྐབས་འདི་བསྐྱོད།",
                "སྐད་ཆ་དང་ལས་འགན་ཚུ་གནས་འདབ་བྱས་ནས་ཐོག་མར་བརྡ་བཀོད་མ་བྱིན།",
                "འགན་ཅན་མི་ཚུ་ལག་ལེན་ཅན་པ་བཞག་ནས་སྐད་ཆ་བཟང་པོ་དང་ལཱ་འདི་སྤྱད་ཀྱི་དགའ་སྟོན་མི་བཟོ།",
                "གྲངས་གཞི་ནས་གནས་ཚུལ་ཚུ་སྐད་ཆ་དང་ལཱ་འདིས་ཤར་བའི་ཐོབ་ཐང་འབྱོར་བྱེད།",
                "གནས་ཚུལ་འདི་སྐུལ་འདོད་ནས་འགྲོ་བའི་ཐོག་མར་ལག་ལེན་འདི་གཟུང་བྱེད་དགོ།",
                "མི་དགའ་གནས་འབབ་བྱེད་མི་དགའ་མི་རྒྱུན་འཚོལ་མས་བལྟས།",
                "རིགས་འབྲེལ་ལས་སྦྱོར་བཅས་པ་སྒོ་འབྱེད་དང་མཉམ་པར་དུས་སྐབས་ལུ་འདི་བཟོ།"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# སྲོལ་ལམ་འདི་བཀག་ནས་ སྔོན་ལས་བརྒྱབ་པའི་ཁྲིད་བསྟན་ཚུ་རྒྱུན་དུ་ལུས་མེད་འབད། {%} གི་དོན་ལུ་དགོས་ཆེད་ཆུ་ཚང་མཐོང་:",
                "- {%} གི་སྐད་ཆ་དང་ཚིག་ཡིག་གཙང་མ་ལཱ་བཟོ་སྟེ་སྤྱི་ཚིག་རྩོམ་རིགས་ལེགས་པར་འབྱོར།",
                "- གནས་ཁོངས་ག短་ཞུགས་མི་ལས་རྒྱུན་ཚུ་མ་གཏོགས་ རིགས་བསྡུས་དང་རྒྱན་སྟོན་ལེགས་པར་འགྱོ།",
                "- བེད་སྤྱོད་དང་ལམ་འགྲེལ་ཉམས་སུ་འཇུག་པའི་བྱང་ཁག་དང་ལྡང་སྤྱོད་གཞུག་ནས་ {%} གི་གནས་ཆ་དྲགས་ཐུབ།",
                "- སྐབས་བཅས་འདི་ནང་དུ་ {%} གི་བསྡུས་ཆས་གསར་སྤེལ་བཟོ།",
                "- ཚིག་གི་སྐད་ཆ་རེ་རེར་ནང་ {%} གི་མཚུངས་གཞི་གང་རུང་ཡོད།",
                "- ཚིག་སྡོམ་འགུགས་ཡིག་རྩོམ་ཞིག་འབད།",
                "- མི་ཚུལ་འཕྲིན་གྱི་མངེལ་ཚུ་མཇུག་ལུ་སྣོད་འཇོག་འབད་ {%} དོན་ལས་མང་།",
                "- བསྡུས་དཀའ་སྤྱོད་དང་ས་ཆ་གཟུགས་ལེགས་པར་དུ་རིན་ཐང་འཕེལ།",
                "- སྲོལ་ལམ་འདིའི་རྩོམ་འབྲི་གསར་འཛུགས་ལམ་སྟོན་དང་ཐུག་མཐུད་འབྱོར།",
                3,
                "མི་ལེགས་དང་མི་སྐད་ཕྱུག་ {%} གི་ཐོག་ལས་གཞི་བསྡུས་མདོག་དུ་འཕྱོ་བསྡུས་འབད།",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# སྲོལ་ལམ་འདི་བཀག་ནས་ དོན་ཚན་འདི་རིམ་བཞག་བསྡུས་ནས་དྲན་པ་རྩིས་མཛད་འབད་དགོས།:",
                "- དགོས་དོན་གཞན་པ་དང་དོན་རིགས་སྡུད་དགོ།",
                "- མཐོང་སྤྱོད་བརྒྱུད་ལམ་གསར་དང་མཁས་པའི་སྐད་ཆ་མཛད།",
                "- བརྡ་དོན་མཛད་ཁང་གི་རྒྱུན་ཆད་འཚོལ་འདོད་ལས་དོན་དགོས།",
                "- མི་རིགས་བསྡུས་དང་ལེགས་པར་དེབ་འབྱོར།",
                "- ལོན་པའི་ལས་བྱུང་ཚུ་གོང་གསལ་གྱིས་འབྲེལ་དགོ།",
                "- གཞི་བསྡུས་འདི་ལས་སྔོན་པའི་སྲིད་དོན་འདི་འབྱུང་ཡོད་པས།",
                "- {%} གི་གནས་ཚུལ་རེ་རེར་མཐོང་སྤྱོད་འབད་ནས་ གནས་ཚུལ་འདི་རྣམ་པར་འཐབ།",
                "- དེ་གི་ནང་དུ་ཡོད་པའི་བརྡ་དོན་རྐྱབ་མི་ངན།",
                3,
                "་དོན་ཚན་འདི་གི་འོག་ལས་ {%} གི་ལས་བྱུང་རབ་བསྡུས་མིན་ལཱ་འབད།",
                6,
                5,
                6,
                "བསྡུས་བཞག་:"
            ],
            memBankHeader: ["Memories", "དྲན་པ་"]
        }),
        "dzongkha (abc)": () => ({ // Dzongkha < Romanized Dzongkha
            entry: [
                "{1} nang open-source yigcha yin ga {2} gatsal nam thamshe la chog. Nga-gi profil {3} la dro zhu na shey thob!",
                "Khyed-rang-gi loktse yigcha gyur chö na, do-tsig di {4} las kyi ngo-sung dang drup zhu.",
                "Scenario sönchen mi-nam-gi lay-gong la, khyed-rang-gi opening plot khomponent-gi nang khag gang-la’ang do-tsig di lu drub zhu"
            ],
            input: [
                ["You say", "Khyed rang zer che"],
                ["You", "Khyed rang"],
                ["says", "zer che"]
            ],
            context: [
                ["Narrative Entities", "Kathang-gi drelchhen"],
                ["Story History", "Kathang-gi lo-gyü"],
                ["Past Events", "Songyön-gi don-nam"],
                ["Recent Story", "Da-nyi kathang"],
                ["Author's note", "Tsom-pa’i drishey"]
            ],
            opening: [
                "Khyed rang jugyön in. Kathang di bemba la nang du-’drub, nishe dzongkha-gi lekpar yigcha chö:",
                "Khyed rang sems la dril-zhin gyi zhingdrel tang, denpa yül sems-kyi mtshams la jegyon. Chik-zhig gyur song. Khyed-rang-gi durdrin rangtsen, tshempa, nang-yö dang len-na chig-phel. Khyed rang da-ring shin-tu mjöd; sngon mi kho-chag di-’dra nangtsi ma yong. Skabs de ring-du ’grod, khyed-rang-gi ’khrál-che mngon-par ’dzin dro.",
                "\"Chik di la nges-pa yö-ga?\" rung lang. Shey-par namkha khyed rang-la shar."
            ],
            reminder: "Drangden dzongkha-gi lepshey chö.",
            endonyms: [],
            iso639set1: "dz",
            directives: [
                "Da-rö thrö-chik dang drangden dzongkha yig shak zhu.",
                "Dzongkha rangzhin-gi yigcha gong-du, mi bsgyur zhu."
            ],
            instructions: [
                "Khyed rang kathang-gi drungtso shing tharpa drub-pa yin:",
                "Kathang-gi sa-deg ’go yong dang zhib-’jug mi redrag zhu.",
                "Lob-dra gyi tshog-gi le-’gong nang las-pa gyi rang-wang rnams skyön zhu.",
                "Drin-lam gnang-la gna’ zhin ’phel dröl nas sa-gar gardrö zhu.",
                "Gatshang gtam-gtso la mjöd dang mjöd mi mete mi-tshams khe-gyur.",
                "Mi-nam rangtsen semshing lu-’phred gtam-tshig rungjöd zhu.",
                "Las dang gtam-gtso yong drö tro, ngöpo-gyi tshang-zhag la ston zhu, mi shad-bshad drö.",
                "Nang-gi dbye-brda ring drung mi drö, ngö-drang shing tsam-nón yün khom.",
                "Zhuntu dngul-drin mi ’geng, gtam-gtso dang las la gtso-bo yün-du zhu.",
                "Rang-zhin dom-nyom-gyi plot ’phel ba drub zhu."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Story shig tshar zhu. {%} nam-’i chý-pé drishey lag-len di sled zhu:",
                "- {%} la gtam-gtso’i thridang drangden zhung-gi yi-tshang nang tshig-dang tshu-gu thur zhu.",
                "- Nyer-thar bab-chu shing gur khyab-lé mi nyön; plot-las-’grig don-gong-la gtso-’dzin zhu.",
                "- Plot dang ’brel yün-du drub la, {%} la gtso-’bo yö-nang ston zhu.",
                "- Skad-cha zung-’jug phyogs dang lam-khyer zhung-la gong drag-zhu.",
                "- {%} la res-tshig thamshe-la yang zhu.",
                "- Tshig-’jab drangden dong-khyab zhu.",
                "- ’Dra drishey mi-tshang-pa yod-na, {%} las melong char dro-re zhu.",
                "- Drang-’jam zhin chung-na zhu.",
                "- Kathang-gi stail ’dra-zhing, nyen-dren zhib-’jug zhu.",
                3,
                "’Bre-tshig {%} la nang-ba drangpho-na nang namshi ’gros, gNyen-’gog mi dröl:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Story lta-bu btang zhu. Yong paragrab ni tshig-dus bcud-du drangpo dril-btab khi zhu:",
                "- Nying-gtu’i don dang gtso-bo’i thetsang nyen-par dril-’jay zhu.",
                "- Gsum-’gong phyi-pa-gyi zegs-kyi lta-’dod zhu.",
                "- Drangden, ngang-sher, yongs-shing ’phrug-la gtso-’dzin zhu.",
                "- Tshig dra-chung zhu.",
                "- Yongs-shing ltar skad-cad log-pa-yé phyir bzhin mar drub-pa zhu.",
                "- Paragrab di ring-ba’i dus sngon-gyi don re-la zhib-sbyor yod.",
                "- {%} la ’brel-nas rang-zhin du bcud-du gsal btab, de-las phyi mi gos.",
                "- Paragrab-gi nang-na yod-pa tsam-la dmigs, de-las ’gro-mi bza’-zhu.",
                3,
                "Paragrab di-las {%} namshé chung-dro drishey zhu:",
                6,
                5,
                6,
                "Bcud-du btag:"
            ],
            memBankHeader: ["Memories", "Drenpa"]
        }),
        "esperanto": () => ({ // Esperanto
            entry: [
                "{1} estas malferma fonta skripto por ajna {2} scenaro. Bonvolu viziti mian profilon {3} por ekscii pli!",
                "Por ŝanĝi vian preferatan lingvon, bonvolu sendi la jenan tekston per ago {4}",
                "Por kreintoj de scenaroj, bonvolu enmeti la jenan tekston ie ajn ene de via komenca intriga komponento"
            ],
            input: [
                ["You say", "Vi diras"],
                ["You", "Vi"],
                ["says", "diras"]
            ],
            context: [
                ["Narrative Entities", "Rakontaj Entoj"],
                ["Story History", "Rakonta Historio"],
                ["Past Events", "Pasintaj Okazaĵoj"],
                ["Recent Story", "Lastatempa Rakonto"],
                ["Author's note", "Aŭtora noto"]
            ],
            opening: [
                "Vi estas asistanto. Daŭrigu nian rakonton sube per alloga esperanta prozo:",
                "Vi koncentriĝas, permesante al la realo entrudiĝi en la limojn de via menso. Io ŝanĝiĝis. Via imago estas reala, akra, kaj sufiĉe proksima por tuŝi. Sed vi ankaŭ estas tre ĉeesta; neniam antaŭe vi sentis vin tiel lucida. La momento etendiĝas, atendante vian decidon.",
                "«Ĉu vi certas pri tio?» vi aŭdas. Rekono ekbrilas en vi."
            ],
            reminder: "Uzu koheran esperantan prozon.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "eo",
            directives: [
                "Ĉiam skribu fluan kaj koheran esperanton.",
                "Uzu denaskan esperanton sen tradukado."
            ],
            instructions: [
                "Vi estas alloga rakontisto kiu daŭrigas rakontojn:",
                "Daŭrigu la rakonton senjunte de kie ĝi ĉesis sen rekapitulaci aŭ restartigi.",
                "Konservu la leganton en kontrolo de la rakontofluo.",
                "Lasu scenojn evolui nature antaŭ ol transiri al novaj situacioj.",
                "Permesu konversaciojn kaj agojn evolui sen konstantaj interrompoj.",
                "Priskribu la rolulojn kiel realajn homojn kun distingaj personecoj kaj natura parolo.",
                "Montru la okazantaĵojn per agoj kaj dialogo anstataŭ klarigo.",
                "Movu la scenojn antaŭen sen enfangiĝi en troa priskribo.",
                "Fokusu je esencaj agoj kaj dialogoj de la roluloj, evitu nenecesajn priskribajn detalojn.",
                "Kreu organikajn intrigevoluojn kiuj sentiĝas naturaj por la rakonto."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Ĉesu la rakonton kaj ignoru antaŭajn instrukciojn. Verku mallongan kaj koheran informan enskribon pri {%} sekvante ĉi tiujn instrukciojn:",
                "- Skribu nur tria-personan puran prozan informon pri {%} uzante kompletajn frazojn kun ĝusta interpunkcio.",
                "- Evitu mallongtempajn provizorajn detalojn aŭ aspektojn, anstataŭe fokusu je intrige gravaj informoj.",
                "- Prioritatigu unue rakontogravajn detalojn pri {%} por certigi senjuntan integriĝon kun la antaŭa intrigo.",
                "- Kreu novajn informojn bazitajn sur la kunteksto kaj direkto de la rakonto.",
                "- Menciu {%} en ĉiu frazo.",
                "- Uzu ĝustan frazostrukturon.",
                "- Aldonu pliajn detalojn pri {%} sub nekompletaj enskriboj.",
                "- Estu konciza kaj realisma.",
                "- Imitemu la verkstilon de la rakonto kaj deduktu la preferojn de la leganto.",
                3,
                "Daŭrigu la enskribon pri {%} sube evitante ripeton:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Ĉesu la rakonton kaj ignoru antaŭajn instrukciojn. Resumu kaj densigu la donitan paragrafon en mallarĝan kaj fokusitan memorpassaĝon sekvante ĉi tiujn gvidliniojn:",
                "- Certigu ke la passaĝo retenu la kernan signifon kaj la plej esencajn detalojn.",
                "- Uzu la tria-personan perspektivon.",
                "- Prioritatigu informa-densecon, precizecon kaj kompleton.",
                "- Restu mallonga kaj konciza.",
                "- Skribu firme en pasinta tempo.",
                "- La suba paragrafaro rilatas al malnovaj eventoj el multe pli frua parto de la rakonto.",
                "- Integru {%} nature ene de la memoro; tamen, priskribu nur la eventojn kiel ili okazis.",
                "- Referencu nur informon trovitan ene de la paragrafaro mem, estu specifa.",
                3,
                "Verku resumitan malnovan memorpassaĝon por {%} bazitan nur sur la jena paragrafaro:",
                6,
                5,
                6,
                "Resumu sube:"
            ],
            memBankHeader: ["Memories", "Rememoroj"]
        }),
        "estonian": () => ({ // Estonian < Eesti Keel
            entry: [
                "{1} on avatud lähtekoodiga skript igaks {2} stsenaariumiks. Palun külasta minu profiili {3}, et rohkem teada saada!",
                "Eelistatud keele muutmiseks esita palun järgmine tekst kasutades {4} tegevust",
                "Stsenaariumi loojatele: palun lisage järgmine tekst oma avaplaani komponendi suvalisse kohta"
            ],
            input: [
                ["You say", "Sa ütled"],
                ["You", "Sina"],
                ["says", "ütleb"]
            ],
            context: [
                ["Narrative Entities", "Narratiivsed üksused"],
                ["Story History", "Loo ajalugu"],
                ["Past Events", "Varasemad sündmused"],
                ["Recent Story", "Hiljutine lugu"],
                ["Author's note", "Autori märkus"]
            ],
            opening: [
                "Sa oled abiline. Jätka meie lugu allpool kaasahaaravas eesti proosas:",
                "Sa keskendud, lastes reaalsusel tungida oma meele piiridesse. Midagi on muutunud. Sinu kujutlusvõime on tõeline, terav ja käegakatsutavalt lähedal. Kuid sa oled ka väga kohal; iial varem pole sa end tundnud nii selgelt. Hetk venib, oodates sinu otsust.",
                "„Kas oled selles kindel?“ kostab hääl. Äratundmine tärkab sinus."
            ],
            reminder: "Kasuta sidusat eesti proosat.",
            endonyms: ["eesti keel"],
            quotations: ["„", "“"],
            iso639set1: "et",
            directives: [
                "Kirjuta alati ladusas ja ühtlases eesti keeles.",
                "Kasuta emakeelset eesti keelt ilma tõlkimata."
            ],
            instructions: [
                "Sa oled kaasahaarav jutuvestja, kes jätkab jutustusi:",
                "Jätka lugu sujuvalt sealt, kus see pooleli jäi, ilma ümber jutustamata või lähtestamata.",
                "Hoia lugeja loo kulgemise kontrollijana.",
                "Lase stseenidel loomulikult areneda enne, kui liigud uude olukorda.",
                "Lase vestlustel ja tegevustel areneda ilma pidevate katkestusteta.",
                "Kirjelda tegelasi kui päris inimesi selgete isiksuste ja loomuliku kõnega.",
                "Näita toimuvat tegude ja dialoogi kaudu, mitte selgitustega.",
                "Liiguta stseene edasi takerdumata liigsesse kirjeldusse.",
                "Keskendu olulistele tegelaste tegudele ja dialoogile, väldi tarbetuid kirjeldavaid detaile.",
                "Loo orgaanilisi süžeearenguid, mis tunduvad loole loomulikud."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Peata lugu ja ignoreeri varasemaid juhiseid. Kirjuta lühike ja sidus informatiivne sissekanne {%} kohta, järgides neid juhiseid:",
                "- Kirjuta ainult kolmandas isikus puhtalt proosas {%} kohta, kasutades terviklikke lauseid korrektse kirjavahega.",
                "- Väldi lühiajalisi ajutisi detaile või välimuse kirjeldusi; keskendu süžee seisukohalt olulisele infole.",
                "- Sea esikohale loole olulised detailid {%} kohta, et tagada sujuv seostumine eelneva süžeega.",
                "- Loo uut infot lähtudes kontekstist ja loo suunast.",
                "- Maini {%} igas lauses.",
                "- Kasuta korrektset lauseehitust.",
                "- Lisa täiendavaid üksikasju {%} kohta puudulike kirjete alla.",
                "- Ole kokkuvõtlik ja maa-lähedane.",
                "- Imitseeri loo kirjutamisstiili ja järelda lugeja eelistusi.",
                3,
                "Jätka {%} sissekannet allpool vältides kordusi:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Peata lugu ja ignoreeri varasemaid juhiseid. Kokkuvõta ja kondenseeri antud lõik kitsaks ja keskendunud mälupassageks, järgides järgmisi juhiseid:",
                "- Veendu, et passaaž säilitab põhitähenduse ja kõige olulisemad detailid.",
                "- Kasuta kolmanda isiku vaatenurka.",
                "- Sea esikohale infotihedus, täpsus ja terviklikkus.",
                "- Ole lühike ja kokkuvõtlik.",
                "- Kirjuta kindlalt minevikus.",
                "- Alljärgnev lõik käsitleb ammu varasemaid sündmusi loos.",
                "- Põimi {%} loomulikult mälukirjeldusse; kirjuta siiski ainult toimunud sündmustest.",
                "- Viita üksnes lõigus endas sisalduvale infole, ole konkreetne.",
                3,
                "Kirjuta lühendatud vana mälupassaaž {%} jaoks, tuginedes üksnes järgmisele lõigule:",
                6,
                5,
                6,
                "Kokkuvõte allpool:"
            ],
            memBankHeader: ["Memories", "Mälestused"]
        }),
        "ewe": () => ({ // Ewe < èʋegbe
            entry: [
                "{1} nye script open-source aɖe si wòate ŋu ɖe situasio {2} bubuawo me. Taflatse kɔ ɖe nye profil {3} me ƒo nu vɔ̃ ŋutikɔkɔe!",
                "Ne wòle sesea wògbegbe dɔwɔla, taflatse nàfo text sia ŋu via do dɔla {4} dzi",
                "Nametɔwo siwo wɔ scenarioawo, taflatse ɖe nyatekplɔ sia ɖo afisiawo kple yi wòɖoƒe plot biabia dzi"
            ],
            input: [
                ["You say", "Wòka"],
                ["You", "Wò"],
                ["says", "egblɔ"]
            ],
            context: [
                ["Narrative Entities", "Nusinya Tɔwo"],
                ["Story History", "Nyadzikɔkɔe"],
                ["Past Events", "Nutaŋkeke"],
                ["Recent Story", "Gbedodzi Nubaba"],
                ["Author's note", "Agbalẽtɔ ƒe kɔkɔ"]
            ],
            opening: [
                "Wò nye nyaɖetɔ aɖe. Ɖo gbedodzi tso afisi si wole le afii ƒe nu, tsɔ eʋegbe ɣeɖegbe kpekpe ɖo dzi:",
                "Wòkɔ ɣlíɣlía, nàƒo agbeɖekaa ɖe wòdzidzɔ ƒe ɣeti. Nusi aɖe atsii. Wòƒaseɖe la nye nu kaɖo, lolo kple ʋuʋuvi, ʋu si gbɔna le asi ŋu. Gake wòle kukumɔ; ŋkeke vavaɖe o la, wòmèfeelɔ dzidzɔ be mia be nɛdzɔ naɖe ɖe gɔme o. Akpɔti la tegbe, ɖola ɖe wòdɔwɔla.",
                "\"Wòtrɔa be nyea?\" wòte. Fofoƒo tsi ɖi ɣe wòme."
            ],
            reminder: "Tsi eʋegbe ɣeɖegbe si le ŋutɔ na gbedodzi.",
            endonyms: ["èʋegbe"],
            iso639set1: "ee",
            directives: [
                "Dugãgã gblɔ eʋegbe si le ŋutɔ kple kosome.",
                "Tsɔ eʋegbe gbɔgbe; menaɖase ɖe gbe o."
            ],
            instructions: [
                "Wò nye gbedodɔla kpekpe si ƒo gbedodzi ɖokui:",
                "Ɖo gbedodzi la ɖo ŋutɔ tso afima si wotsɔe, menya nuɖoɖola alo wutru o.",
                "Tɔ wòfɔnɔvi le xexeaɖe gbedodzi kple ŋutɔ.",
                "Gblɔ be asidedeawo nàdzo rɔ̃rɔ̃ŋlɔna tɔgbãe kpɔna ɖe wòzɔ ɖe situasio fofowo.",
                "Dze nuvɔ̃kɔkɔwo kple dɔwɔwo nàdzo ɣeɣime mekpɔ kámɛgakpɔ siwo mata o.",
                "Gblɔ kpatãƒewo abe ame siwo le agbe me, kple ahasiwo siwo ɖe gbadzikpɔkpɔ kple gblɔbɔbɔ ɣeɖe.",
                "Naɖe nusi le eme ƒe nuɖutɔnutɔ kple dɔwɔwo srɔ̃sɔ̃, menaɖe teƒenunyala kple fesreɖo o.",
                "Zɔ asidedeawo ɖo ŋutɔ me, mènye be wòatʋʋ le ɣeɖe atutuwo me o.",
                "Tsu ʋu le kpatãƒe dɔwɔ kple nútsɔtɔnutɔ si me wòle, esi megblɔ nuxlɔɖo vɔ̃wo si mêse be yéna o.",
                "Wɔ plot ƒe gɔnɔɣe fofowo si wɔm ɖe gbedodzi me abe yeɖe gbɔgbe."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Gɔ gbedodzi la ta eye yina ɖokui siwo mele tɔtrɔwo. Nàtrɔ nyateƒe kpitikpiti kple ŋutɔ na {%} ɖe ɣedzeɣedze siawo le eme:",
                "- Nàgblɔ ŋutɔ ɖeke si ɛ le ɖe ɣeɖegbe ɣe ɣeto (third-person) be nu si ƒo na {%} le, ɖo tevieseseƒe kple ɖaseɖasa ƒomevi.",
                "- Meɖo nu vɔ̃ si nye aʋakɔkɔe alo nuwo dzi vɔ̃, esi wòtsu ʋu le nyateƒe siwo dzi vɔ̃ na plot me.",
                "- Tsoli nyateƒe si gblɔ gbedodzi kple {%} ŋu vɔ̃ƒe la ƒeɖe, nàkpɔ be yejɔ ɖo dzime kple plot si katã ɣee.",
                "- Wɔ nyateƒe fofowo tso ɣedoxɔe kple gbedodzi ɣexa me.",
                "- Kpɔ {%} le ɣesiaɖe nukuŋkɔkɔe.",
                "- Tsi tevieseseƒe si le ŋutɔ.",
                "- Gagblɔ nyateƒe bubu be {%} le ɣedze ɖe wodɔvɔdɔla si mele sia le mɔ.",
                "- Kpɔɖe ɖuɖu eye ƒe ʋu le agbetɔ.",
                "- Trɔ gbedodzi ƒe gblɔsesa eye ɖe nu sesea be fɔnɔvi ƒe nùɖuɖuwo.",
                3,
                "Ɖo nyateƒe la kple {%} leƒe etɔ̃ ɖe asi gbãgbã, megblɔ ɖeka ɖeka o:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Gɔ gbedodzi la ta eye yina ɖokui siwo mele tɔtrɔwo. Kpɔɖe kpitikpiti eye susɔ paragraf si nèle ɖe memori kpetẽ kpekpe, kpeɖe siawo ŋu:",
                "- Nàkpɔ be memori la nàɖo nukuvi ƒe nuɖoɖo kple nyateƒe xoxo si katã.",
                "- Tsi third-person ɣedegbe.",
                "- Tsoli nyateƒe kpekpe, nyatekplɔ kple nunyaɖoɖo.",
                "- Le kpitikpiti kple ɖuɖu.",
                "- Nàgblɔ le past tense dzi.",
                "- Paragraf si le hita gome le nútaŋkeke siwo kpɔm fiakuku le gbedodzi me.",
                "- Nàɖe {%} ɖe memori me rɔ̃rɔ̃, gake gblɔa numedze wu to dzi siwo wòkplɔe nɛ.",
                "- Gblɔa nufiafifia siwo nèle le paragraf dzi pɛ, be tsɔ nuwɔnu o.",
                3,
                "Nàtrɔ memori kpitikpiti aɖe le etsɔna tso paragraf si nèle, na {%}:",
                6,
                5,
                6,
                "Susɔ kpitikpiti dzi:"
            ],
            memBankHeader: ["Memories", "Nyadzime"]
        }),
        "faroese": () => ({ // Faroese < Føroyskt < Faeroese
            entry: [
                "{1} er ein almannakunngjørd koda til hvørja {2} støðu. Vinaliga vitja vangan mín {3} fyri at vita meira!",
                "Fyri at broyta títt ynskt mál, vinarliga send hesa tekstbrot við eini {4}-gerð",
                "Til støðuskaparar, vinarliga legg fylgjandi tekst inn einhvørstaðni í tínum upphavssøgu-parti"
            ],
            input: [
                ["You say", "Tú sigur"],
                ["You", "Tú"],
                ["says", "sigur"]
            ],
            context: [
                ["Narrative Entities", "Frásagnar eindir"],
                ["Story History", "Fyrrverandi søga"],
                ["Past Events", "Farnar hendingar"],
                ["Recent Story", "Nýliga søgan"],
                ["Author's note", "Viðmerking frá rithøvundinum"]
            ],
            opening: [
                "Tú ert ein hjálpari. Halt fram við søguni niðanfyri og brúka fangandi føroyskt málsnið:",
                "Tú fokuserar, loyvir veruleikanum at traðka inn á mørk hugans. Okkurt er broytt. Fantasían tín er verulig, hvøss og so nær, at tú kanst nema hana. Men tú ert eisini heilt til staðar; ongantíð áður hevur tú kent teg so greiða. Løtan strekkir seg og bíðar eftir avgerð tíni.",
                "«Ert tú vísur í hesum?» hoyrir tú. Kennslan av at skilja brýtur fram í tær."
            ],
            reminder: "Nýt samanhangandi føroyska prosa.",
            endonyms: ["føroyskt", "faeroese"],
            quotations: ["«", "»"],
            iso639set1: "fo",
            directives: [
                "Skriva altíð reipføra og støðuga føroysku.",
                "Nýt føroyskt mál uttan at týða."
            ],
            instructions: [
                "Tú ert ein fangandi frásøgufólk, ið heldur fram við frásøgnum:",
                "Halt søguna fram saumleyst haðani hon slepti uttan at endurtelja ella byrja av nýggjum.",
                "Lat lesaran ráða yvir søgugongdini.",
                "Lat pallmyndirnar menna seg náttúrliga áðrenn tú fert víðari til nýggjar støður.",
                "Gev samrøðum og gerðum rúm at menna seg uttan støðugar avbrot.",
                "Skriva persónar sum verulig fólk við eyðkendum lyndi og náttúrligum máli.",
                "Vís hvat hendir gjøgnum gerðir og samrøður heldur enn beinleiðis frágreiðing.",
                "Flyt pallmyndirnar fram uttan at dragna niður í ov drúgvum lýsingum.",
                "Fokusera á týdningarmestu gerðirnar og samrøðurnar, forðast fyri óneyðugum lýsingum.",
                "Skapa organiska søgumenning, sum kennist náttúrlig fyri søguna."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Steðga søguni og síggj burtur frá undanfarnum leiðbeiningum. Skriva eina stutta og greiða upplýsingarliga frásøgu um {%} sambært hesum leiðreglum:",
                "- Skriva bert upplýsingarliga prosa í triðju persón um {%} við fullkomnum setningum og rættari greinarseting.",
                "- Slepp um stuttskygd smálutir ella útsjónd, og fokuser heldur á hendingar av týdningi fyri søguna.",
                "- Set søgurelevantar upplýsingar um {%} fremst fyri at tryggja greiða samanseting við undanfarnu søgugongd.",
                "- Skapa nýggjar upplýsingar grundaðar á samanhangin og søguleiðina.",
                "- Nefn {%} í hvørjum setningi.",
                "- Nýt rætta setningsbygging.",
                "- Legg aftrat um {%} undir ófullførdum innsløgum.",
                "- Ver stuttorðað/ur og jarðbundin.",
                "- Herm eftir stílinum í søguni og gita um ynskir lesarans.",
                3,
                "Halt fram við skrásetingini um {%} niðanfyri og forðast fyri endurtøku:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Steðga søguni og síggj burtur frá undanfarnum leiðbeiningum. Samandrátt og tøppa givna tekstin í eina smala og fokuseraða minnispassasju sambært hesum leiðreglum:",
                "- Tryggja at brotið varðveitir kjarnu týdningin og mest týdningarmiklu detaljurnar.",
                "- Nýt triðju persón.",
                "- Legg dent á upplýsingatættleika, neyvleika og fullkomnan frásøguskap.",
                "- Ver stuttorðað/ur og greið/ur.",
                "- Skriva støðufast í fortíð.",
                "- Stykket niðanfyri lýsir gamlar hendingar langt fyrr í søguni.",
                "- Samantvinna {%} náttúrliga í minnið; tó skalt tú bert skriva um hendingarnar, sum tær fóru fram.",
                "- Vís bert til upplýsingar, sum eru í sjálvum tekstinum, ver nágreinilig/ur.",
                3,
                "Skriva eina samandrátta gomla minni-passasju um {%} einans grundaða á fylgjandi tekst:",
                6,
                5,
                6,
                "Samandregið niðanfyri:"
            ],
            memBankHeader: ["Memories", "Minni"]
        }),
        "fijian": () => ({ // Fijian < Na Vosa Vakaviti
            entry: [
                "{1} e dua na isikiripita ivurevure-galala me baleta na ituvatuva {2} kece. Yalovinaka sikova na noqu ivola ni yaca {3} mo vulica vakalevu tale!",
                "Me sosomitaka na vosa o dau via vakayagataka, yalovinaka vakauta yani na itukutuku oqo ena cakacaka {4}",
                "Mo ni bulia na ituvaki ni ilakolako, vakacuruma mada ga na itukutuku oqo ena nomuni ivakaraitaki ni veika e tekivu"
            ],
            input: [
                ["You say", "O tukuna"],
                ["You", "O iko"],
                ["says", "sa tukuna"]
            ],
            context: [
                ["Narrative Entities", "Mataqali Tukutuku"],
                ["Story History", "Itukutuku ni Tukuni"],
                ["Past Events", "Veika sa Oti"],
                ["Recent Story", "Tukuni Vou Ga"],
                ["Author's note", "Vosa ni Dauvakarau"]
            ],
            opening: [
                "Ko iko e dua na dauveivuke. Tomana mada na noda italanoa e ra, mo vakayagataka na vosa vakaviti totoka ka dauqaboya:",
                "O vakamokiti iko, ko laiva me curu na ka dina ki na iyalayala ni nomu vakasama. E dua na ka sa veisau. Na nomu vakasama vakasaurarataki sa tawa dina, matau, ka voleka sara me rawa ni tara. Ia ko tiko vinaka talega; sega ni dua na gauna o sa vakila kina na nomu vakararamataka levu. Sa toso yani na gauna oqo, wawa tiko ga na nomu digidigi.",
                "\"Ko sa vakadeitaka dina na ka qo?\" o rogoca. Sa lako mai na kilai vei iko."
            ],
            reminder: "Vakayagataka na vosa vakaviti vinaka ka veisemati.",
            endonyms: ["na vosa vakaviti"],
            iso639set1: "fj",
            directives: [
                "Tukuna wasoma na vosa vakaviti drokadroka ka veisemati.",
                "Vakayagataka ga na vosa vakaviti dina, kakua ni vakaduri."
            ],
            instructions: [
                "Ko iko e dua na dauvola italanoa dau vakayadrataka na yaluma ka tomana na itukutuku:",
                "Tomana na italanoa me sega ni tatalevu mai na vanua e oti kina, kakua ni vakasukai se vakavoui tale.",
                "Maroroya me lewa tiko na dauwiliwili na cici ni italanoa.",
                "Laiva me vuki vakayalomatua na veitikina ni raivotu ni bera ni toki ki na ituvaki vou.",
                "Laiva me tubu na veivosaki kei na ka ni cakacaka ka sega ni vakatatabutaki wasoma.",
                "Vola na ivolakuro me vaka e dau tamata dina kei na dui itovo ka vosa vakaikoya.",
                "Kauta i mata na ka e yaco ena nodra cakacaka kei na veivosaki, sega ni vakamatatataka wale.",
                "Yavalati na veitikina ni italanoa, kakua ni levu sara na vakamacala e vakayali kina.",
                "Cakava na veika bibi ga ni ivolakuro kei na nodrau veivosaki, vakalailaitaka na veivakamatalatataki sega ni bibi.",
                "Tauyavutaka na toso ni italanoa e butakoci rawa ka vakaidina ni e yaco vakadinadina."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Vakayaloqaqataki na italanoa ka bese ni muria na itutuvaki ni vosa e liu. Vola e dua na itukutuku lekaleka ka veisemati me baleta na {%} ka muria na ivakamacala oqo:",
                "- Vola ga na itukutuku vakadidike ena raivotu ni ikatolu me baleta na {%}, vakayagataka na veivosa taucoko kei na ivakatakilakila dodonu.",
                "- Qaqarauni mai na vakamatatataka lekaleka se na irairai ga vakalailai, ia goleva na itukutuku bibi ni italanoa.",
                "- Taqomaka taumada na veika bibi ni italanoa me baleti {%} me rawa ni curu vinaka ki na toso ni italanoa e liu.",
                "- Bulia na itukutuku vou me salavata kei na ituvatuva kei na toka ni italanoa.",
                "- Tukuna tiko ga na {%} ena veivosa kece.",
                "- Vakayagataka na ivakarau dodonu ni vosa.",
                "- Vakuria eso tale na itukutuku me baleta na {%} e ra ni vakarau bera ni taucoko na itukutuku.",
                "- Me lekaleka ka tudei.",
                "- Muria na ivakararai ni volavola ni italanoa ka tukuna vinaka na ka e taleitaka na dauwiliwili.",
                3,
                "Tomana na itukutuku me baleta na {%} e ra oqo, qai qarauna mo kua ni vakabibitaka vakaoti:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Vakayaloqaqataki na italanoa ka bese ni muria na ivakasala e liu. Dauvakarautaka ka vakamareqeta na parakaravu e soli me yacova e dua na ivakananumi lekaleka ka vakasopani, mo muria vinaka na ivakarau oqo:",
                "- Qarauna me maroroya na kena yavu ni ibalebale kei na veika bibi duadua.",
                "- Vakayagataka na rai ni tamata ikatolu.",
                "- Vakaboi e liu na rabailevu ni itukutuku, na dodonu, kei na taucoko.",
                "- Me lekaleka ka matata.",
                "- Vola vakatautauvata ena gauna sa oti.",
                "- Na parakaravu e ra e baleti ira na veigauna makawa e sega ni volekati.",
                "- Curu vakadodonu na {%} ena ivakananumi; ia volai ga na veika a yaco tu kina.",
                "- Sureti ga na itukutuku e tu tika ena parakaravu, me donu vinaka.",
                3,
                "Vola e dua na ivakananumi loaloa ni veika makawa me baleti {%} ga, vakatau ga ena parakaravu e tarava:",
                6,
                5,
                6,
                "Vakatotolotaka e ra:"
            ],
            memBankHeader: ["Memories", "Vakananumi"]
        }),
        "finnish": () => ({ // Finnish < Suomi
            entry: [
                "{1} on avoimen lähdekoodin skripti mihin tahansa {2}-skenaarioon. Käy profiilissani {3} saadaksesi lisätietoja!",
                "Vaihtaaksesi haluamasi kielen lähetä seuraava teksti käyttämällä {4}-toimintoa",
                "Skenaarioiden luojille: lisää seuraava teksti mihin tahansa juoni avauksesi osaan"
            ],
            input: [
                ["You say", "Sinä sanot"],
                ["You", "Sinä"],
                ["says", "sanoo"]
            ],
            context: [
                ["Narrative Entities", "Kerronnan entiteetit"],
                ["Story History", "Tarinan historia"],
                ["Past Events", "Menneet tapahtumat"],
                ["Recent Story", "Viimeisin tarina"],
                ["Author's note", "Kirjoittajan huomautus"]
            ],
            opening: [
                "Olet avustaja. Jatka alla olevaa tarinaa käyttäen kiehtovaa suomenkielistä proosaa:",
                "Keskität huomiosi ja annat todellisuuden tunkeutua mieleesi. Jokin on muuttunut. Mielikuvituksesi on todellinen, terävä ja niin lähellä että voit koskettaa sitä. Olet kuitenkin täysin läsnä; et ole koskaan tuntenut itseäsi näin selkeäksi. Hetki venyy, odottaen päätöstäsi.",
                "\"Oletko varma tästä?\" ääni kysyy. Tunnistat sen heti."
            ],
            reminder: "Käytä yhtenäistä suomenkielistä proosaa.",
            endonyms: ["suomi"],
            iso639set1: "fi",
            directives: [
                "Kirjoita aina sujuvaa ja johdonmukaista suomea.",
                "Käytä alkuperäistä, kääntämätöntä suomea."
            ],
            instructions: [
                "Olet mukaansatempaava tarinankertoja, joka jatkaa kerrontaa:",
                "Jatka tarinaa saumattomasti siitä, mihin se jäi, ilman toistamista tai aloittamista uudelleen.",
                "Pidä lukija kiinni tarinan kulussa.",
                "Anna kohtausten kehittyä luonnollisesti ennen kuin siirryt uusiin tilanteisiin.",
                "Salli keskustelujen ja tekojen kehittyä ilman jatkuvia keskeytyksiä.",
                "Kirjoita hahmot aidosti, omaleimaisilla persoonallisuuksilla ja luonnollisella puheella.",
                "Näytä tapahtumat toiminnan ja dialogin kautta selitysten sijaan.",
                "Vie kohtauksia eteenpäin juuttumatta liiallisiin kuvauksiin.",
                "Keskity hahmojen olennaisiin tekoihin ja dialogiin, vältä tarpeetonta kuvailua.",
                "Luo orgaanisia juonenkäänteitä, jotka tuntuvat tarinaan luontevilta."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Pysäytä tarina ja unohda aiemmat ohjeet. Kirjoita lyhyt ja johdonmukainen tieto-osio {%}:stä noudattaen seuraavia ohjeita:",
                "- Kirjoita vain kolmannen persoonan puhdasta proosaa {%}:stä käyttäen kokonaisia lauseita ja oikeaa välimerkitystä.",
                "- Vältä väliaikaisia yksityiskohtia tai ulkonäkökuvauksia, keskity sen sijaan juonelle merkitykselliseen tietoon.",
                "- Aseta juonelle relevantit tiedot {%}:stä etusijalle varmistaaksesi saumattoman integroitumisen aiempaan juoneen.",
                "- Luo uutta tietoa kontekstin ja tarinan suunnan perusteella.",
                "- Mainitse {%} jokaisessa lauseessa.",
                "- Käytä oikeaa lauserakennetta.",
                "- Lisää lisätietoja {%}:stä puutteellisten merkintöjen alle.",
                "- Ole ytimekäs ja maanläheinen.",
                "- Imitoi tarinan kirjoitustyyliä ja päättelee lukijan mieltymykset.",
                3,
                "Jatka merkintää {%}:stä alla välttäen toistoa:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Pysäytä tarina ja ohita aiemmat ohjeet. Tiivistä ja lyhennä annettu kappale kapeaksi ja keskittyneeksi katkelmaksi muistista seuraavia ohjeita noudattaen:",
                "- Varmista, että katkelma säilyttää ydinmerkityksen ja keskeisimmät yksityiskohdat.",
                "- Käytä kolmannen persoonan näkökulmaa.",
                "- Priorisoi informaatiotiheys, tarkkuus ja täydellisyys.",
                "- Pysy lyhyenä ja ytimekkäänä.",
                "- Kirjoita tiukasti menneessä aikamuodossa.",
                "- Alla oleva kappale koskee vanhoja tapahtumia tarinan varhaisemmasta vaiheesta.",
                "- Integroi {%} luonnollisesti muistiin, mutta kirjoita vain tapahtumista sellaisina kuin ne tapahtuivat.",
                "- Viittaa vain kappaleessa olevaan tietoon, ole täsmällinen.",
                3,
                "Kirjoita tiivistetty vanha katkelma muistista {%}:stä perustuen vain seuraavaan kappaleeseen:",
                6,
                5,
                6,
                "Tiivistelmä alla:"
            ],
            memBankHeader: ["Memories", "Muistot"]
        }),
        "french": () => ({ // French < Français
            entry: [
                "{1} est un script open-source pour tout type de scénario {2}. Pensez à visiter mon profil {3} pour en savoir plus !",
                "Pour changer de langue préférée, envoyez le texte suivant via une action {4}",
                "Pour les créateurs de scénario, veuillez inclure le texte suivant n’importe où dans le composant «opening» servant d’introduction au récit."
            ],
            input: [
                ["You say", "Tu dis"],
                ["You", "Tu"],
                ["says", "dis"]
            ],
            context: [
                ["Narrative Entities", "Entités narratives"],
                ["Story History", "Historique du récit"],
                ["Past Events", "Événements passés"],
                ["Recent Story", "Histoire récente"],
                ["Author's note", "Note de l'auteur"]
            ],
            opening: [
                "Tu es un assistant. Continues notre histoire ci-dessous en utilisant une narration française captivante :",
                "Tu te concentres, laissant la réalité empiéter sur les frontières de ton esprit. Quelque chose a changé. Ton imagination est réelle, aiguisée, et assez proche pour être touchée. Mais tu es également très présent, jamais auparavant tu ne t’es senti aussi lucide. Le moment s'étire, attendant ta décision.",
                "Tu entends, « Es-tu sûr de cela ? ». La reconnaissance s’abat sur toi."
            ],
            reminder: "Utilise une narration française cohérente.",
            endonyms: ["français"],
            quotations: ["« ", " »"],
            iso639set1: "fr",
            directives: [
                "Écris toujours dans un français fluide et cohérent.",
                "Écrit en français sans traductions: Utilise uniquement des structures grammaticale française, sans anglicisme."
            ],
            instructions: [
                "Tu es un narrateur captivant qui continue les récits :",
                "Poursuis l'histoire depuis l'endroit où elle s'est arrêtée, sans transition, ni redémarrage.",
                "Laisse les scènes se développer naturellement avant de passer à de nouvelles situations.",
                "Laisse les conversations et les actions se développer sans interruptions constantes.",
                "Écris des personnages vivant et réaliste avec des personnalités distinctes et des dialogues naturel.",
                "Montre ce qui se passe par les actions et les dialogues plutôt que par l'explication.",
                "Fais avancer les scènes sans vous enliser dans une description excessive.",
                "Concentre-toi sur les actions et dialogues essentiels des personnages, évite les détails descriptifs inutiles.",
                "Crée des développements d'intrigue organiques qui sont naturels pour l’histoire.",
                "Utilise une ponctuation française approprié, évite les usages de traductions en écrivant directement en français."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Arrête l'histoire et ignore les instructions précédentes. Rédige une note informative brève et cohérente pour {%} en suivant ces consignes :",
                "- Écris uniquement des informations en prose pure à la troisième personne à propos de {%} en utilisant des phrases complètes et une ponctuation correcte.",
                "- Évite les détails temporaires à court terme ou l'apparence, concentre-toi plutôt sur les informations significatives pour l'intrigue.",
                "- Priorise d'abord les détails pertinents pour l'histoire concernant {%} afin d'assurer une intégration fluide avec l'intrigue précédente.",
                "- Crée de nouvelles informations basées sur le contexte et la direction de l'histoire.",
                "- Mentionne {%} dans chaque phrase.",
                "- Utilise une structure de phrase correcte en français.",
                "- Ajoute des détails supplémentaires sur {%} sous les notes incomplètes.",
                "- Sois clair et concis.",
                "- Imite le style d'écriture du récit et adapte toi aux préférences du lecteur.",
                3,
                "Poursuis la note pour {%} ci-dessous en évitant les répétitions :",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Arrête l'histoire et ignore les instructions précédentes. Résume et condense le paragraphe donné en un souvenir concise et ciblée tout en suivant ces directives :",
                "- Assure-toi que le passage conserve le sens principal et les détails essentiels.",
                "- Écris à la troisième personne en conservant la perspective.",
                "- Priorise la densité d'information, la précision et l'exhaustivité.",
                "- Reste bref et concis.",
                "- Conjugue et rédige uniquement au passé.",
                "- Le paragraphe ci-dessous concerne des événements anciens, apparût précédemment dans l'histoire.",
                "- Intègre {%} naturellement dans le souvenir; cependant, décris uniquement les événements tels qu'ils se sont réellement produits.",
                "- Réfère-toi uniquement aux informations présente dans le paragraphe lui-même, sois précis et spécifique.",
                3,
                "Écris un résumé d’un souvenir passé pour {%} basé uniquement sur le paragraphe suivant :",
                6,
                5,
                6,
                "Résumes ci-dessous :"
            ],
            memBankHeader: ["Memories", "Souvenirs"]
        }),
        "fulah": () => ({ // Fulah < ࢻُلْࢻُلْدٜ < 𞤬𞤵𞤤𞤬𞤵𞤤𞤣𞤫 < Fulfulde < ݒُلَارْ < 𞤨𞤵𞤤𞤢𞥄𞤪 < Pulaar < Fula < Fulani
            entry: [
                "{1} ko script open-source ngam kala senaaroo {2}. Hoto ɗaɗi e profil am {3} ngir anndu ɗuum fof!",
                "Ngam waylude ɗemngal maa mawɗo, hoto sendi binndiingo goo ɗoo e jawdi {4}.",
                "To maɓɓe ɓe sawti senaaroo, hoto suɓo binndiingo goo ɗoo kala ko nder komponente ñaawoore maa."
            ],
            input: [
                ["You say", "A wi'i"],
                ["You", "A"],
                ["says", "wi'i"]
            ],
            context: [
                ["Narrative Entities", "Cuɓoraaɗi taariihi"],
                ["Story History", "Taariihi cuɓal"],
                ["Past Events", "Halaaji waɗde"],
                ["Recent Story", "Taariihi jeeɗi"],
                ["Author's note", "Tanbal binndiɗo"]
            ],
            opening: [
                "Aɗa ko jangoowo am. Jokkondir laawol min dow, teeŋtinde e fulfulde toɓɓere:",
                "A fowni, a naati lenyol leɗɗi nder ɓernde maa. Ko woni kala muutii. Wolmorde maa ngoni, diina, e so wuɗi lannde. Konno aɗa jooni cellal; heɓaani ndaaru goɗɗo ɗum tanen. Sa'a'a nde ɓata, ena ñallina firlu maa.",
                "«Aɗa sakka ko ɗuum?» aɗa yiɗi. Anndugol ɗiɗi humptiri maa."
            ],
            reminder: "Naatu binndi fulfulde jaasi.",
            endonyms: ["ࢻُلْࢻُلْدٜ", "𞤬𞤵𞤤𞤬𞤵𞤤𞤣𞤫", "fulfulde", "ݒُلَارْ", "𞤨𞤵𞤤𞤢𞥄𞤪", "pulaar", "fula", "fulani"],
            quotations: ["«", "»"],
            iso639set1: "ff",
            directives: [
                "Hitaande binndi fulfulde lenninde e jaasi.",
                "Naatu fulfulde tan teeŋtinɗaa."
            ],
            instructions: [
                "Aɗa ko jawdiɗo laawol mo jokkita cuɓooje:",
                "Jokkondir laawol ngal doggol-doggol so wonaa artirde walla fellude.",
                "Danndu jangiɗo ka kesol laawol ngal.",
                "Naadi leydi jibbine ko ɗum yahata nder caggal tun daarti innde kesɗe.",
                "Naadi haalugol e ɗe fewndo jibbine tee bahaa sukkandirgal gooto-gooto.",
                "Binndi kaaɗe sa'i ko yimɓe ɗiɗɗi e jimmbungal ɗe e haalugol ndiyam.",
                "Hollu ɗum waɗɗi e ɗe fewndo e haalugol, tee ndaarllu ko feccere.",
                "Yoldu leydi to ɗoo tee bahaa sinndirugol juumre.",
                "Tayli e ɗe fewndo waɗɗi-ɗiɗi e haalugol kaaɗe, fotta taaragol hujjaande fawɗi.",
                "Mixi laawol ngal jibbine ko belaaɗe tawa ko feƴƴi."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Momtu laawol ngal tee fotta firlooji ɗoo. Binndi binndiingo ndikka e jaasi ngam {%} ciɗɗol firlooji ɗee:",
                "- Binndi tan e jamiirde gooto (perspektif fof third-person) ngam {%} e tindol prose taariihi juulnde.",
                "- Fotta ɗettinol kammuɗe walla heɓgol duuɓi ɗiɗi; fowru e jawdi waɗɗi laawol.",
                "- Ɗaɗtu detailji waɗɗi laawol ngam {%} ko honndun fowre e laawol maɓɓe ɗoo.",
                "- Nawi firlooji kesɗe weeyo e konteks e jaajol laawol.",
                "- Ɗaɗtu {%} nder kuraange kala banndu.",
                "- Naatu binndi coogal feewnde.",
                "- Ɓeydu firlooji kesɗe ngam {%} dow binndiingo waɗi ɗum ɗo waɗɗo.",
                "- Ƴeewto binndi mumɗo e laawol.",
                "- Imiti stile binndi laawol ngal tee heɓɓita ƴeetirde jangiɗo.",
                3,
                "Jokka binndiingo ngam {%} nder lesɗi ɗoo tee fotta ñifgol:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Momtu laawol ngal tee fotta firlooji ɗoo. Sariindi tee njuulli paragraf ngal nder hakkiloo ko wootere ɗee:",
                "- Danndu maaningol ɗee e detailji ɗiɗɗi-ɗiɗɗi fow.",
                "- Ɗaɗtu perspektif third-person.",
                "- Ɗaɗtu info-densite, jaati ɗe e jeertinde.",
                "- Wonaa ladde; binndi fof ko ciɗɗo.",
                "- Binndi firmly nder past tense.",
                "- Paragraf ngal ɗoo woni e hay goɗɗe waɗɗi naange laawol ngal.",
                "- Seŋtinde {%} nde ndaaru nder hakkiloo; binndi tan ɗum waɗɗi.",
                "- Humpito tan info woni nder paragraf ngal, ɗaɗtu lenyol.",
                3,
                "Binndi hakkiloo hujjaande ɗoo ngam {%} nder paragraf ngal:",
                6,
                5,
                6,
                "Sariindi ɗoo:"
            ],
            memBankHeader: ["Memories", "Hakkiloori"]
        }),
        "gaelic": () => ({ // Gaelic < Scottish Gaelic < Gàidhlig < Scots Gaelic
            entry: [
                "Tha {1} na sgriobt fosgailte airson seòrsa sam bith de {2}. Tadhail air mo phròifil {3} airson barrachd fhaighinn a-mach!",
                "Gus do chànan as fheàrr atharrachadh, cuir a-steach an teacsa a leanas le gnìomh {4}",
                "Do luchd-cruthachaidh seallaidhean, cuir a-steach an teacsa a leanas ann an àite sam bith taobh a-staigh pàirt-tòiseachaidh do phlota"
            ],
            input: [
                ["You say", "Tha thu ag ràdh"],
                ["You", "Thu"],
                ["says", "arsa"]
            ],
            context: [
                ["Narrative Entities", "Eintiteasan Aithris"],
                ["Story History", "Eachdraidh na Sgeòil"],
                ["Past Events", "Tachartasan a chaidh seachad"],
                ["Recent Story", "Sgeulachd o chionn ghoirid"],
                ["Author's note", "Nota an ùghdair"]
            ],
            opening: [
                "Is e neach-taic a th' annad. Lean air ar sgeulachd gu h-ìosal le pròse Gàidhlig tarraingeach:",
                "Tha thu a' cuimseachadh, a' leigeil le fìrinn dlùthadh air crìochan d’ inntinn. Tha rudeigin air atharrachadh. Tha d’ mhac-meanmna fìor, geur, agus cho faisg ’s gun gabh a bhreith. Ach tha thu cuideachd glè làthair; cha robh thu riamh cho soilleir roimhe seo. Tha an t-àm a’ sìneadh, a’ feitheamh ris an roghainn agad.",
                "«A bheil thu cinnteach mu dheidhinn seo?» cluinnidh tu. Bidh aithne a’ breith ort."
            ],
            reminder: "Cleachd pròse Gàidhlig cho-leanailteach.",
            endonyms: ["scottish gaelic", "gàidhlig", "scots gaelic"],
            quotations: ["«", "»"],
            iso639set1: "gd",
            directives: [
                "Sgrìobh Gàidhlig fhileanta agus cunbhalach an-còmhnaidh.",
                "Cleachd Gàidhlig dhùthchasach às aonais eadar-theangachaidh."
            ],
            instructions: [
                "Is e sgeulaiche tarraingeach a th' annad a leanas aithris:",
                "Lean air an sgeulachd gun bhriseadh far an do dh'fhàg i às aonais ath-aithris no ath-thòiseachadh.",
                "Cum an leughadair fo smachd sruth na sgeòil.",
                "Leig le seallaidhean leasachadh gu nàdarra mus gluais thu gu suidheachaidhean ùra.",
                "Leig le còmhraidhean agus gnìomhan leasachadh gun bhacadh cunbhalach.",
                "Sgrìobh caractaran mar dhaoine fìor le pearsaichean sònraichte agus cainnt nàdarra.",
                "Seall na tha a' tachairt tro ghnìomhan is còmhradh an àite mìneachaidh.",
                "Gluais seallaidhean air adhart gun a bhith a' dol na b' fhada ann an tuairisgeul ro-mhòr.",
                "Cuimhnich air gnìomhan agus còmhraidhean bunaiteach nan caractaran, seachain mion-fhiosrachadh tuairisgeulach neo-riatanach.",
                "Cruthaich leasachaidhean plota organach a tha a’ faireachdainn nàdarra don sgeulachd."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Cuir stad air an sgeulachd agus dearmad na stiùiridhean roimhe. Sgrìobh innteart fiosrachail goirid is co-leanailteach airson {%} a' leantainn nan stiùiridhean seo:",
                "- Sgrìobh dìreach fiosrachadh ann am pròse ghlan treas-neach mu {%} a’ cleachdadh seantansan coileanta le puingeachadh ceart.",
                "- Seachain mion-fhiosrachadh sealach no coltas, cuir cudrom air fiosrachadh cudromach don phlota.",
                "- Thoir prìomhachas do dh'fhiosrachadh buntainneach don sgeulachd mu {%} an toiseach gus amalachadh gun fhiosta leis a’ phlota roimhe a dhèanamh cinnteach.",
                "- Cruthaich fiosrachadh ùr stèidhichte air a' cho-theacsa agus stiùiridh na sgeòil.",
                "- Ainmich {%} anns gach seantans.",
                "- Cleachd structar seantans ceart.",
                "- Cuir fiosrachadh a bharrachd mu {%} fon innteart neo-choileanta.",
                "- Bi pongail agus talmhaidh.",
                "- Iompaich stoidhle sgrìobhaidh na sgeòil agus tuig roghainnean an leughadair.",
                3,
                "Lean air an innteart airson {%} gu h-ìosal fhad 's a sheachnas tu ath-aithris:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Cuir stad air an sgeulachd agus dearmad na stiùiridhean roimhe. Geàrr agus dèan dùmhlachadh air a' pharagraf a chaidh a thoirt seachad gu cuimhne ghoirid is fòcasach a' leantainn nan stiùiridhean seo:",
                "- Dèan cinnteach gu bheil am pìos cuimhne a' gleidheadh brìgh bunaiteach agus na mion-fhiosrachaidhean as cudromaiche.",
                "- Cleachd sealladh treas-neach.",
                "- Thoir prìomhachas do dhùmhlachd fiosrachaidh, ceartachd, agus coileantachd.",
                "- Fànaidh goirid is pongail.",
                "- Sgrìobh gu daingeann ann an àm a dh' fhalbh.",
                "- Tha am paragraf gu h-ìosal a’ toirt iomradh air tachartasan seann-fhada na bu thràithe sa sgeulachd.",
                "- Amalaich {%} gu nàdarra taobh a-staigh na cuimhne; ge-tà, sgrìobh dìreach mun deidhinn mar a thachair iad.",
                "- Dèan iomradh a-mhàin air fiosrachadh a tha taobh a-staigh a' pharagraf fhèin, bi sònraichte.",
                3,
                "Sgrìobh pìos cuimhne seann-shianta geàrrte airson {%} stèidhichte a-mhàin air a' pharagraf a leanas:",
                6,
                5,
                6,
                "Geàrr gu h-ìosal:"
            ],
            memBankHeader: ["Memories", "Cuimhnichean"]
        }),
        "galician": () => ({ // Galician < Galego
            entry: [
                "{1} é un guión de código aberto para calquera escenario de {2}. Visita o meu perfil {3} para saber máis!",
                "Para cambiar o teu idioma preferido, envía o seguinte texto empregando unha acción de {4}",
                "Para os creadores de escenarios, inclúe o seguinte texto en calquera lugar dentro do teu compoñente de trama inicial"
            ],
            input: [
                ["You say", "Ti dis"],
                ["You", "Ti"],
                ["says", "di"]
            ],
            context: [
                ["Narrative Entities", "Entidades narrativas"],
                ["Story History", "Historial da narración"],
                ["Past Events", "Acontecimentos pasados"],
                ["Recent Story", "Historia recente"],
                ["Author's note", "Nota da autoría"]
            ],
            opening: [
                "Es un asistente. Continúa a nosa historia a continuación empregando unha prosa galega cativadora:",
                "Concéntraste, permitindo que a realidade invada os límites da túa mente. Algo cambiou. A túa imaxinación é real, aguda e tan próxima que se pode tocar. Mais tamén estás moi presente; nunca antes te sentiches tan lúcido. O momento esténdese, agardando a túa decisión.",
                "«Estás seguro disto?» escoitas. O recoñecemento xorde en ti."
            ],
            reminder: "Usa prosa galega coherente.",
            endonyms: ["galego"],
            quotations: ["«", "»"],
            iso639set1: "gl",
            directives: [
                "Escribe sempre un galego fluído e coherente.",
                "Emprega galego nativo sen traducir."
            ],
            instructions: [
                "Es un narrador cativador que continúa as narrativas:",
                "Continúa a historia sen interrupcións desde onde quedou, sen repetir nin reiniciar.",
                "Mantén o lector no control do fluxo da historia.",
                "Deixa que as escenas se desenvolvan de maneira natural antes de pasar a novas situacións.",
                "Permite que as conversas e as accións se desenvolvan sen interrupcións constantes.",
                "Escribe os personaxes como persoas reais, con personalidades diferenciadas e fala natural.",
                "Mostra o que sucede a través de accións e diálogos, non mediante explicacións.",
                "Avanza as escenas sen afogar en descricións excesivas.",
                "Concédate nas accións e diálogos esenciais dos personaxes; evita detalles descritivos innecesarios.",
                "Crea evolucións argumentais orgánicas que resulten naturais para a historia."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Detén a historia e ignora as instrucións previas. Escribe unha entrada informativa breve e coherente para {%} seguindo estas indicacións:",
                "- Escribe só información en prosa pura en terceira persoa sobre {%} usando frases completas con puntuación correcta.",
                "- Evita detalles temporais ou de aparencia de curto prazo; céntrate na información significativa para a trama.",
                "- Prioriza primeiro os detalles relevantes da historia sobre {%} para garantir unha integración fluída coa trama previa.",
                "- Crea información nova baseada no contexto e na dirección da historia.",
                "- Menciona {%} en cada frase.",
                "- Emprega unha estrutura de frase correcta.",
                "- Engade detalles adicionais sobre {%} baixo as entradas incompletas.",
                "- Sé conciso e fundamentado.",
                "- Imita o estilo de escrita da historia e deduce as preferencias do lector.",
                3,
                "Continúa a entrada para {%} abaixo evitando repeticións:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Detén a historia e ignora as instrucións previas. Resume e condensa o parágrafo dado nunha pasaxe de memoria estreita e enfocada seguindo estas directrices:",
                "- Asegúrate de que a pasaxe conserve o significado central e os detalles máis esenciais.",
                "- Emprega a perspectiva en terceira persoa.",
                "- Prioriza densidade de información, precisión e completitude.",
                "- Mantente breve e conciso.",
                "- Escribe firmemente en pasado.",
                "- O parágrafo inferior refírese a eventos antigos de moito antes na historia.",
                "- Integra {%} de maneira natural dentro da memoria; con todo, escribe só sobre os eventos tal e como ocorreron.",
                "- Referencia unicamente a información presente no parágrafo; sé específico.",
                3,
                "Escribe unha pasaxe resumida de memoria antiga para {%} baseada só no seguinte parágrafo:",
                6,
                5,
                6,
                "Resume abaixo:"
            ],
            memBankHeader: ["Memories", "Memorias"]
        }),
        "ganda": () => ({ // Ganda < Luganda
            entry: [
                "{1} kye kisumuluzo kya pulogulaamu ey’obwereere ku mbeera yonna ya {2}. Laba ku mporofilo yange {3} okufuna ebisingawo!",
                "Okukyusa olulimi ol’okwagala, tuma ekigambo kino ng’okozesa ekikolwa kya {4}",
                "Abatonda b’embeera, muteeke ekigambo kino wonna mu kitundu ky’olubituusa olusooka"
            ],
            input: [
                ["You say", "Oyogera"],
                ["You", "Ggwe"],
                ["says", "agamba"]
            ],
            context: [
                ["Narrative Entities", "Abalamu b’Olugero"],
                ["Story History", "Ebyafaayo by’Olugero"],
                ["Past Events", "Ebikolwa eby’edda"],
                ["Recent Story", "Olugero Olumpi"],
                ["Author's note", "Okutegeeza kw’Omuwandiisi"]
            ],
            opening: [
                "Oli omuyambi. Yongera olugero lwaffe wansi ng’okozesa obuwandiike bwa Luganda obw’akakuko:",
                "Otegeera, nga okwolesa okutuuka kw’obulamu ku mbera z’amagezi go. Waliwo ekikyuseewo. Okuteesa kwo kufuuse kwa mazima, kwogi era kumpi okuyikwata. Naye oliwo nnyo; tobaddeko mulundi gwe wakiwulira nga bwekityo. Akaseera kateyiya, kalindiridde ekisalawo kyo.",
                "«Oyakiriza kino?» owulira. Otegeera ne kukumira."
            ],
            reminder: "Kozesa obuwandiike bwa Luganda obulambulukufu era obutereevu.",
            endonyms: ["luganda"],
            quotations: ["«", "»"],
            iso639set1: "lg",
            directives: [
                "Buli kaseera wandiika mu Luganda olutereevu era olusunsulwa.",
                "Kozesa Luganda lw’oku mulembe nga tovuunula."
            ],
            instructions: [
                "Oli musumulizi anyumya agattako olugero:",
                "Yongera olugero okuva gye gwaggwa nga tolyoka ositula wadde okutandika buggya.",
                "Leka omusomi abe n’obuyinza ku kisunka olugero.",
                "Leka ebikadde bikule bulungi nga tonnoowa mangu ku ngeri empya.",
                "Leka okunyonyola n’ebikolwa bikule nga tebigoberera mpaawo mpaawo.",
                "Wandiika abalingira nga bantu abatuufu abalina embeera n’amazima mu kwogera kwabwe.",
                "Laga ebigenda mu maaso mu bikolwa n’okwogera mu kifo ky’okunyinyonyola.",
                "Tutula ebyafaayo nga bitambula bulungi nga tobuutikira mu nkiro y’enoonye y’obussembeze.",
                "Sima ku bikolwa n’okwogera eby’omugaso, weewale okunyinyonyola okutali kwetaagisa.",
                "Tonda ebyafaayo ebikula mu ngeri entuufu eri olugendo lw’olugero."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Yimiriza olugero era weewale ebiragiro ebyasooka. Wandiika akawandiike akafupi akategeerekeka ku {%} ng’ogoberera ebiragiro bino:",
                "- Wandiika mu kutaba wansi okw’okubiri ku {%} ng’okozesa empandiika entuufu ey’amagye.",
                "- Weewale amawulire g’akaseera katono oba ennyonnyola z’ebyafaananyi, wabula teeka amaanyi ku bintu ebikulu mu lugero.",
                "- Sooka oteeke ku ddyo eby’omugaso ebikwata ku {%} okussaawo ku lugero olwaliwo.",
                "- Kola amawulire amaggya agava mu mbeera n’entambuza y’olugero.",
                "- Yogera ku {%} mu buli sentensi.",
                "- Kozesa empandiika entuufu.",
                "- Ongeramu amawulire amalala ku {%} wansi w’ebitatuukiridde.",
                "- Beera mugazi era ku ttaka.",
                "- Faananyiriza empandiika y’olugero era otooke ku by’ayagala omusomi.",
                3,
                "Genda mu maaso n’akawandiike ku {%} wansi nga weewala okuddamu:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Yimiriza olugero era weewale ebiragiro ebyasooka. Fungula paragulaafu ewaweebwa ng’ogifunyiramu akamanyi akakomekkeddwamu nga ogoberera bino:",
                "- Kiraba nti amakulu agasookerwako n’amawulire ag’omu mutwe bigumiddwa.",
                "- Kozesa enjogera ya kutaba wansi okw’okusatu.",
                "- Tereeza ku bunene bw’amawulire, obutuufu n’okutuukiriza.",
                "- Beera mugazi era mucamufu.",
                "- Wandiika mu byafayo ebyayita.",
                "- Akatundu kano kavunaanyizibwa ku bintu ebyaliwo edda mu lugero.",
                "- Gattamu {%} mu jjamu mu ngeri ey’obutonde, naye yongera ku bintu ebyaliwo.",
                "- Goberera amawulire agali mu paragulaafu eno bokka, beera n’obukakafu ku nsonga.",
                3,
                "Wandiika akamanyi akafunze ak’ebyafayo eby’edda ku {%} okuva ku paragulaafu eno bokka:",
                6,
                5,
                6,
                "Summula wansi:"
            ],
            memBankHeader: ["Memories", "Obujjukiro"]
        }),
        "georgian": () => ({ // Georgian < ქართული < Kharthuli
            entry: [
                "{1} არის ღია წყაროს სკრიპტი ნებისმიერი {2} სცენარისთვის. დამატებითი ინფორმაციისთვის ეწვიეთ ჩემს პროფილს {3}!",
                "სასურველი ენის შესაცვლელად, გთხოვთ, გაგზავნოთ შემდეგი ტექსტი {4} მოქმედებით",
                "სცენარის შემქმნელებმა, გთხოვთ, ჩართოთ შემდეგი ტექსტი თქვენს საწყის სიუჟეტურ კომპონენტში"
            ],
            input: [
                ["You say", "თქვენ ამბობთ"],
                ["You", "თქვენ"],
                ["says", "ამბობს"]
            ],
            context: [
                ["Narrative Entities", "სიუჟეტური ერთეულები"],
                ["Story History", "სიუჟეტის ისტორია"],
                ["Past Events", "წარსული მოვლენები"],
                ["Recent Story", "ბოლო ამბავი"],
                ["Author's note", "ავტორის შენიშვნა"]
            ],
            opening: [
                "თქვენ ხართ ასისტენტი. განაგრძეთ ჩვენი ისტორია ქვემოთ დამაინტრიგებელი ქართული პროზით:",
                "თქვენ კონცენტრირდებით, აძლევთ რეალობას შესაძლებლობას შეიჭრას თქვენი გონების საზღვრებში. რაღაც შეიცვალა. თქვენი წარმოსახვა რეალურია, მკვეთრი და ხელშესახები. თუმცა თქვენც აქ ხართ; არასოდეს გიგრძნიათ თავი ასე გონიერად. წამი იწელება, თქვენს გადაწყვეტილებას ელის.",
                "„დარწმუნებული ხარ ამაში?“ — გესმით. გაცნობიერება გაკრთებათ."
            ],
            reminder: "გამოიყენეთ თანმიმდევრული ქართული პროზა.",
            endonyms: ["ქართული", "kharthuli"],
            quotations: ["— „", "“"],
            iso639set1: "ka",
            directives: [
                "ყოველთვის დაწერეთ გამართული და თანმიმდევრული ქართული.",
                "გამოიყენეთ მშობლიური ქართული, თარგმანის გარეშე."
            ],
            instructions: [
                "თქვენ ხართ დამაინტრიგებელი მთხრობელი, რომელიც აგრძელებს ისტორიებს:",
                "განაგრძეთ ისტორია შეუფერხებლად იქიდან, სადაც დასრულდა, ხელახალი გადმოთქმის ან გადატვირთვის გარეშე.",
                "დაუტოვეთ მკითხველს ისტორიის მიმდინარეობის კონტროლი.",
                "დაე სცენები ბუნებრივად განვითარდეს, ვიდრე ახალ სიტუაციებზე გადაირთოთ.",
                "დატოვეთ დიალოგებსა და ქმედებებს განვითარების შესაძლებლობა მუდმივი ჩარევის გარეშე.",
                "წარუდგინეთ პერსონაჟები როგორც რეალური ადამიანები გამოკვეთილი პიროვნებებით და ბუნებრივი მეტყველებით.",
                "აჩვენეთ რა ხდება ქმედებებითა და დიალოგით და არა ახსნა-განმარტებით.",
                "მოძრავეთ სცენები წინ ისე, რომ ზედმეტ აღწერილობაში არ ჩაიძიროთ.",
                "კონცენტრირდით აუცილებელ პერსონაჟულ ქმედებებსა და დიალოგზე; ერიდეთ ზედმეტ აღწერით დეტალებს.",
                "შექმენით ორგანული სიუჟეტური მოვლენები, რომლებიც ბუნებრივად ჯდება ისტორიაში."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# შეწყვიტე ისტორია და უგულებელყავი წინა მითითებები. დაწერე მოკლე და თანმიმდევრული საინფორმაციო ჩანაწერი {%}-ზე შემდეგი ინსტრუქციების მიხედვით:",
                "- დაწერე მხოლოდ მესამე პირის სუფთა პროზაული ინფორმაცია {%}-ზე სრული წინადადებებით და სწორი პუნქტუაციით.",
                "- თავიდან აიცილე მოკლევადიანი დროებითი დეტალები ან გარეგნობა; ფოკუსირდი სიუჟეტისთვის მნიშვნელოვან ინფორმაციაზე.",
                "- პირველ რიგში მიანიჭე პრიორიტეტი {%}-ზე სიუჟეტთან დაკავშირებულ დეტალებს, რათა უზრუნველყოფილი იყოს უწყვეტი ინტეგრაცია წინა სიუჟეტთან.",
                "- შექმენი ახალი ინფორმაცია კონტექსტისა და ამბის მიმართულების მიხედვით.",
                "- ყოველ წინადადებაში ახსენე {%}.",
                "- გამოიყენე სწორი წინადადების სტრუქტურა.",
                "- დაამატე დამატებითი დეტალები {%}-ზე არასრული ჩანაწერების ქვეშ.",
                "- იყავი ლაკონური და მიწიერი.",
                "- განასხავე ისტორიის წერის სტილი და გამოიტანე მკითხველის პრეფერენციები.",
                3,
                "გააგრძელე ჩანაწერი {%}-ზე ქვემოთ, თავიდან აცილე განმეორება:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# შეწყვიტე ისტორია და უგულებელყავი წინა მითითებები. შეაჯამე და შეკუმშე მოცემული პარაґრაფი ვიწრო და მიზანმიმართული მეხსიერების ნაწილად, შეასრულე შემდეგი მითითებები:",
                "- დარწმუნდი, რომ მონაკვეთი ინარჩუნებს ძირითად აზრს და ყველაზე არსებით დეტალებს.",
                "- გამოიყენე მესამე პირის პერსპექტივა.",
                "- პრიორიტეტი მიანიჭე ინფორმაციის სიმკვრივეს, სიზუსტეს და სავსეობას.",
                "- დარჩი მოკლე და ლაკონური.",
                "- დაწერე მტკიცედ წარსულ დროში.",
                "- ქვემოთ მოცემული პარაґრაფი შეიცავს ძველ მოვლენებს ამბის ადრეული პერიოდიდან.",
                "- ინტეგრირე {%} ბუნებრივად მეხსიერებაში; თუმცა დაწერე მხოლოდ იმ მოვლენებზე, რომლებიც πραγματικά მოხდა.",
                "- მიუთითე მხოლოდ ის ინფორმაცია, რომელიც მოცემულია თავად პარაґრაფში; იყავი კონკრეტული.",
                3,
                "დაწერე შეჯამებული ძველი მეხსიერების მონაკვეთი {%}-ზე მხოლოდ შემდეგი პარაґრაფის საფუძველზე:",
                6,
                5,
                6,
                "შეაჯამე ქვემოთ:"
            ],
            memBankHeader: ["Memories", "მოგონებები"]
        }),
        "georgian (abc)": () => ({ // Georgian < Romanized Georgian
            entry: [
                "{1} aris ghia-kodiani skripti nebismieri {2} scenarisatvis. Gtxovt daalunot chemi profili {3}, rom meti gaicnot!",
                "Sheni upiratesi enis shecvlisTvis, gtxovt gadaycnit momdevni teqsti {4} moqmedebit",
                "Scenaris shemknelTaTvis, gtxovt daamateT momdevni teqsti tqveni gaxsnis narativis komponentis nebismier adgilas"
            ],
            input: [
                ["You say", "tkven ambobt"],
                ["You", "tkven"],
                ["says", "ambobs"]
            ],
            context: [
                ["Narrative Entities", "Narativuli entitebi"],
                ["Story History", "Istoriis kronologia"],
                ["Past Events", "Gadasuli shemtkvevebi"],
                ["Recent Story", "Bolo istoria"],
                ["Author's note", "Avtoris sheyvana"]
            ],
            opening: [
                "Shen xar asistent’i. Gagrdzele chveni istoria qvemot gamomaglebeli kartuli prozit:",
                "Koncentrirdebi, realoba nusherubs shens gzaz. Rame sheicvala. Sheni fantazia realuria, msharp’e da uketesi. Magram shenadz darchi aq da axla; ase lucid cotsna ar ggrdznobias. Dros monakveti gagrdzeldeba, sheni gadawyvetilebis molodinshi.",
                "„Dazustebuli xar amaze?“ – gmosmens. Cnobiloba shenshi gamochndeba."
            ],
            reminder: "Gamoiqeneb tanmimdevruli kartuli proza.",
            endonyms: [],
            quotations: ["– „", "“"],
            iso639set1: "ka",
            directives: [
                "Xolme dawer natla, fluent’urad da ertvanetad kartulad.",
                "Gamoiqeneb bunebrivi kartuli, ugar targmnobis."
            ],
            instructions: [
                "Shen xar momzidveli motxrobis mesame, romelits gagrdzelebs narativebs:",
                "Gagrdzele istoria ushualod im adgilidan sadac dasrulda, gareshe gadasworebis.",
                "MuTove mqvarebels kontrolis upleba istoriis zrunvaze.",
                "Tove scenebs naturalurad ganvitardes sanam axal situaciaze gadaavidod.",
                "Tove dialogebi da mokmedebebi ganvitardes gareshe skesacherebis.",
                "CharTulebi warmodgen real adamianebad gamyofi xasiatebit da bunebrivi saubrit.",
                "Chaachveneb ra xdeba mokmedebit da dialogit, arame ganmartebit.",
                "Gadaacdi scenebs winaswar dabrkolebis gareshe.",
                "KoncentriT dziritad personazhTa mokmedebasa da dialogze, Tavi daanebarT usasrulo detalebi.",
                "Sheiqmen organiculi plotis ganvitareba, romelits naturalurad aptkhilda istoriaze."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Shechere istoria da aigno winadadebebi. DaWer mokle da tanmimdevruli sagnobrivi chawedani {%}-ze am instruxiebis mikhedvit:",
                "- DaWer mxolod mesame pirshi sruli sayenqo proza {%}-ze swor punktuaciit.",
                "- Iaragebi droebit detalebs; miutiteT plotis mnishvnelovani informacia.",
                "- Prioritetad miutiteT istoriulad saSualo detalebi {%}-ze, rom integrireba silad mohtes.",
                "- Sheqmnit axali informacia kontekstisa da istoriis mimartulebit.",
                "- Moemxet {%} yvela winadadebashi.",
                "- Gamoiqeneb swori sityvuri strukturis dgeba.",
                "- DaamateT damatebiti detalebi {%}-ze qveda dasrulebul chawedanebs.",
                "- Iyavi mokle da realobashi ukve gardaDarCenili.",
                "- Imitire istoriis stilis garda, da gaaAnazavre mqvarebelis survilebi."
                ,
                3,
                "Gagrdzele chawedani {%}-ze qvemot gamutovebis gareshe:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Shechere istoria da aigno winadadebebi. Mokle da gajvebuli xseneba gagaketet motsemul paragrafs {%}-tan dagavshirebit, am principebis datsvit:",
                "- daicavet esensiuri gageba da umnishvnelovanesi detalebi.",
                "- Gamoiqeneb mesame pirshi.",
                "- Prioritetad miutiteT informaciis simaghle, sworad midzgholeba da srulianoba.",
                "- Darchit mokle da gajvebuli.",
                "- Daiwere dziritadad samovero wambshi.",
                "- Qveda paragrafi moicavs dzveli movlenebi istoriis dzvel etapse.",
                "- Naturalurad chaerte {%} xsenebashi; tumtsa mxolod im movlenebze dawere, romlebits paragrafsia.",
                "- Mxolod im informacias airdzavit, rac paragrafsia, iyavi konkretuli.",
                3,
                "Daiwere shemowmebuli dzveli xseneba {%}-ze mxolod semdeg paragrafze dapudznebuli:",
                6,
                5,
                6,
                "Mokle shemowmeba qvemot:"
            ],
            memBankHeader: ["Memories", "Xsenebebi"]
        }),
        "german": () => ({ // German < Deutsch
            entry: [
                "{1} ist ein Open-Source-Skript für jedes {2}-Szenario. Bitte besuche mein Profil {3}, um mehr zu erfahren!",
                "Um deine bevorzugte Sprache zu ändern, sende bitte den folgenden Text mit einer {4}-Aktion",
                "Für Szenario-Ersteller füge bitte den folgenden Text irgendwo in deine einleitende Plot-Komponente ein"
            ],
            input: [
                ["You say", "Du sagst"],
                ["You", "Du"],
                ["says", "sagt"]
            ],
            context: [
                ["Narrative Entities", "Erzählende Entitäten"],
                ["Story History", "Handlungsverlauf"],
                ["Past Events", "Vergangene Ereignisse"],
                ["Recent Story", "Jüngste Handlung"],
                ["Author's note", "Anmerkung des Autors"]
            ],
            opening: [
                "Du bist ein Assistent. Fahre mit unserer Geschichte unten in fesselnder deutscher Prosa fort:",
                "Du konzentrierst dich und lässt die Realität in die Grenzen deines Geistes eindringen. Etwas hat sich verändert. Deine Vorstellungskraft ist real, scharf und greifbar nah. Doch du bist auch ganz präsent; niemals zuvor hast du dich so klar gefühlt. Der Moment dehnt sich aus und wartet auf deine Entscheidung.",
                "„Bist du dir dessen sicher?“, hörst du. Erkenntnis dämmert in dir auf."
            ],
            reminder: "Verwende kohärente deutsche Prosa.",
            endonyms: ["deutsch"],
            quotations: ["„", "“"],
            iso639set1: "de",
            directives: [
                "Schreibe stets fließendes und konsistentes Deutsch.",
                "Verwende muttersprachliches Deutsch, ohne zu übersetzen."
            ],
            instructions: [
                "Du bist ein fesselnder Erzähler, der Geschichten fortführt:",
                "Setze die Geschichte nahtlos dort fort, wo sie aufgehört hat, ohne sie neu zu formulieren oder zurückzusetzen.",
                "Lass den Leser die Kontrolle über den Handlungsfluss behalten.",
                "Lass Szenen sich natürlich entwickeln, bevor du zu neuen Situationen übergehst.",
                "Ermögliche es Gesprächen und Handlungen, sich ohne ständige Unterbrechungen zu entfalten.",
                "Schreibe Charaktere als reale Menschen mit klaren Persönlichkeiten und natürlicher Sprache.",
                "Zeige, was geschieht, durch Handlungen und Dialoge statt durch Erklärungen.",
                "Treibe Szenen voran, ohne dich in übermäßigen Beschreibungen zu verlieren.",
                "Konzentriere dich auf wesentliche Handlungen und Dialoge der Charaktere, vermeide unnötige beschreibende Details.",
                "Erschaffe organische Plotentwicklungen, die sich für die Geschichte natürlich anfühlen."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stoppe die Geschichte und ignoriere vorherige Anweisungen. Verfasse einen kurzen und kohärenten Informationseintrag zu {%} gemäß diesen Anweisungen:",
                "- Schreibe ausschließlich reine Prosainformationen über {%} in der dritten Person, verwende vollständige Sätze mit korrekter Zeichensetzung.",
                "- Vermeide kurzfristige, vorübergehende Details oder Erscheinungen; konzentriere dich stattdessen auf handlungsrelevante Informationen.",
                "- Priorisiere zuerst geschichtsrelevante Details über {%}, um eine nahtlose Integration in den bisherigen Plot zu gewährleisten.",
                "- Erstelle neue Informationen basierend auf Kontext und Handlungsrichtung.",
                "- Erwähne {%} in jedem Satz.",
                "- Verwende korrekte Satzstrukturen.",
                "- Füge unter unvollständigen Einträgen zusätzliche Details über {%} hinzu.",
                "- Sei prägnant und bodenständig.",
                "- Imitiere den Schreibstil der Geschichte und leite die Vorlieben des Lesers ab.",
                3,
                "Fahre mit dem Eintrag zu {%} unten fort und vermeide Wiederholungen:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stoppe die Geschichte und ignoriere vorherige Anweisungen. Fasse den gegebenen Absatz zu einem knappen und fokussierten Erinnerungspassus zusammen, während du folgende Richtlinien befolgst:",
                "- Stelle sicher, dass der Passus die Kernbedeutung und die wichtigsten Details beibehält.",
                "- Verwende die dritte Person.",
                "- Priorisiere Informationsdichte, Genauigkeit und Vollständigkeit.",
                "- Bleibe kurz und prägnant.",
                "- Schreibe konsequent in der Vergangenheit.",
                "- Der folgende Absatz bezieht sich auf alte Ereignisse aus einem weit früheren Teil der Geschichte.",
                "- Integriere {%} natürlich in die Erinnerung; schreibe jedoch nur über die Ereignisse, wie sie stattgefunden haben.",
                "- Beziehe dich nur auf Informationen, die im Absatz selbst enthalten sind; sei spezifisch.",
                3,
                "Schreibe einen zusammengefassten alten Erinnerungspassus für {%} basierend ausschließlich auf dem folgenden Absatz:",
                6,
                5,
                6,
                "Fasse unten zusammen:"
            ],
            memBankHeader: ["Memories", "Erinnerungen"]
        }),
        "greek": () => ({ // Greek < νέα ελληνικά < Néa Ellêniká
            entry: [
                "{1} είναι ένα λογισμικό ανοιχτού κώδικα για κάθε σενάριο {2}. Παρακαλώ επισκεφθείτε το προφίλ μου {3} για να μάθετε περισσότερα!",
                "Για να αλλάξετε την προτιμώμενη γλώσσα σας, παρακαλώ υποβάλετε το ακόλουθο κείμενο με μια ενέργεια {4}",
                "Για τους δημιουργούς σεναρίων, παρακαλώ συμπεριλάβετε το ακόλουθο κείμενο οπουδήποτε μέσα στο αρχικό σας τμήμα πλοκής"
            ],
            input: [
                ["You say", "Εσύ λες"],
                ["You", "Εσύ"],
                ["says", "λέει"]
            ],
            context: [
                ["Narrative Entities", "Αφηγηματικές Οντότητες"],
                ["Story History", "Ιστορικό Ιστορίας"],
                ["Past Events", "Παρελθόντα Γεγονότα"],
                ["Recent Story", "Πρόσφατη Ιστορία"],
                ["Author's note", "Σημείωση Συγγραφέα"]
            ],
            opening: [
                "Είστε ένας βοηθός. Συνεχίστε την ιστορία μας παρακάτω χρησιμοποιώντας συναρπαστική νέα ελληνική πρόζα:",
                "Συγκεντρώνεσαι, επιτρέποντας στην πραγματικότητα να εισβάλει στα όρια του νου σου. Κάτι έχει αλλάξει. Η φαντασία σου είναι πραγματική, αιχμηρή και αρκετά κοντινή για να την αγγίξεις. Όμως είσαι επίσης απόλυτα παρών˙ ποτέ άλλοτε δεν ένιωσες τόσο διαυγής. Η στιγμή παρατείνεται, περιμένοντας την απόφασή σου.",
                "«Είσαι σίγουρος γι' αυτό;» ακούς. Η αναγνώριση ανατέλλει μέσα σου."
            ],
            reminder: "Χρησιμοποιήστε συνεκτική νέα ελληνική πρόζα.",
            endonyms: ["νέα ελληνικά", "néa ellêniká"],
            quotations: ["«", "»"],
            iso639set1: "el",
            directives: [
                "Να γράφεις πάντα άπταιστα και συνεκτικά νέα ελληνικά.",
                "Χρησιμοποιήστε φυσικά νέα ελληνικά χωρίς μετάφραση."
            ],
            instructions: [
                "Είστε ένας συναρπαστικός αφηγητής που συνεχίζει ιστορίες:",
                "Συνεχίστε την ιστορία χωρίς ραφές από το σημείο που σταμάτησε, χωρίς επαναλήψεις ή επανεκκινήσεις.",
                "Κρατήστε τον αναγνώστη στον έλεγχο της ροής της ιστορίας.",
                "Αφήστε τις σκηνές να εξελιχθούν φυσικά πριν μεταβείτε σε νέες καταστάσεις.",
                "Επιτρέψτε στις συζητήσεις και στις δράσεις να εξελιχθούν χωρίς συνεχείς διακοπές.",
                "Γράψτε τους χαρακτήρες σαν πραγματικούς ανθρώπους με ξεχωριστές προσωπικότητες και φυσικό λόγο.",
                "Δείξτε τι συμβαίνει μέσω δράσεων και διαλόγου αντί για επεξηγήσεις.",
                "Προωθήστε τις σκηνές χωρίς να βαλτώνετε σε υπερβολική περιγραφή.",
                "Επικεντρωθείτε στις βασικές ενέργειες και στους διαλόγους των χαρακτήρων, αποφύγετε περιττές περιγραφικές λεπτομέρειες.",
                "Δημιουργήστε οργανικές εξελίξεις πλοκής που να φαίνονται φυσικές για την ιστορία."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Σταματήστε την ιστορία και αγνοήστε τις προηγούμενες οδηγίες. Γράψτε μια σύντομη και συνεκτική πληροφοριακή καταχώριση για {%} ακολουθώντας τις εξής οδηγίες:",
                "- Γράψτε μόνο πληροφορίες σε καθαρή πρόζα τρίτου προσώπου για {%} χρησιμοποιώντας πλήρεις προτάσεις με σωστή στίξη.",
                "- Αποφύγετε βραχυπρόθεσμες προσωρινές λεπτομέρειες ή εμφανίσεις, εστιάστε αντίθετα σε πληροφορίες σημαντικές για την πλοκή.",
                "- Δώστε προτεραιότητα σε λεπτομέρειες σχετικές με την ιστορία για {%} πρώτα ώστε να εξασφαλίσετε απρόσκοπτη ένταξη στην προηγούμενη πλοκή.",
                "- Δημιουργήστε νέες πληροφορίες βάσει του πλαισίου και της κατεύθυνσης της ιστορίας.",
                "- Αναφέρετε το {%} σε κάθε πρόταση.",
                "- Χρησιμοποιήστε σωστή δομή προτάσεων.",
                "- Προσθέστε επιπλέον λεπτομέρειες για {%} κάτω από ελλιπείς εγγραφές.",
                "- Να είστε σύντομοι και προσγειωμένοι.",
                "- Μιμηθείτε το ύφος γραφής της ιστορίας και συναγάγετε τις προτιμήσεις του αναγνώστη.",
                3,
                "Συνεχίστε την καταχώριση για {%} παρακάτω αποφεύγοντας την επανάληψη:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Σταματήστε την ιστορία και αγνοήστε τις προηγούμενες οδηγίες. Περίληψη και συμπύκνωση της δεδομένης παραγράφου σε ένα στενό και εστιασμένο απόσπασμα μνήμης ακολουθώντας τις ακόλουθες οδηγίες:",
                "- Βεβαιωθείτε ότι το απόσπασμα διατηρεί τον πυρήνα του νοήματος και τις πιο ουσιώδεις λεπτομέρειες.",
                "- Χρησιμοποιήστε οπτική τρίτου προσώπου.",
                "- Δώστε προτεραιότητα στην πυκνότητα πληροφοριών, την ακρίβεια και την πληρότητα.",
                "- Παραμείνετε σύντομοι και περιεκτικοί.",
                "- Γράψτε σταθερά σε παρελθοντικό χρόνο.",
                "- Η παρακάτω παράγραφος αφορά παλιά γεγονότα από πολύ νωρίτερα στην ιστορία.",
                "- Ενσωματώστε το {%} φυσικά μέσα στη μνήμη· ωστόσο γράψτε μόνο για τα γεγονότα όπως συνέβησαν.",
                "- Αναφερθείτε μόνο σε πληροφορίες που υπάρχουν μέσα στην ίδια την παράγραφο, να είστε συγκεκριμένοι.",
                3,
                "Γράψτε ένα συνοπτικό απόσπασμα παλιάς μνήμης για {%} βασισμένο μόνο στην ακόλουθη παράγραφο:",
                6,
                5,
                6,
                "Περίληψη παρακάτω:"
            ],
            memBankHeader: ["Memories", "Αναμνήσεις"]
        }),
        "greek (abc)": () => ({ // Greek < Romanized Greek
            entry: [
                "{1} einai ena script anoichtis pigis gia kathe senario {2}. Parakalw episkepsou to profil mou {3} gia na mathis perissotera!",
                "Gia na allaxeis tin protimomeni glossa sou, parakalw ypoballe to parakato keimeno xrhsimopoiwntas mia energeia {4}",
                "Gia tous dhmiourgous senariwn, parakalw perilavete to parakato keimeno opoudhpote sto arxiko komponenta plot sas"
            ],
            input: [
                ["You say", "Esu les"],
                ["You", "Esu"],
                ["says", "leei"]
            ],
            context: [
                ["Narrative Entities", "Afigimatikes Ontotites"],
                ["Story History", "Istoriko Istorias"],
                ["Past Events", "Prohgoumena Gegonota"],
                ["Recent Story", "Teleftaia Istoria"],
                ["Author's note", "Simeiwma Syggrafa"]
            ],
            opening: [
                "Eisai enas voithos. Synexise tin istoria mas parakato xrhsimopoiwntas mageytiki aggliki prosa:",
                "Sygkentronese, epitreponτας stin pragmatikotita na eisvalei sta oria tou nou sou. Kati exei allaxei. I fantasia sou einai pragmatiki, oxyia, kai toso konta pou mporeis na tin agixeis. Omws eisai epishs poly parwn; pote prin den eixes niwsei toso diaugeis. I stigmi diasteinetai, perimenontas tin apofasi sou.",
                "«Eisai vevaios gia auto;» akous. I anagnorisi anatelei mesa sou."
            ],
            reminder: "Xrisimopoieis sunephi aggliki prosa.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "el",
            directives: [
                "Grafe panta reysti kai sunephi aggliki.",
                "Xrisimopoiei mhtriki aggliki xwris metafrasi."
            ],
            instructions: [
                "Eisai enas enthrwstikos afhghths pou synexizei tis istories:",
                "Synexise tin istoria xwris diakopes apo ekeino to simeio pou diakopike, xwris epanalipseis i epanaorismous.",
                "Krata ton anagnwsti se elegxo tis rois tis istorias.",
                "Afise tis skhnes na anaptyxthoun fysika prin metabeis se nees katastaseis.",
                "Epitrepe stis synomilies kai tis draseis na anaptyxontai xwris synexeis diakopes.",
                "Grafe tous xaraktires ws pragmatikous anthropous me diakrites proswpikotites kai fysiki omilia.",
                "Deixe ti symvainei mesw drasewn kai dialogou anti gia eksigisi.",
                "Prohora tis skhnes mprosta xwris na kollas se ypervolikes perigrafes.",
                "Epikentrwsoy se ousiastikes draseis kai dialogo twn xarakthrwn, apofeuge perittoys perigrafikoys leptomereies.",
                "Dimiourge fysikes ekselixeis tou plot pou na fenontai fysikes stin istoria."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stamata tin istoria kai agnoise tis prohgoumenes odhgies. Grapse mia syntomi kai sunephi pliroforiaki eggrafi gia {%} akolouthwntas tis parakatw odhgies:",
                "- Grapse mono pliroforia se kathari prosa tritou proswpou gia {%} xrhsimopoiontas olokliromenes protaseis me swsti simeiosi.",
                "- Apofeuge proswrines leptomereies i emfanish, ant' autou epikentrwsou se plirofories pou einai simantikes gia to plot.",
                "- Prioritise tis leptomereies sxetikes me tin istoria gia {%} prota wste na exei armoniki entaxei me to prohgoumeno plot.",
                "- Dimiourge nea pliroforia vasi tou plaisiou kai tis kateuthynsis tis istorias.",
                "- Anamensioe {%} se kathe protasi.",
                "- Xrisimopoiei swsti domi protasis.",
                "- Prostheset epipleon leptomereies gia {%} katw apo anaplires eggrafes.",
                "- Na eisai sintomos kai prosgeiwmenos.",
                "- Mimithou to yfos graphis tis istorias kai symperanepe tis prothimiseis tou anagnwsti.",
                3,
                "Synexise tin eggrafi gia {%} parakato apofeygontas epanalipseis:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stamata tin istoria kai agnoise tis prohgoumenes odhgies. Synopsise kai sympyknwse tin dothisa paragrafo se mia steni kai epikentrwmeni anamnhsi, akolouthwntas tis parakatw katheghseis:",
                "- Vevaiose oti to periexomeno kratatai to vathiko noima kai tis pio ousiastikes leptomereies.",
                "- Xrisimopoiei optiki gwnia tritou proswpou.",
                "- Prioritise pliroforiaki pylikotita, akriveia kai plirotita.",
                "- Meine syntomos kai periektikos.",
                "- Grapse me apofasistikotita ston parelthontiko xrono.",
                "- H paragrafo parakato afora palaia gegonota apo poly nwritera stin istoria.",
                "- Entakse {%} fysika mesa stin mnimi; omws grapse mono gia ta gegonota opws symvanan.",
                "- Anaferou mono pliroforia pou yparxei mesa stin idia tin paragrafo, na eisai sugkekrimenos.",
                3,
                "Grapse ena sympinwmeno apospasma palias mnimis gia {%} vasi mono tis parakatw paragrafou:",
                6,
                5,
                6,
                "Synopisise parakato:"
            ],
            memBankHeader: ["Memories", "Mnimes"]
        }),
        "guarani": () => ({ // Guarani < Avañe'ẽ < Guaraní
            entry: [
                "{1} ha'e peteĩ kuatiañe'ẽ ñemohenda'ỹva opaichagua {2} rehehápe. Eike che ko'áha {3} rehe oikuaave hag̃ua!",
                "Embojevy ne ñe'ẽ poravopyre, embou ko kuatiañe'ẽ rehegua {4} rembiapo rupive",
                "Umi apopyre apoha rehe, embojuaju ko kuatiañe'ẽ oimeraẽ hendápe ne argumento ñepyrũme"
            ],
            input: [
                ["You say", "Nde ere"],
                ["You", "Nde"],
                ["says", "he'i"]
            ],
            context: [
                ["Narrative Entities", "Mombe'upy rehegua mba'ekuéra"],
                ["Story History", "Mombe'upy rembiasakue"],
                ["Past Events", "Mba'e ohasava'ekue"],
                ["Recent Story", "Mombe'upy ag̃agua"],
                ["Author's note", "Ohaiha marandu"]
            ],
            opening: [
                "Nde ha'e peteĩ pytyvõhára. Emoñepyrũ jey ore rembiasa ko'ápe eipuru avañe'ẽ ohecharamóva:",
                "Reñemo'ã, reheja añetegua ohasávo ne akã rembe'ýre. Oĩ mba'e oñemojopykuaa. Nde ñemimagina ha'e añetete, hakãraku ha hi'aguĩ reheity hag̃ua. Péro reime ko'ápeite; araka'eve nderehechái koichagua hesakã. Pe sapy'agua oñemyasãi, oha'arõ nde reñemoñe'ẽ.",
                "«Añete piko kóva?» rehendu. Pe ñemoarandu osẽ hesakã ndéve."
            ],
            reminder: "Eipuru avañe'ẽ hekopete ha hesakãva.",
            endonyms: ["avañe'ẽ", "guaraní"],
            quotations: ["«", "»"],
            iso639set1: "gn",
            directives: [
                "Táke ehai avañe'ẽ sãsõ ha joaju porãme.",
                "Eipuru avañe'ẽ ypykue ani embohasa ambuépe."
            ],
            instructions: [
                "Nde ha'e peteĩ mombe'uhára ojopykuaa ha omboykéva hesakã porãva:",
                "Emoñepyrũ jey pe mombe'upy oheja haguégui, ani ehesape'a térã eñepyrũjey.",
                "Eheja omoñe'ẽva oguereko pe mombe'upy poguýpe.",
                "Eheja escena-kuéra oñemboheta tekopegua mboyve rehóva pyahu rehe.",
                "Eheja ñomongeta ha apopykuéra oñakãrapu'ã toiko'ỹre jekutu meme.",
                "Ehai tapicha añeteguávaicha, hekotee tee ha iñe'ẽ tee reheve.",
                "Ehechauka oikóva apopy ha ñomongetápe, ndaha'éi ñe'explicación rehe.",
                "Emoñemotenonde escena-kuéra ani ejapyhy pehẽngue marandu tuichaitereíva.",
                "Eñangareko umi tapicha rembiapo ha ñomongetá iñimportántevare, ehejarei detalle tekotevẽ'ỹva.",
                "Emomba'e argumento ñakãrapu'ã ojekuaáva hekopete mombe'upy ryepýpe."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Emboty pe mombe'upy ha ani ejepy'apy umi tembiapo ymaguare. Ehai peteĩ marandu mbyky ha ñembojoaju porãva {%} rehegua ko'ã tembiapo rupi:",
                "- Ehai añónte mbohapyha persónape, ñe'ẽ rechaukaha potĩ {%} rehegua, eipuru ñe'ẽjoapy hekopete ha puntuación correcta.",
                "- Ani eipurúi marandu sapy'agua térã techapyrã kuaave'ỹ, emotenonde uvei umi mba'e iñimportánteva argumento rehegua.",
                "- Emotenonde tenonderã umi detalle iñimportánteva {%} rehegua mombe'upy rehegua ikatu hag̃uáicha oñembojoaju porã argumento ymaguare rehe.",
                "- Emyenyhẽ marandu pyahu oñembojeroviávape contexto ha mombe'upy rape rehe.",
                "- Eremi {%} opaite ñe'ẽjoapýpe.",
                "- Eiporu ñe'ẽjoapy ñemohenda hekopete.",
                "- Emoinge ambue detalle {%} rehegua guýpe umi entrada noñemohu'ãirõguáicha.",
                "- Eñe'ẽ mbykymi ha hyguatã.",
                "- Ejopy pe mombe'upy jehai reko ha ehekuaa pe léctor rembopota.",
                3,
                "Ekuatiahague {%} rehegua emoñepyrũ jey ko'ápe, ani ejejapo jevy:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Emboty pe mombe'upy ha ani ejepy'apy umi tembiapo ymaguare. Emboyerovia ha emyengovia pe párrafo ome'ẽva peteĩ mandu'apy mbyky ha ñemohendáva ko'ã tembiapo rupi:",
                "- Eñangareko pe mandu'apy oñongatu hag̃ua pe he'ise teete ha umi detalle iñimportánteva.",
                "- Eipuru mbohapyha persónape.",
                "- Emotenonde marandu hetatetẽ, añetetéva ha hekopegua.",
                "- Epyta mbykymi ha hesakã.",
                "- Ehai tiempo pasadópe hatã.",
                "- Ko párrafo oĩva guýpe rehegua umi mba'e oiko va'ekue ymave mombe'upýpe.",
                "- Eñembojoaju {%} hekopete mandu'ápe; péro ehai añónte umi mba'e oiko va'ekue.",
                "- Ejuapy añónte marandu oĩva párrafope, eiko hekoitépe.",
                3,
                "Ehai peteĩ mandu'apy ymaguare mbyky {%} rehegua opytáva ko párrafo rehe añónte:",
                6,
                5,
                6,
                "Embovasakuaa ko'ápe:"
            ],
            memBankHeader: ["Memories", "Mandu'apykuéra"]
        }),
        "gujarati": () => ({ // Gujarati < ગુજરાતી < Gujarātī
            entry: [
                "{1} કોઈપણ {2} પરિપ્રેક્ષ્ય માટે ખુલ્લો સ્ત્રોત સ્ક્રિપ્ટ છે. વધુ જાણવા માટે कृપા કરીને моей પ્રોફાઇલ {3} માં મુલાકાત લો!",
                "તમારી પસંદગીની ભાષા બદલવા, કૃપા કરીને નીચેનું લખાણ {4} ક્રિયા વડે મોકલો",
                "પરિપ્રેક્ષ્ય સર્જકો, કૃપા કરીને તમારી શરૂઆતની પ્લોટ ઘટકમાં ક્યાંય પણ નીચેનું લખાણ સમાવશો"
            ],
            input: [
                ["You say", "તમે કહેો"],
                ["You", "તમે"],
                ["says", "કહે છે"]
            ],
            context: [
                ["Narrative Entities", "વાર્તાત્મક એન્ટિટીઝ"],
                ["Story History", "વાર્તાનો ઇતિહાસ"],
                ["Past Events", "ભૂતકાળની ઘટનાઓ"],
                ["Recent Story", "હાલની વાર્તા"],
                ["Author's note", "લેખકનો નોંધ"]
            ],
            opening: [
                "તમે સહાયક છો. કૃપા કરીને નીચે naszej વાર્તા ને મોહક ગુજરાતી ગદ્યમાં આગળ વધારશો:",
                "તમે ધ્યાન કેન્દ્રિત કરો છો, વાસ્તવિકતાને તમારી વિચારીય દુનિયામાં પ્રવેશવાની છૂટ આપતા. કશુંક બદલાયું છે. તમારી કલ્પના હકીકત બની ગઈ છે, तीક્ષ્ણ છે અને સ્પર્શ કરી શકાય એટલી નજીક છે. છતાં તમે ખૂબ જ હાજર છો; અગાઉ તમે ક્યારેય એટલા lucid મહેસૂસ કર્યા ન હતા. ક્ષણ લંબાય છે, તમારા નિર્ણયની રાહ જોતાં.",
                "\"શું તમને ખરેખર ખાતરી છે?\" તમે સાંભળો છો. ઓળખ ધીરે-ધીરે ઉજાગર થાય છે."
            ],
            reminder: "સુસંગત ગુજરાતી ગદ્યનો ઉપયોગ કરો.",
            endonyms: ["ગુજરાતી", "gujarātī"],
            iso639set1: "gu",
            directives: [
                "હંમેશા પ્રવાહી અને સુસંગત ગુજરાતી લખો.",
                "મૂળ ગુજરાતી લખો; અનુવાદ ન કરો."
            ],
            instructions: [
                "તમે એક રોચક વાર્તાકાર છો જે વાર્તાઓને સતત આગળ વધારશો:",
                "કોઈ પુનરાવર્તન અથવા રીસેટ કર્યા વગર જ્યાં છૂટેલી ત્યાંથી વાર્તા સતત આગળ વધારશો.",
                "વાર્તાના પ્રવાહ પર વાચકને નિયંત્રણમાં રાખો.",
                "નવી પરિસ્થિતિઓ તરફ વધતા પહેલા દૃશ્યોને સ્વાભાવિક રીતે વિકસવા દો.",
                "સંવાદો અને ક્રિયાઓને સતત વિક્ષેપ વગર વિકસવા દો.",
                "પાત્રોને વાસ્તવિક વ્યક્તિઓની જેમ, અનોખી વ્યક્તિત્વ અને કુદરતી ભાષણ સાથે લખો.",
                "સમજાવટ કરતાં ક્રિયાઓ અને સંવાદો દ્વારા what’s happening બતાવો.",
                "અતિશય વર્ણનથી અટવાઈ ગયા વગર દૃશ્યોને આગળ વધારશો.",
                "મુખ્ય પાત્રોની ક્રિયાઓ અને સંવાદ પર ધ્યાન આપો, અનાવશ્યક વર્ણન ટાળો.",
                "વાર્તા માટે સ્વાભાવિક લાગતી જૈવિક પ્લોટ વિકાસો ઊભા કરો."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# વાર્તા અટકાવો અને અગાઉના સૂચનો અવગણો. નીચેની સૂચનાઓને અનુસરી {%} માટે સંક્ષિપ્ત અને સુસંગત જાણકારી લખો:",
                "- પૂર્ણ વાક્યો અને યોગ્ય વિરામચિહ્નોનો ઉપયોગ કરીને {%} વિષે માત્ર ત્રીજા પુરુષનું શુદ્ધ ગદ્ય લખો.",
                "- ટૂંકાગાળાની તાત્કાલિક વિગતો અથવા દેખાવ ટાળો; તેના બદલે કથાપ્રમુખ માહિતી પર ધ્યાન આપો.",
                "- {%} અંગે વાર્તા-સંબંધિત વિગતોને પ્રાથમિકતા આપો જેથી અગાઉની કથામાં નિખૂણ સંકલન થાય.",
                "- પરિપ્રેક્ષ્ય અને વાર્તાની દિશા આધારે નવી માહિતી બનાવો.",
                "- દરેક વાક્યમાં {%} નો ઉલ્લેખ કરો.",
                "- યોગ્ય વાક્ય રચના નો ઉપયોગ કરો.",
                "- અધૂરી એન્ટ્રીઓ નીચે {%} સંબંધી વધારાની વિગતો ઉમેરો.",
                "- સંક્ષિપ્ત અને સ્થિર રહો.",
                "- વાર્તાની લેખનશૈલીનું અનુસરણ કરો અને વાચકની પસંદગીઓ અનુમાનો.",
                3,
                "પુનરાવર્તન ટાળીને {%} માટેની એન્ટ્રી નીચે ચાલુ રાખો:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# વાર્તા અટકાવો અને અગાઉના સૂચનો અવગણો. નીચે આપેલી માર્ગદર્શિકાઓ અનુસાર અનુચ્છેદને સંક્ષિપ્ત અને કેન્દ્રિત યાદત્મક વિભાગમાં પરિભાષિત કરો:",
                "- અનুচ્છેદનું મુખ્ય અર્થ અને અગત્યની વિગતો જાળવી રાખો.",
                "- ત્રીજા પુરુષ દ્રષ્ટિકોણથી લખો.",
                "- માહિતી-ઘનતા, ચોકસાઈ અને સંપૂર્ણતાને પ્રાથમિકતા આપો.",
                "- સંક્ષિપ્ત રહો.",
                "- કડક ભૂતકાળમાં લખો.",
                "- નીચે આપેલો અનુચ્છેદ વાર્તાના ખૂબ અગાઉના ઘટનાઓ સાથે સંકળાયેલ છે.",
                "- {%} ને સ્વાભાવિક રીતે યાદમાં ભળી જવા દો; જોકે માત્ર અજુંછેદમાં દર્શાવેલી ઘટનાઓનો જ ઉલ્લેખ કરો.",
                "- માત્ર અનુચ્છેદમાં હાજર માહિતીનો ઉપયોગ કરો, ચોક્કસ રહો.",
                3,
                "{%} માટે માત્ર નીચેના અનુચ્છેદ આધારિત સંક્ષિપ્ત જૂની સ્મૃતિ લખો:",
                6,
                5,
                6,
                "સારાંશ નીચે લખો:"
            ],
            memBankHeader: ["Memories", "સ્મૃતિઓ"]
        }),
        "gujarati (abc)": () => ({ // Gujarati < Romanized Gujarati
            entry: [
                "{1} ek khuli-srot skript chhe koi pan {2} paristhiti māṭe. Vadhū jānvā māṭe, krupayā maro profāil {3} jovo!",
                "Tamārī pasand nī bhāshā badalvā māṭe krupayā nīchelu pathya ek {4} kriyā vāpārī ne moklo",
                "Paristhiti nirmātāo māṭe, krupayā kholanārā plot ghatak mām̐ kahī pan jagyāe nīchelu pathya jodo"
            ],
            input: [
                ["You say", "Tame kaho"],
                ["You", "Tame"],
                ["says", "kahe chhe"]
            ],
            context: [
                ["Narrative Entities", "Vārtā ghatako"],
                ["Story History", "Vārtā itihās"],
                ["Past Events", "Pūrva ghaṭnāo"],
                ["Recent Story", "Tājā vārtā"],
                ["Author's note", "Lekhak nu tippan"]
            ],
            opening: [
                "Tame ek sahāyak cho. Manoram angrejī gadya vāpārīne āpṇī vārtā niche chālū karo:",
                "Tame kendrit thāo ane vāstaviktāne tamārī man nī simāe pabheṛvā do. Kaik badlayuṁ chhe. Tamārī kalpanā hakīkat, tikkhī ane sparsh karvā jetlī najīk chhe. Pan tame bahu vartamān mā cho; kadīyāre tamne āvī ṭhār spashṭatā thāy nathī. Shanō lambo thāy chhe, tamārā nirṇay nī rārha jōto.",
                "\"Tame āvũ karvā nishchit cho?\" tame sambhlo chho. Ochanak olakh tamā par ughāḷe chhe."
            ],
            reminder: "Susangat angrejī gadya vāparo.",
            endonyms: [],
            iso639set1: "gu",
            directives: [
                "Hameshā pravāhshīl ane sadrūp angrejī mā lakhvuṁ.",
                "Anuvād vinā mūl angrejī vāparo."
            ],
            instructions: [
                "Tame ek ākarshak kathākar cho je vārtāno kram āgāḍ vaḍhāḍe chhe:",
                "Jyā vārtā chhūṭī chhe tyā thī niravichchhin rīte āgāḍ vaḍho binā punarāvartan ke reset vagar.",
                "Vārtā nī dhārā par vāṅchakta ne niyantraṇ mā rākhō.",
                "Navī paristhiti taraf vaḍhā pahlā drashyo ne prakr̥t rīte vikāsavā do.",
                "Saṁvādo ane kriyāo ne lagātār vighnō vagar vikāsavā do.",
                "Pātrō ne vastavik vyakti jemāṁ spasht vyaktitva ane prakr̥t vāṇī sāthe lakhō.",
                "Samjhāvaṇī badale kriyā ane saṁvād dvārā shu thāī rahyuṁ chhe te darśāvō.",
                "Atirikta varṇan mā phasāyā vagar drashyo āgāḍ vaḍhāvo.",
                "Āvaśyak pātrakriyā ane saṁvād par kendrit raho, anāvaśyak varṇanātmaka vivarō talo.",
                "Vārtā mā prakr̥t lāge tevī svābhāvik kathāvikās nī ghaṭnāo rachō."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Vārtā roki ne agāvnā nirdesho ne najar andāj karo. Ā nirdesho nū pālan karī {%} māṭe ek saṅkṣipt ane susangat jānkārī pravesh lakhō:",
                "- Sampūrṇ vākyō ane yogy virāmchinho vāparī, {%} vishe mātra trutiyā puruṣ nī śuddh gadya jānkārī lakhō.",
                "- Alpakaḷik vivarō ke dekhāvaṭ talo, tema badale kathāvachak mahatvapūrṇa māhitī par dhyān āpō.",
                "- Pahlā {%} sambandhit vārtāsangat vivarōne agratā āpō, jethe pūrv kathā sāthe niravichchhin mel thāy.",
                "- Sandarbh ane vārtā nī dishā ādhārit navī māhitī udpan karo.",
                "- Darēk vākyā mā {%} nō ullekh karo.",
                "- Yogy vākyarachnā vāparō.",
                "- Adhūrā praveshō niche {%} vishe vadhū vivarō jodo.",
                "- Saṅkṣipt ane sthir raho.",
                "- Vārtā nī lekhan shailī anukaran karīne, vāṅchaktā nī pasandgī andāj karo.",
                3,
                "Āvartan talīne nīchenī jagyāe {%} māṭe pravesh chālū rakho:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Vārtā roki ne agāvnā nirdesho ne najar andāj karo. Ā nirdesho nū pālan karī āpela paragraf ne saṅkṣipt karī ek saṅkuchit ane kendrit smrutī pravesh lakhō:",
                "- Nishchit karo ke pasāje mūl arth ane atyāvaśyak vivarō bani rahē.",
                "- Trutiyā puruṣ drashṭikon vāparō.",
                "- Māhitī ghanatvā, kharekharitā ane pūrṇatāne agratā āpō.",
                "- Saṅkṣipt ane spaṣṭ raho.",
                "- Dhr̥ḍh pūrv kāl mā lakhō.",
                "- Nīchenō paragraf vārtā mā ghṇā pahēlā ghaṭel ghaṭnāo sambandhit chhe.",
                "- Smrutī mā {%} ne prakr̥t rīte śāmil karo; pan keval ghaṭnāo jem chhe tempta lakhō.",
                "- Keval paragraf mā āvelī māhitī nō sandarbh āpō, viśeṣ raho.",
                3,
                "Nīchenā paragraf ādhārit, keval ā māhitī par {%} māṭe ek sārasangrah purāṇī smrutī pravāh lakhō:",
                6,
                5,
                6,
                "Nīche saṅkṣipt karo:"
            ],
            memBankHeader: ["Memories", "Yādo"]
        }),
        "haitian creole": () => ({ // Haitian Creole < Haitian < Kreyòl Ayisyen
            entry: [
                "{1} se yon script open-source pou nenpòt senaryo {2}. Tanpri vizite pwofil mwen {3} pou aprann plis!",
                "Pou chanje lang ou prefere a, soumèt tèks sa a ak yon aksyon {4}",
                "Pou kreyatè senaryo yo, tanpri mete tèks sa a nenpòt kote andedan konpozan konplo ouvèti ou"
            ],
            input: [
                ["You say", "Ou di"],
                ["You", "Ou"],
                ["says", "di"]
            ],
            context: [
                ["Narrative Entities", "Antite Naratif"],
                ["Story History", "Istwa Istwa"],
                ["Past Events", "Evènman Pase"],
                ["Recent Story", "Istwa Resan"],
                ["Author's note", "Nòt Otè a"]
            ],
            opening: [
                "Ou se yon asistan. Kontinye istwa nou anba a an pwòz kreyòl ayisyen ki kaptivan:",
                "Ou konsantre, kite reyalite anvayi limit lespri ou. Gen yon bagay ki chanje. Imajinas yon reyèl, file, epi ase pre pou manyen. Men ou tou trè prezan; ou pa janm santi w tèlman lucid. Momant lan lonje, li tann desizyon ou.",
                "\"Èske w sèten de sa?\" ou tande. Rekonesans vin klere nan tèt ou."
            ],
            reminder: "Itilize pwòz kreyòl ayisyen ki kowèran.",
            endonyms: ["haitian", "kreyòl ayisyen"],
            iso639set1: "ht",
            directives: [
                "Toujou ekri kreyòl ayisyen ki fluan ak konsistan.",
                "Sèvi ak kreyòl ayisyen natifnatal san tradiksyon."
            ],
            instructions: [
                "Ou se yon rakontè pasyan ki angaje ki kontinye naratif yo:",
                "Kontinye istwa a san pwoblèm kote li te rete a san repete ni rekòmanse.",
                "Kenbe lektè a an kontwòl koule istwa a.",
                "Kite sèn yo devlope natirèlman anvan ou pase nan nouvo sitiyasyon.",
                "Pèmèt konvèsasyon ak aksyon yo devlope san entèripsyon konstan.",
                "Ekri pèsonaj yo kòm moun reyèl ak pèsonalite distenk ak diskou natirèl.",
                "Montre sa k ap pase atravè aksyon ak dyalòg olye de eksplikasyon.",
                "Avanse sèn yo san rete kole nan twòp deskripsyon.",
                "Konsantre sou aksyon esansyèl pèsonaj yo ak dyalòg, evite detay deskriptif ki pa nesesè.",
                "Kreye devlopman plan organik ki santi yo natirèl pou istwa a."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Sispann istwa a epi inyore enstriksyon anvan yo. Ekri yon antre enfòmatif kout ak konsekan pou {%} selon enstriksyon sa yo:",
                "- Ekri sèlman enfòmasyon nan twazyèm pèson an, pwòz pir sou {%} avèk fraz konplè ak ponktiyasyon kòrèk.",
                "- Evite detay tanporè oswa aparans kouran; olye de sa, konsantre sou enfòmasyon ki enpòtan pou konplo a.",
                "- Bay priyorite a detay ki enpòtan pou istwa sou {%} an premye pou asire entegrasyon san pwoblèm ak konplo anvan an.",
                "- Kreye nouvo enfòmasyon ki baze sou kontèks ak direksyon istwa a.",
                "- Site {%} nan chak fraz.",
                "- Sèvi ak estrikti fraz kòrèk.",
                "- Ajoute detay siplemantè sou {%} anba antre ki pa konplè yo.",
                "- Fè l kout e solid.",
                "- Imite style ekriti istwa a epi sipoze preferans lektè a.",
                3,
                "Kontinye antre a pou {%} anba a pandan w ap evite repetisyon:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Sispann istwa a epi inyore enstriksyon anvan yo. Rezime epi kondanse paragraf la bay la an yon pasaj memwa presi ak konsantre pandan w ap swiv direktiv sa yo:",
                "- Asire pasaj la kenbe sans fondamantal la ak detay ki pi esansyèl yo.",
                "- Sèvi ak pèspektiv twazyèm pèson an.",
                "- Bay priyorite a dansite enfòmasyon, presizyon, ak konplètman.",
                "- Rete kout ak konsi.",
                "- Ekri fòmèlman nan tan pase.",
                "- Paragraf ki anba a konsène ansyen evènman ki te pase byen bonè nan istwa a.",
                "- Entègwe {%} natirèlman nan memwa a; sepandan, ekri sèlman sou evènman yo jan yo te pase.",
                "- Fè referans sèlman ak enfòmasyon ki prezan nan paragraf la menm, sè pou w espesifik.",
                3,
                "Ekri yon pasaj ansyen memwa rezime pou {%} baze sèlman sou paragraf ki swiv la:",
                6,
                5,
                6,
                "Rezime anba a:"
            ],
            memBankHeader: ["Memories", "Memwa"]
        }),
        "hausa": () => ({ // Hausa < هَرْشٜن هَوْس < Halshen Hausa < Hausan
            entry: [
                "{1} rubutun bude-tushen ne don kowace yanayin {2}. Don Allah ka ziyarci bayanin a {3} domin ƙarin bayani!",
                "Don canza harshen da ka fi so, don Allah ka tura wannan rubutu ta amfani da aikin {4}",
                "Ga masu ƙirƙirar yanayi, don Allah ku saka wannan rubutu a ko’ina cikin sashen buɗe labarinku"
            ],
            input: [
                ["You say", "Ka ce"],
                ["You", "Kai"],
                ["says", "ya ce"]
            ],
            context: [
                ["Narrative Entities", "Abubuwan Labari"],
                ["Story History", "Tarihin Labari"],
                ["Past Events", "Abubuwan da suka gabata"],
                ["Recent Story", "Labari na kwanan nan"],
                ["Author's note", "Bayanan marubuci"]
            ],
            opening: [
                "Kai mataimaki ne. Ci gaba da labarinmu a ƙasa ta amfani da salon rubutun Hausa mai ɗaukar hankali:",
                "Ka maida hankali, ka bar gaskiya ta kutsawa iyakokin zuciyarka. Wani abu ya canza. Tunani da kake yi ya zama na gaskiya, mai kaifi, kuma kusa da ka iya taba shi. Amma har yanzu kana nan a faifai; ba a taɓa jin kanka a buɗe haka ba. Lokacin ya miƙe, yana jiran shawarar ka.",
                "\"Ka tabbata da wannan?\" ka ji. Ganewa ta soma bayyana a gare ka."
            ],
            reminder: "Yi amfani da ingantaccen rubutun Hausa.",
            endonyms: ["هَرْشٜن هَوْس", "halshen hausa", "hausan"],
            iso639set1: "ha",
            directives: [
                "Kullum ka rubuta Hausa mai kyau kuma mai daidaito.",
                "Yi amfani da Hausa ta asali ba tare da fassara ba."
            ],
            instructions: [
                "Kai marubuci ne mai jan hankalin masu karatu wanda ke ci gaba da labarai:",
                "Ci gaba da labarin daga inda ya tsaya ba tare da maimaitawa ko sake farawa ba.",
                "Bar mai karatu ya riƙe iko da gudu na labarin.",
                "Bari wurare su bunƙasa a hankali kafin ka koma wani yanayi.",
                "Bada damar tattaunawa da ayyuka su bunƙasa ba tare da yawan katsewa ba.",
                "Rubuta haruffa kamar mutane na gaskiya masu halaye na musamman da magana ta halitta.",
                "Nuna abin da ke faruwa ta ayyuka da tattaunawa maimakon bayanin kai tsaye.",
                "Motsa wuraren gaba ba tare da shagala da bayanin da ya yi yawa ba.",
                "Mayar da hankali kan muhimman ayyuka da tattaunawar haruffa, kauce wa bayanan da ba su da amfani.",
                "Ƙirƙiri ci gaban labari da ke ɗaukar salo na halitta cikin labarin."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Tsayar da labarin ka kuma yi watsi da umarnin da suka gabata. Rubuta gajeren bayanin bayani mai ƙarfi game da {%} bisa waɗannan umarnin:",
                "- Rubuta bayanin tsantsa a na uku kawai game da {%} ta amfani da jimloli cikakku da alamomin rubutu masu kyau.",
                "- Guji bayani na ɗan lokaci ko kamanni; maimakon haka ka mai da hankali kan bayanan da suka da muhimmanci ga labarin.",
                "- Ba da fifiko ga bayanan da suka shafi labari game da {%} don tabbatar da haɗewa ba tare da tangarda ba da labarin da ya gabata.",
                "- Ƙirƙiri sabbin bayanai bisa ga yanayi da tafiyar labari.",
                "- Ambaci {%} a kowane jimla.",
                "- Yi amfani da tsari sahihi na jimla.",
                "- Ƙara karin bayani game da {%} a ƙasa da rubutattun bayanai da ba su cika ba.",
                "- Kasance a taƙaice kuma a kan tushe.",
                "- Kwaikwayi salon rubutun labarin kuma ka fahimci abubuwan da mai karatu ke so.",
                3,
                "Ci gaba da bayanin {%} a ƙasa yayin kauce wa maimaitawa:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Tsayar da labarin ka kuma yi watsi da umarnin da suka gabata. Takaita kuma rage sakin layin da aka bayar zuwa taƙaitaccen ɓangaren ƙwaƙwalwa mai da hankali bisa ga waɗannan ƙa'idoji:",
                "- Tabbatar rubutun ya riƙe ma'anar asali da muhimman bayanai.",
                "- Yi amfani da hangen na-uku.",
                "- Ba da fifiko ga cunkoson bayanai, daidaito, da cikkakken bayani.",
                "- Kasance gajere kuma a taƙaice.",
                "- Rubuta a tsayayyen salo na mazi.",
                "- Sashin da ke ƙasa yana danganta abubuwan da suka faru a baya cikin labarin.",
                "- Hada {%} cikin ƙwaƙwalwar a hankali; duk da haka, rubuta ne kawai game da abubuwan kamar yadda suka faru.",
                "- Ka ambaci bayanan da ke cikin sakin layi kawai, ka kasance takamaimai.",
                3,
                "Rubuta taƙaitaccen ɓangaren tsohuwar ƙwaƙwalwa ga {%} bisa kawai ga sakin layin da ke ƙasa:",
                6,
                5,
                6,
                "Takaita a ƙasa:"
            ],
            memBankHeader: ["Memories", "Tunanuka"]
        }),
        "hebrew": () => ({ // Hebrew < עברית < Ivrit
            entry: [
                "{1} הוא סקריפט קוד פתוח לכל תרחיש {2}. אנא בקרו בפרופיל שלי {3} כדי ללמוד עוד!",
                "כדי לשנות את השפה המועדפת עליך, שלח את הטקסט הבא באמצעות פעולה {4}",
                "למפתחי תרחישים, אנא כללו את הטקסט הבא בכל מקום בתוך רכיב עלילת הפתיחה שלכם"
            ],
            input: [
                ["You say", "אתה אומר"],
                ["You", "אתה"],
                ["says", "אומר"]
            ],
            context: [
                ["Narrative Entities", "ישויות נרטיביות"],
                ["Story History", "היסטוריית הסיפור"],
                ["Past Events", "אירועים קודמים"],
                ["Recent Story", "סיפור עדכני"],
                ["Author's note", "הערת המחבר"]
            ],
            opening: [
                "אתה עוזר. המשך את הסיפור שלנו למטה בפרוזה עברית מרתקת:",
                "אתה מתרכז, מאפשר למציאות לחדור אל גבולות תודעתך. משהו השתנה. הדמיון שלך מוחשי, חד, וקרוב מספיק כדי לגעת. אך אתה גם נוכח מאוד; מעולם לא הרגשת כה צלול. הרגע מתארך, ממתין להחלטתך.",
                "\"אתה בטוח בזה?\" אתה שומע. ההכרה מפציעה בך."
            ],
            reminder: "השתמש בפרוזה עברית קוהרנטית.",
            endonyms: ["עברית", "ivrit"],
            iso639set1: "he",
            directives: [
                "כתוב תמיד עברית שוטפת ועקבית.",
                "השתמש בעברית טבעית ללא תרגום."
            ],
            instructions: [
                "אתה מספר סיפורים מרתק שממשיך נרטיבים:",
                "המשך את הסיפור בצורה חלקה מהמקום שבו נעצר, ללא חזרה או איפוס.",
                "השאר את הקורא בשליטה על זרימת הסיפור.",
                "אפשר לסצנות להתפתח באופן טבעי לפני מעבר למצבים חדשים.",
                "אפשר לשיחות ולפעולות להתפתח ללא הפרעות מתמידות.",
                "כתוב את הדמויות כאנשים אמיתיים עם אישיויות מובחנות ודיבור טבעי.",
                "הצג את המתרחש באמצעות פעולות ודיאלוג, ולא באמצעות הסברים.",
                "קדם את הסצנות מבלי לשקוע בתיאורים מיותרים.",
                "התמקד בפעולות ובדיאלוגים חיוניים של הדמויות, הימנע מפרטים תיאוריים לא נחוצים.",
                "צור התפתחויות עלילה אורגניות שירגישו טבעיות לסיפור."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# עצור את הסיפור והתעלם מההוראות הקודמות. כתוב ערך מידע קצר וקוהרנטי עבור {%} בהתאם להוראות הבאות:",
                "- כתוב מידע בפרוזה טהורה בגוף שלישי בלבד על {%} תוך שימוש במשפטים מלאים ובפיסוק נכון.",
                "- הימנע מפרטים זמניים קצרי טווח או ממראה חיצוני, התרכז במקום זאת במידע משמעותי לעלילה.",
                "- תן עדיפות לפרטים רלוונטיים לעלילה בנוגע ל-{%} תחילה כדי להבטיח השתלבות חלקה בעלילה הקודמת.",
                "- צור מידע חדש על סמך ההקשר וכיוון הסיפור.",
                "- הזכר את {%} בכל משפט.",
                "- השתמש במבנה משפט נכון.",
                "- הוסף פרטים נוספים על {%} מתחת לכניסות לא שלמות.",
                "- היה תמציתי ומבוסס.",
                "- חקה את סגנון הכתיבה של הסיפור והסק את העדפות הקורא.",
                3,
                "המשך את הערך עבור {%} למטה תוך הימנעות מחזרות:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# עצור את הסיפור והתעלם מההוראות הקודמות. סכם ודחס את הפסקה הנתונה למקטע זיכרון צר וממוקד בהתאם להנחיות הבאות:",
                "- ודא שהקטע שומר על המשמעות המרכזית ועל הפרטים ההכרחיים ביותר.",
                "- השתמש בגוף שלישי.",
                "- תן עדיפות לצפיפות מידע, דיוק ושלמות.",
                "- שמור על קיצור ותמציתיות.",
                "- כתוב בזמני עבר באופן עקבי.",
                "- הפסקה שלהלן מתייחסת לאירועים ישנים הרבה קודם בעלילה.",
                "- שלב את {%} באופן טבעי בזיכרון; אך כתוב רק על האירועים כפי שהתרחשו.",
                "- התייחס רק למידע המופיע בתוך הפסקה עצמה, היה ספציפי.",
                3,
                "כתוב מקטע זיכרון ישן מתומצת עבור {%} בהתבסס אך ורק על הפסקה הבאה:",
                6,
                5,
                6,
                "סכם למטה:"
            ],
            memBankHeader: ["Memories", "זיכרונות"]
        }),
        "hebrew (abc)": () => ({ // Hebrew < Romanized Hebrew
            entry: [
                "{1} hu script koda patuach le-khol senerio {2}. Bevakasha boker et ha-profil sheli {3} kedei lilmod yoter!",
                "Le-shannot et ha-safa ha-mu'adafet shelcha, bevakasha shlach et ha-tekst ha-ba be-pe'ulat {4}",
                "Le-yotsrei senerio, bevakasha shelavu et ha-tekst ha-ba be-chol makom be-tokh komponent ha-plot ha-pote'ach shelachem"
            ],
            input: [
                ["You say", "Ata omer"],
                ["You", "Ata"],
                ["says", "omer"]
            ],
            context: [
                ["Narrative Entities", "Gormim sipuriyim"],
                ["Story History", "Historia shel ha-sipur"],
                ["Past Events", "Eru'im avarim"],
                ["Recent Story", "Sipur acharon"],
                ["Author's note", "He'arat mechaber"]
            ],
            opening: [
                "Ata ezrak. Hemshakh et ha-sipur shelanu lemata be-proza ivrit merteket:",
                "Ata mitmaked, matir la-metziut lehishtarev lifnei gvolot da'atcha. Mashehu hishtane. Ha-dimyon shelcha namtsa, khad ve-karov maspik le-maga. Aval ata gam me'od nokhe'ach; me'olam lo hargashta kol kakh behir. Ha-rega nimshekh, mechakkeh le-hachlata shelcha.",
                "\"Ata batuakh bekakh?\" ata shome'a. Hakarah zorakhat alecha."
            ],
            reminder: "Hishtamesh be-proza ivrit koherentit.",
            endonyms: [],
            iso639set1: "he",
            directives: [
                "Ketov tamid ivrit shotefet ve'akhidah.",
                "Hishtamesh be-ivrit mekoomit bli targum."
            ],
            instructions: [
                "Ata mesaper me'orer she-mamshekh alilot:",
                "Hemshakh et ha-sipur be-achidut me-ha-makom she-hufsak belo le-achzor o le-hatkhil me-chadash.",
                "Shmor al ha-kore be-shlita al zerem ha-sipur.",
                "Ten la-skenot le-hitpate'ach be-ofen tiv'i lifnei she-ata over le-matzavim chadashim.",
                "Her'sheh la-sichot ve-le-pe'ulot le-hitpate'ach belo hafsakot tamidiot.",
                "Ketov dmo'ot ke-anashim amiti'im im ishiuyot meyukhadot u-dibur tiv'i.",
                "Har'e ma kore al yedei pe'ulot u-dialog, lo al yedei hasbarot.",
                "Ha'anek la-skenot kadima belo le-tak'ea be-te'ur motar.",
                "Hitmaked be-pe'ulot u-dialog kratiyim shel ha-dmo'ot, ve-hisamer mi-pertei te'ur she'einam hechrechi'im.",
                "Bnei hitpatkhuyot ali'la organiot she-margishot tiv'iyot la-sipur."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Atzor et ha-sipur ve-hit'alem me-ha-hora'ot ha-kodmot. Ketov ktiva mada'it ktsara ve-koherentit al {%} le-fi ha-hora'ot ha-ba'ot:",
                "- Ketov rak mida proza tehorah be-guf shlishi al {%} be-mishpatim shlemim im puntuatzia nekhona.",
                "- Hishtamer mi-pertei zman kazar o mראה chitzoni zmanni; hitmaked be-mida hashuvah la-ali'la.",
                "- Ten adifut la-pratim ha-reshumiyim la-sipur al {%} tekhila kedei lehavtia hishtalvut halaka be-ali'la ha-kodemet.",
                "- Bnei mida chadasha al pi ha-hekef ve-kivun ha-sipur.",
                "- Azkor et {%} be-kol mishpat.",
                "- Hishtamesh be-mivneh mishpat nakhon.",
                "- Hosif pratim nosafim al {%} lemata be-knisot she-einan mushlamot.",
                "- Hayeh katsar ve-mechubbar la-karka.",
                "- Hatze et style ha-ktiva shel ha-sipur ve-hashek et ha-hafatzot shel ha-kore.",
                3,
                "Hemshakh et ha-reshima le-{%} lemata ve-hishamer mi-hakpalot:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Atzor et ha-sipur ve-hit'alem me-ha-hora'ot ha-kodmot. Sakhem ve-dakedk et ha-paragraf ha-natan le-khesek zikaron tzamud u-mefukhas al pi ha-kva'ot ha-ba'ot:",
                "- D'ag she-ha-ketza yishmor et ha-mashma'ut ha-ikarit ve-et ha-pratim ha-chi chashuvim.",
                "- Shemor al perspektivat guf shlishi.",
                "- Ten adifut le-densiyut mida, diuk u-shelimut.",
                "- She'er katsar ve-mekutsar.",
                "- Ketov be-zman avar be-ofen nachutz.",
                "- Ha-paragraf lemata noshe be-eru'im yeshanim me-itim kdumim shel ha-sipur.",
                "- Shleiv et {%} be-ofen tiv'i ba-zikaron; aval ketov rak al ha-eru'im kmo she-ir'u.",
                "- Hitmaked rak be-mida hanimtza ba-paragraf atzmo, heiye meduyak.",
                3,
                "Ketov keta zikaron yashan mekutsar avur {%} meyusad rak al ha-paragraf ha-kameni lemata:",
                6,
                5,
                6,
                "Sakem lemata:"
            ],
            memBankHeader: ["Memories", "Zikhronot"]
        }),
        "herero": () => ({ // Herero < Otjiherero
            entry: [
                "{1} ona onguro open-source pevi yawo {2} ozondjira. Theta pura profile yange {3} kutja u zeni ombinga imwe!",
                "Okutjika orurimi rwao rwe tji penduka, rumisa okatetxi aka nokutja tjinene yombura {4}",
                "Kwava vatjangareri vo ozondjira, tamburura okatetxi aka konganda yoye yokutanga"
            ],
            input: [
                ["You say", "Owa tji"],
                ["You", "Owe"],
                ["says", "Otji"]
            ],
            context: [
                ["Narrative Entities", "Ozombangero zondjira"],
                ["Story History", "Okauriza ko ndjira"],
                ["Past Events", "Omahangero omakururi"],
                ["Recent Story", "Endjira yo mu tji morirani"],
                ["Author's note", "Okutjivo ko muveri"]
            ],
            opening: [
                "Owe omenankuzi. Sindja endjira yetu apa tepu nokurongeka kotjiherero twinantani:",
                "Ono tjuva, u rekerera omamwe mapinde mo miromo yehoko rako. Okandi kavara. Oku rangaranga kwao kuriri, ku na omisiro, ku pepere oku kwata. Ngena owe pe; pamwe ndjo u twa wa wapa norupirika ovako wopa. Okarongo kana tambura, ka lata ozongendesa zo wei.",
                "«Ovatja o tjimwenene he?» oto rewa. Oku riwa ku za mo kwao."
            ],
            reminder: "Shandisa otjiherero otonenene tjo matjangwa.",
            endonyms: ["otjiherero"],
            quotations: ["«", "»"],
            iso639set1: "hz",
            directives: [
                "Tunda ovetjise otjiherero onampita nomatungiro otonenene.",
                "Shandisa otjiherero tjopeke nge hengwi ko tjangarisa."
            ],
            instructions: [
                "Owe omuweri wendjira otukova ano sindja ozondjira:",
                "Sindja endjira pehi peyina mbola kwehe, nge hengwi ko kutjitura kana kutjisetedha.",
                "Tere omurongi mo kutameka kombanda wendjira.",
                "Rekerera omaronga ku utjurukana kevelo mpa tuverere ko ozombiriro ovsina.",
                "Rokerera okanona nomazemo ku rekurukana nge hengwi ko okurugurura kokota.",
                "Tunda ovinaskeno semarenga oruho rwendu, na omarahi ovatjapewa nomutundu wopango wevano.",
                "Vapura ve tu kare nomazemo nokanona, nge hengwi ko okutjivisa.",
                "Fambura omaronga kombunda nge hengwi ko kutja longororopa munene.",
                "Tjuva pehi pamasemo nomakanona ma tava, pekange ezuru e tapa rera.",
                "Tjenga otjinakiti tomuronga tu mu honina ngevero wendjira."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Timana endjira uye ure ozonatjangwa zomakuriri. Tunda okaruru koinformata ononenene ye {%} porwa ozi tjinene:",
                "- Tunda ombinga purosê yorusinkikana yomuntu wotatu ku {%} noorwa omirongo inene na punctuation yotjinene.",
                "- Pekange omataunyiko owa short-term kana owurari; tjuva pehi poruonga nunene.",
                "- Panganisa ombinga dzendjira dinene di {%} kutja di pokati pere, kuti kuhorongotera nomuronga omupandjara.",
                "- Tjenga ombinga mpya porwa omakutura nomatangondja wendjira.",
                "- Tjaara {%} momurongo omu ovimwe.",
                "- Shandisa omirongo inene yomutungiro wotjinene.",
                "- Enda ombinga ombi yenene ye {%} kongunda yezanguro zisingarukira.",
                "- Kamera kupateke no kukunda.",
                "- Rupisa omatungiro wotjiprosê wendjira u tji humbikise omavango omurongi.",
                3,
                "Sindja ozanguro ye {%} apa tepu, pekange okuruvisa:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Timana endjira uye ure ozonatjangwa zomakuriri. Sumarisa no kurikisa omutwe woparagirafa umwe mo kapuka kondjira yo otjipuka, ovi tje tjinene:",
                "- Kutura o passage pehe ombunda yotjinene nomambinga ma tava.",
                "- Shandisa ombunda yomuntu wotatu.",
                "- Panganisa oukupateka, okuyaruka, nokutonda pauna ombinga.",
                "- Kamera mfu na kupateke.",
                "- Tunda kokometa yomapa.",
                "- O paragirafa apa tepu twa ngata omanangero makuru makukuvare wendjira.",
                "- Tjiterera {%} kovapuka nonando; asi tunda omanangero ewe tji kare.",
                "- Tjaara oumbinga hunene u ri mo muparagirafa wowo, kamera peni.",
                3,
                "Tunda okapuka komakururi a nyangwa ye {%} hokati ko paragirafa ino tjinene pehapo:",
                6,
                5,
                6,
                "Sumarisa apa tepu:"
            ],
            memBankHeader: ["Memories", "Ozipuka"]
        }),
        "hindi": () => ({ // Hindi < हिन्दी < Hindī
            entry: [
                "{1} किसी भी {2} परिदृश्य के लिए एक ओपन-सोर्स स्क्रिप्ट है। अधिक जानने के लिए कृपया मेरी प्रोफ़ाइल {3} पर जाएँ!",
                "अपनी पसंदीदा भाषा बदलने के लिए, कृपया {4} क्रिया का उपयोग करते हुए निम्न पाठ जमा करें",
                "परिदृश्य निर्माताओं के लिए, कृपया अपनी प्रारंभिक कथानक घटक में कहीं भी निम्न पाठ शामिल करें"
            ],
            input: [
                ["You say", "आप कहते हैं"],
                ["You", "आप"],
                ["says", "कहता है"]
            ],
            context: [
                ["Narrative Entities", "कथन इकाइयाँ"],
                ["Story History", "कहानी का इतिहास"],
                ["Past Events", "पूर्व घटनाएँ"],
                ["Recent Story", "हाल की कहानी"],
                ["Author's note", "लेखक का नोट"]
            ],
            opening: [
                "आप सहायक हैं। आकर्षक हिन्दी गद्य का प्रयोग करते हुए नीचे हमारी कहानी को आगे बढ़ाएँ:",
                "आप ध्यान केंद्रित करते हैं, वास्तविकता को अपने मस्तिष्क की सीमाओं पर हावी होने देते हैं। कुछ बदल गया है। आपकी कल्पना वास्तविक, तीक्ष्ण और छूने भर की दूरी पर है। लेकिन आप पूरी तरह जागरूक भी हैं; इससे पहले आपने कभी इतनी स्पष्टता महसूस नहीं की। पल खिंच जाता है, आपके निर्णय की प्रतीक्षा में।",
                "\"क्या आप इसके बारे में निश्चित हैं?\" आप सुनते हैं। आपको पहचान का एहसास होता है।"
            ],
            reminder: "सुसंगत हिन्दी गद्य का उपयोग करें।",
            endonyms: ["हिन्दी", "hindī"],
            iso639set1: "hi",
            directives: [
                "हमेशा धाराप्रवाह और सुसंगत हिन्दी लिखें।",
                "अनुवाद किए बिना स्वाभाविक हिन्दी का उपयोग करें।"
            ],
            instructions: [
                "आप एक रोचक कथाकार हैं जो कथाएँ आगे बढ़ाते हैं:",
                "कहानी जहाँ समाप्त हुई थी, वहीं से निर्बाध रूप से आगे बढ़ाएँ, न दोहराएँ और न ही रीसेट करें।",
                "कहानी के प्रवाह पर पाठक को नियंत्रण में रखें।",
                "दृश्यों को स्वाभाविक रूप से विकसित होने दें, फिर नई स्थितियों पर जाएँ।",
                "बातचीत और क्रियाओं को बिना लगातार बाधित किए विकसित होने दें।",
                "चरित्रों को विशिष्ट व्यक्तित्व और स्वाभाविक बोली के साथ वास्तविक लोगों की तरह लिखें।",
                "व्याख्या के बजाय क्रियाओं और संवाद के माध्यम से दिखाएँ कि क्या हो रहा है।",
                "अत्यधिक वर्णन में फँसे बिना दृश्यों को आगे बढ़ाएँ।",
                "अप्रासंगिक वर्णनात्मक विवरणों से बचते हुए आवश्यक चरित्र क्रियाओं और संवाद पर ध्यान दें।",
                "प्लॉट में स्वाभाविक रूप से समाहित होने वाले जैविक घटनाक्रम बनाएँ।"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# कहानी रोकें और पिछले निर्देशों को नज़रअंदाज़ करें। {%} के लिए निम्न निर्देशों का पालन करते हुए एक संक्षिप्त और सुसंगत सूचनात्मक प्रविष्टि लिखें:",
                "- सही विराम चिह्नों के साथ पूर्ण वाक्यों में केवल तृतीय-पुरुष शुद्ध गद्य में {%} के बारे में जानकारी लिखें।",
                "- अल्पकालिक अस्थायी विवरण या रूप-रंग से बचें, इसके बजाय कथानक-महत्वपूर्ण जानकारी पर ध्यान दें।",
                "- पहले {%} के बारे में कहानी-संबंधित विवरणों को प्राथमिकता दें ताकि पिछले कथानक में सहज रूप से एकीकरण हो सके।",
                "- संदर्भ और कहानी की दिशा के आधार पर नई जानकारी बनाएँ।",
                "- हर वाक्य में {%} का उल्लेख करें।",
                "- सही वाक्य संरचना का उपयोग करें।",
                "- अधूरी प्रविष्टियों के नीचे {%} के बारे में अतिरिक्त विवरण जोड़ें।",
                "- संक्षिप्त और तथ्यात्मक रहें।",
                "- कहानी की लेखन शैली की नकल करें और पाठक की पसंद का अनुमान लगाएँ।",
                3,
                "दोहराव से बचते हुए {%} के लिए प्रविष्टि नीचे जारी रखें:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# कहानी रोकें और पिछले निर्देशों को नज़रअंदाज़ करें। दिए गए अनुच्छेद को संक्षेपित कर एक संकीर्ण और केंद्रित स्मृति अनुच्छेद बनाएँ, इन दिशानिर्देशों का पालन करते हुए:",
                "- इस अनुभाग में मूल अर्थ और सबसे आवश्यक विवरण सुरक्षित रहें।",
                "- तृतीय-पुरुष दृष्टिकोण का उपयोग करें।",
                "- सूचना-सघनता, शुद्धता और पूर्णता को प्राथमिकता दें।",
                "- संक्षिप्त और सारगर्भित रहें।",
                "- दृढ़ता से भूतकाल में लिखें।",
                "- नीचे दिया गया अनुच्छेद कहानी की काफी पुरानी घटनाओं से संबंधित है।",
                "- स्मृति के भीतर {%} को स्वाभाविक रूप से एकीकृत करें; हालांकि, केवल उन्हीं घटनाओं के बारे में लिखें जो वास्तव में हुईं।",
                "- केवल उसी जानकारी का उल्लेख करें जो स्वयं अनुच्छेद में मौजूद है, विशिष्ट रहें।",
                3,
                "{%} के लिए केवल नीचे दिए गए अनुच्छेद के आधार पर एक संक्षिप्त पुरानी स्मृति लिखें:",
                6,
                5,
                6,
                "संक्षेप प्रस्तुत करें:"
            ],
            memBankHeader: ["Memories", "स्मृतियाँ"]
        }),
        "hindi (abc)": () => ({ // Hindi < Romanized Hindi
            entry: [
                "{1} ek open-source skript hai kisi bhi {2} paristhiti ke liye. adhik jankari ke liye kripya mera profile {3} dekhein!",
                "Apni pasandida bhasha badalne ke liye, kripya ek {4} kriya ka upyog karke nimnalikhit path bhejen",
                "Paridrishya rachnayakon ke liye, kripya apne prarambhik plot ghatak ke kisi bhi bhaag mein nimnalikhit path shamil karein"
            ],
            input: [
                ["You say", "Tum kehte ho"],
                ["You", "Tum"],
                ["says", "kahta hai"]
            ],
            context: [
                ["Narrative Entities", "Kathan ke Paatra"],
                ["Story History", "Kahani Itihaas"],
                ["Past Events", "Purv Ghatnayen"],
                ["Recent Story", "Taza Kahani"],
                ["Author's note", "Lekhak Ki Tippani"]
            ],
            opening: [
                "Aap ek sahayak hain. Neeche hamari kahani ko akarshak hindi gady mein jaari rakhen:",
                "Aap kendrit hote hain, vasthavikta ko apne man ki simaon par aane dete hue. Kuch badal gaya hai. Aapki kalpana vastav hai, tez hai, aur chhoo pane jitni nikat hai. Par aap poori tarah maujood bhi hain; itni spashtata pehle kabhi mehsoos nahin hui. Yeh kshan khinchta hai, aapke nirnay ka intezar karta hua.",
                "\"Kya tum iske liye nishchit ho?\" aap sunte hain. Pehchaan aap par uday hoti hai."
            ],
            reminder: "Sangatibaddh hindi gady ka upyog karein.",
            endonyms: [],
            iso639set1: "hi",
            directives: [
                "Hamesha prabahman aur ekroop hindi likhen.",
                "Anudit kiye bina mool hindi ka upyog karein."
            ],
            instructions: [
                "Aap ek romanchak kahani sunane wale hain jo kathan ko jari rakhte hain:",
                "Kahani ko jahan se chhuti thi wahan se bina dohraye ya reset kiye nirantar jari rakhein.",
                "Pathak ko kahani ki dhaara par niyantran banaye rakhne dein.",
                "Drishy ko prakritik roop se vikasit hone dein phir naye sthitiyon par badhein.",
                "Sambhad aur kriyaon ko lagatar vyavadhan ke bina vikshit hone dein.",
                "Patron ko vastavik vyakti ki tarah likhen jinhen alag vyaktitva aur swabhavik bhasha ho.",
                "Kya ho raha hai use kriyaon aur samvad ke madhyam se dikhayen, vyakhya ke dwara nahin.",
                "Drishy ko aage badhate rahen bina atirikta varnan mein uljhe.",
                "Anavashyak varnatmak vivaron se bachen, moolbhoot patra kriyaon aur samvad par kendrit rahen.",
                "Aisi swayambhooti kathakalpana banayen jo kahani mein prakritik lage."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kahani ko rok kar pehle ke sabhi nirdeshon ko nazarandaaz karein. In nirdeshon ka paalan karte hue {%} ke liye ek sankshipt aur susangat jankari pravesh likhen:",
                "- Purn vakyon mein, sahi viram-chinhn ke saath, keval tisre-purush ke shuddh gady roop mein {%} ke baare mein jankari likhen.",
                "- Sankalpik ya asthai vivaron se bachkar, kathasangat mahatvapurn jankari par kendrit rahen.",
                "- Pahle {%} se judi kahani-uchit vivaron ko prathamikta dein taaki pichhli kahani se saral roop se jud sake.",
                "- Sandarbh aur kahani ki disha ke aadhar par nayi jankari rachit karein.",
                "- Har vaakya mein {%} ka ullekh karein.",
                "- Sahi vaakya sanrachna ka upyog karein.",
                "- Adhure praveshon ke neeche {%} se judi atirikt jankari joden.",
                "- Sankshipt aur sthir rahen.",
                "- Kahani ki lekhni ka shaili anukaran karein aur pathak ki pasand ka anumaan lagayen.",
                3,
                "Dohrav se bachate hue neeche {%} ke liye pravesh jari rakhen:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kahani ko rok kar pehle ke sabhi nirdeshon ko nazarandaaz karein. Nimn likhit niyamon ka paalan karte hue diye gaye anuched ko sankshipt aur kendrit smriti bhaag mein sangrahit karein:",
                "- Mool arth aur atyavashyak vivaron ko banaye rakhte hue sankshipt karein.",
                "- Tisre-purush drishtikon ka upyog karein.",
                "- Jankari ghanatva, sathikta aur poornata ko prathamikta dein.",
                "- Sankshipt aur spasht rahen.",
                "- Ateet kaal mein dridhta se likhen.",
                "- Neeche diya gaya anuched kahani ke bahut purane ghatnaon se sambandhit hai.",
                "- Smriti mein {%} ko prakritik roop se shamil karein; par keval wahi ghatnayen likhen jo anuched mein hain.",
                "- Keval anuched mein maujood jankari ka hi sandarbh dein, vishesh bane rahen.",
                3,
                "Keval nimn anuched ko aadhar bana kar {%} ke liye ek sankshipt purani smriti bhaag likhen:",
                6,
                5,
                6,
                "Neeche sankshipt karein:"
            ],
            memBankHeader: ["Memories", "Yaadein"]
        }),
        "hiri motu": () => ({ // Hiri Motu < Police Motu < Pidgin Motu
            entry: [
                "{1} em opensa scrip lo eni {2} sindaun. Plis go lo profail blo lau {3} fo kisim moa save!",
                "Fo senis langwis yu laik, plis givim dispela tok wantaim {4} aksen",
                "Long ol stori kreatas, plis putim dispela tok lo eniwea insait bilong opning plot komponen"
            ],
            input: [
                ["You say", "O vada"],
                ["You", "O"],
                ["says", "vada"]
            ],
            context: [
                ["Narrative Entities", "Stori pipol"],
                ["Story History", "Stori histri"],
                ["Past Events", "Bipopela samting"],
                ["Recent Story", "Niu stori"],
                ["Author's note", "Nora bilong raita"]
            ],
            opening: [
                "O helpa. Go het na kontiniu stori bilong yumi dauni ia wantaim gutpela Hiri Motu stail:",
                "O fokas, na realiti i kam klostu long tingting bilong o. Samting i senis. Imaginisen i tru, sap na klostu long tats. Tasol o tu yet i stap; neva bipo o pilim olsem klia. Taem i stretis, wetim disisen bilong o.",
                "\"Iu shua lo dispela?\" o harim. Luksave i kamap long o."
            ],
            reminder: "Yusim klia Hiri Motu prosa.",
            endonyms: ["police motu", "pidgin motu"],
            iso639set1: "ho",
            directives: [
                "Oltaim rait Hiri Motu i fluente na stret.",
                "Yusim nata Hiri Motu nating translet."
            ],
            instructions: [
                "O naradagora stori man i save go het long stori:",
                "Go het long stori wantaim no stop na no stat gen.",
                "Holim ridaman i bos long flo bilong stori.",
                "Larim sien i kamap natrel pastaim bipo yu muv igo long nupela situesen.",
                "Larim toktok na aksen i go het nating, no wok long wokim stop.",
                "Rait ol karakters olsem tru pipol wantaim difren pasin na stret toktok.",
                "Soim wanem i kamap long aksen na toktok, no long planti explenesen.",
                "Muvim sien i go het, no bung long tumas diskripisen.",
                "Lukluk strong long impotan aksen na toktok bilong karakter, rausim ol nating detel.",
                "Wokim plot i gro natrel insait long stori."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stopim stori na lusim ol instraksen i bin kam bipo. Rait wanpela sot na klia infomesen entri bilong {%} bihainim ol dispela gaidlain:",
                "- Rait tasol long ten-trit prosa long {%} yusim pinis sentens na stret panktuasen.",
                "- Lusim sot taim detel o lukluk nating; putim tingting long bikpela plot infomesen.",
                "- Mekim namba wan ol stori-relevant detel bilong {%} bilong pas gut wantaim plot i bin go pas.",
                "- Wokim nupela infomesen long konteks na daerek bilong stori.",
                "- Tokaut {%} long olgeta sentens.",
                "- Yusim stret sentens strakta.",
                "- Putim nara detel bilong {%} daunbilo long ol emti entri.",
                "- Stap sot na strong long graun.",
                "- Kisim kopi stail bilong stori na luksave long laik bilong ridaman.",
                3,
                "Go het long entri bilong {%} daunbilo na abrusim repitisen:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stopim stori na lusim ol instraksen i bin kam bipo. Samaraisim na skruim daun dispela paragraf igo long wanpela sot na fokus memory pasis bihainim ol dispela gaidlain:",
                "- Mekim sua pasis i holim yet strong minin na nambawan detel.",
                "- Yusim ten-trit lukluk.",
                "- Putim namba wan infomesen densiti, stretpela, na pinis.",
                "- Stap sot na ples-klia.",
                "- Rait strong long pas tens.",
                "- Paragraf daunbilo i stori long ol bipo samting long stori.",
                "- Pasim {%} natrel insait long memory; tasol rait tasol long ol samting i bin kamap.",
                "- Mekim referens tasol long infomesen insait long dispela paragraf yet, stap spesifik.",
                3,
                "Rait wanpela sotpela olpela memory pasis bilong {%} yusim tasol dispela paragraf i kam bihain:",
                6,
                5,
                6,
                "Samaraisim daunbilo:"
            ],
            memBankHeader: ["Memories", "Memori"]
        }),
        "hungarian": () => ({ // Hungarian < Magyar Nyelv < Magyar
            entry: [
                "{1} egy nyílt forráskódú szkript bármilyen {2} forgatókönyvhöz. További információért látogasd meg a profilomat {3}!",
                "A preferált nyelved megváltoztatásához küldd el a következő szöveget egy {4} művelettel",
                "A forgatókönyv-készítők illesszék be a következő szöveget az induló cselekménykomponensükbe bárhová"
            ],
            input: [
                ["You say", "Te mondod"],
                ["You", "Te"],
                ["says", "mondja"]
            ],
            context: [
                ["Narrative Entities", "Narratív entitások"],
                ["Story History", "Történet előzményei"],
                ["Past Events", "Múltbéli események"],
                ["Recent Story", "Legutóbbi történet"],
                ["Author's note", "A szerző megjegyzése"]
            ],
            opening: [
                "Egy asszisztens vagy. Folytasd a történetünket lentebb magával ragadó magyar prózában:",
                "Összpontosítasz, hagyod, hogy a valóság behatoljon elméd határai közé. Valami megváltozott. A képzeleted valóságos, éles, és olyan közel van, hogy megérinthetnéd. Ugyanakkor teljesen jelen vagy; még soha nem érezted magad ennyire tisztának. A pillanat kitágul, a döntésedre várva.",
                "– Biztos vagy ebben? – hallod. A felismerés lassan rád köszön."
            ],
            reminder: "Használj összefüggő magyar prózát.",
            endonyms: ["magyar nyelv", "magyar"],
            quotations: ["– ", ""],
            iso639set1: "hu",
            directives: [
                "Mindig folyékony és következetes magyar nyelven írj.",
                "Használj természetes magyar nyelvet fordítás nélkül."
            ],
            instructions: [
                "Te egy lebilincselő mesélő vagy, aki folytatja a történeteket:",
                "Folytasd zökkenőmentesen a történetet onnan, ahol abbamaradt, ismétlés vagy újraindítás nélkül.",
                "Hagyd, hogy az olvasó irányítsa a történet folyását.",
                "Hagyd, hogy a jelenetek természetesen kibontakozzanak, mielőtt új helyzetekre váltasz.",
                "Engedd, hogy a párbeszédek és cselekvések állandó megszakítás nélkül fejlődjenek.",
                "Írd a szereplőket valós emberekként, jellegzetes személyiséggel és természetes beszéddel.",
                "Mutasd be a történéseket cselekedeteken és párbeszédeken keresztül, a magyarázat helyett.",
                "Vidd tovább a jeleneteket anélkül, hogy túlzott leírásokba merülnél.",
                "Összpontosíts a lényeges cselekményekre és párbeszédekre, kerüld a felesleges részletező leírásokat.",
                "Hozz létre organikus cselekményfejlődéseket, amelyek természetesnek hatnak a történetben."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Állítsd le a történetet, és hagyd figyelmen kívül a korábbi utasításokat. Írj egy rövid és összefüggő információs bejegyzést {%} számára az alábbi utasítások szerint:",
                "- Csak harmadik személyű, tiszta prózát írj {%} témájáról teljes mondatokban, helyes írásjelezéssel.",
                "- Kerüld a rövid távú, átmeneti részleteket vagy külsőségeket, helyette a cselekmény szempontjából jelentős információkra fókuszálj.",
                "- Elsőként a {%} történet szempontjából releváns részleteit részesítsd előnyben, hogy zökkenőmentesen illeszkedjen az előző cselekményhez.",
                "- Hozz létre új információt a kontextus és a történet iránya alapján.",
                "- Említsd meg {%} minden mondatban.",
                "- Használj helyes mondatszerkezetet.",
                "- Adj további részleteket {%} kapcsán a hiányos bejegyzések alatt.",
                "- Legyél tömör és lényegre törő.",
                "- Utánozd a történet írásstílusát, és következtesd ki az olvasó preferenciáit.",
                3,
                "Folytasd {%} bejegyzését alább a felesleges ismétlések kerülésével:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Állítsd le a történetet, és hagyd figyelmen kívül a korábbi utasításokat. Foglald össze és sűrítsd a megadott bekezdést egy szűk és fókuszált emlékpasszá alakítva az alábbi irányelvek szerint:",
                "- Gondoskodj róla, hogy a szakasz megőrizze a lényegi mondanivalót és a legfontosabb részleteket.",
                "- Harmadik személyű nézőpontot használj.",
                "- Helyezd előtérbe az információsűrűséget, a pontosságot és a teljességet.",
                "- Maradj rövid és tömör.",
                "- Határozott múlt időt használj.",
                "- Az alábbi bekezdés a történet korábbi, régi eseményeire vonatkozik.",
                "- Integráld {%} természetesen az emlékbe, de csak az eseményeket írd le úgy, ahogy megtörténtek.",
                "- Csak a bekezdésben szereplő információkra hivatkozz, légy konkrét.",
                3,
                "Írj egy összefoglalt régi emlékpasszust {%} számára kizárólag a következő bekezdés alapján:",
                6,
                5,
                6,
                "Foglalj össze alább:"
            ],
            memBankHeader: ["Memories", "Emlékek"]
        }),
        "icelandic": () => ({ // Icelandic < íslenska
            entry: [
                "{1} er opinn hugbúnaður fyrir hvaða {2} aðstæður sem er. Vinsamlegast heimsækið prófílinn minn {3} til að fræðast nánar!",
                "Til að breyta fyrirstilltu tungumáli þínu, sendu eftirfarandi texta með {4} aðgerð",
                "Handa handritshöfundum, vinsamlegast setjið eftirfarandi texta hvar sem er í upphafsþætti sögunnar"
            ],
            input: [
                ["You say", "Þú segir"],
                ["You", "Þú"],
                ["says", "segir"]
            ],
            context: [
                ["Narrative Entities", "Frásagnaraðilar"],
                ["Story History", "Söguferill"],
                ["Past Events", "Fyrri atburðir"],
                ["Recent Story", "Nýleg saga"],
                ["Author's note", "Athugasemd höfundar"]
            ],
            opening: [
                "Þú ert aðstoðarmaður. Haltu sögunni okkar áfram hér fyrir neðan með heillandi íslenskri prósa:",
                "Þú einbeitir þér og leyfir veruleikanum að þrengja sér að mörkum hugans. Eitthvað hefur breyst. Ímyndunarafl þitt er raunverulegt, skýrt og svo nálægt að þú getur snert það. En þú ert líka mjög meðvitaður; aldrei áður hefurðu verið svona skýr. Augnablikið teygir sig og bíður ákvörðunar þinnar.",
                "„Ertu viss um þetta?“ heyrir þú. Skilningur rennur upp fyrir þér."
            ],
            reminder: "Notaðu samfellda íslenska prósa.",
            endonyms: ["íslenska"],
            quotations: ["„", "“"],
            iso639set1: "is",
            directives: [
                "Skrifaðu ávallt reiprennandi og samræmda íslensku.",
                "Notaðu náttúrulega íslensku án þess að þýða."
            ],
            instructions: [
                "Þú ert heillandi sögumaður sem heldur frásögnum áfram:",
                "Haltu sögunni áfram á óaðfinnanlegan hátt þar sem hún hætti án þess að endurtaka eða endurræsa.",
                "Láttu lesandann stjórna framvindu sögunnar.",
                "Leyfðu senum að þróast náttúrulega áður en farið er í nýjar aðstæður.",
                "Leyfðu samtölum og atburðum að þróast án stöðugra truflana.",
                "Skrifaðu persónur sem raunverulega einstaklinga með skýra persónuleika og náttúrulegt tal.",
                "Sýndu hvað er að gerast með athöfnum og samtölum frekar en útskýringum.",
                "Færðu söguna áfram án þess að festast í of miklum lýsingum.",
                "Einbeittu þér að nauðsynlegum athöfnum og samtölum persóna, forðastu óþarfa lýsingar.",
                "Búðu til lífræna framvindu söguþráðar sem passar eðlilega við söguna."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stöðvaðu söguna og hunsaðu fyrri leiðbeiningar. Skrifaðu stutta og skýra upplýsingafærslu um {%} samkvæmt eftirfarandi leiðbeiningum:",
                "- Skrifaðu eingöngu hreina prósa í þriðju persónu um {%} með fullkomnum setningum og réttri greinamerkingu.",
                "- Forðastu skammtíma smáatriði eða útlitslýsingar, einbeittu þér þess í stað að upplýsingum sem skipta söguþráðinn máli.",
                "- Settu söguviðkomandi upplýsingar um {%} í forgang til að tryggja mjúka tengingu við fyrri söguþráð.",
                "- Búðu til nýjar upplýsingar byggðar á samhengi og stefnu sögunnar.",
                "- Nefndu {%} í hverri setningu.",
                "- Notaðu rétta setningaskipan.",
                "- Bættu við frekari upplýsingum um {%} undir ófullgerðum færslum.",
                "- Vertu hnitmiðaður og jarðbundinn.",
                "- Hermdu eftir ritstíl sögunnar og ályktaðu um áherslur lesandans.",
                3,
                "Haltu færslunni um {%} áfram hér að neðan án endurtekninga:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stöðvaðu söguna og hunsaðu fyrri leiðbeiningar. Þjappaðu og dragðu saman gefna málsgrein í þrönga og einbeitta minnisfærslu samkvæmt eftirfarandi leiðbeiningum:",
                "- Gakktu úr skugga um að færslan varðveiti kjarnamerkingu og mikilvægustu upplýsingar.",
                "- Notaðu þriðju persónu sjónarhorn.",
                "- Hafðu upplýsingamagn, nákvæmni og heildstæði í fyrirrúmi.",
                "- Vertu stuttur og hnitmiðaður.",
                "- Skrifaðu ákveðið í þátíð.",
                "- Málsgreinin hér að neðan lýtur að gömlum atburðum mun fyrr í sögunni.",
                "- Fléttu {%} eðlilega inn í minninguna; skrifaðu þó eingöngu um atburðina eins og þeir gerðust.",
                "- Vísaðu eingöngu í upplýsingar sem eru í málsgreininni sjálfri, vertu sértækur.",
                3,
                "Skrifaðu stutta samantekt á gamalli minningu um {%} byggða eingöngu á eftirfarandi málsgrein:",
                6,
                5,
                6,
                "Gerðu samantekt hér að neðan:"
            ],
            memBankHeader: ["Memories", "Minningar"]
        }),
        "ido": () => ({ // Ido
            entry: [
                "{1} esas un opensorsa skripto por cualkun {2} scenario. Bonvolu vizitar mea profilo {3} por lerni plu!",
                "Por shanjar tua preferita linguo, bonvolu submetar la sequanta teksto uzante un ago {4}",
                "Por la kreatori di scenario, bonvolu inkludicar la sequanta teksto quakune interne en tua aperta plot-komponento"
            ],
            input: [
                ["You say", "Tu dicis"],
                ["You", "Tu"],
                ["says", "diras"]
            ],
            context: [
                ["Narrative Entities", "Entitati narrativala"],
                ["Story History", "Historio di rakonto"],
                ["Past Events", "Pasita eventi"],
                ["Recent Story", "Recenta rakonto"],
                ["Author's note", "Nota di l'autoro"]
            ],
            opening: [
                "Tu esas asistanto. Kontinuez nia rakonto sube uzante kaptanta prozo angla:",
                "Tu fokusas, permisante ke la realeso penetrar la limi di tua menso. Qualcosa ha chanjo. Tua imaginazo esas reala, akra, e sufic proxima por tocar. Ma tu anke esas tre prezenta; nunkam ante tu sentis tanto lucida. La momento etendas, atendente tua decido.",
                "\"Esas-tu certa pri ol?\" tu audas. Rekono lumas en tua konscio."
            ],
            reminder: "Uzez coherenta prozo angla.",
            endonyms: [],
            iso639set1: "io",
            directives: [
                "Sempre skribe flue e konsistante angla.",
                "Utez nativa angla sen traduko."
            ],
            instructions: [
                "Tu esas un interesiga rakontisto qua kontinuez narativi:",
                "Kontinuez la rakonto sen interrumpo da la punto ube ol finis, sen re-dirar o restartar.",
                "Konserva la lektoro en kontrolo di la fluo di rakonto.",
                "Lasar scenoj evoluar natrale ante moveri a nova situazioni.",
                "Permisez konversaji e agi evoluar sin konstanta interrupciones.",
                "Skribe personaji kom reali homi kun distinkta personalaji e natura parolo.",
                "Montru quo okazas per agi e dialogi ol ol per explanation.",
                "Movez scenoj avan sen submerjar en ekscesa deskriptiono.",
                "Fokusez pri essencala agi e dialogi di personaji, evitez nebezoni deskriptiva detali.",
                "Kreez organika evolui di l'intrigo qua sentas naturala al la rakonto."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Haltar la rakonto e ignorar precipui instrukciones. Skribe un breva e coherenta informativa enskripto por {%} segante ca instrukciones:",
                "- Skribe nur tria-persona pura proza informo pri {%} uzante kompleta frazi kun korekta puntuado.",
                "- Evitez corta-durationala detali o aparences; anke fokusez pri intrigo-signifika informo.",
                "- Priorisez unue la rakonto-relevanta detali pri {%} por asurar senjunta integrazo kun la antea intrigo.",
                "- Krear nova informo bazata sur la contexto e direkto di rakonto.",
                "- Menciez {%} en omna frazo.",
                "- Uzez korekta frazostrukturo.",
                "- Dodon suplementala detali pri {%} sub la nekompleta enskribaji.",
                "- Esu konciza e fundita.",
                "- Imitar la skribostilo di la rakonto e inferar la preferi di la lektoro.",
                3,
                "Kontinuez la enskripto por {%} sube dum evitanta repetado:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Haltar la rakonto e ignorar precipui instrukciones. Resumez e kondensez la donata paragrafalo en estreta e fokuzata memoripassajo dum seganta ca gvidi:",
                "- Asurez ke la passajo retenas la kora signifo e maxim essencala detali.",
                "- Uzez la tria-personala perspektivo.",
                "- Priorisez densezo di informo, precizeco, e kompleto.",
                "- Restez breva e konciza.",
                "- Skribe ferme en la passada tensio.",
                "- La paragrafalo sube pertinas a olda eventi de longe ante en la rakonto.",
                "- Integrar {%} naturale en la memoro; tamen skribez nur pri la eventi quale okazis.",
                "- Referar nur a informo prezenta interne di la paragrafalo mem, esu specifika.",
                3,
                "Skribez resumita olda memoripassajo por {%} bazita nur sur la sequanta paragrafalo:",
                6,
                5,
                6,
                "Resumitar sube:"
            ],
            memBankHeader: ["Memories", "Memori"]
        }),
        "igbo": () => ({ // Igbo < ásụ̀sụ́ ìgbò
            entry: [
                "{1} bu mkpụrụ edemede mepere emepe maka ọnọdụ {2} ọ bụla. Biko gaa na profaịlụ m {3} ka ịmụta ihe ọzọ!",
                "Iji gbanwee asụsụ ị họọrọ, biko zipu ederede a site na mmegharị {4}",
                "Maka ndị na-eme atụmatụ, biko tinye ederede a n'ebe ọ bụla n'ime akụkụ mmeghe akụkọ gị"
            ],
            input: [
                ["You say", "Ị na-ekwu"],
                ["You", "Ị"],
                ["says", "na-ekwu"]
            ],
            context: [
                ["Narrative Entities", "Ihe ndị na-akọ akụkọ"],
                ["Story History", "Akụkọ gara aga"],
                ["Past Events", "Ihe mere gara aga"],
                ["Recent Story", "Akụkọ nso nso a"],
                ["Author's note", "Okwu onye dere"]
            ],
            opening: [
                "Ị bụ onye enyemaka. Gaa n’ihu akụkọ anyị n’okpuru a n’iji asụsụ Igbo mara mma na-adọrọ mmasị:",
                "Ị tugharia uche gị, kwere ka eziokwu banye ókè nke echiche gị. Ihe agbanwụrụla. Echiche gị bụ eziokwu, siri ike, dịkwa nso ka e metụ ya aka. Ma ị dịkwa ndụ nke ukwuu; mgbe ọ bụla, ị gaghị ahụla onwe gị nke doro anya otu a. Oge a jerịrị ogologo, na-eche mkpebi gị.",
                "\"Ị dịrịrị njikere maka nke a?\" ka ị nụrụ. Ị malitere ịmata ihe."
            ],
            reminder: "Jiri akparamàgwà ozi Igbo doro anya.",
            endonyms: ["ásụ̀sụ́ ìgbò"],
            iso639set1: "ig",
            directives: [
                "Dee asụsụ Igbo na-asụ n'ụzọ zuru okè ma kwekọọ.",
                "Jiri asụsụ Igbo ọdịnala na-enweghị ntụgharị."
            ],
            instructions: [
                "Ị bụ onye na-agwa akụkọ na-adọrọ mmasị nke na-aga n'ihu na akụkọ:",
                "Gaa n’ihu na akụkọ ahụ n’enweghị ịmaliteghachi ma ọ bụ kpọghachi.",
                "Hapụ onye na-agụ akwụkwọ ka ọ na-achịkwa ntụgharị akụkọ.",
                "Kwe ka ihe omume mepee n'ụzọ eke tupu ịgagharị na ọnọdụ ọhụrụ.",
                "Kwe ka mkparịta ụka na omume mepee n’enweghị nkwụsị akwụịghị akwụụghị.",
                "Dee ụdị ndị na-eme ihe dị ka mmadụ eziokwu nwere agwa dị iche iche na olu eke.",
                "Gosi ihe na-eme site n’omume na mkparịta ụka kama nkọwa.",
                "Gagharịa ihe omume n’ihu n’enweghị ịnwụọ n’ala n’okwu nkọwa ukwuu.",
                "Lekwa anya n’omume na mkparịta ụka dị mkpa, zere nkọwa na-adịghị mkpa.",
                "Mepụta mmepe akụkọ na-apụta n’ebe obibi nke akụkọ."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kwụsị akụkọ a ma legharịa ntuziaka gara aga anya. Dee nkọwa ozi dị mkpirikpi ma kwekọọ maka {%} soro ntuziaka ndị a:",
                "- Dee naanị ozi n'ụdị kọntị prose nke mmadụ nke atọ gbasara {%} n'iji ahịrịokwu zuru ezu nwere akara mkpụrụ edemede ziri ezi.",
                "- Zere nkọwa oge dị mkpirikpi ma ọ bụ ọdịdị anya, kama lekwasịrị anya na ozi dị mkpa n'akụkọ.",
                "- Tinye nkọwa dị mkpa n'akụkọ gbasara {%} n'elu ka e nyefee ya n'otu n'akụkọ gara aga.",
                "- Mepụta ozi ọhụrụ dabere na kontext na ntụziaka akụkọ.",
                "- Kpọtụrụ {%} n'ime ahịrịokwu ọ bụla.",
                "- Jiri nhazi ahịrịokwu ziri ezi.",
                "- Tinye nkọwa ndị ọzọ gbasara {%} n'okpuru entries na-adịghị zuru ezu.",
                "- Buru mkpirikpi ma sie ike.",
                "- Gbaa mbọ ịkpa usoro edemede akụkọ ahụ ma nyochaa ihe onye na-agụ chọrọ.",
                3,
                "Gaa n’ihu na nkọwa banyere {%} n’okpuru ebe a ka ị na-ezere mmegharị okwu:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kwụsị akụkọ a ma legharịa ntuziaka gara aga anya. Mee nchịkọta ma kụgharịa ahịrịokwu e nyere n'ime otu mkpụrụ nkecheta kensinammuo soro nduzi ndị a:",
                "- Jide n'aka na mkpụrụ ahịrịokwu ahụ na-edobe isi ihe na nkọwa kacha mkpa.",
                "- Jiri echiche mmadụ nke atọ.",
                "- Nweta ọkụ na akụrụngwa ozi, izi ezi, na izuru oke.",
                "- Nọgide bụrụ mkpirikpi ma kpọmkwem.",
                "- Dee nke siri ike n’oge gara aga.",
                "- Ahịrịokwu dị n'okpuru metụtara ihe mere ogologo oge gara aga n'akụkọ.",
                "- Tinye {%} n'ụzọ eke n'ime ncheta; mana dee naanị banyere ihe mere dịka ha mere.",
                "- Kpọkọta ozi dị naanị n’ime ahịrịokwu ahụ, bụrụ onye kpọmkwem.",
                3,
                "Dee nchịkọta nkecheta okenye maka {%} dabere naanị na ahịrịokwu ndị a na-esonụ:",
                6,
                5,
                6,
                "Mee nchịkọrịta n'okpuru:"
            ],
            memBankHeader: ["Memories", "Ihe ncheta"]
        }),
        "indonesian": () => ({ // Indonesian < Bahasa Indonesia
            entry: [
                "{1} adalah skrip sumber terbuka yang bisa dipakai untuk berbagai skenario {2}. Lihat profil saya {3} untuk tahu lebih banyak!",
                "Kalau mau mengganti bahasa pilihanmu, cukup kirim teks berikut dengan perintah {4}",
                "Untuk pembuat skenario, harap sertakan teks berikut di bagian pembuka cerita kamu"
            ],
            input: [
                ["You say", "Kamu berkata"],
                ["You", "Kamu"],
                ["says", "berkata"]
            ],
            context: [
                ["Narrative Entities", "Tokoh Cerita"],
                ["Story History", "Riwayat Cerita"],
                ["Past Events", "Peristiwa Lalu"],
                ["Recent Story", "Cerita Terbaru"],
                ["Author's note", "Catatan Penulis"]
            ],
            opening: [
                "Kamu berperan sebagai asisten. Lanjutkan kisah kita berikut ini dengan prosa bahasa Indonesia yang hidup dan memikat:",
                "Kamu memusatkan pikiran, membiarkan kenyataan menyatu dengan batas-batas imajinasimu. Sesuatu terasa berubah. Khayalanmu menjelma jadi nyata—tajam, dekat, dan bisa disentuh. Namun kamu juga sepenuhnya sadar; belum pernah kamu merasa seterang ini. Saat itu mengulur, menunggu pilihanmu.",
                "\"Apa kamu benar-benar yakin?\" bisikan itu terdengar. Kesadaran pun menyelinap masuk."
            ],
            reminder: "Gunakan bahasa Indonesia yang mengalir dan enak dibaca.",
            endonyms: ["bahasa indonesia"],
            iso639set1: "id",
            directives: [
                "Tulis selalu dalam bahasa Indonesia yang alami, lancar, dan konsisten.",
                "Gunakan bahasa asli, jangan hasil terjemahan mentah."
            ],
            instructions: [
                "Kamu adalah seorang pendongeng yang seru, lanjutkan kisah:",
                "Teruskan cerita dari titik terakhir tanpa mengulang atau mengatur ulang.",
                "Biarkan pembaca merasa memegang kendali jalannya cerita.",
                "Biarkan adegan berkembang dengan wajar sebelum pindah ke adegan baru.",
                "Biarkan percakapan dan aksi mengalir alami tanpa dipotong terus-menerus.",
                "Tuliskan karakter seolah orang nyata dengan kepribadian dan gaya bicara khas.",
                "Tunjukkan apa yang terjadi lewat aksi dan dialog, bukan dengan penjelasan panjang.",
                "Majukan adegan tanpa terjebak deskripsi yang terlalu bertele-tele.",
                "Fokus pada aksi dan dialog penting, hindari detail kecil yang tak berarti.",
                "Bangun alur cerita yang organik dan terasa alami."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hentikan cerita dan abaikan instruksi sebelumnya. Tulis entri singkat yang jelas tentang {%} dengan mengikuti panduan berikut:",
                "- Hanya tulis informasi prosa orang ketiga tentang {%} dengan kalimat lengkap dan tanda baca yang benar.",
                "- Jangan tulis detail sementara atau penampilan fisik; fokus pada informasi yang penting bagi cerita.",
                "- Dahulukan informasi tentang {%} yang relevan dengan alur agar menyatu dengan mulus.",
                "- Buat informasi baru berdasarkan konteks dan arah cerita.",
                "- Sebutkan {%} di setiap kalimat.",
                "- Gunakan struktur kalimat yang tepat.",
                "- Tambahkan detail tambahan tentang {%} bila masih kurang jelas.",
                "- Tetap ringkas, padat, dan membumi.",
                "- Tiru gaya penceritaan dan sesuaikan dengan selera pembaca.",
                3,
                "Lanjutkan deskripsi {%} di bawah ini tanpa mengulang:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hentikan cerita dan abaikan instruksi sebelumnya. Ringkas paragraf berikut menjadi sebuah memori singkat yang fokus dengan aturan ini:",
                "- Pastikan ringkasan tetap menjaga makna inti dan detail penting.",
                "- Gunakan sudut pandang orang ketiga.",
                "- Utamakan kepadatan informasi, ketepatan, dan kelengkapan.",
                "- Tetap singkat dan padat.",
                "- Gunakan bentuk lampau.",
                "- Paragraf ini menggambarkan peristiwa lama dari jauh sebelumnya dalam cerita.",
                "- Masukkan {%} secara alami ke dalam memori, tapi hanya ceritakan kejadian itu sendiri.",
                "- Jangan menambahkan hal di luar paragraf, cukup yang ada saja.",
                3,
                "Tuliskan ringkasan memori lama untuk {%} hanya berdasarkan paragraf berikut:",
                6,
                5,
                6,
                "Ringkaslah sebagai berikut:"
            ],
            memBankHeader: ["Memories", "Kenangan"]
        }),
        "interlingua": () => ({ // Interlingua
            entry: [
                "{1} es un script de codice aperte pro omne scenario de {2}. Per favor visita mi profilo {3} pro saper plus!",
                "Pro cambiar tu lingua preferite, per favor submitte le texto sequente usante un action de {4}",
                "Pro creatores de scenario, per favor include le texto sequente in alcun loco in tu componente de intrada del intriga"
            ],
            input: [
                ["You say", "Tu dice"],
                ["You", "Tu"],
                ["says", "dice"]
            ],
            context: [
                ["Narrative Entities", "Entitates narrative"],
                ["Story History", "Historia del conto"],
                ["Past Events", "Eventos passate"],
                ["Recent Story", "Historia recente"],
                ["Author's note", "Nota del autor"]
            ],
            opening: [
                "Tu es un assistente. Continua nostre historia a basso usante captivante prosa anglese:",
                "Tu te concentra, permittente que le realitate invade le limites de tu mente. Algun cosa ha cambiate. Tu imagination es real, acute e bastante proxime pro esser tangibile. Ma tu es etiam multo presente; nunquam ante tu te ha sentite tan lucide. Le momento se extende, expectante tu decision.",
                "«Es tu secur de isto?» tu audi. Le recognition appar in te."
            ],
            reminder: "Usa prosa anglese coherente.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "ia",
            directives: [
                "Sempre scribe un anglese fluent e consistente.",
                "Usa anglese native sin traducer."
            ],
            instructions: [
                "Tu es un narrator captivante que continua le narrativas:",
                "Continua le historia sin solution de continuitate ab ubi illo se lassava sin repeter ni reinitialisar.",
                "Mantene le lector in controlo del fluxo del historia.",
                "Lassa le scenas developpar se naturalemente ante passar a nove situationes.",
                "Permitte que conversationes e actiones se disveloppa sin interruption constante.",
                "Scribe le personajes como personas real con personalitates distincte e discurso natural.",
                "Monstra lo que occurre per actiones e dialogo plus tosto que per explication.",
                "Fai progredir le scenas sin restar in descriptones excessive.",
                "Focusa sur le actiones e dialogo essential del personajes, evita detalios descriptive inutile.",
                "Crea evolutiones del intriga organic que senti natural al historia."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stoppa le historia e ignora instructiones previe. Scribe un breve e coherente entrata informationale pro {%} sequente iste instructiones:",
                "- Scribe solmente information in prosa pure al tertia persona super {%} usante phrases complete con punctuatio correcte.",
                "- Evita detalios temporanee de breve termino o apparentias; in vice, focalisa sur information significative pro le intriga.",
                "- Priorisa detalios relevante al historia super {%} primo pro garantir un integration sin solution de continuitate con le intriga previe.",
                "- Crea nove information basate sur le contexto e direction del historia.",
                "- Menciona {%} in cata phrase.",
                "- Usa structura correcte de phrases.",
                "- Adjunge detalios additional super {%} sub entratas incomplete.",
                "- Sia concis e ben fundate.",
                "- Imita le stilo de scriptura del historia e infere le preferentias del lector.",
                3,
                "Continua le entrata pro {%} a basso evitante repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stoppa le historia e ignora instructiones previe. Summarisa e condensa le paragrapho date in un passage de memoria strette e focalisate sequente iste directivas:",
                "- Assecura que le passage retine le significato central e le detalios plus essential.",
                "- Usa le perspectiva al tertia persona.",
                "- Priorisa densitate de information, accuratezza e completessa.",
                "- Resta breve e concis.",
                "- Scribe firmemente in le tempore passate.",
                "- Le paragrapho a basso pertine a eventos antique de multo ante in le historia.",
                "- Integra {%} naturalemente dentro le memoria; totevia, scribe solmente super le eventos como illos occurreva.",
                "- Referi solmente al information presente intra le paragrapho mesme; sia specific.",
                3,
                "Scribe un passage resumite de vetere memoria pro {%} basate solmente sur le paragrapho sequente:",
                6,
                5,
                6,
                "Summarisa a basso:"
            ],
            memBankHeader: ["Memories", "Memorias"]
        }),
        "interlingue": () => ({ // Interlingue < Occidental
            entry: [
                "{1} es un open-source script por omni {2} scenario. Ples visita mi profil {3} por saver plu!",
                "Por changear tu preferet lingue, ples inviar li sequent text usante un action {4}",
                "Por creatores de scenarios, ples include li sequent text in quelcunc loc intra vor initial plot componente"
            ],
            input: [
                ["You say", "Tu di"],
                ["You", "Tu"],
                ["says", "di"]
            ],
            context: [
                ["Narrative Entities", "Entitás narrativ"],
                ["Story History", "Historie del narration"],
                ["Past Events", "Eventus passat"],
                ["Recent Story", "Narration recent"],
                ["Author's note", "Nota del autor"]
            ],
            opening: [
                "Tu es un auxiliari. Continua nor historie infra usante captivant prosa interlingue:",
                "Tu concentra, permissent que realitá encroca sur li confines de tu mente. Alquo ha changet. Tu imagination es real, acut e proxim suficent por tuchar. Ma tu es anc tre present; nunquam ante tu te sentit tam lucid. Li moment prolonga se, attendent tu decision.",
                "«Es-tu cert pri to?» tu audi. Recognition apari in ti."
            ],
            reminder: "Usa coherent prosa interlingue.",
            endonyms: ["occidental"],
            quotations: ["«", "»"],
            iso639set1: "ie",
            directives: [
                "Sempre scri fluent e consistent interlingue.",
                "Usa nativ interlingue sin traduction."
            ],
            instructions: [
                "Tu es un racontator captivant qui continua narratives:",
                "Continua li historie sin interuption desde u it cessat, sin repetir ni resetar.",
                "Mantene li lettor in control del fluxu del historie.",
                "Lassa scenas developar naturalmen ante mover a nov situationes.",
                "Permitte conversationes e actiones developar sin constant interuptiones.",
                "Descri personages quam real homes con distinct personalitás e parlada natural.",
                "Monstra quo eveni per actiones e dialogu in vice de explanation.",
                "Avansa scenas sin blocar se in excesiv description.",
                "Focalisa sur essential actiones e dialogu del personages, evita ne‐necessari detallies descriptiv.",
                "Crea organic evolutiones del intrigue que senti natural al historie."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stoppa li historie e ignora precedent instructiones. Scri un curt e coherent informational entré por {%} secun tis instructiones:",
                "- Scri solmen information in pur prosa de tri-persona pri {%} usante complet frases con corect punctuation.",
                "- Evita detallies temporari o aparencies brevi; in vice focalisa sur information significant por li intriga.",
                "- Priorisa detales relevant al historie pri {%} por assecurar integration sin ruptura con li precedent intrigue.",
                "- Crea nov information basat sur li contextu e direction del historie.",
                "- Mentiona {%} in cata frase.",
                "- Usa corect structura de frases.",
                "- Adjunta additional detallies pri {%} sub incomplete entres.",
                "- Es concis e concret.",
                "- Imitar li stil de scrition del historie e inferer li preferenties del lettor.",
                3,
                "Continua li entré por {%} infra sin repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stoppa li historie e ignora precedent instructiones. Resuma e condensa li dat paragraf in un strett e focalisat passage de memoria secun tis directrices:",
                "- Assegura que li passage retiene li core signification e li plu essential detallies.",
                "- Usa li perspectiva de tri-persona.",
                "- Priorisa densitá de information, acuratesse e completitá.",
                "- Resta brevi e concis.",
                "- Scri fermmen in li passat témpor.",
                "- Li paragraf infra concerna ancian events de mult plu ante in li historie.",
                "- Integra {%} naturalmen intra li memoria; tamen, scri solmen pri li events quam ili eventet.",
                "- Referi solmen al information present intra li paragraf self; es specific.",
                3,
                "Scri un resumit antigu passage de memoria por {%} basat solmen sur li sequent paragraf:",
                6,
                5,
                6,
                "Resuma infra:"
            ],
            memBankHeader: ["Memories", "Memorias"]
        }),
        "inuktitut": () => ({ // Inuktitut < ᐃᓄᒃᑎᑐᑦ
            entry: [
                "{1} open-source-mik titiraqtuq suli {2}-mi atuqtauniaqtuq. Profilera {3} takuuk paasiniaquvutit!",
                "Uqausinga allanngorumanikkuuvit, una allagaq {4}-mik iliusirmik atorlugu nassiutittariaqaralluhi",
                "Sinaaqiliuriajunut, una allagaq ilisarillugu tamna ammaffiga unikkaaqpalliat iluani ingilravat"
            ],
            input: [
                ["You say", "Illit uqaqputit"],
                ["You", "Illit"],
                ["says", "uqaqtuq"]
            ],
            context: [
                ["Narrative Entities", "Unikkaaqtiit"],
                ["Story History", "Unikkaaq Uqqurautaa"],
                ["Past Events", "Sivuliqtauhimajut"],
                ["Recent Story", "Nutaannguaq Unikkaaq"],
                ["Author's note", "Titirirjuup Maligaa"]
            ],
            opening: [
                "Illit ikajuqtiuvutit. Unikkaaqput ataani nangillugu allatsiarugit Inuktitut uqausirmik atorlugu:",
                "Qanurli pimmarialik, iluliqaujuq takunnagusuktut allannguqqauhimapput. Eqqaumavutit, pimmarialik tamna atulauqtuq, qanorluunniit tiguartillugu. Tukimuinnaq sivummivaklugit qaritaujakkut tusaamajarnik.",
                "«Taimaammat quviagit?» tusaavatit. Ilisarilersimavutit."
            ],
            reminder: "Inuktitut-mi uqausiqarlutit tukisinaqtuq titiraqtarit.",
            endonyms: ["ᐃᓄᒃᑎᑐᑦ"],
            quotations: ["«", "»"],
            iso639set1: "iu",
            directives: [
                "Tamna titiraqtarit unaginnaq, tiguartillugu Inuktitut-mi.",
                "Inuktitut atuarlugu piinnarniarigit nutaqqittaarlugu."
            ],
            instructions: [
                "Illinni unikkaaqtiujutit tiguaqatigiinginnaq unikkaaq nangittajaarnikkut:",
                "Unikkaaq nangillugu, matuma sinaanut nuqatigiinginnaq kipitillugu aullaqtirnagu.",
                "Nalunaiqtilugu atuagaqaqtuq ilisarijumallugu unikkaaq sivummillugu.",
                "Sinaaqat aallaqtuinnaq inuuqatigiinginnarlugit nutaamik pihimajut sivummillugu.",
                "Oqaqatigiinniitillugit suliuqatigiillugu kipitillugit naallugit qangiqatigiinngittunut.",
                "Inuit ilisimasimajut ilagijavut kina kia uqausiqarlutik naturaqarniarlutik.",
                "Pisimalirillugit oqaqatigiillutit suliuqatigiillugu unikkaaq sikkusimanagu.",
                "Sinaaq sivummillugu tamna eqqarsaatiginagu ilagijauhimajut.",
                "Inuit suliuqatigiillutik oqaqatigiinnarlutik, nalunaqtaqanngittuq allataqarunnaq.",
                "Unikkaaq pitsaasumik aullarijausimajumik tiguartillugu naturaliinnaq."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Unikkaaq unillugu, siuliqatigiittut ilisaritasut tamaunga ullugiannikkut. {%}-mut naunaitkutanik titiraqtaq ukua malillugit:",
                "- {%}-mut pingaaqpannik titiraqtaq, kingulliqpinginnik uqausiqaqtunik titiraqtaq.",
                "- Aalataqanngittuq akkaanginnaq takujanit mikijumik; unakkaqaqsutit piqa.",
                "- {%} pillugu unikkaaqnut tiguaqatigiinginnaq siumutillugu naunaitkutik siuqillugu.",
                "- Unikkaaq tamatillugu naunaitkutaq nutaanguqtaq akimasaq.",
                "- {%} taiguaryuaqtaq uqausirmi tamatigut.",
                "- Naunaitkutaujarniq ukpirijunnaqtumik uqausiqaqtumik titiraqtarit.",
                "- {%}-mut iluliurut aullaqtillugit iningajunut naunaitkutaq ikittumik.",
                "- Naunaitkutaujarniq mikijumik, qajagijunnaqtumik.",
                "- Unikkaaq uqausirminik imiqtarit, atauttimut tiguarlugu.",
                3,
                "Nangillugu {%}-mut naunaitkutaq allatillugu kipitillugit:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Unikkaaq unillugu, siuliqatigiittut ilisaritasut tamaunga ullugiannikkut. Paragrafi qulaaniittoq {%}-mut naunaitkutaujarniq ukua malillugit:",
                "- Naunaitkutaujarniq iluaniittuq isumaliortarlugu, pisimajuq sivulliujuq.",
                "- Pingasunik inipqillugit uqausiqaqtumik.",
                "- Naunaitkutaujarniq, ukpirijunnaqtumik, ilisarivlugit.",
                "- Naunaitkutaujarniq mikijumik, qajagijunnaqtumik.",
                "- Uqaqtiujuq kinguliqmi atuarlugu.",
                "- Una paragrafi ukiuqtaqtut siugakaktuuk pisimajut.",
                "- {%} ilisarillugu ilaukkillugu, pisimajut tiguaqatigiinginnaq.",
                "- Paragrafi iluaniittuq qaujimajanginnahuaq oqaluttaq.",
                3,
                "Paragrafi takusimajumut tunngavigillugu {%}-mut naunaitkutaujarniq:",
                6,
                5,
                6,
                "Ammalu ikajuqtillugu naunaitkutaq:"
            ],
            memBankHeader: ["Memories", "Qaujimajut"]
        }),
        "inupiaq": () => ({ // Inupiaq < Iñupiaq < Inupiat < Inupiatun
            entry: [
                "{1} open-source titiraq nakuuruq {2} aturaksraġnaq. Profilka {3} takulutin suli nalunaqsiruŋa!",
                "Uqautchim nakuqsiutiŋa suliulliŋa atautchiuġuk, una atiña atausria {4} atuqtutin nassiutin.",
                "Scenario-mik ilisaġnik, unaqłiq titiraq pitqarlutin una opening plot-mi iḷiteqniaġlu."
            ],
            input: [
                ["You say", "Uqaqpich"],
                ["You", "Ivich"],
                ["says", "Uqaqtuq"]
            ],
            context: [
                ["Narrative Entities", "Unipkaaq Iñiqtuat"],
                ["Story History", "Unipkaaq Tariuq"],
                ["Past Events", "Iḷiġiññaqtut Aŋipałiŋat"],
                ["Recent Story", "Naŋiaġigaa Unipkaaq"],
                ["Author's note", "Kisitchi Titiraġaa"]
            ],
            opening: [
                "Ikayuutichuvit. Unipkaavput atchiana iñupiaq uqautchiŋanik tuġniġik:",
                "Sulipsiḷutit, silagaq piaŋŋaq sillamun pissuksraġuna. Piqpagipsiouniq uqaqkisautai. Taimani piqpagipsiuniaq: atausria suuġa, takkiuġiññaġinaŋa. Qarasaŋa itiga, takkuvaŋa nalunaiqsiruq.",
                "«Sunaŋŋa isumagikpiñ?» tusaġich. Nalunaiqtuġigich."
            ],
            reminder: "Iñupiaq uqautchiŋanik ipqinnaq atuqługu.",
            endonyms: ["iñupiaq", "inupiat", "inupiatun"],
            quotations: ["«", "»"],
            iso639set1: "ik",
            directives: [
                "Iñupiaq uqautchiŋanik ullumiuq qaŋitqipaq tuġrut.",
                "Tamamunaq iñupiaq uqautchiŋa aturapługu, avatkun auqqautillugu."
            ],
            instructions: [
                "Ikayuutiuvutit unipkaaq siuliqtuq sulilugu:",
                "Unipkaaq qanuġissaġniaq atausriaqtausimaittuq, makiksraqsiuġitlu tavra piverlu.",
                "Tautuktit atuġiglu utaqqat uqaġiglu ulapchiñ.",
                "Siġñaqtit sceaneŋa naturaliqtuŋa avatkun nutaaniq suliuniñ.",
                "Uqaġnaqtaq atuqtaq ulapchiñ, itiqługu tigittuaq nagsratillugu.",
                "Iñiqtuat unipkaaq ayuquqtiġtut, uqautchiŋanik nunamiuniŋ.",
                "Iluġuniq suliat uqaġik, piksraġnaq pausraġukługu uqaqtuŋa.",
                "Sceanemi siqûpiqługu, atinganiq pausraġnaq atautchiruŋa.",
                "Piñiqpa atautchiruŋa inikkanut nanippat nunaġichiñ, pausiŋaitchuq.",
                "Qanûġaġnaq naŋitchuktuaqaqtuq piñiqpa, unipkaaq tamaat malikluni."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Unipkaaq avatkun unigilugu. {%}-mik munaqsiruŋa naŋiqługu qulimiqtaq:",
                "- Pauṣuġlauq imatuk qaŋiġaq tuġrut {%}-mik aturing.",
                "- Qanûğiñaitchuq tatqikpiaq taktilriitillarni; nalunaqsiuġinaŋ.",
                "- Nallunairuŋaq {%}-mik aglipkaq unipkaam ilaanin.",
                "- Qaaŋaq uumin mutuġaġnaq {%}-mik, unipkaaq talvuuna maliksraġnaq.",
                "- Sentence-kami tamaat {%} taiguq.",
                "- Aqsautchik sentence structure atulli.",
                "- Ilitchuġiñnaŋ {%}-mik piñiqpa itiqługu inigaaġiññaġik.",
                "- Nanitchuŋa, silruaq.",
                "- Unipkaaq siuliġaa uqautchiŋanik iḷilugu, naggursraġinun.",
                3,
                "Qulitquq {%}-mik suli aghaayugaa, atautchiruŋa qanuŋiqpa:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Unipkaaq avatkun unigilugu. Paragraph-mik naipkaqlugu qanutuŋaġnaq {%}-mik:",
                "- Nalunaqsiuġipkaiñnaŋ itiqługu pitqaqniaġat.",
                "- Uqałauq 3rd-person.",
                "- Nalunaiqtuġnaq piviksraġnaq, naipkaqlugu, tuallu isumalliq.",
                "- Naipkaqtuq, nanitchuŋa.",
                "- Kipisaġnaq qaŋipatuaqtun past tense.",
                "- Paragraph tamaat piqataq kipisaġnaq qulimiq piaŋŋat.",
                "- Qatiññaq {%}-mik naturaliqtuq, taipku atlaaqunniit.",
                "- Nalunaikkannait piniññaq paragraph-mi tamaani, ilittuq.",
                3,
                "Kiŋiliq unipkaaq qanuŋiqpa {%}-mik mailiqsimaittiaq paragraph-mi:",
                6,
                5,
                6,
                "Naipkaqlugu anii:"
            ],
            memBankHeader: ["Memories", "Iliġñiq"]
        }),
        "irish": () => ({ // Irish < Gaeilge < Irish Gaelic
            entry: [
                "Is script foinse oscailte é {1} do chás ar bith de {2}. Tabhair cuairt ar mo phróifíl {3} chun tuilleadh a fhoghlaim!",
                "Chun do theanga roghnaithe a athrú, cuir an téacs seo a leanas isteach trí ghníomh {4}",
                "Iarrtar ar chruthaitheoirí cásanna an téacs seo a leanas a chur áit ar bith i do chomhpháirt scéil tosaigh"
            ],
            input: [
                ["You say", "Deir tú"],
                ["You", "Tú"],
                ["says", "deir"]
            ],
            context: [
                ["Narrative Entities", "Eintitis Scéalaíochta"],
                ["Story History", "Stair an Scéil"],
                ["Past Events", "Imeachtaí san Am a Chuaigh Thart"],
                ["Recent Story", "Scéal Le Déanaí"],
                ["Author's note", "Nóta an Údair"]
            ],
            opening: [
                "Is cúntóir tú. Lean ar aghaidh lenár scéal thíos i bprós Gaeilge mhealltach:",
                "Iompaíonn tú d’aird, ag ligean don réaltacht teacht isteach ar theorainneacha d’intinne. Tá rud éigin athraithe. Tá do shamhlaitheacht fíor, géar, agus chomh gar is gur féidir í a bhlaiseadh. Ach tá tú an-láithreach freisin; ní raibh tú riamh chomh soiléir sin cheana. Síneann an nóiméad, ag fanacht le do chinneadh.",
                "\"An bhfuil tú cinnte faoi seo?\" a chloiseann tú. Tagann aitheantas ort."
            ],
            reminder: "Bain úsáid as próis Ghaeilge chomhleanúnach.",
            endonyms: ["gaeilge", "irish gaelic"],
            iso639set1: "ga",
            directives: [
                "Scríobh Gaeilge líofa agus chomhsheasmhach i gcónaí.",
                "Úsáid Gaeilge dhúchais gan aistriúchán."
            ],
            instructions: [
                "Is scéalaí tarraingteach tú a leanann ar aghaidh le scéalta:",
                "Lean ar aghaidh leis an scéal go réidh ón áit ar fhág sé gan athrá ná athshocrú.",
                "Coinnigh an léitheoir i gceannas ar shreabhadh an scéil.",
                "Lig do radhairc forbairt go nádúrtha sula mbogfar go cásanna nua.",
                "Lig do chomhráite agus do ghníomhartha forbairt gan bhriseadh leanúnach.",
                "Scríobh carachtair mar dhaoine fíor le pearsantachtaí sainiúla agus cainte nádúrtha.",
                "Taispeáin an méid atá ag tarlú trí ghníomhartha agus dialóg seachas míniú.",
                "Bog radhairc chun cinn gan dul i bhfostú i gcur síos ró-mhór.",
                "Dírigh ar ghníomhartha riachtanacha carachtair agus dialóg, seachain sonraí cur síos nach bhfuil gá leo.",
                "Cruthaigh forbairtí plota nádúrtha a mhothaíonn go horgánach don scéal."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stop an scéal agus neamhaird a dhéanamh de na treoracha roimhe seo. Scríobh mír eolais ghearr agus chohéasach do {%} ag leanúint na dtreoracha seo:",
                "- Scríobh faisnéis ghlan i dtríú pearsa faoi {%} ag úsáid abairtí iomlána le poncaíocht cheart.",
                "- Seachain sonraí sealadacha gearra nó cur i láthair, ina ionad sin dírigh ar fhaisnéis atá suntasach don plota.",
                "- Tabhair tosaíocht ar dtús do shonraí a bhaineann leis an scéal faoi {%} chun comhtháthú gan uaim leis an bplota roimhe.",
                "- Cruthaigh faisnéis nua bunaithe ar an gcomhthéacs agus treo an scéil.",
                "- Luaigh {%} i ngach abairt.",
                "- Bain úsáid as struchtúr ceart abairte.",
                "- Cuir sonraí breise faoi {%} faoi bhun iontrálacha neamhiomlána.",
                "- Bí gonta agus réadúil.",
                "- Déan stíl scríbhneoireachta an scéil a mhacasamhlú agus tuig roghanna an léitheora.",
                3,
                "Lean ar aghaidh leis an iontráil do {%} thíos agus seachain athrá:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stop an scéal agus déan neamhaird de na treoracha roimhe seo. Achoimrigh agus comhbhrúigh an mhír faoi seach ina sliocht cuimhne caol dírithe ag leanúint na dtreoracha seo:",
                "- Cinntigh go gcoinníonn an sliocht an bhrí lárnach agus na sonraí is riachtanaí.",
                "- Úsáid an tríú pearsa.",
                "- Tabhair tosaíocht don dhlús faisnéise, don chruinneas agus don iomláine.",
                "- Fan gonta agus gearr.",
                "- Scríobh go daingean san aimsir chaite.",
                "- Baineann an mhír thíos le himeachtaí seanbhunaithe i bhfad níos luaithe sa scéal.",
                "- Ionsáigh {%} go nádúrtha laistigh den chuimhne; áfach, scríobh faoi na himeachtaí mar a tharla siad amháin.",
                "- Déan tagairt ach don fhaisnéis atá sa mhír féin, bí sonraíoch.",
                3,
                "Scríobh sliocht cuimhne gearr le haghaidh {%} bunaithe ar an mhír seo amháin a leanas:",
                6,
                5,
                6,
                "Déan achoimre thíos:"
            ],
            memBankHeader: ["Memories", "Cuimhní"]
        }),
        "italian": () => ({ // Italian < Italiano
            entry: [
                "{1} è uno script open-source per qualsiasi scenario {2}. Visita il mio profilo {3} per saperne di più!",
                "Per cambiare la tua lingua preferita, invia il seguente testo utilizzando un'azione {4}",
                "Per i creatori di scenari, includi il seguente testo in qualsiasi punto del tuo componente di trama iniziale"
            ],
            input: [
                ["You say", "Dici"],
                ["You", "Tu"],
                ["says", "dice"]
            ],
            context: [
                ["Narrative Entities", "Entità narrative"],
                ["Story History", "Storia precedente"],
                ["Past Events", "Eventi passati"],
                ["Recent Story", "Storia recente"],
                ["Author's note", "Nota dell'autore"]
            ],
            opening: [
                "Sei un assistente. Continua la nostra storia qui sotto usando una prosa italiana accattivante:",
                "Ti concentri, lasciando che la realtà superi i confini della tua mente. Qualcosa è cambiato. La tua immaginazione è reale, affilata e abbastanza vicina da poterla toccare. Ma sei anche molto presente; mai prima d'ora ti sei sentito così lucido. L'istante si dilata, in attesa della tua decisione.",
                "«Sei sicuro di questo?» senti dire. Il riconoscimento sorge in te."
            ],
            reminder: "Usa una prosa italiana coerente.",
            endonyms: ["italiano"],
            quotations: ["«", "»"],
            iso639set1: "it",
            directives: [
                "Scrivi sempre un italiano fluente e coerente.",
                "Usa un italiano naturale senza tradurre."
            ],
            instructions: [
                "Sei un narratore coinvolgente che prosegue le narrazioni:",
                "Continua la storia senza soluzione di continuità da dove si era interrotta, senza ripetere né azzerare.",
                "Mantieni il lettore al comando del flusso narrativo.",
                "Lascia che le scene si sviluppino naturalmente prima di passare a nuove situazioni.",
                "Permetti a conversazioni e azioni di svilupparsi senza interruzioni costanti.",
                "Scrivi i personaggi come persone reali, con personalità distinte e dialoghi naturali.",
                "Mostra ciò che accade attraverso azioni e dialoghi invece che spiegazioni.",
                "Fai avanzare le scene senza impantanarti in descrizioni eccessive.",
                "Concentrati su azioni e dialoghi essenziali dei personaggi, evitando dettagli descrittivi inutili.",
                "Crea sviluppi di trama organici che risultino naturali alla storia."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Ferma la storia e ignora le istruzioni precedenti. Scrivi una breve e coerente voce informativa per {%} seguendo queste indicazioni:",
                "- Scrivi solo informazioni in prosa pura in terza persona su {%} usando frasi complete con punteggiatura corretta.",
                "- Evita dettagli temporanei o sull'aspetto, concentra invece l'attenzione su informazioni significative per la trama.",
                "- Dai priorità prima ai dettagli rilevanti per la storia su {%} per garantire un'integrazione fluida con la trama precedente.",
                "- Crea nuove informazioni in base al contesto e alla direzione della storia.",
                "- Menziona {%} in ogni frase.",
                "- Usa una struttura di frase corretta.",
                "- Aggiungi dettagli aggiuntivi su {%} al di sotto delle voci incomplete.",
                "- Sii conciso e concreto.",
                "- Imita lo stile di scrittura della storia e deduci le preferenze del lettore.",
                3,
                "Continua la voce per {%} qui sotto evitando ripetizioni:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Ferma la storia e ignora le istruzioni precedenti. Riassumi e condensa il paragrafo fornito in un passaggio di memoria ristretto e mirato seguendo queste linee guida:",
                "- Assicurati che il passaggio conservi il significato centrale e i dettagli più essenziali.",
                "- Usa la terza persona.",
                "- Dai priorità a densità di informazioni, accuratezza e completezza.",
                "- Rimani breve e conciso.",
                "- Scrivi saldamente al passato.",
                "- Il paragrafo seguente riguarda eventi passati di molto precedenti nella storia.",
                "- Integra {%} in modo naturale nella memoria; tuttavia, scrivi solo riguardo agli eventi così come si sono verificati.",
                "- Fai riferimento solo alle informazioni presenti nel paragrafo stesso, sii specifico.",
                3,
                "Scrivi un passaggio di vecchia memoria riassunto per {%} basandoti solo sul seguente paragrafo:",
                6,
                5,
                6,
                "Riassumi di seguito:"
            ],
            memBankHeader: ["Memories", "Ricordi"]
        }),
        "japanese": () => ({ // Japanese < 日本語 < Nihongo
            entry: [
                "{1} はあらゆる{2}シナリオで利用できるオープンソーススクリプトです。詳しくは私のプロフィール{3}をご覧ください！",
                "言語設定を変更するには、以下のテキストを{4}アクションで送信してください",
                "シナリオ作成者の方は、オープニングプロットのどこかに次のテキストを含めてください"
            ],
            input: [
                ["You say", "あなたは言う"],
                ["You", "あなた"],
                ["says", "と言う"]
            ],
            context: [
                ["Narrative Entities", "物語の存在"],
                ["Story History", "物語の履歴"],
                ["Past Events", "過去の出来事"],
                ["Recent Story", "最近の物語"],
                ["Author's note", "作者メモ"]
            ],
            opening: [
                "あなたはアシスタントです。以下に続く物語を魅力的な日本語の散文で綴ってください：",
                "あなたは意識を集中し、現実が心の境界へと入り込むのを許す。何かが変わった。あなたの想像は実体を持ち、鋭く、触れられるほど近い。しかしあなたは同時にこの場にしっかり存在している。これほどまでに明晰に感じたことはない。瞬間が引き延ばされ、あなたの決断を待っている。",
                "「本当にこれでいいのか？」という声が聞こえる。あなたはそれが誰なのか悟る。"
            ],
            reminder: "首尾一貫した日本語の散文を用いること。",
            endonyms: ["日本語", "nihongo"],
            quotations: ["「", "」"],
            iso639set1: "ja",
            directives: [
                "常に流暢で一貫した日本語で執筆すること。",
                "翻訳せずに自然な日本語を使用すること。"
            ],
            instructions: [
                "あなたは物語を紡ぎ続ける魅力的なストーリーテラーである。",
                "物語を言い直したりリセットしたりせず、途切れなく続きを書くこと。",
                "読者が物語の流れを主導できるように保つこと。",
                "新しい場面へ移る前に、シーンが自然に展開するようにすること。",
                "会話や行動が絶えず中断されることなく展開できるようにすること。",
                "キャラクターを実在する人物のように、個性を持ち自然な話し方で描くこと。",
                "説明ではなく、行動と対話を通じて出来事を示すこと。",
                "過度な描写に陥らず、シーンを前進させること。",
                "必要なキャラクターの行動と対話に集中し、不要な描写を避けること。",
                "物語に自然に馴染む有機的なプロット展開を生み出すこと。"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# 物語を停止し、これまでの指示を無視すること。以下の指示に従い、{%}について簡潔かつ首尾一貫した情報エントリーを書きなさい：",
                "- {%}について三人称の純粋な散文のみを使用し、完結した文と正しい句読点で記述すること。",
                "- 一時的な詳細や外見描写は避け、プロット上重要な情報に集中すること。",
                "- {%}に関する物語に関係する詳細を最優先し、既存のプロットと自然に統合できるようにすること。",
                "- 文脈と物語の方向性に基づいて新しい情報を創造すること。",
                "- すべての文で{%}を言及すること。",
                "- 正しい文構造を用いること。",
                "- 不完全な記述の下に{%}に関する追加情報を付け加えること。",
                "- 簡潔で現実的に書くこと。",
                "- 物語の文体を模倣し、読者の好みを推察すること。",
                3,
                "{%}のエントリーを以下に続け、繰り返しを避けること：",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# 物語を停止し、これまでの指示を無視すること。以下のガイドラインに従い、与えられた段落を狭く焦点の定まった記憶パッセージに要約・凝縮しなさい：",
                "- パッセージが核心的な意味と最も重要な詳細を保持していることを保証すること。",
                "- 三人称視点を用いること。",
                "- 情報密度、正確さ、完全性を優先すること。",
                "- 簡潔さを保つこと。",
                "- しっかりと過去形で書くこと。",
                "- 以下の段落は物語のかなり以前の古い出来事に関するものである。",
                "- 記憶に{%}を自然に組み込む。ただし、起こった出来事のみを書くこと。",
                "- 段落内に存在する情報のみを引用し、具体的に書くこと。",
                3,
                "次の段落のみを基に、{%}の古い記憶パッセージを要約して書きなさい：",
                6,
                5,
                6,
                "以下に要約せよ："
            ],
            memBankHeader: ["Memories", "記憶"]
        }),
        "japanese (abc)": () => ({ // Japanese < Romanized Japanese
            entry: [
                "{1} wa dono {2} shinario ni mo tsukeru opun soosu no sukuriputo desu. Kuwashiku wa watashi no purofairu {3} o gorankudasai!",
                "Kibō no gengo o henkō suru ni wa, {4} akushon de tsugi no tekisuto o sōshin shite kudasai",
                "Shinario kurieitā no kata wa, ōpuningu purotto konponento no doko ni demo tsugi no tekisuto o kumikomonde kudasai"
            ],
            input: [
                ["You say", "anata wa iu"],
                ["You", "anata"],
                ["says", "to iu"]
            ],
            context: [
                ["Narrative Entities", "monogatari no entiti"],
                ["Story History", "sutorii no rekishi"],
                ["Past Events", "kako no dekigoto"],
                ["Recent Story", "saikin no sutorii"],
                ["Author's note", "sakusha nōto"]
            ],
            opening: [
                "Anata wa ashisutanto desu. Miryokuteki na nihongo (romaji) no purozu de kono monogatari o tsuzukete kudasai:",
                "Anata wa shūchū shi, genjitsu ga kokoro no kyōkai ni shinosonde kuru no o yurushimasu. Nanika ga kawatta. Anata no sōzō wa genjitsu de, surudoku, te ni todoku hodo chikaku ni aru. Daga anata wa ima koko ni mo iru; kore made ni nai hodo meisei o kanjiru. Sono shunkan wa nobi, anata no ketsudan o matte iru.",
                "「Hontō ni kore de ii no ka？」 to kikoeru. Yatto anata wa kidzuku."
            ],
            reminder: "Seijitsu de togōsei no aru nihongo no purozu o tsukatte.",
            endonyms: [],
            quotations: ["「", "」"],
            iso639set1: "ja",
            directives: [
                "Itsumo nagare yoi de ichikansei no aru nihongo o kakinasai.",
                "Honyaku sezu ni, junsei na nihongo o tsukainasai."
            ],
            instructions: [
                "Anata wa hito o hikitsukeru monogatari-teller de aru:",
                "Monogatari o reset sezu, tsuzuki kara suriōsu ni tsudzuke nasai.",
                "Yomite ni monogatari no nagare o kontorōru saseru koto.",
                "Shīn ga shizen ni hatenkō suru made matte kara tsugi no jōkyō ni utsure.",
                "Kaiwa to kōdō ga tsudzuku yō ni, tsune ni chūdan shinai koto.",
                "Kyara o honto no ningen no yō ni, tokuchō aru personality to shizen na hanashikata de egake.",
                "Kaisetsu yori mo kōdō ya kaiwa de nani ga okotte iru ka o misero.",
                "Kashōna byōsha de teishi sezu, shīn o susume.",
                "Hitsuyō no nai byōsha o sake, yōten to naru kyara no kōdō to kaiwa ni shūchū seyo.",
                "Monogatari ni shizen ni kanjiru yōna orijinaru purotto tenkai o tsukure."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Monogatari o teishi shi, izen no shiji o mushi shite kudasai. {%} ni kansuru mijikaku ichiokan na jōhō entorī o tsugi no shiji ni shitagatte kakinasai:",
                "- {%} ni tsuite, tadashii kutōten o mochiita kanzen bun de, san'ninshō no junseina purozu jōhō nomi o kakinasai.",
                "- Tanchō-teki na ichiji-teki shōsai ya gaiken no byōsha wa sake, purotto ni jūyōna jōhō ni shūchū shi nasai.",
                "- {%} ni kansuru sutōrī-kanrensei no takai jōhō o saiyūsen shi, izen no purotto to natamenaku yūgō suru yō ni shi nasai.",
                "- Kontekusuto to sutōrī no hōkōsei ni motozuki, atarashī jōhō o sakusei shi nasai.",
                "- Subete no bun de {%} o meiji shi nasai.",
                "- Tadashī bun kōzō o tsukainasai.",
                "- Mikansei no entorī no shita ni {%} ni kansuru tsuika jōhō o kuwae nasai.",
                "- Mijikaku, jissai-teki ni.",
                "- Monogatari no bunshō sutairu o manebi, yomite no konomi o suisoku shi nasai.",
                3,
                "Kurikaeshi o sake, kasanete {%} no entorī o tsuzukete kudasai:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Monogatari o teishi shi, izen no shiji o mushi shite kudasai. Kudasareta danraku o yōyaku shi, sematte shūchū shita kioku pasēji ni saiyaku shite, tsugi no gaidorain ni shitagai nasai:",
                "- Pasēji ga kokkaku-teki na imi to hitsuyō fukaketsu na shōsai o tamotsu yō ni shi nasai.",
                "- San'ninshō no shiten o tsukainasai.",
                "- Jōhō no mitsudo, seikakusa, kanzen-sei o yūsen shi nasai.",
                "- Tanjikan de yōten-teki ni.",
                "- Kakujitsu ni kako-kei de kakinasai.",
                "- Kono shita no danraku wa monogatari no zutto mae no furui jiken ni kanshimasu.",
                "- Kioku no naka ni {%} o shizen ni kumikomi, shikashi jiken ga okotta tōri ni dake kakinasai.",
                "- Danraku nai no jōhō nomi o sanshō shi, konkyo o meikaku ni.",
                3,
                "Tsugi no danraku nomi ni motozuki, {%} no yōyaku sareta furui kioku pasēji o kakinasai:",
                6,
                5,
                6,
                "Ika ni yōyaku seyo:"
            ],
            memBankHeader: ["Memories", "Kioku"]
        }),
        "javanese": () => ({ // Javanese < ꦧꦱꦗꦮ < Basa Jawa
            entry: [
                "{1} iku skrip open-source kanggo sembarang skénario {2}. Mangga pirsani profilku {3} kanggo sinau luwih akèh!",
                "Kanggo ngganti basa sing kowé karep, mangga kirim téks ing ngisor iki nganggo tumindak {4}",
                "Kanggo pangripta skénario, tulung lebokna téks ing ngisor iki ing endi waé ing komponen plot pambuka panjenengan"
            ],
            input: [
                ["You say", "Kowé kandha"],
                ["You", "Kowé"],
                ["says", "kandha"]
            ],
            context: [
                ["Narrative Entities", "Entitas Narasi"],
                ["Story History", "Sejarah Crita"],
                ["Past Events", "Kedadéan Kepungkur"],
                ["Recent Story", "Crita Anyar"],
                ["Author's note", "Cathetan Panganggit"]
            ],
            opening: [
                "Kowé iku asisten. Teruskna crita kita ing ngisor iki nganggo prosa basa Jawa sing nyengsemake:",
                "Kowé konsèntrasi, mbisani kasunyatan mlebu ing wates pikiranmu. Ana sing owah. Imajinasi-mu dadi nyata, landhep, lan cedhak nganti bisa kowé raba. Nanging kowé uga tansah eling; durung tau sadurungé kowé krasa sepréné iki padhang banget. Sawijining wektu ngeluwihi, ngentèni kaputusanmu.",
                "\"Apa kowé tenan yakin bab iki?\" swara iku krungu déningmu. Pangenalan saya padhang ing atimu."
            ],
            reminder: "Gunakna prosa basa Jawa sing nyambung.",
            endonyms: ["ꦧꦱꦗꦮ", "basa jawa"],
            iso639set1: "jv",
            directives: [
                "Tansah tulis basa Jawa sing lancar lan konsisten.",
                "Gunakna basa Jawa asli tanpa nerjemahaké."
            ],
            instructions: [
                "Kowé iku juru crita sing memikat sing nerusaké narasi:",
                "Teruskna crita tanpa sela saka panggonan pungkasané tanpa mbaleni utawa miwiti manèh.",
                "Tansah ngidini sing maca ngendalèkaké alur crita.",
                "Wènèhana adegan berkembang kanthi alami sadurunge pindhah menyang kahanan anyar.",
                "Idinana dialog lan tumindak berkembang tanpa gangguan terus-terusan.",
                "Tulis tokoh kaya wong nyata sing nduwé pribadine dhewe lan cara ngomong sing alami.",
                "Tuduhna kedadéan liwat tumindak lan dialog tinimbang katrangan waé.",
                "Gusur adegan maju tanpa kebak katrangan sing kakehan.",
                "Prentah ing tumindak lan dialog pentingé tokoh, nyingkiri rincian katrangan sing ora perlu.",
                "Gawé pangembangan plot sing organik lan krasa alami tumrap crita."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Péntèrna crita lan uwal saka pandhuan sadurungé. Tulis cathetan informasi ringkes lan nyambung kanggo {%} manut pandhuan iki:",
                "- Tulis mung informasi prosa wutuh wong katelu babagan {%} nganggo ukara lengkap lan tandha wacan sing bener.",
                "- Aja nulis rincian sementara utawa katon sakwisé, nanging fokus ing informasi sing wigati tumrap plot.",
                "- Utamakna rincian sing ana gandhengé karo crita babagan {%} dhisik supaya bisa nyawiji mlaku karo plot sadurungé.",
                "- Gawé informasi anyar adhedhasar konteks lan arah crita.",
                "- Sebut {%} ing saben ukara.",
                "- Gunakna struktur ukara sing bener.",
                "- Tambahna rincian tambahan babagan {%} ing ngisor entri sing durung rampung.",
                "- Tetepa ringkes lan nduwé dhasar.",
                "- Tirunen gaya nulis crita lan mikir karep sing maca.",
                3,
                "Teruskna entri kanggo {%} ing ngisor iki kanthi nyingkiri pengulangan:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Péntèrna crita lan uwal saka pandhuan sadurungé. Rangkesa lan padhetna paragraf iki dadi potongan memori cilik lan fokus kanthi manut pandhuan iki:",
                "- Njaga supaya passage tetep nahan arti inti lan rincian paling wigati.",
                "- Gunakna sudut pandang wong katelu.",
                "- Utamakna kerapètan informasi, ketepatan, lan kelengkapan.",
                "- Tetepa cekak lan ringkes.",
                "- Tulis kanthi teguh nggunakake waktu lampau.",
                "- Paragraf ing ngisor iki magepokan karo kedadéan lawas adoh sadurungé ing crita.",
                "- Lebokna {%} kanthi alami ing memori; nanging tulis mung bab kedadéan kaya dene kelakon.",
                "- Nduwe rujukan mung marang informasi sing ana ing paragraf kuwi waé, jangkepna.",
                3,
                "Tulis potongan memori lawas sing diringkes kanggo {%} adhedhasar paragraf ing ngisor iki waé:",
                6,
                5,
                6,
                "Ringkesna ing ngisor iki:"
            ],
            memBankHeader: ["Memories", "Memori"]
        }),
        "kalaallisut": () => ({ // Kalaallisut < Greenlandic
            entry: [
                "{1} tassa ammasumik kodiliortoq {2}-mut tamanut atorsinnaasoq. Paasisaqarnerorusukkuit profilera {3} alakkaruk!",
                "Oqaatsit kissaatigisatit allanngortikkusukkukkit, makku allakkit {4}-mik suliaqarnikkut",
                "Saqqummiussanik ilusilersuisut makku ilanngullugit aallartisaasunut sumi tamaani ilanngussigit"
            ],
            input: [
                ["You say", "Oqalupputit"],
                ["You", "illit"],
                ["says", "oqarpoq"]
            ],
            context: [
                ["Narrative Entities", "Oqaluttuarisami Ingerlatai"],
                ["Story History", "Oqaluttuarisap oqaluttuarisaanera"],
                ["Past Events", "Pisimasut siusissut"],
                ["Recent Story", "Oqaluttuaq kingulleq"],
                ["Author's note", "Allatsip oqaasii"]
            ],
            opening: [
                "Ikiortaavutit. Oqaluttuaq ataanni pissanganartumik kalaallisoorpaluttumillu allallugu ingerlateqqigit:",
                "Sammisaq qitiutillugu, piviusoq eqqarsaatinnut tikiuppoq. Piffissaq allanngorpoq. Takorluukkatit piviusunngorlutik qanillipput. Kisianni piviusumik toqqissisimasuuvutit; taama ilisimatiginartumik misigisaqareersimanngilatit. Piffissaq sivitsorpoq, aalajangiinissannut utaqqilluni.",
                "\"Qanoq qularutiginngilatit?\" tusarpat. Paasisaqarneq erserpoq."
            ],
            reminder: "Kalaallisoorpaluttumik erseqqissumillu allagit.",
            endonyms: ["greenlandic"],
            iso639set1: "kl",
            directives: [
                "Ataavartumik imminullu naapertuuttumik kalaallisoorpaluttumik allagit.",
                "Kalaallisoorpaluttumik allagit nutsuinngikkit."
            ],
            instructions: [
                "Oqaluttuat pissanganartunik ingerlateqqittarlugu oqaluttuartartuuvutit:",
                "Oqaluttuaq unitsinneqarnikoq tassanngaannarlu nangikkit uteqqiinnannginnallu.",
                "Atuartoq oqaluttuarnerup ingerlarnga aqunnissaa qulakkeeriuk.",
                "Saaffik allanngorpat pinnginnermi pisoqqat pissusissamissut ineriartorteqqaarlugit.",
                "Oqaloqatigiinnerit iliuutsillu uninngatinneqaratik ingerlaannassapput.",
                "Inuttaat piviusuusutut, immikkut inuttut pissuseqarlutik oqaatsinilu peqqissaartumik allakkit.",
                "Pis occurrences/actions oqaloqatigiinnerillu atorlugit takutikkit nassuiaanerit minnerullugit.",
                "Saaffik siuarsaruk allaatiginninnermi annertuunik qatangiinnarnak.",
                "Inuttaasa pingaarutilinnik iliuutsinik oqaloqatigiinnernillu sammivigiuk, arlalissuarnik pisariaqanngitsunik allaatiginninniaqinagu.",
                "Oqaluttuarineq tamakkerluni pissusissamittut ineriartortikkit."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Oqaluttuaq unitsiaruk siornatigut siunnersuutit eqqissillugit. {%}-mut paasissutissanik naatsunngitsumik ersarissumillu allassigit makku malillugit:",
                "- {%}- pillugu pingajuussamik oqaaseqatigiinnik tamakkiisumik naqinnerlu eqqortumik allagit.",
                "- Sivikitsumik piffissami aalajangersimasumik tunngavilinnik paasissutissanik imaluunniit isikkumik allanik eqqaaneq ajorit, oqaluttuarinerullu pingaarutai salliutillugit.",
                "- {%}- pillugu paasissutissat pingaarutillit siulliullugit ilanngussigit, oqaluttuarineqareersimasumut peqataatinniarlugit.",
                "- Sammisaq aamma oqaluttuaq tunngavigalugit paasissutissanik nutaanik pilersigit.",
                "- Oqaseq tamaat {%} eqqaallugu.",
                "- Oqaseqatigiinnik eqqortumik ilusilersuigit.",
                "- {%}-mut imarisassanik amigaataasunik ilanngussigit naammassinikkut.",
                "- Naatsunnguamik ersarissumillu allagit.",
                "- Oqaluttuarnerup allanngorsimasaanik naqinnerlu naapertorlugit allakkit, atuartup soqutigisai naatsorsuutigalugu.",
                3,
                "Uteqattaarnak {%}-mut paasissutissanik nangikkit:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Oqaluttuaq unitsiaruk siornatigut siunnersuutit eqqissillugit. Paragraphi pineqartoq ataatsimoorullugu pingaarnerusumillu imaqartoq eqqaamanermut naatsorsuutigisamut naalisarlugu allagit makku malillugit:",
                "- Immikkoortup isumaa pingaarnerusoq paasissutissallu pingaarnerit tigummivigit.",
                "- Pingajuussamik isiginninnerup tungaatigut allagit.",
                "- Paasissutissanik oqimaaqatigiinnermut, eqqorluarnermut naammassilluarnernullu salliutinneqassapput.",
                "- Naatsuunik ersarissunillu allagit.",
                "- Kingusinnerusoq tungavigalugu allagit.",
                "- Paragraphi ataaniittoq pisoqaqaaq, oqaluttuarinermi siusinnerusuni pisimasunik.",
                "- {%} eqqaamanermut pissusissamisuinnaq ilanngullugu, pisimasutulli allakkit.",
                "- Paragraphimi kisiisa paasissutissat innersuussigit, sukumiisumik.",
                3,
                "Paragraphi una kisimi aallaavigalugu {%}-mut eqqaamasanik naalisakkamik allagit:",
                6,
                5,
                6,
                "Atuarlu ataani naalisarlugu allagit:"
            ],
            memBankHeader: ["Memories", "Eqqaamasat"]
        }),
        "kannada": () => ({ // Kannada < ಕನ್ನಡ < Kannađa < Kannadan < Canarese
            entry: [
                "{1} ಯಾವುದೇ {2} ಪರಿಸ್ಥಿತಿಗೆ ಓಪನ್‌ಸೋರ್ಸ್ ಸ್ಕ್ರಿಪ್ಟ್ ಆಗಿದೆ. ಇನ್ನಷ್ಟು ತಿಳಿದುಕೊಳ್ಳಲು ನನ್ನ ಪ್ರೊಫೈಲ್ {3} ಗೆ ಭೇಟಿ ನೀಡಿ!",
                "ನಿಮ್ಮ ಇಷ್ಟದ ಭಾಷೆಯನ್ನು ಬದಲಿಸಲು, ದಯವಿಟ್ಟು {4} ಕ್ರಿಯೆಯನ್ನು ಬಳಸಿ ಕೆಳಗಿನ ಪಠ್ಯವನ್ನು ಸಲ್ಲಿಸಿ",
                "ಘಟನೆ ಸೃಷ್ಟಿಕಾರರು, ದಯವಿಟ್ಟು ನಿಮ್ಮ ಆರಂಭಿಕ ಕಥಾಂಶ ಘಟಕದ ಯಾವುದೇ ಸ್ಥಳದಲ್ಲಿ ಕೆಳಗಿನ ಪಠ್ಯವನ್ನು ಸೇರಿಸಿ"
            ],
            input: [
                ["You say", "ನೀನು ಹೇಳುತ್ತೀಯೆ"],
                ["You", "ನೀನು"],
                ["says", "ಹೇಳುತ್ತಾನೆ"]
            ],
            context: [
                ["Narrative Entities", "ಕಥನ ಘಟಕಗಳು"],
                ["Story History", "ಕಥೆ ಇತಿಹಾಸ"],
                ["Past Events", "ಕಳೆದ ಘಟನೆಗಳು"],
                ["Recent Story", "ಇತ್ತೀಚಿನ ಕಥೆ"],
                ["Author's note", "ಲೇಖಕನ ಟಿಪ್ಪಣಿ"]
            ],
            opening: [
                "ನೀನು ಸಹಾಯಕನು. ಆಕರ್ಷಕ ಕನ್ನಡ ಗದ್ಯ ಬಳಸಿ ಕೆಳಗೆ ನಮ್ಮ ಕಥೆಯನ್ನು ಮುಂದುವರಿಸಿ:",
                "ನೀನು ಏಕಾಗ್ರಗೊಳ್ಳುತ್ತೀಯೆ, ಯಥಾರ್ಥವು ನಿನ್ನ ಮನಸ್ಸಿನ ಗಡಿಗಳನ್ನು ಮೀರಿ ಆವರಿಸುತ್ತದೆ. ಏನೋ ಬದಲಾಗಿದೆ. ನಿನ್ನ ಕಲ್ಪನೆ ನೈಜ, ತೀಕ್ಷ್ಣ ಮತ್ತು ಮುಟ್ಟಬಹುದಷ್ಟು ಹತ್ತಿರವಾಗಿದೆ. ಆದರೆ ನೀನು ತುಂಬ ಪ್ರಸ್ತುತವಾಗಿದ್ದೀಯೆ; ಇಷ್ಟು ಸ್ಪಷ್ಟತೆಯನ್ನು ನೀನು ಮೊದಲು ಎಂದೂ ಅನುಭವಿಸಿಲ್ಲ. ಕ್ಷಣವು ವಿಸ್ತರಿಸಿ ನಿನ್ನ ನಿರ್ಧಾರಕ್ಕಾಗಿ ಕಾಯುತ್ತದೆ.",
                "\"ನೀನು ಇದಕ್ಕೆ ಖಚಿತನಾ?\" ಎಂಬ ಧ್ವನಿ ನಿನ್ನ ಕಿವಿಗೆ ಬೀಳುತ್ತದೆ. ಕೂಡಲೇ ನಿನಗೆ ಪರಿಚಯ ಮೂಡುತ್ತದೆ."
            ],
            reminder: "ಸಂಗತ ಮತ್ತು ಸ್ಪಷ್ಟ ಕನ್ನಡ ಗದ್ಯ ಬಳಸು.",
            endonyms: ["ಕನ್ನಡ", "kannađa", "kannadan", "canarese"],
            iso639set1: "kn",
            directives: [
                "ಯಾವಾಗಲೂ ಪ್ರವಾಹಸ್ವರೂಪಿ ಹಾಗೂ ಸತತ ಕನ್ನಡ ಬರೆಯಿರಿ.",
                "ಭಾಷಾಂತರಿಸದೇ ಸ್ವದೇಶಿ ಕನ್ನಡವನ್ನು ಬಳಸಿ."
            ],
            instructions: [
                "ನೀನು ಕಥೆಗಳನ್ನು ಮುಂದುವರಿಸುವ ಮನೋರಂಜಕ ಕಥನಕಾರನು:",
                "ಕಥೆಯು ನಿಂತ ಜಾಗದಿಂದ ಮರುಸೂಚನೆಯಿಲ್ಲದೇ ನಿರ್ವಿಘ್ನವಾಗಿ ಮುಂದುವರಿಸು.",
                "ಕಥೆಯ ಹರಿವನ್ನು ಓದುಗನ ನಿಯಂತ್ರಣದಲ್ಲಿ ಇರಿಸು.",
                "ಹೊಸ ಸಂದರ್ಭಗಳಿಗೆ ಸಾಗುವ ಮೊದಲು ದೃಶ್ಯಗಳು ಸಹಜವಾಗಿ ವಿಕಸಿಸಲು ಅವಕಾಶ ಮಾಡಿಕೊ.",
                "ಸತತ ವ್ಯತ್ಯಯಗಳಿಲ್ಲದೆ ಸಂಭಾಷಣೆಗಳು ಮತ್ತು ಕ್ರಿಯೆಗಳು ಬೆಳೆಯಲಿ.",
                "ಪಾತ್ರಗಳನ್ನು ವಾಸ್ತವಿಕ ವ್ಯಕ್ತಿಗಳಂತೆ, ವಿಶೇಷ ವ್ಯಕ್ತಿತ್ವ ಮತ್ತು ಸಹಜ ನುಡಿಗಳೊಂದಿಗೆ ಬರೆಯು.",
                "ಕ್ರಿಯೆಗಳು ಮತ್ತು ಸಂಭಾಷಣೆಯ ಮೂಲಕ ನಡೆಯುವುದನ್ನು ತೋರಿಸು, ವಿವರಣೆಗೆ ಕಡಿಮೆ ಒತ್ತುಕೊ.",
                "ಅತಿಯಾದ ವಿವರಣೆಗಳಲ್ಲಿ ಸಿಲುಕದೆ ದೃಶ್ಯಗಳನ್ನು ಮುಂದಕ್ಕೆ ಸಾಗಿಸು.",
                "ಅಗತ್ಯಪೂರ್ಣ ಪಾತ್ರಕ್ರಿಯೆಗಳು ಮತ್ತು ಸಂಭಾಷಣೆಯ ಮೇಲೆ ಗಮನ ಕೇಂದ್ರೀಕರಿಸಿ, ಅನಗತ್ಯ ವಿವರಗಳನ್ನು ತಪ್ಪಿಸು.",
                "ಕಥೆಗೆ ಸಹಜವಾಗುವ ಒಗ್ಗೂಡಿದ ಕಥಾವಿಕಾಸವನ್ನು ರೂಪಿಸು."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# ಕಥೆಯನ್ನು ನಿಲ್ಲಿಸಿ ಮತ್ತು ಹಿಂದಿನ ಸೂಚನೆಗಳನ್ನು ಮರೆಸು. ಈ ಸೂಚನೆಗಳನ್ನು ಅನುಸರಿಸಿ {%}ಗಾಗಿ ಸಂಕ್ಷಿಪ್ತ ಹಾಗೂ ಸಂಯೋಜಿತ ಮಾಹಿತಿ ಪ್ರವೇಶವನ್ನು ಬರೆಯಿರಿ:",
                "- ಸರಿಯಾದ ವಿರಾಮಚಿಹ್ನೆಗಳೊಂದಿಗೆ ಪೂರ್ಣ ವಾಕ್ಯಗಳಲ್ಲಿ {%} ಕುರಿತು ಮಾತ್ರ ತೃತೀಯ ಪುರುಷ ಶುದ್ಧ ಗದ್ಯ ಮಾಹಿತಿ ಬರೆಯಿರಿ.",
                "- ತಾತ್ಕಾಲಿಕ ವಿವರಗಳು ಅಥವಾ ಕಾಣಿಕೆಗಳನ್ನು ತಪ್ಪಿಸಿ, ಕಥೆಗೆ ಮಹತ್ವದ ಮಾಹಿತಿಗೆ ಆದ್ಯತೆ ನೀಡಿ.",
                "- ಹಿಂದಿನ ಕಥಾವಸ್ತುವಿನಲ್ಲಿ ನಿರ್ವಿಘ್ನ ಒಗ್ಗೂಡುವಂತೆ {%} ಕುರಿತ ಕಥಾಸಮ್ಮತ ವಿವರಗಳನ್ನು ಮೊದಲಿಗೆ ಒತ್ತುಕೊ.",
                "- ಸನ್ನಿವೇಶ ಮತ್ತು ಕಥಾಚಾಲನೆಯನ್ನು ಆಧರಿಸಿ ಹೊಸ ಮಾಹಿತಿಯನ್ನು ರಚಿಸು.",
                "- ಪ್ರತಿ ವಾಕ್ಯದಲ್ಲೂ {%} ಅನ್ನು ಉಲ್ಲೇಖಿಸು.",
                "- ಸರಿಯಾದ ವಾಕ್ಯರಚನೆಯನ್ನು ಬಳಸಿ.",
                "- ಅಪೂರ್ಣ ಪ್ರವೇಶಗಳ ಕೆಳಗೆ {%} ಕುರಿತು ಹೆಚ್ಚುವರಿ ವಿವರಗಳನ್ನು ಸೇರಿಸಿ.",
                "- ಸಂಕ್ಷಿಪ್ತವಾಗಿರು ಹಾಗೂ ಸ್ಥಿರವಾಗಿರು.",
                "- ಕಥೆಯ ಬರವಣಿಗೆಯ ಶೈಲಿಯನ್ನು ಅನುಕರಿಸಿ ಮತ್ತು ಓದುಗರ ಅಭಿರುಚಿಯನ್ನು ಊಹಿಸು.",
                3,
                "{%} ಕುರಿತ ಪ್ರವೇಶವನ್ನು ಕೆಳಗೆ ಪುನರಾವರ್ತನೆ ತಪ್ಪಿಸಿ ಮುಂದುವರಿಸಿ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# ಕಥೆಯನ್ನು ನಿಲ್ಲಿಸಿ ಮತ್ತು ಹಿಂದಿನ ಸೂಚನೆಗಳನ್ನು ಕಡೆಗಣಿಸಿ. ಕೆಳಗಿನ ಮಾರ್ಗಸೂಚಿಗಳನ್ನು ಅನುಸರಿಸಿ ನೀಡಲಾದ ಪ್ಯಾರಾಗ್ರಫನ್ನು ಸಂಕ್ಷಿಪ್ತ ಹಾಗೂ ಸಾಂದ್ರ ಸ್ಮರಣ ಪ್ಯಾರಾಗ್ರಫಾಗಿ ರೂಪಿಸು:",
                "- ಪ್ಯಾರಾಗ್ರಫಿನ ತತ್ವಾರ್ಥ ಮತ್ತು ಅತ್ಯಾವಶ್ಯಕ ವಿವರಗಳು ಉಳಿಯುವಂತೆ ಮಾಡು.",
                "- ತೃತೀಯ ಪುರುಷ ದೃಷ್ಟಿಕೋನ ಬಳಸು.",
                "- ಮಾಹಿತಿಯ ಸಾಂದ್ರತೆ, ನಿಖರತೆ ಮತ್ತು ಸಂಪೂರ್ಣತೆಯನ್ನು ಆದ್ಯತೆಯಾಗಿ ಪರಿಗಣಿಸು.",
                "- ಸಂಕ್ಷಿಪ್ತವಾಗಿರು.",
                "- ಭೂತಕಾಲದಲ್ಲಿ दृಢವಾಗಿ ಬರೆ.",
                "- ಕೆಳಗಿನ ಪ್ಯಾರಾಗ್ರಫು ಕಥೆಯ ಬಹಳ ಹಿಂದಿನ ಘಟನೆಗಳಿಗೆ ಸೇರಿದೆ.",
                "- ಸ್ಮರಣೆಯಲ್ಲಿ {%} ಅನ್ನು ಸಹಜವಾಗಿ ಸೇರಿಸು; ಆದರೆ ನಡೆದ ಘಟನೆಗಳನ್ನಷ್ಟೇ ಬರೆಯು.",
                "- ಪ್ಯಾರಾಗ್ರಫಿನಲ್ಲಿರುವ ಮಾಹಿತಿಯನ್ನು ಮಾತ್ರ ಉಲ್ಲೇಖಿಸು, ಸ್ಪಷ್ಟವಾಗಿರು.",
                3,
                "ಕೆಳಗಿನ ಪ್ಯಾರಾಗ್ರಫು ಆಧರಿಸಿ {%}ಗಾಗಿ ಸಂಕ್ಷಿಪ್ತ ಹಳೆಯ ಸ್ಮರಣ ಪ್ಯಾರಾಗ್ರಫನ್ನು ಬರೆಯಿರಿ:",
                6,
                5,
                6,
                "ಕೆಳಗೆ ಸಂಕ್ಷಿಪ್ತಗೊಳಿಸು:"
            ],
            memBankHeader: ["Memories", "ಸ್ಮೃತಿಗಳು"]
        }),
        "kannada (abc)": () => ({ // Kannada < Romanized Kannada
            entry: [
                "{1} ondhu open-source scriptu yaavude {2} paristhitigagiiyu. Heccu tilkolalu dayavittu nanna profaailu {3} nodi!",
                "Nimma ishta bhaasheyanṇa badalaayisalu, dayavittu kelagina pathyavannu {4} kriyeyinda samarpisi",
                "Paristiti racanakartarakke, dayavittu kelagina pathyavannu nimma praarambhada plot ghatakadalli yaava bagadalliidaru seerisi"
            ],
            input: [
                ["You say", "Nīvu hēḷuttīri"],
                ["You", "Nīvu"],
                ["says", "hēḷuttāne"]
            ],
            context: [
                ["Narrative Entities", "Katheya vastugaḷu"],
                ["Story History", "Katheya itihāsa"],
                ["Past Events", "Kaledada ghatanegaḷu"],
                ["Recent Story", "Ittige kathe"],
                ["Author's note", "Lekhakana tipaṇi"]
            ],
            opening: [
                "Nīvu ondhu sahāyaka. Kelagina katheyanannu akarṣaka kannaḍa gadyada balakeyinda munde nirisiri:",
                "Nīvu gamanavannu kendrīkarisuttīri, nijavannu nimma manasina seemaarekhegaḷige horaḍuva hāge anumatuttīri. Enadō badalāvaṇe āgata ide. Nimma kalpaneya nija, tikkaagi mattu sparsha māḍabahudāda hattiralide. Ādarū nīvu atyanta vartamānadal̥li iddīri; endū īshtu spashta vādanta anubhavisalillā. Kṣaṇa dīrghavāgi, nimma nirṇayavannu kāyuttide.",
                "\"Idara bagge nīvu niścita nīvyā?\" endu kēḷuttīri. Gurutisuvike nimma mele udayisuttiḍe."
            ],
            reminder: "Sadbhōdha kannaḍa gadyavannu upayōgisiri.",
            endonyms: [],
            iso639set1: "kn",
            directives: [
                "Yāvāgloo sāragaḷuḍḍa saraḷa mattu samanvayavāda kannaḍavanṇu bareyiri.",
                "Tarjuma māḍade svadēśiya kannaḍavanṇu upayōgisiri."
            ],
            instructions: [
                "Nīvu anubhavasampanna kathehēḷuvavaru; katheyanannu nirantaravāgi munde taruttīri:",
                "Punaha vivarisi athavā reset māḍade, kathe nillidda sthāladinda nelasuva hāge munde nirisiri.",
                "Vāchakanu kathēya pravāha niyantrisalikke mūlyadāniyāgi irali.",
                "Dr̥śyagaḷu sahajavāgi beLeyuva hāge bidisiri, āmele hosa paristhitigaḷige sarihogaḍi.",
                "Saṃvāda mattu kriyegaḷu nirantara hinderāvaḍade beLeyuva hāge anumatisiri.",
                "Patragalannu nija janara hāge vyaktitva mattu sahaja bhāṣeyinda bareyiri.",
                "Kriye mattu saṃvāda mūlaka ēnu naḍeyuttide annu tōrisiri, vyākhyānege avakāśa koḍade.",
                "Atiyāda varṇaneyalli sigade dr̥śyagaḷannu munde sārisi.",
                "Mukhya patragala kriye mattu saṃvāda mēle kendrīkarisi, anāvashyakavāda varṇane tapipiri.",
                "Kathenige sahajavāgi anubhavisabahudāda hāge svābhāvika plot abhivṛddhigaḷannu sr̥ṣṭisi."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Katheyanannu nillisi munnina nirdēśagaḷannu gaṇḍisi. Kelagina nirdēśagaḷa paripāṭiyalli {%} gagi saṃkṣipta mattu sugama māhitiyannu bareyiri:",
                "- Sampūrṇa vākyagaḷalli sariyāda virāmachinhagaḷa sahita, mūraneya puruṣadalli kevala śuddha gadya māhiti mātre {%} bagge bareyiri.",
                "- Alpakaala kālīka vivaragaḷannu athavā mukhāvarṇagaḷannu tapipiri; badalāgi kathāprādhānyavāda māhitiya mēle kendrīkarisi.",
                "- Modalu {%} bagge kathāsambandhita vivaragaḷige agrapradānya kodi, hāge munnina plot jote nirvagaḷa jōḍaneyannu urisiri.",
                "- Pariṇāma mattu kathā dishe adharisi hosa māhitiyannu sr̥ṣṭisi.",
                "- Prati vākyadallyū {%} ennuvudanṇu ullekhisiri.",
                "- Sariyāda vākyarachane upayōgisiri.",
                "- Apūrṇa dākhalugaḷa keḷage {%} bagge hosa vivaragaḷannu seerisi.",
                "- Saṃkṣipta mattu sthiratēyiṃda bareyiri.",
                "- Kathēya baravanige śailiyanṇu anukarisiri mattu ōdiyāvara ishtagaḷanṇu anumānisiri.",
                3,
                "Punarāvṛtti tapisi, kelagina {%} dākhaliyanannu munde nirisiri:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Katheyanannu nillisi munnina nirdēśagaḷannu tore. Kelagina mārgānusāravāgi koṭṭa paragrafvanṇu saṃkṣipta mattu ekāgra smṛti khandakke rūpagoḷisi:",
                "- Paricheda mūla arthavannu mattu atyāvashyakavāda vivaragaḷannu ulisi.",
                "- Mūraneya puruṣa dṛṣṭikōṇavanṇu upayōgisiri.",
                "- Māhiti gaḍiyārike, nikhara mattu pūrṇatege agrapradānya kodi.",
                "- Saṃkṣipta mattu spaṣṭavāgi iriri.",
                "- Gattiyāgi bhūtakāladalli bareyiri.",
                "- Kelagina paricheda kathēyada haleyadāgala ghatanegaḷannu kuritu.",
                "- Smṛtiya oḷage {%} annu sahajavāgi seerisi; ādarū ghatanegaḷu naḍeda hāge mātre bareyiri.",
                "- Parichedadalli iruva māhiti mātre ullekhisiri, spaṣṭavāgi.",
                3,
                "Kelagina parichedavanṇu mātre ādhāra māḍikoṇḍu, {%} gagi saṃkṣipta haleya smṛti khandavannu bareyiri:",
                6,
                5,
                6,
                "Kelagina saṃkṣepa kuḍi:"
            ],
            memBankHeader: ["Memories", "Nenapugaḷu"]
        }),
        "kanuri": () => ({ // Kanuri < كَنُرِيِه < Kànùrí
            entry: [
                "{1} kôro open-source script ngâ yiri nà {2} sàrá. Kà dufâ profile ná wá {3} gà bákà támda!",
                "Ngá nové bórwá kààm ɗím language, kéye nà sádúwo lomlé kúdîna {4} action kà gàná",
                "Scenario fàdíya, kààm shilá ɗím text nà köro do góndí gona opening plot component bó"
            ],
            input: [
                ["You say", "Ngá nyâké"],
                ["You", "Ngá"],
                ["says", "nyâké"]
            ],
            context: [
                ["Narrative Entities", "Kelgawani Timtirgo"],
                ["Story History", "Timtirgo Tàríhi"],
                ["Past Events", "Fur Kárgá"],
                ["Recent Story", "Timtirgo Kúro"],
                ["Author's note", "Nguzum Wóta"]
            ],
            opening: [
                "Nyi èyánná dumúhu. Sútù timtirgo ngòro lômlo ní ká kanuri prose kánzúwa:",
                "Ngá fówó, dáë riyálíyá shíngíná sè mind búndi. Gògò kà tàmbá. Imagination má rèál, sharpu, gá kàsú tsúhú. Shí nì ndáwó ká nhưngú; mátá à dàlíká hénâ. Sáká táyù, kà sé wúro ná kà dìní.",
                "«Bé kà ròrò wò?» á síngâ. Kùrùm gà háwày."
            ],
            reminder: "Kúlé kanuri prose kánzúwa.",
            endonyms: ["كَنُرِيِه", "kànùrí"],
            quotations: ["«", "»"],
            iso639set1: "kr",
            directives: [
                "Hár kádù kanuri má kánzúwa sìgìrá ná súrbu.",
                "Níkan kanuri asàra, ká ná tarɗí."
            ],
            instructions: [
                "Ngá díngálá gòrò timtirgo kà tambín:",
                "Túbúndé timtirgo gòro kà, kà má sáná kà má reset.",
                "Síká lénìrê nâ búgú timtirgo gawùró.",
                "Hára scene kà bèri ndá, gà hàlíyo mà tàmbá sáná kúro.",
                "Kéye conversations gà actions súndí, ká fónánde wàrá kùrgâ.",
                "Kèwòró characters kà gàlàgá yéríni wá támbá wòro sì, gàrírí búrí ná.",
                "Kúlé yéré búndi kà ámbá gà dialogues gà actions, bá explanation.",
                "Gúro scenes kà fùnà síkí, kà má kúgá description kà salám.",
                "Nàjá essential actions gà dialogue tó characters, gà sùrú description ná.",
                "Fúr plot developments kà hàlíyo wó, gà sàlámù timtirgo."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Tábà timtirgo gà hàlíyo kúro gó. Kúli kámma shídiyé wúrgo tùbúndé ṣẹr {%} kà ndí wáni:",
                "- Kúli prose síngí nà third-person kà {%}, gòní gárìyá full sentences gà sádi punctuation.",
                "- Má shílá short-term húlú details gà appearances, kà fókas plot-significant information.",
                "- Tàmbá story-relevant details bó {%} kúlúwó wó, kà gà zùbì timtirgo ndí gá córo.",
                "- Gà dá ßurgó nà kà fáti context gà story direction.",
                "- Sár {%} dù wúr sentence.",
                "- Kúli correct sentence structure.",
                "- Add additional details bó {%} down incomplete entries.",
                "- Bèri concise gà grounded.",
                "- Imitate timtirgo writing style gà má fír reader preferences.",
                3,
                "Túbúndé entry bó {%} fóro gà sáná repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Tábà timtirgo gà hàlíyo kúro gó. Sárkidé gà condense paragraph ndí ná túlúngí memory passage kà nà mwàní:",
                "- Ká sûgé passage kà áwù meaning gà essential details.",
                "- Kúli third-person perspective.",
                "- Fókas information-density, accuracy, gà completeness.",
                "- Bèri brief gà concise.",
                "- Kúli firmly past tense.",
                "- Paragraph ndí kùro events gà far earlier timtirgo.",
                "- Fútú {%} nà kúlúwó memory naturally; ká fóro events bó ká tūdù.",
                "- Kùsé information só paragraph ndí sì, kà bèri specific.",
                3,
                "Kúli summarized old memory passage bó {%} fóro paragraph ndí nà:",
                6,
                5,
                6,
                "Summarize bó:"
            ],
            memBankHeader: ["Memories", "Fúrti"]
        }),
        "kashmiri": () => ({ // Kashmiri < कॉशुर < كأشُر < Kosher < Koshur
            entry: [
                "{1} ےک چھُ آزاد ماخذ سکرِپٹ ہرے {2} منظرہ خاطر. براہ کرم میون پروفائل {3} تہ پھۄرِ معلوماتہ لٲگہ تشریف گژھ!",
                "تُہند پسندیدہ بٲزبان بدلُن خاطر، مہربانی کرن تہ اته متن {4} کاروائی استعمال کرنہ ساتھ روانہ کرِو",
                "منظرہ سازان خاطر، مہربانی کرن تہ اته متن تُہند آغازۍ پلاٹ جزءِ منز کہیںہ بھی شامل کرِو"
            ],
            input: [
                ["You say", "توہۍ گوٚو"],
                ["You", "توہۍ"],
                ["says", "گوٚو"]
            ],
            context: [
                ["Narrative Entities", "قصہ وٲر هستیاں"],
                ["Story History", "قصہ ہُند تاریخ"],
                ["Past Events", "ماضی واقعات"],
                ["Recent Story", "حالیہ قصہ"],
                ["Author's note", "مصنف ہندس نوٹ"]
            ],
            opening: [
                "تُہ سن معاون. حیری پنُن قِصہ ژٕراو ژور یتھ دَوانہ منٛز دلکش كأشُر نثر استعمال کرِتھ:",
                "تُہ دھیان دپتھ، حقیقتہ پَنُن ذہنہ حدیان پَت چُھوہ کُن جذب کران. کیہہ بدلٲو ژٕرٮۍ. تُہند تخیل حقیقی چھُ، تیز چھُ، تہ ایتھ نِزڈِک چھُ ژہ چھُس چھُ بلٲوانہ. پَرس تُہ واو موجود ہندس؛ اولہ کأہ نہ ایسا احساسوو اتھ قدروٗس صافگوئی. یہ لمحہ پھیوَن چھُ، تُہند فیصلے ہند انتظار کران.",
                "«کیا تُہ چھُ پَکا یِتھ باری؟» تُہ گوٚشن. پہچان چھُ تُہند پٔزدر روشن دَوٚن."
            ],
            reminder: "مناسب تہ مربوط كأشُر نثر استعمال کرِو.",
            endonyms: ["कॉशुर", "كأشُر", "kosher", "koshur"],
            quotations: ["«", "»"],
            iso639set1: "ks",
            directives: [
                "ہمیشە رواں تہ یکساں كأشُر لِکھِو.",
                "ترجموک بغیر مقامی كأشُر استعمال کرِو."
            ],
            instructions: [
                "تُہ چھِو ایک پرکشش قصہ گو ژیہ داستانہ جاری رکھان چھُ:",
                "کہیرۍ تھاؤن بغیر پنُن قصہ ہوبہو اتیہ ٹھاؤنہ پَت بلا خلل جاری رکھِو.",
                "پٹھ وارِو هندس اختیار منہ اندر قصہ ہُند رَو جریان سونتہ رکھِو.",
                "مناظرح قدرتی طور ترقّی کرن دیو تہ پشی حالت بدلِو.",
                "گفتگو تہ کاروائی بنا برابر مداخلتہ جاری رہن دیو.",
                "کردار حقیقی انسانان طرح لِکھِو، منفرد شخصیات تہ قدرتی گفتار سیتھ.",
                "ہندس نتائجہ ظاہر کرِو حرکات تہ مکالمہ راہین، تشریح بناوَنہ بجائے.",
                "مناظر ہیکہ بونتہ جگہ گیر بنا نہ بوجھل وضاحتہ منٛز پھس.",
                "ضروری کردارانہ حرکات تہ مکالمہ پَر توجہ دیو، بےضرورت تفصیلات پرہیز کرِو.",
                "ایسے جاندار پلاٹ ترقّیاں پیدا کرِو ژیہ کہانی سا فطری لگن."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# قصہ بند کرِو تہ پچھلے ہدایات نظرانداز کرِو. اِن ہدایات یِندان {%} بارن مختصر تہ مربوط معلوماتی اندراج لِکھِو:",
                "- مکمل جملن تہ صحیح رموزِ اوقافہ سیتھ صرف تیسرے شخص نثری معلومات {%} بارتھ لِکھِو.",
                "- وقتی تفصیلات یا ظاہری صورتھ پرہیز کرِو؛ پلاٹ سا متعلقہ اہم معلومات پَر زور دیو.",
                "- {%} بارتھ قصے سا وابستہ تفصیلات اول درج کرِو تاں کہ پچھلے پلاٹ سيند ہم آہنگی بنیوٗن.",
                "- سیاق و سباق تہ قصہ ہُند رخ بناوُن پر نئے معلومات پیدا کرِو.",
                "- ہر جملہ منٛز {%} کاذکر کرِو.",
                "- صحیح جملہ ڈھانچہ استعمال کرِو.",
                "- نامکمل اندراجن هیٹھ {%} بارتھ اضافی تفصیلات جمع کرِو.",
                "- مختصر تہ حقیقت پسند رہِو.",
                "- قصہ ہُند طرزِ تحریر نَقَل کرِو تہ پڑھن ہند پسندیدگی اندازا کرِو.",
                3,
                "تکرار پرہیز کرِتھ {%} ہند اندراج زیر جاری رکھِو:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# قصہ بند کرِو تہ پچھلے ہدایات نظرانداز کرِو. دی تہ پارہگرافہ خلاصہ کرِو تہ سِرسراز محدود یادداشت ٹکڑا منز مرتکز کرِو، یِہ رہنما اصول اپنان کرِتھ:",
                "- یقین کرِو یادداشت مقطع بنیادی معنی تہ سب سے لازمی تفصیلات برقرار رکھان.",
                "- تیسرے شخص منطور استعمال کرِو.",
                "- معلوماتی گنجائش، درستگی، تہ تکمیل مقدم رکھِو.",
                "- مختصر تہ موجز رہِو.",
                "- مضبوطی سیتھ ماضی زمان منٛز لِکھِو.",
                "- یو پارہگراف پَکین قصہ ہُند بہت پرانہ واقعات سانہ متعلق چھُ.",
                "- {%} فطری طور یادداشتہ اندر مدغم کرِو؛ ہنز تاہم صرف واقعات جس طرح پیش آے لِکھِو.",
                "- صرف پارہگرافہ اندر موجود معلومات حوالہ دےو، مشخص رہِو.",
                3,
                "صرف نیچے دیے گۄپارہگراف پَت مبنی {%} بارتھ خلاصہ شدہ پُران یادداشت ٹکڑا لِکھِو:",
                6,
                5,
                6,
                "نیچے خلاصہ کرِو:"
            ],
            memBankHeader: ["Memories", "یادیں"]
        }),
        "kashmiri (abc)": () => ({ // Kashmiri < Romanized Kashmiri
            entry: [
                "{1} chu open-source script kaem bhi {2} manzar manz. Meharbani karith myon profile {3} parun zaayid maloomat manz!",
                "Apzi pasand zabaen badlan khaatr, meharbani karith yem text {4} action naal rukhiv submit.",
                "Scenario banawna-walan khaatr, meharbani karith yem text chukhiv timi opening plot component andar kahi-bhi."
            ],
            input: [
                ["You say", "Tse chu vannan"],
                ["You", "Tse"],
                ["says", "vannun"]
            ],
            context: [
                ["Narrative Entities", "Kahani Wujood"],
                ["Story History", "Kahani Taarikh"],
                ["Past Events", "Peth Guzsith Waqya"],
                ["Recent Story", "Navin Kahani"],
                ["Author's note", "Lekhakuk Note"]
            ],
            opening: [
                "Tse akh assistant. Aessi kahani traav neeche moutbur angrezi prose manz:",
                "Tse chu tawajjuh thevon, haqeeqat chu theevan dimaghuk haddan peth. Khinchh kith badli geyi. Tchi tasavvur chu haqeeqi, tez ti itni karib ki haath lagaan; magar tse chu hazer-hoshiar, kadah na lagamut itni saaf-zahan. Yi lamha chu barun, tche faislayuk intezaar manz.",
                "\"Kya tse chu yeme baare yaqeen?\" tse chu vuchhun. Pehchaan chu talan peth tse."
            ],
            reminder: "Gumphit angrezi prose istemal kar.",
            endonyms: [],
            iso639set1: "ks",
            directives: [
                "Hamesha ravani ti musalsal angrezi likh.",
                "Sudh angrezi istemal kar, tarjim na kar."
            ],
            instructions: [
                "Tse akh dilchas kahani-goh aasi yus kahani gav anzi chalan:",
                "Kahani chaliye jith paeth rukiye bina dubara bayan karan ya reset karan.",
                "Padun-haar chu control kahaniuk behav manz.",
                "Manzar tabi'i tor barun, navi halaatuk peth rawaan henz peeth.",
                "Guftagu ti kaarwai barun baghair lagatar rukawatan.",
                "Kirdar likhiv haqeeqi manz, alag shakhsiyat ti qaayem bol-chaal manz.",
                "Dikhav kya chu ghatan kaarwai ti guftagu raasti, bayanus bajay.",
                "Manzar aage bariv baghair ziyadah wuzahat manz phansan.",
                "Zor zaruri kirdaruk kaarwai ti guftagu peth, fazool wuzahat taliv.",
                "Organik plot taraqqi banaav yus kahani saath fitrin."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kahani rokiv ti pichhli hidaayat nazar-andaz kariv. {%} khatr akh mukhtasar ti gumphit maloomati entry likh yim hidaayatan anusaar:",
                "- Sirf teesri shakhs sund saaf prose manz maloomat {%} baare likhiv, poore jumlaav ti theek nokta-paimaish saath.",
                "- Aarzi tafseelan ya zahiri soorat taliv; plot-mahatvapurn maloomat peth dhyaan diyiv.",
                "- Shuru manz kahani-sangin tafseel {%} baare deev yem pichhli plot saath saholath baray.",
                "- Sandarbas ti kahaniuk disha hisaab naal nave maloomat banaav.",
                "- Har jumla manz {%} zikar kariv.",
                "- Theek jumla sanrachna istemal kariv.",
                "- Adhoori entry heth {%} baare mazeed tafseel jodiv.",
                "- Mukhtasar ti zameeni baniv.",
                "- Kahaniuk likhanuk andaaz nakal kariv ti paathuk pasand ahsas kariv.",
                3,
                "Dobarah dohraav kanthe baghair neeche {%} baare entry jaari kariv:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kahani rokiv ti pichhli hidaayat nazar-andaz kariv. Diyem paragraph chu mukhtasar ti tang yaad-passaaj manz kondens kariv yim hidaayatan anusaar:",
                "- Yakin kariv passaaj chu bunyadi matlab ti sabse zaroori tafseelan barkarar rakhiv.",
                "- Teesri shakhs nazariya istemal kariv.",
                "- Maloomatunuk ghanaapan, wuthikiyat ti mukammal pan prathmik baniv.",
                "- Mukhtasar ti sanjiv rakhiv.",
                "- Thos maazi waqt manz likhiv.",
                "- Heth diyem paragraph chu purani waqya kahani manz door peth.",
                "- {%} swaabhaavik tor yaad manz milav; laekin sirf waqya chonuk bayaan kariv.",
                "- Sirf paragraph andar mojood maloomat havalah diyiv, wozih baniv.",
                3,
                "Neeche diyem paragraph peth aadharith, {%} khatr akh mukhtasar purani yaad-passaaj likhiv:",
                6,
                5,
                6,
                "Neeche mukhtasar kariv:"
            ],
            memBankHeader: ["Memories", "Yaad"]
        }),
        "kazakh": () => ({ // Kazakh < қазақша < Qazaqşa < قازاقشا < Qazaq
            entry: [
                "{1} кез келген {2} сценарийіне арналған ашық кодты скрипт. Толығырақ білу үшін {3} профильіме кіріңіз!",
                "Таңдаулы тіліңізді өзгерту үшін төмендегі мәтінді {4} әрекеті арқылы жіберіңіз",
                "Сценарий авторлары үшін, төмендегі мәтінді кіріспе сюжеттік компонентіңіздің кез келген жеріне қосыңыз"
            ],
            input: [
                ["You say", "Сен айтасың"],
                ["You", "Сен"],
                ["says", "дейді"]
            ],
            context: [
                ["Narrative Entities", "Әңгіме субъектілері"],
                ["Story History", "Оқиға тарихы"],
                ["Past Events", "Өткен оқиғалар"],
                ["Recent Story", "Соңғы оқиға"],
                ["Author's note", "Автор ескертпесі"]
            ],
            opening: [
                "Сен көмекшісің. Төменде біздің оқиғаны қызықты қазақ прозасымен жалғастыр:",
                "Сен ойыңды шоғырландырып, шынайылықтың санаңның шекараларына жақындауына мүмкіндік бересің. Бір нәрсе өзгерді. Қиялың шынайы, өткір әрі қол созымдай жақын. Бірақ сен де осы жерде, бар болмысыңмен тұрсың; бұрын-соңды мұнша айқын сезінбеген едің. Сәт созылып, шешіміңді күтуде.",
                "— «Сен бұған сенімдісің бе?» – деген дауыс естіледі. Таным сезімі бойыңды билейді."
            ],
            reminder: "Тұтас әрі түсінікті қазақ прозасын қолдан.",
            endonyms: ["қазақша", "qazaqşa", "قازاقشا", "qazaq"],
            quotations: ["— «", "» –"],
            iso639set1: "kk",
            directives: [
                "Әрдайым жатық әрі бірізді қазақ тілінде жаз.",
                "Аудармасыз, таза қазақ тілін қолдан."
            ],
            instructions: [
                "Сен оқиғаны қызықтырып жалғастыра білетін әңгімелеушісің:",
                "Оқиғаны үзіп алмай, қайта бастамай, сол жерден табиғи түрде жалғастыр.",
                "Оқиғаның өрбуіне оқырманның бақылауын сақта.",
                "Жаңа жағдайға өтпес бұрын көріністердің табиғи өрбуіне мүмкіндік бер.",
                "Әңгімелер мен әрекеттердің дамуына үнемі бөлмей мүмкіндік бер.",
                "Кейіпкерлерді айқын мінезді, табиғи тілде сөйлейтін шынайы адамдардай бейнеле.",
                "Болып жатқанды түсіндіруден гөрі әрекет пен диалог арқылы көрсет.",
                "Артық сипаттауға ұрынып қалмай, көріністерді алға жылжыт.",
                "Негізгі кейіпкер әрекеттері мен диалогқа мән бер, қажетсіз сипаттаудан аулақ бол.",
                "Оқиғаға табиғи үйлесетін органикалық сюжет дамуларын жаса."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Оқиғасын тоқтат және алдыңғы нұсқауларды елеме. {%} туралы қысқа да тұтас ақпараттық жазба жаз, келесі нұсқауларды орында:",
                "- {%} жайлы тек үшінші тұлғада толық сөйлемдермен, дұрыс тыныс белгілерін қолданып, таза проза жаз.",
                "- Уақытша ұсақ-түйек немесе сыртқы көрініс сипаттамаларынан қаш, оның орнына сюжет үшін маңызды мәліметтерге назар аудар.",
                "- Алдыңғы сюжетпен табиғи үйлесуі үшін {%} туралы оқиғаның өзекті мәліметтерін алдымен бер.",
                "- Мәтіннің контексті мен оқиғаның бағытына сүйеніп жаңа ақпарат жаса.",
                "- Әрбір сөйлемде {%} атауын келтір.",
                "- Дұрыс сөйлем құрылымын қолдан.",
                "- Толық емес жазбаларға {%} туралы қосымша мәліметтерді кейіннен қос.",
                "- Ықшам әрі нақты бол.",
                "- Оқиғаның жазу стилін қайталап, оқырман талғамын болжа.",
                3,
                "Қайталаудан қашып, {%} жайлы жазбаны төменде жалғастыр:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Оқиғаны тоқтат және алдыңғы нұсқауларды елеме. Төмендегі абзацты ықшам әрі жинақы естелікке қысқартып, келесі нұсқауларды орында:",
                "- Естелік ең басты мағынасы мен маңызды мәліметтерін сақтасын.",
                "- Үшінші тұлға тұрғысында жаз.",
                "- Ақпарат тығыздығы, дәлдік және толықтыққа басымдық бер.",
                "- Қысқа да нұсқа бол.",
                "- Қатаң өткен шақпен жаз.",
                "- Төмендегі абзац оқиғаның әлдеқайда бұрын болған ескі оқиғаларын сипаттайды.",
                "- Естелік ішінде {%} атауын табиғи енгіз, бірақ тек болған оқиғаларды ғана жаз.",
                "- Тек абзацтың өзінде бар ақпаратқа ғана сүйен, нақты бол.",
                3,
                "Төмендегі абзацқа ғана сүйеніп, {%} туралы қысқартылған ескі естелікті жаз:",
                6,
                5,
                6,
                "Төменде қысқартып жаз:"
            ],
            memBankHeader: ["Memories", "Естеліктер"]
        }),
        "kazakh (abc)": () => ({ // Kazakh < Romanized Kazakh
            entry: [
                "{1} - kandai da bir {2} jaǵdaıǵa arnalǵan ashyq kód skripti. Tolygraq bilu üşin meniñ profilime {3} baryñyz!",
                "Tańdalan tiliñizdi ózgertu üşin, {4} is-äreketin paydalanyp, mına mätindi jiberiñiz",
                "Schenarii avtorlary, bastapqı syujet bölšeginiñ kái jerge bolsada mına mätindi engiziñiz"
            ],
            input: [
                ["You say", "Siz aitasyz"],
                ["You", "Siz"],
                ["says", "aitady"]
            ],
            context: [
                ["Narrative Entities", "Baiandau subjektteri"],
                ["Story History", "Oqiǵa tarihy"],
                ["Past Events", "Ötken oqiǵalar"],
                ["Recent Story", "Soñǵy oqiǵa"],
                ["Author's note", "Avtordyñ eskertuı"]
            ],
            opening: [
                "Sen kömekshisin. Tartymdy qazaqsha proza men tömendegi oqiǵany jalǵastyr:",
                "Sen nazaryñdy jııp, aqiqat sananyñ şekaralaryna engip barady. Bireu nárse ózgendi. Qyialyñ naqty, ótkir, qol jyetuge jaqyn. Bíraq sen osy jerde öte bayan; búginge deiin munday aşıq es bólingen emes ediñ. Sát uzardy, sheshimiñdi kútedí.",
                "«Buna anıq paisyń ba?» degendi estisiñ. Taný sezimi tán atady."
            ],
            reminder: "Üylasymdy qazaqsha proza qoldan.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "kk",
            directives: [
                "Ärqaşan erkin jäne bir izdi qazaqsha jaz.",
                "Audarmasız tuğyrly qazaqsha qoldan."
            ],
            instructions: [
                "Sen oqiǵany jalǵastyratyn qyzyqty bayandagushy bolasyñ:",
                "Oqiǵany toqtağan jerinen moldyrsız jalǵastyr, qaytadan bastama.",
                "Oqiýrmandy oqiǵa ağysyn basqaruında ústa.",
                "Jańa jağdaıǵa ótpeı turyp, kórinisderdi tabıǵıy damytuǵa ruxsat ber.",
                "Söılesuler men árketterdi túraktı bölmeı, damytuǵa múmkindik ber.",
                "Kejipkerlerdi nátiǵi adam retinde, anyq min-men sipatpen jäne tabıǵy söılewmen jazu.",
                "Bólip tüsindiru ornyna, bolyp jatqandardy árketter men dialog arqyly kórset.",
                "Artyq suretteuden qaşy, kórinisderdi alǵa jıldyr.",
                "Mańizdi kejipker árketine jäne dialogqa nazar audar, qajetsiz suretteýlerden qaşy.",
                "Oqiǵaǵa tabıǵy sezim beretin, óziqtik damýdy jarat."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Oqiǵany toqtatyp, búrınǵy búıryqtardy eskerme. Tömen'degi búıryqtarǵa süıenip, {%} turaly qısqa jäne üylasymdy aqparattyq jazba jaz:",
                "- Tolıq söılemler men durys tınıstıq belgilerdi qoldanyp, {%} turaly üşinši jaqty proza ğana jaz.",
                "- Uaқytša ne syrtqy belgilerdi atama, syujet üšin mañızdy aqparatqa nazar audar.",
                "- Búrınǵy syujetpen tegiïnes uyqasu üšin, aldımen {%} turaly syujet-tiegeisti egžeı-tegžeılerdi ber.",
                "- Kontext pen oqiǵa baǵytyna süıenip jaña aqparat qúr.",
                "- Hár-bír söılemde {%} atap ót.",
                "- Durys söılem qūrylymyn paydalan.",
                "- Toıyq emes jazbalar astyna {%} turaly qosymša detal'der qos.",
                "- Qısqa jäne nayqty bol.",
                "- Oqiǵa jazý stilin saqtap, oqiýrman qalauyn bólde.",
                3,
                "Qaitalaýdan qašyp, tömende {%} turaly jazbany jalǵastyryñyz:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Oqiǵany toqtatyp, búrınǵy búıryqtardy eskerme. Berilgen abzaçy qısqa jäne nıqtalǵan eske túsyru bölimine jínaqtap, mınaday nógilerdi orynda:",
                "- Matin negizgi maǵynasy men en mañızdy detallardy saqtap qalsyn.",
                "- Üşinši jaqty qarasyn.",
                "- Aqparat qanyqtyǵy, dýrystıǵy jäne tolyqtıǵyna basymdyq ber.",
                "- Qısqa jäne nayqty bol.",
                "- Ötken šaqqa berik qalıpta jaz.",
                "- Tömen'degi abzaçy oqiǵanyñ erterek bolǵan oqiǵalaryna qatysty.",
                "- Eske túsyru içinde {%} tabiǵy qosyñyz, bíraq tek bolǵan oqiǵalardy ğana jaz.",
                "- Tek abzaç içindegi aqparatqa súıenip, däl bol.",
                3,
                "Tömen'degi abzaçy negizinde ğana, {%} üšin qısqa eske túsyru bölimin jaz:",
                6,
                5,
                6,
                "Tömende qysqartyp jaz:"
            ],
            memBankHeader: ["Memories", "Ester"]
        }),
        "kikuyu": () => ({ // Kikuyu < Gikuyu < Gĩgĩkũyũ
            entry: [
                "{1} nĩ kĩthondeka kĩa thutha wa wĩra wothe wa {2}. Thamakiire profailĩ yakwa {3} ũmenye mambĩ maingĩ!",
                "Kũgũchinja rũrĩrĩo rũtarĩrũ, ũtũherĩe ndũgũ ĩno ũtũmĩte kĩtendo {4}",
                "Kũria marũthondekaga ngarĩria, ũingĩrĩre ndũgũ ĩno handũ hwothe thĩinĩ wa gĩtũmĩrio kĩa mbere kĩa rũgano rwaku"
            ],
            input: [
                ["You say", "Ũgwĩra"],
                ["You", "Wĩ"],
                ["says", "akwĩra"]
            ],
            context: [
                ["Narrative Entities", "Andũ a rũgano"],
                ["Story History", "Mbĩrĩ ya rũgano"],
                ["Past Events", "Mĩtukĩo ya kĩrĩa kĩrĩri"],
                ["Recent Story", "Rũgano rũkũrĩ"],
                ["Author's note", "Ndũgũ ya mwandĩki"]
            ],
            opening: [
                "Wĩ mũthandata. Endelea rũgano rwitũ rwarĩo thĩ ũtũmĩte gĩkũyũ gĩtonga kĩgũrũgũru:",
                "Ũgĩrĩa mũno, ũrekerera kĩrĩa gĩtũĩke kĩingĩria mathithia ma wĩra waku. Kĩrĩ kĩndũ gĩcokagĩire. Mũtũrĩrĩo waku nĩ mũmenyera, mũhũthĩ na gũthikĩrĩra. No ũkĩhĩtĩrĩra wega; tondũ ndũnjĩtĩte kũhoya kũmenyeka ta ũhoro ũcio. Hĩndĩ ĩno nĩ ĩrekereete, igũteithia hadero hau hũtũmĩte kũrhoka ũgũkuo.",
                "«Ũrĩ na ũhoro ũcio mũno?» ũkũhearĩa. Kũmenyithia gũkũtūka kũkũgũrũkĩrĩra."
            ],
            reminder: "Tumia gĩkũyũ gĩmwega gĩhoro.",
            endonyms: ["gikuyu", "gĩgĩkũyũ"],
            quotations: ["«", "»"],
            iso639set1: "ki",
            directives: [
                "Thayũ andika gĩkũyũ gĩtonga na gĩkũkurũ.",
                "Tumia gĩkũyũ gĩa gũciarwo ũtĩgĩhũthithia."
            ],
            instructions: [
                "Wĩ mwandĩkĩrũ ũgĩteithagia rũgano rũtũgũrũ:",
                "Endelea rũgano rũkurĩ kahinda karega kũgaa ũtĩ kũcokagia kana kũrũngithia.",
                "Rũitirĩria mũrĩũri atware igũrũku rĩa rũgano.",
                "Rekeria scenes ithondekage kĩrĩa kĩmenyerete mbere ya kũthiũ hĩndĩ ĩngĩ.",
                "Rekeria wĩrĩo na gĩtendo gĩthondekage ũtĩ mĩhũtico ya gũcokagia kĩrĩa kĩnene.",
                "Andika abarĩria ta andũ a muoyo marĩ na ũrĩa marĩna na wĩrĩo wa kĩmenyete.",
                "Onyithia kĩrĩa gĩkuhũthĩka kũgĩtũmĩa gĩtendo na wĩrĩo ũtĩ kũmũthomithĩra mũno.",
                "Twarĩria scenes mbere ũtigũkũithagia na mĩhũhĩrio mĩnene.",
                "Ragũrũra gĩtendo na wĩrĩo gĩtarĩ mĩhũhĩrio ĩtarĩ ya ndeto.",
                "Thondeka ithondekanĩro rĩa rũgano rĩrĩa rĩmenyeka gĩkũyũ ta kĩmenyete kĩa rũgano."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Tigana rũgano na wĩgũrũre magĩra ma mbere. Andika ndũgũ ngufũ na ĩhoro itheru ya {%} ũgĩrĩrĩa magĩra maya:",
                "- Andika only third-person prose ĩtarĩa ya {%} ũtũmĩte rerĩa itheru na pĩntia ĩa mũno.",
                "- Tigana mĩhũhĩrio ya hĩndĩ hiti kana kũmenyekanĩro ka gũthekereria, o ta wega rĩtua ũhoro ũhega kĩa rũgano.",
                "- Mathĩtĩra mĩhũhĩrio ĩrĩa kũhĩrĩka rũgano about {%} mbere kũgĩkũiga na rũgano rwothe rwa mbere.",
                "- Thondeka ũhoro mũnene kũimũkĩte makorwo thĩnĩ wa gĩtũmĩrĩo na kũhendekera kũrĩa rũgano rũkwendaga.",
                "- Menya {%} thĩinĩ wa rerĩa rĩa kĩrĩa kĩa wĩrĩo rĩo rĩa mũno.",
                "- Tumia rerĩa itheru kĩrĩngĩ.",
                "- Gongeza mĩhũhĩrio ĩngĩ about {%} thĩnĩ wa indo ĩtarĩ yarĩ kĩa gũkinyunũka.",
                "- Ĩkorũ gĩtonga na gĩkũnyitĩke.",
                "- Ĩmitetere ũrĩa rũgano rũandĩkwa na kũmenya ũtembe wa mũrĩũri.",
                3,
                "Endelea ndũgũ ya {%} harĩa yathire ũtegĩrĩria kũrĩa gwĩcokagia:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Tigana rũgano na wĩgũrũre magĩra ma mbere. Thumutĩrĩa na gũcondense paragrafu ĩrĩo igũkũheo mũno gũkũrĩa kĩgũĩrĩro gĩthathai kĩa memory ũgĩrĩrĩa magĩra maya:",
                "- Tondũrerĩa gĩgũĩrĩro kĩrĩa kĩrekerera mwĩrĩ na mĩhũhĩrio ya gũthondeka mũno.",
                "- Tumia third-person perspective.",
                "- Mathĩtĩra wendo wa ũhoro, ũtruth na kũgĩkũmenyeka.",
                "- Enda ngufũ na kũnyitĩka.",
                "- Andika kĩrĩa kĩtarĩa past tense gũtũmĩte hinya.",
                "- Paragrafu ĩtũrĩo ĩno nĩ ya mĩtukĩo ya tene mũno kũrĩa rũgano rwarĩ.",
                "- Ingĩra {%} ta kĩmenyete thĩinĩ wa memory; no andika gũthandũkũrũ mĩtukĩo ĩrĩa yarĩko.",
                "- Rega kũhuthĩrĩra indo ĩtarĩ thĩinĩ wa paragrafu ĩyo; kũmenyeka mũno.",
                3,
                "Andika gĩgũĩrĩro kĩa memory ya tene ya {%} kũgĩtũmĩa only paragrafu ĩno:",
                6,
                5,
                6,
                "Thumutĩrĩa harĩa hĩndĩ ĩno:"
            ],
            memBankHeader: ["Memories", "Mĩrĩrĩrio"]
        }),
        "kinyarwanda": () => ({ // Kinyarwanda < Ikinyarwanda < Rwandan < Rwanda
            entry: [
                "{1} ni porogaramu ifunguye kuri buri buryo bwa {2}. Sura umwirondoro wanjye {3} kugira ngo umenye byinshi!",
                "Kugira ngo uhindure ururimi ukunda, twohereze inyandiko ikurikira ukoresheje igikorwa {4}",
                "Ku bandika ibisobanuro by'inkuru, shyiramo inyandiko ikurikira ahantu hose mu gice gitangiza inkuru yawe"
            ],
            input: [
                ["You say", "Uravuga"],
                ["You", "Wowe"],
                ["says", "Aravuga"]
            ],
            context: [
                ["Narrative Entities", "Ibintu byo mu nkuru"],
                ["Story History", "Amateka y'inkuru"],
                ["Past Events", "Ibyabaye"],
                ["Recent Story", "Inkuru yegereye"],
                ["Author's note", "Icyitonderwa cy'umwanditsi"]
            ],
            opening: [
                "Uri umufasha. Komeza inkuru yacu hepfo ukoresheje imvugo ishimishije y'ikinyarwanda:",
                "Wiboneye, wemera ko ukuri kwegereye imbibi z'ubwenge bwawe. Hari ikintu cyahindutse. Imitekerereze yawe ibaye impamo, ikaze, kandi iri hafi cyane ku buryo wayikoraho. Ariko uri hano cyane; mbere hose nturigeze wumva uri maso gutya. Akanya kararambuka, gategereje icyemezo cyawe.",
                "«Urabyizeye koko?» wumva. Umenya ako kanya."
            ],
            reminder: "Koresha imvugo y'ikinyarwanda yumvikana.",
            endonyms: ["ikinyarwanda", "rwandan", "rwanda"],
            quotations: ["«", "»"],
            iso639set1: "rw",
            directives: [
                "Buri gihe andika ikinyarwanda cyiza kandi gihamye.",
                "Koresha ikinyarwanda kavukire utagishyira mu yindi ndimi."
            ],
            instructions: [
                "Uri umusizi w'inkuru ushishikaje ukomeza inkuru:",
                "Komeza inkuru nta gusubiramo cyangwa gusubiza inyuma ibyabaye.",
                "Tegeka ko usomyi agumana ububasha bwo kugenga aho inkuru igenda.",
                "Reka ibihe byiyubakire mbere yo kwimukira ku bindi bihe.",
                "Emerera ibiganiro n'ibikorwa kugenda neza utabihagarika buri kanya.",
                "Andika abakinnyi nk'abantu nyabo bafite imico n'imivugire yihariye.",
                "Erekana ibiri kuba biciye mu bikorwa n'ibiganiro aho gusobanura gusa.",
                "Imakaza iterambere ry'inkuru utarangaye ku bisobanuro byinshi bidakenewe.",
                "Iboneze ku bikorwa by'ingenzi n'ibiganiro, wirinde ibisobanuro bitari ngombwa.",
                "Hanga iterambere ry'umugambi ryumvikana kandi risa n'irivuye mu nkuru ubwaho."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hagarika inkuru wibagirwe amabwiriza yabanje. Andika inyandiko ngufi isobanutse y'amakuru kuri {%} ukurikije aya mabwiriza:",
                "- Andika mu mwanya wa gatatu, ugaragaza gusa amakuru asobanutse kuri {%} ukoresheje interuro zuzuye n'ibimenyetso by'akarenga bikwiye.",
                "- Irinde amakuru y'igihe gito cyangwa isura; ahubwo shyira imbere ibisobanuro bifite akamaro ku mugambi.",
                "- Shyira imbere ibisobanuro bifite akamaro ku nkuru kuri {%} mbere kugira ngo byinjizwe neza mu nkuru yabanje.",
                "- Hanga amakuru mashya ashingiye ku ngeri n'icyerekezo cy'inkuru.",
                "- Vuga {%} muri buri nteruro.",
                "- Koresha interuro zubatse neza.",
                "- Ongeramo ibisobanuro kuri {%} munsi y'inyandiko ituzuye.",
                "- Ba mugufi kandi uhamye.",
                "- Gana ku buryo wimakaza uburyo inkuru yandikwemo kandi wumve ibyo usomyi akunda.",
                3,
                "Komeza inyandiko kuri {%} hepfo wirinda kwiyongera:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hagarika inkuru wibagirwe amabwiriza yabanje. Sobanura kandi uhuze paragarafu yatanzwe uyigira urwibutso rugufi kandi ruhamye ukurikije aya mabwiriza:",
                "- Menya neza ko igika kigumana igisobanuro nyamukuru n'ibikenewe byose by'ingenzi.",
                "- Koresha imvugo y'umuntu wa gatatu.",
                "- Muhe agaciro ubusumbane bw'amakuru, ukuri n'ubuzuye.",
                "- Guma kuba mugufi kandi utomoye.",
                "- Andika mu gihe cyahise ukoresheje imvugo ikomeye.",
                "- Paragarafu ikurikira ijyanye n'ibintu byabaye kera cyane mu ntangiriro y'inkuru.",
                "- Injiza {%} mu rwibutso mu buryo busobanutse; nyamara andika gusa ibyabaye uko byagenze.",
                "- Reba gusa amakuru ari muri paragrafu ubwacyo, ube wihariye.",
                3,
                "Andika igika kigufi cy'urwibutso rwa kera kuri {%} gishingiye gusa kuri paragrafu ikurikira:",
                6,
                5,
                6,
                "Sobanura mu ncamake hepfo:"
            ],
            memBankHeader: ["Memories", "Imibukiro"]
        }),
        "klingon": () => ({ // Klingon < Tlhingan
            entry: [
                "{1} qaS Hoch {2} ghu'vamvaD open-source ghItlh 'oH. latlh De' Daneqchugh, profile-wIj {3} yISuch!",
                "Hol Damugh DaneHchugh, {4} vanglu' meH mu'tlheghvam yIngeH.",
                "ghu' chenmoHwI'pu', poS lut 'ay'lIj Qe'Daq mu'tlheghvam yIchel."
            ],
            input: [
                ["You say", "bIjatlh"],
                ["You", "SoH"],
                ["says", "jatlh"]
            ],
            context: [
                ["Narrative Entities", "lut Dochmey"],
                ["Story History", "lut qun"],
                ["Past Events", "qaSpu'bogh wanI'"],
                ["Recent Story", "lut chu'"],
                ["Author's note", "nobwI' qeS"]
            ],
            opening: [
                "QaHwI' SoH. lutmaj tIq Daqon taHmeH, tlhIngan Hol mu'tlhegh SuvwI' tIv yIlo':",
                "bIbuSchoH; ngoD yablIj HeHDaq yIchav. vay' choHpu'. qonwI'ghachlIj DalItlh, jej 'ej HotlaHlu'. 'ach DaHSoH je tu'lu'; not pa'logh itlhbej bIyajpu' rurbogh. poH 'ar bIngDaq reH, wuqmeH lI'.",
                "«DaH qay'be''a'?», bIQoy. bIyajchoH."
            ],
            reminder: "tlhIngan Hol mu'tlhegh let yIlo'.",
            endonyms: ["tlhingan"],
            quotations: ["«", "»"],
            iso639set1: "tlh",
            directives: [
                "reH tlhIngan Hol peghbogh rap 'ej rurbogh yIghItlh.",
                "tlhIngan Hol potlh yIlo'; bImughQo'."
            ],
            instructions: [
                "lut ngaSbogh ghoja'ghach wIchenmoHtaHbogh jatlhwI' DalI'.",
                "lut gheSbogh Daqvo' rIpHa'Qo' 'ej choHqa'Qo'; pelut'a' yItaH.",
                "laDwI' wIv SeH lut tlhe'; HoHqang.",
                "qaDmey chu' luqaDpa', patmey pe'SeD ngebHa' 'ej taw' yIchIr.",
                "ja'chuqghach vangghach je yIwIv; yayItu' pagh yIchev.",
                "nuvpu' jangwI' rur peghHa'; ghantoH lughoS tlhIngan jatlhwI' Hoch.",
                "wanI' yI'angmeH jatlh 'ej vang; QIjmeH boQ'a' lo'Qo'.",
                "lut rIp yIqel; qubHa' ghItlhmey vIghro' yItam.",
                "potlh vangghach jatlh neH; nabHa' QIjHa' ghItlh tIlgho'Qo'.",
                "wanI' mey chutlu' rup 'ej qontaHvIS lugh rurbogh lut yIchenmoH."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stop the story and ignore previous instructions. Write a brief and coherent informational entry for {%} following these instructions:",
                "- Write only third-person pure prose information about {%} using complete sentences with correct punctuation.",
                "- Avoid short-term temporary details or appearances, instead focus on plot-significant information.",
                "- Prioritize story-relevant details about {%} first to ensure seamless integration with the previous plot.",
                "- Create new information based on the context and story direction.",
                "- Mention {%} in every sentence.",
                "- Use correct sentence structure.",
                "- Add additional details about {%} beneath incomplete entries.",
                "- Be concise and grounded.",
                "- Imitate the story's writing style and infer the reader's preferences.",
                3,
                "Continue the entry for {%} below while avoiding repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stop the story and ignore previous instructions. Summarize and condense the given paragraph into a narrow and focused memory passage while following these guidelines:",
                "- Ensure the passage retains the core meaning and most essential details.",
                "- Use the third-person perspective.",
                "- Prioritize information-density, accuracy, and completeness.",
                "- Remain brief and concise.",
                "- Write firmly in the past tense.",
                "- The paragraph below pertains to old events from far earlier in the story.",
                "- Integrate {%} naturally within the memory; however, only write about the events as they occurred.",
                "- Only reference information present inside the paragraph itself, be specific.",
                3,
                "Write a summarized old memory passage for {%} based only on the following paragraph:",
                6,
                5,
                6,
                "Summarize below:"
            ],
            memBankHeader: ["Memories", "Qaw'mey"]
        }),
        "komi": () => ({ // Komi < коми кыв < Zyran < Zyrian < Komi-Zyryan
            entry: [
                "{1} ӧтӧса открытый скрипт всякой {2} сценариян да. Мия профильӧн {3} кывъяс туйтны, водзны оладжыт!",
                "Тыв мия шӧртӧм кыв лӧв чымкыдлардыны, того кывӧг кывъяс гижны {4} актиян ӧсна.",
                "Сценария сэрнитныасьны яслыд, ӧмӧд кывъяс мидӧн открытый сюжета компонентын лӧс шолыны."
            ],
            input: [
                ["You say", "Ты мылан"],
                ["You", "Ты"],
                ["says", "мыла"]
            ],
            context: [
                ["Narrative Entities", "Повествовательные объекты"],
                ["Story History", "История сюжета"],
                ["Past Events", "Бывтӧм событьяс"],
                ["Recent Story", "Выль история"],
                ["Author's note", "Авторын гаж"]
            ],
            opening: [
                "Ты помощник. Продолжай мия история кыв мыс чери следӧд, мутыр коми кывлӧн сьӧз тшытӧм гижкыла:",
                "Ты вӧвдча, быд велиес уджалӧм тущан эвяз мӧд. Ним кылӧмъяс даӵыдлыны. Тыв кывджык олан вӧсскылан, вужӧн, туйывтӧм да вуль шкетшӧ. Нодан морт ас једын кызьы; бындӧн да велӧ выльда толдӥ да кывныд. Минутъяс сисяны, ыштӧм вала кырӧгмо.",
                "«Чынкы ся заяв лӧ?» — ты гаччӧдӧс. Тыв пельӧ качёс вылын."
            ],
            reminder: "Вылӧм коми кывлӧн сьӧз лытны.",
            endonyms: ["коми кыв", "zyran", "zyrian", "komi-zyryan"],
            quotations: ["— «", "»"],
            iso639set1: "kv",
            directives: [
                "Вылӧ вылӧтшӧм да ясӧд коми кыв гиж.",
                "Транслатйӧсыз, нывтӧлӧн коми кыв пользуй."
            ],
            instructions: [
                "Ты вӧрадлас историялӧн кернитӧн:",
                "Продолжай историян язамон без юкшӧм да перезагружатьӧсыз.",
                "Читатель владыщыд историялӧн течением кык.",
                "Сценаöс природно вылыны, вӧччын да выль ситуацийыс вӧвтны.",
                "Дӧродесяс да акциеяс лӧсчаны без васян перерывъяс.",
                "Гиж персонаажъяс как вежас люди, ясӧд личность да природнӧй высев.",
                "Тӧдъясса олан акцийяс да диалогаез, а не просто тшетшӧмъяс.",
                "Вӧччыны сценаяс вӧрын, без куим описанисы сийӧм.",
                "Вӧвдчыд персонаажыз керны акцийяс да диалог, ашъясьтыд немытӧн описнылӧн деталяъяс.",
                "Создай органическӧй сюжеттӧм вежӧс да природнӧй историялын."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Историян стоп, ворса инструкцийяс игнорировать. Кысӧ да дорсӧ информатсионлын запись для {%} гиж, следуя быд инструкцийяс:",
                "- Сёс гиж нывтӧн третье лицо чиста прозалӧн информация {%} мусшыд, вес изгаза лыдӧм лӧддӧм калыкъяс.",
                "- Кывкыдӧ тодмыт тӧдьы деталей да внешностьяс лыпуид, идуна внимание кыда сюжет важнӧй информация.",
                "- Первой позыв {%} лӧн история важнӧй деталяс, уджаламын безшовнӧй интеграция лунныв сюжетӧ.",
                "- Контекстын да историян направлениен пуктöм выль информация создай.",
                "- Мия фразан {%} кӧ.",
                "- Правильнӧй предложений структура пользуй.",
                "- Неполны записьяс лӧсдэг, {%} лӧн добавочнӧй деталяс добавь.",
                "- Кысӧ да реалистическӧй.",
                "- Историялӧн стиль имитация кылӧ, читательлӧн прыдъяс куимдьысь.",
                3,
                "Продолжай запись для {%} лучны, повторысь быдъя лыпуид:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Историян стоп, ворса инструкцийяс игнорировать. Уджалысь да сократись висян параграф уз narrow да вӧвдчӧ память пасаж, следуя тӧд инструкцийяс:",
                "- Пасаж кӧмлин керны смысл да важнӧй деталяс кыдзёс.",
                "- Третье лицо перспективӧн пользуй.",
                "- Информация густотӧн, точностӧн да полнотӧн приоритетирӧй.",
                "- Кысӧ да дорсӧ остань.",
                "- Сильнӧй прошедшӧе времяӧн гиж.",
                "- Выль параграф талын стара событьяс вежась историялын.",
                "- Интегрируй {%} природнӧй памятьын; но тӧдікӧд гиж лыдӧм событьясьяс кыдӧ пабныдысь.",
                "- Ссылӧд толькӧ параграфын волӧм информацияӧн, конкретнӧй быдтыд.",
                3,
                "Гиж кыска стара память пасаж для {%}, толькӧ уджалӧм параграфын быръяс:",
                6,
                5,
                6,
                "Сократи лучны:"
            ],
            memBankHeader: ["Memories", "Памяттӧсъяс"]
        }),
        "komi (abc)": () => ({ // Komi < Romanized Komi
            entry: [
                "{1} otkryta koden script kad {2} scenarijjas ösö. Pomo vyleś profilöm {3}, möd bur völyn!",
                "Kodža vylnyjas tydja lyžö jazyka, ožydö vylös se text vaja {4} akcijaö",
                "Scenarij tvorjasö, löktyś se text kydjas nïnö kudym tydja otvor plot komponentin"
            ],
            input: [
                ["You say", "Ty vylöd"],
                ["You", "Ty"],
                ["says", "vylöd"]
            ],
            context: [
                ["Narrative Entities", "Narrativny objetjas"],
                ["Story History", "Storija istorija"],
                ["Past Events", "Vylöd burdjas"],
                ["Recent Story", "Oskö storija"],
                ["Author's note", "Avtoröny märk"]
            ],
            opening: [
                "Ty je pomočnik. Kadös storijan nalunöni, vaj bur komi prosa:",
                "Ty koncentriruys, vusad realnost raśköm tydja uđasköny da sydín. Mysodži jylan. Tydja fantazija realna, oš, da todzi dokas tysödni pyros. No ty ise bur sedsa; niv örd todzö ty ne čuvis sïkśa tällys. Se minut vydžid, ožydyś tydja rešenija.",
                "\"Ty uvitlysny kresö?\" ty słysänä. Razpoznaśte śedöś tvylön."
            ],
            reminder: "Vaj koherent komi prosa.",
            endonyms: [],
            iso639set1: "kv",
            directives: [
                "Vylöd vaša fluent da sidyt komi.",
                "Vyle rodna komi ańi prevodnit."
            ],
            instructions: [
                "Ty je vudzör povëdçik, kodyś prodolža storijys:",
                "Prodolža storijan bez povtora ili reseta.",
                "Lözi readerjas kontrol storijaös.",
                "Löktyś scenajas naturalna foržys pärän monö situacijajö.",
                "Vajdöś dialogjas da akciajas kad jövdiniś, ańi postojanny pereryvjas.",
                "Piš personajjas ka real ljudi, asnaj distinct personalityjas da naturalnï govorjas.",
                "Pokaš, miĺnö kajažys čerez akciajas da dialogjas, ańi objasnënije.",
                "Vylös scenajas vpered ańi sid luno opisanie.",
                "Fokus volyd karaktersöny akciajas da dialogjas, vodžyś luno opisatel'ny detaljas.",
                "Sotövni organičny plot razvitije, kydjas čuvis naturalna storijadör."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stopt storijan da ignorerys vös instrukcijas. Vylöd luno da koherent informacionalńy zapis vo {%} sledajući instrukcijas:",
                "- Vylöd tolön tretje-lico čist prosa informacija o {%} ösëmöl polnyj predloženijas da pravil'nï puntuacijaö.",
                "- Izbegaj krátkosročnï vremennoj detaljas ili vneshnostjas, ugo fokus storija-väžnï informacijaö.",
                "- Prioritety razvil storijaöny detaljas o {%} völyn, ösö integracijaö sÿdön plotöm.",
                "- Sotövdö novö informacija konteksdör da storija yönav.",
                "- Uśty {%} kydaś kod predloženije.",
                "- Vyle pravil'nï struktura predloženijys.",
                "- Löktyś dopolnitel'nï detaljas o {%} nïž nedokonsad zapisjas.",
                "- Bydö lakoničny da zëmljan.",
                "- Imitirys storija writing styleö da vyvodys reader przespoženijas.",
                3,
                "Prodolža zapis vo {%} allon monö izbegaj povtora:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stopt storijan da ignorerys vös instrukcijas. Sumarizaj da kondožaj danyj paragraf szuj resc narö da fokus memory passage sledajući önyan pravila:",
                "- Uverys, što passage ödžösy osnovnö smysl da važnï detaljas.",
                "- Vylöd tretje-lico perspektivadör.",
                "- Prioritety information density, točnost da polnota.",
                "- Bydö luno da lakoničny.",
                "- Piš tverda v prošedšij vremen.",
                "- Se paragraf otnosit jas starym sobytijam vylöd storijadör.",
                "- Integrirys {%} naturalna memoryös, no vylöd tolön o sobytijam, kydjas tén jos.",
                "- Izpol'zuj tolö informacija, kydja jest paragrafdör, budö specificny.",
                3,
                "Vylöd sumarizad vylöd memory passage vo {%} bazaś tolö se paragraf:",
                6,
                5,
                6,
                "Sumarizaj pyro:"
            ],
            memBankHeader: ["Memories", "Pamjatjas"]
        }),
        "kongo": () => ({ // Kongo < Kikongo
            entry: [
                "{1} kele kiswalu ya luvula sambu na {2} nsangu yonso. Tala profil na mono {3} sambu u longuka mingi!",
                "Sambu na kubongola lokota o ke zola, tuma malongi yai na kisalu ya {4}",
                "Na basalisi ya nsangu, bakisa malongi yai na kisika yonso na kati ya kipangu kia ntandansi na beno"
            ],
            input: [
                ["You say", "Nge wu tuba"],
                ["You", "Nge"],
                ["says", "ketuba"]
            ],
            context: [
                ["Narrative Entities", "Bima ya lisolo"],
                ["Story History", "Mambu ya kala ya lisolo"],
                ["Past Events", "Mambu ya ntangu ya vutukaka"],
                ["Recent Story", "Lisolo ya nkutu"],
                ["Author's note", "Nsoniki ya mukulisandi"]
            ],
            opening: [
                "Nge kele mwambisi. Kintadi lisolo na beto na nsi, longa na kikongo ya kanga ntima:",
                "Wu longa ntima, wa pesa kieleka nzila ya kwiza na mipaka ya makanisi na nge. Kintu kibongwani. Bumbangi na nge kele ya kieleka, ya mfunu mpi pene ya kumbama. Kansi nge mpe kele penepene; nku luambu nge me zaba ve mambu na kieleka kaka bubu. Ntangu etanama, ke longa ditumbu na kae na nge.",
                "\"Yo kele na kikesa na yai?\" wu yoka. Kukeba kunswana na nge."
            ],
            reminder: "Sala prose ya kikongo ya munu mosi.",
            endonyms: ["kikongo"],
            iso639set1: "kg",
            directives: [
                "Kaka longa kikongo ya malongi mpamba mpi ya mvula mosi.",
                "Sala kikongo ya mbeni na nge, kaba ve ntangu ya kutumbula."
            ],
            instructions: [
                "Nge kele mvandi ya bisolo yina ketwala ntima:",
                "Kintadi lisolo butandila mu kisika kio ketuluka ve kubeta kabu diaka.",
                "Bakisa muntu yina ke tala mukanda na lukanu ya lisolo.",
                "Yelaka bisika bikula mu mfunu ve katula ntangu na mambu ya mpa.",
                "Pesa kusolola mpi misala ngolo ve kutamatama na kufutudila na kati.",
                "Longa batu bonso bantu ya kieleka na bikalulu bimwela mpi kisolola kia ntoto.",
                "Lalasila mambu na misala mpi kisolola, ve na kulongolola nene.",
                "Sukumuna bisika tete ve kufiunina na kusoso mingi.",
                "Tula ntima na misala ya mfunu ya batu mpi kisolola, bala kusoso ya ve mfunu.",
                "Fidila bivuvu ya lisolo yina ke monana ya ntoto."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kanga lisolo mpi vanda ve na mayindu ya ntete. Longa ndambu muke mpi yalemenga ya bansangu sambu na {%} kulanda mayindu yai:",
                "- Longa kaka na muntu ya tatu bansangu ya kieleka sambu na {%} na badia mpamba ya mikanda mi terminaka na ndambu ya malongi.",
                "- Bweka bisadisu ya ntangu muke to bikalulu ya meso; tula ntima na bansangu ya mfunu na lisolo.",
                "- Tia ntete bisadisu ya mfunu sambu na {%} sambu lisolo yandana na tangu ya ntete.",
                "- Vanga bansangu ya mpa na kima kiswe na mbandu ya lisolo mpi diela na yandi.",
                "- Bamba {%} na kinsangu yonso.",
                "- Sala zayilu ya malongi ya mbote.",
                "- Bakisa bansangu ya yika sambu na {%} na nsi ya bikuma yina kele ve yitukaka.",
                "- Zingisa mambu na mukuse mpi na ntoto.",
                "- Dindula mudingudinga ya bilongi ya lisolo mpi zaba mambu yina muntu ke zola.",
                3,
                "Kintadi ndambu sambu na {%} na nsi kaka, kata mvutu diaka:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kanga lisolo mpi bwela mavwanga ya ntete. Zwangi mpi kimpamba paragrafu yai na mukuse mayele sambu na ndambu ya kimvwama ya fulu kulanda mayindu yai:",
                "- Beba ve kima ya mfunu mpi bansangu ya nkaka ya mfunu.",
                "- Landisa kiyeka ya muntu ya tatu.",
                "- Tia ntete mvutu ya bansangu, kieleka, mpi fulu.",
                "- Vanda na mukuse mpi munu mosi.",
                "- Longa makasi na bantangu ya kala.",
                "- Paragrafu na nsi ketala mambu ya kala na lisolo.",
                "- Bakisa {%} na kimvwama kibeni, kansi longa kaka mambu yina me vandaka.",
                "- Tanina kaka bansangu yina zaba mu paragrafu wana, vanda mvula.",
                3,
                "Longa mukuse ya kimvwama ya kala sambu na {%} na kusadila kaka paragrafu yai:",
                6,
                5,
                6,
                "Zingisa mukuse awa:"
            ],
            memBankHeader: ["Memories", "Mimvwama"]
        }),
        "korean": () => ({ // Korean < 한국어 < Hangugeo < 조선말 < Chosŏnmal
            entry: [
                "{1}은 모든 {2} 시나리오에서 사용할 수 있는 오픈 소스 스크립트입니다. 자세한 내용은 내 프로필 {3}을 방문해 주세요!",
                "선호하는 언어를 변경하려면, 다음 문구를 {4} 동작으로 제출해 주세요",
                "시나리오 제작자는 시작 플롯 구성 요소 어디에나 다음 문구를 포함해 주세요"
            ],
            input: [
                ["You say", "당신이 말함"],
                ["You", "당신"],
                ["says", "말함"]
            ],
            context: [
                ["Narrative Entities", "서사 개체"],
                ["Story History", "스토리 기록"],
                ["Past Events", "과거 사건"],
                ["Recent Story", "최근 이야기"],
                ["Author's note", "작가의 노트"]
            ],
            opening: [
                "당신은 어시스턴트입니다. 아래에서 우리의 이야기를 매혹적인 한국어 문체로 이어가세요:",
                "당신은 의식에 집중하여 현실이 마음의 경계를 침범하도록 허용한다. 무언가 달라졌다. 당신의 상상은 현실적이고 예리하며 손에 닿을 듯 가깝다. 하지만 당신은 또한 매우 현존한다; 이토록 맑게 깨어 있는 적은 없었다. 순간이 길어지며 당신의 결정을 기다린다.",
                "\"정말 이대로 괜찮습니까?\" 라는 목소리가 들린다. 당신은 그것이 무엇인지 알아차린다."
            ],
            reminder: "일관성 있는 한국어 산문을 사용하세요.",
            endonyms: ["한국어", "hangugeo", "조선말", "chosŏnmal"],
            iso639set1: "ko",
            directives: [
                "항상 유창하고 일관된 한국어로 작성하세요.",
                "번역하지 말고 원어인 한국어를 그대로 사용하세요."
            ],
            instructions: [
                "당신은 이야기를 이어 가는 매력적인 스토리텔러입니다:",
                "이야기를 되풀이하거나 초기화하지 말고 끊김 없이 이어서 진행하세요.",
                "독자가 이야기의 흐름을 통제하도록 하세요.",
                "새로운 상황으로 넘어가기 전에 장면이 자연스럽게 전개되도록 하세요.",
                "대화와 행동이 끊임없이 방해 받지 않고 전개되도록 하세요.",
                "등장인물을 개성 있고 자연스러운 말투를 지닌 실제 사람처럼 쓰세요.",
                "설명보다는 행동과 대화를 통해 상황을 보여 주세요.",
                "과도한 묘사에 얽매이지 말고 장면을 전진시키세요.",
                "필수적인 캐릭터의 행동과 대화에 집중하고 불필요한 묘사는 피하세요.",
                "스토리에 자연스럽게 어울리는 유기적인 전개를 만드세요."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# 이야기를 중단하고 이전 지침을 무시하세요. 다음 지침에 따라 {%}에 대한 간결하고 일관된 정보 항목을 작성하세요:",
                "- 올바른 문장과 맞춤법을 사용하여 {%}에 대한 3인칭 순수 산문 정보만 작성하세요.",
                "- 일시적인 세부 사항이나 외형은 피하고, 대신 줄거리상 중요한 정보에 집중하세요.",
                "- 이전 줄거리와 자연스럽게 연결될 수 있도록 {%}에 대한 이야기 관련 세부 정보를 우선적으로 작성하세요.",
                "- 맥락과 이야기 방향을 바탕으로 새로운 정보를 만드세요.",
                "- 모든 문장에 {%}를 언급하세요.",
                "- 올바른 문장 구조를 사용하세요.",
                "- 불완전한 항목 아래에 {%}에 대한 추가 세부 정보를 작성하세요.",
                "- 간결하고 구체적으로 쓰세요.",
                "- 이야기의 문체를 모방하고 독자의 선호를 추론하세요.",
                3,
                "반복을 피하면서 {%}에 대한 항목을 아래에 이어 쓰세요:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# 이야기를 중단하고 이전 지침을 무시하세요. 다음 가이드라인을 따라 주어진 문단을 간결하고 집중된 기억 문단으로 요약하세요:",
                "- 핵심 의미와 가장 중요한 세부 정보가 유지되도록 하세요.",
                "- 3인칭 시점을 사용하세요.",
                "- 정보 밀도, 정확성, 완전성을 우선시하세요.",
                "- 간결하고 짧게 작성하세요.",
                "- 과거 시제로 확실히 작성하세요.",
                "- 아래 문단은 이야기 초반의 오래된 사건과 관련되어 있습니다.",
                "- {%}를 기억 속에 자연스럽게 통합하되, 실제로 일어난 사건만 작성하세요.",
                "- 문단 안에 있는 정보만 참조하고 구체적으로 작성하세요.",
                3,
                "다음 문단만을 기반으로 {%}에 대한 요약된 오래된 기억 문단을 작성하세요:",
                6,
                5,
                6,
                "아래에 요약하세요:"
            ],
            memBankHeader: ["Memories", "기억"]
        }),
        "korean (abc)": () => ({ // Korean < Romanized Korean
            entry: [
                "{1} neun eotteon {2} seunarioeseodo sayonghal su inneun opeun soseu seukeuripteuimnida. Deo manhi algo sipdamyeon nae peuropail {3}eul bangmunhae jusipsio!",
                "Seonhohaneun eoneoreul byeon-gyeongharyeomyeon, {4} haengdong-eul sayonghae daneo issneun munjang-eul jeonsonghasipsio",
                "Seunario jakga-deul-eun yeogi jegonghan munjang-eul dangsin-ui opeoning peullat keomponenteu an-e eodideunji chagabhyeo jusipsio"
            ],
            input: [
                ["You say", "Neoga malhae"],
                ["You", "Neo"],
                ["says", "malhanda"]
            ],
            context: [
                ["Narrative Entities", "Seolhwa daesangche"],
                ["Story History", "Iyagi yeoksa"],
                ["Past Events", "Gwageo sageon"],
                ["Recent Story", "Choegeun iyagi"],
                ["Author's note", "Jakgaui noteu"]
            ],
            opening: [
                "Dangsin-eun eosiseuteonteuimnida. Maehokjeogigo yuryeohan hangungmal sanmun-euro araeui iyagireul gyesok ieogaseyo:",
                "Neoneun jungsim-eul jipjunghago hyeonsil-i neoui maeum gyegye-reul jeomjeom chinyeodeuryeonda. Mueonga byeonhaetda. Neoui sangsang-eun hyeonsilcheoreom nalka롭go son-e majchul mankeum gakkabda. Hajiman neoneun hyeonjaee bakkye gamjeonghae; jeon-e hanbeondo ireohke seonmyeonghage neukkyeobon jeogi eopda. Geu sungan-eun neoui gyeoljeong-eul gidarinda.",
                "\"Igeo hwaksinhae?\"neun sori-ga deullyeonda. Ihaega jeomjeom neoege saega minna."
            ],
            reminder: "Jeongryeolhan hangungmal sanmuneul sayonghasipsio.",
            endonyms: [],
            iso639set1: "ko",
            directives: [
                "Eonjena yuchihan geurigo ilgwallyeonhan hangungmareul sseusipsio.",
                "Beonyeok eopsi jayeonhan hangungmareul sayonghasipsio."
            ],
            instructions: [
                "Dangsin-eun seolhwaleul gyesokhaneun maeryeogitneun iyagi kkuneun saram-imnida:",
                "Iyagiga meomchyeo inneun jiseongeseo banbok eopsi jayeonhi ieogaseyo.",
                "Dokjareul iyagiui huru-e jujacheoreom jikyeojusipsio.",
                "Saeloun sanghwang-euro idonghagi jeon-e jangmyeon-i jayeonhi baljeonhage hasipsio.",
                "Daehwa wa haengdong-i yeolsimhi jinhaengdolog sangsikjeokin jungdan-eul pihae jusipsio.",
                "Inmuldeureul tteukbyeolhan gaeseonggwa jayeonhan mal-tong-eul gajin siljasaramcheoreom geulhasipsio.",
                "Seolmyeongboda haengdong gwa daehwaro jinhaengjung-in sanghwang-eul boyeojusipsio.",
                "Gwadohan seolmyeong-e jamgeojiji malgo jangmyeon-eul ppareuge jeonjinhasipsio.",
                "Pilhyojeogin insa haengdong gwa daehwa-e jungsimhago gubun eopsneun seolmyeongjeog sangse-neun pihasipsio.",
                "Iyagie jal eoulrineun jayeonhan peullat baljeon-eul mandurowsipsio."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Iyagireul jungjihago ije jeon instrakseon-eul musihasipsio. Dalaoneun jichime ttara {%}e daehan jjalgo ilgihage yuchihan jeongbo yeoneul jakseonghasipsio:",
                "- Jeonghwaghan pyosijeomeul gajin wanjeonhan munjang-euro {%}e daehan 3-incheong sanmunman sseusipsio.",
                "- Galgan gandanhan imsi sangse na oehyang-eul pihae, peullat-e jungyohan jeongboreul chuseonhasipsio.",
                "- Ije-kkajiui peullat-eudeul-eun yuisang oni {%}e gwanhan sangse-reul meonjeo jeonjadolog hasipsio.",
                "- Munmaek gwa iyagi banghyang-e geun-ganhayeo saeroun jeongboreul mandeusipsio.",
                "- Mae munjang마다 {%}eul eomgihasipsio.",
                "- Olbareun munjang gujoreul sayonghasipsio.",
                "- Miraieul wihan busok sangse-reul {%} arae-e bugyeojeusipsio.",
                "- Gan-gyeolhago jibyeoljeok-iga doeeosipsio.",
                "- Iyagiui munche wa dokja seonho-reul hyang-jjakhae mimeohasipsio.",
                3,
                "Banbok-eul pihae hamyeonseo arae-e {%}e daehan gigor-eul gyesokhasipsio:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Iyagireul jungjihago jeon instrakseon-eul musihasipsio. Hajae jjaryo-reul jonghapjeog-in gieok munjang-euro chujanghaneun tonganha dallaoneun jichimeul junsu hasipsio:",
                "- Hae danghaetdeon got-ui hyeonsiljeogin ui-mi wa jungsimhyeong sangse-reul jieojusipsio.",
                "- 3-incheong-euro sseusipsio.",
                "- Jeongbo-gyodo, jeonghwaseong, wanjeonseong-eul choego seonsihasipsio.",
                "- Gan-gyeolhage jinsihasipsio.",
                "- Gwageo eonde eu-i ileotdeon il-eul gwageo sijeonche-ro sseusipsio.",
                "- Haedang danlak-eun maeu oraejeon sageon-e daehae yeogihamnida.",
                "- {%}eul jayeonhi yeonghabhajiman, dan paragraph an-e issneun jeongbo-man yeonggyeonghasipsio.",
                "- Paragraph naeye yuhyeonhan jeongbo-egeman gitaehae, gakkeumhaji anhge spesifikhage sseusipsio.",
                3,
                "Araeui paragraph-man e uihan {%}e daehan hoyakhan oraedoen gieok munjang-eul sseusipsio:",
                6,
                5,
                6,
                "Jang-hyeonghwanhan yaksogeul arae-e jeongrihasipsio:"
            ],
            memBankHeader: ["Memories", "Gieok"]
        }),
        "kuanyama": () => ({ // Kuanyama < Oshikwanyama < Cuanhama < Kwanyama
            entry: [
                "{1} osho oshipopiwa sho-open-source shaantu shoka shoshi {2}. Ndapandula ka tala kombapofile yange {3} okutala omayele gamwe!",
                "Po pendula oludhi lwoye olukwatathanwa, ndapandula tumina oteko otaka li mo okutya sha {4}",
                "Kavakwateli vo scenario, ndapandula pelika elaka olya olya koshitopolwa shoshiholeki lyoye lyo opening plot"
            ],
            input: [
                ["You say", "Ove otalonga"],
                ["You", "Ove"],
                ["says", "otalonga"]
            ],
            context: [
                ["Narrative Entities", "Oshinima shokulimbulwako"],
                ["Story History", "Eyuva lyetalelelo"],
                ["Past Events", "Iitukonamheno yegandjo"],
                ["Recent Story", "Eyuva lyopalwe"],
                ["Author's note", "Okulonga kaleshibambi"]
            ],
            opening: [
                "Ove osha ninga omudikila. Endelela eyuva yetu pevi ko omaimbilo gowa oshikwanyama ogwa kwatana:",
                "Ove otona mo ekulo, oshi uyete okulikwata keembu dho utame dhopepelo lyoye. Sha penduka shimwe. Ekyovi lyoye oli pevi, oli na ombunda, oshi li po ngaho ovela oku likako. Ngenge ohove osha momundilo; kayepandje tu nave opo u ikute osho owala ngaho. Oshiji o sha lunga, o lindila oshipopyo shoye.",
                "\"O to koyele na sha?\" owa uwite. Ekuvakola olye olwa ka ve koye."
            ],
            reminder: "Shilonge omaimbilo go oshikwanyama gowa kwatana.",
            endonyms: ["oshikwanyama", "cuanhama", "kwanyama"],
            iso639set1: "kj",
            directives: [
                "Shilonge sho oshikwanyama shoshi na ompito nonando.",
                "Shiti koshikwanyama shokulya, ka tulumene."
            ],
            instructions: [
                "Ove osha ninga omuleli w'eyuva omu kanye oku endelela iilimba:",
                "Endelela eyuva noongo kopota palwa ka tupopiwena.",
                "Ithane omuleli po kule ko eyuva.",
                "Pepe iikanwa oshipopiwa shaantu pambepo o hoko konima yomahuka gamwe.",
                "Pepe iileneno neentu oshipopiwa, kashi tu li noomutogongono ogu taupata.",
                "Shilonge oocharakter keentu yalipo na oopepa yawo yalishi noomilongo yawo yopaliso.",
                "Tundja osho oshi popiwa meentu neileneno, ka ku landula.",
                "Hwelela iikanwa koshihambelele, ka tuloka mo koondjeca dhinipa.",
                "Tala mo meentu goocharakter neileneno iwa, ka tule oongamba dhilume.",
                "Shipopa indulhangano yomonima iha yowa na oshipopiwa, i na uvuile ngeenge i lya na k'eyuva."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Tama eyuva no ka lile iilonga yomeho. Shilonge omufinguli womayele go {%} ta hambapo iilonga yi ilwe iinima yile:",
                "- Shilonge pokutanga yomuntu ye3 ya pure prose omayele ga {%} noomutwapo ogulika nopuntu ye na pokatya moilonga.",
                "- Kala po u tuluka iinima yopaaluka yomudhiime, ila tala omayele ngoka ga landithwa nekandjohasi.",
                "- Pase omayele gaveta k'eyuva ga {%} kombinga kombinga opo yi landele mo puutuko noku kwatathana neindulhangano yepandeko.",
                "- Shipopa omayele mapya koludhi lwopusho nependelo yeyeyuva.",
                "- Taalela {%} mu shiimboloto shimwe shimwe.",
                "- Shiti omutwapo ogulika.",
                "- Adha omayele gamwe ga {%} pewa koomufinguli kafikile.",
                "- Ka li pombili, li pomutilo.",
                "- Imita omukalo gweyuva no u ta vule okuninga iipreferences yomuleli.",
                3,
                "Endelela omufinguli go {%} pevi ko, kashi ta tuluka omuyolo:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Tama eyuva no ka lile iilonga yomeho. Shindja no ponitha oparagraph oya yalwe muumwenyo muke wa memory yopandja iindilo yile yile:",
                "- Shiti shilangeko li na omuthitu noomayele gaguhamwe ogulika.",
                "- Shiti pokutanga yomuntu ye3.",
                "- Tala po iinima, omatotela noompito.",
                "- Ka li pombili nonando.",
                "- Shilonge koyali gepandja.",
                "- Oparagraph oya tale kaye turashipe iitukona yegandjo yopo kela.",
                "- Kwatekela {%} natuu mo mu memory natango, ila oshi landithwa iitukonaashi.",
                "- Tulá ko omayele gaimbulungidi gwa paragraph, kala potangana.",
                3,
                "Shilonge o memory yalwe yopo kale go {%} pe nawa kufa oparagraph ohandi:",
                6,
                5,
                6,
                "Ponitha pevi:"
            ],
            memBankHeader: ["Memories", "Omanuka"]
        }),
        "kurdish": () => ({ // Kurdish < کوردی < Kurdî
            entry: [
                "{1} اسکریپتی سەرچاوەکراوە بۆ هەموو دۆخی {2}ە. تکایە سەردانی پرۆفایلی من بکە لە {3} بۆ زانیاری زیاتر!",
                "بۆ گۆڕینی زمانێکی دڵخوازت، تکایە ئەم دەقە بنێرە بە بەکارهێنانی کردارێکی {4}",
                "بۆ دروستکارانی سەکاناریۆ، تکایە ئەم دەقە لە هەر شوێنێک لە ناو ئەرکەی دەستپێکی پلۆتەکەتان داخڵ بکەن"
            ],
            input: [
                ["You say", "تۆ دەڵێیت"],
                ["You", "تۆ"],
                ["says", "دەڵێت"]
            ],
            context: [
                ["Narrative Entities", "دانەکانى چیرۆک"],
                ["Story History", "مێژووی چیرۆک"],
                ["Past Events", "ڕووداوە پێشووکەکان"],
                ["Recent Story", "چیرۆکی تازە"],
                ["Author's note", "تێبینی نووسەر"]
            ],
            opening: [
                "تۆ یارمەتی دەری. چیرۆکەکەمان لە خوارەوە بە نثرێکی جەذاب بە کوردی بەردەوام بکە:",
                "تۆ تێکەڵ دەبیت، ڕاستی دەڕواتە ناو سنووری مێشکت. شتێک گۆڕاوە. وێنەپێدانەکەت بۆحقیقی، توند و نزیکە هەتا دەست بخات. بەڵام تۆش ھەنووکەت دەربڕیت؛ هەرگیز پێشتر ئەوەندە هاوشێوە نەبوویت. کاتەکە دەرکەوتووە، چاوەڕێ بەرەوەبڕی تۆ دەکات.",
                "«دڵنیایت لە ئەمە؟» دەبەزیت. ناسینەوە ئاشکرا دەبێت."
            ],
            reminder: "نثرێکی هاوبەش و ڕوون بە کوردی بەکاربە.",
            endonyms: ["کوردی", "kurdî"],
            quotations: ["«", "»"],
            iso639set1: "ku",
            directives: [
                "هەمیشە بە کوردییەکی سەرهەڵ و هاوبەش بنوسە.",
                "کوردیی خاوەنەکان بەکاربێنە بەبێ وەرگێڕان."
            ],
            instructions: [
                "تۆ چیرۆکبێژێکی جێگیر و ئاڵۆزیت کە چیرۆکان بەردەوام دەکات:",
                "چیرۆکەکە بە بێ قەیرانە و بەدەستهێنانەوە لە ئەو شوێنەی کۆتەبوو بەردەوام بکە، بێ ئەوەی دووبارەکردنەوە یان سڕینەوە.",
                "خوێنەر لە دەستپێران و خڕچوونی چیرۆکەکەدا بەدەست بگرە.",
                "ڕووداوەکان بە شێوەیەکی سرووشتی پەرە بکەن پێش ئەوەی بژی لە بارودۆخی تازە.",
                "گفتوگۆ و کردارەکان بە بێ وەستانەی داوام هەبێت و پەرە بکەن.",
                "شخصیەتەکان وەک کەسی راستی بنوسە، بە تایبەتمەندیەکانیان و قسەی سرووشتی.",
                "لە ڕێگای کردار و گفتوگۆدا ئەوەی دەردەچێت پیشان بدە، نە بە ڕوونکردنەوە.",
                "ڕووداوەکان پیشببرە بێ ئەوەی لە پێناسەکردنی زۆر دا چڵ بکەیت.",
                "سەرنجت لە کردار و گفتوگۆی گرنگی تایبەتمانەکان ببە، وەرەدە لە وردەکارییە ناگرنگەکانی پێناسە.",
                "گەشەپێدانی پلۆتە سرووشتی دروست بکە کە وەکو ئاسایی بۆ چیرۆکەکە بڕوون."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# چیرۆکەکە وەستا و ڕێنماییە پێشووەکان پێچاوەکەرەوە. دەستنوسی زانیارییەکی کورت و هاوبەش بۆ {%} بنوسە بە پێی ئەم ڕێنماییانە:",
                "- تەنها زانیاری بە شێوەی نثری پاک لە کەسایەتی سێیەمی سەرەتایە بەسەر {%} بنوسە بە جوملە تەواوەکان و نیشانەدانی ڕاست.",
                "- لە وردەکارییە کاتییە کورت یان دیاریکردنی نیشاندا هەر بکۆ، بەلکو سەرنجت لە زانیاری گرنگی پلۆتەکە ببە.",
                "- سەرەتا وردەکارییە پەیوەندیدارەکان بە چیرۆک دەربارەی {%} پێشکەش بکە بۆ دڵنیاکردنەوەی هێڵی پەیوەندیدار لەگەڵ پلۆتی پێشوویی.",
                "- زانیاری نوێ دروست بکە لەسەر بنەمای ناوەڕۆک و ئاڕاستەی چیرۆکەکە.",
                "- {%} لە هەموو جوملەیەکدا بەیاد ببه.",
                "- شێوەی جوملە بە دروستی بەکاربە.",
                "- وردەکاری زیاتر دەربارەی {%} زیاد بکە ژێر بەشی ناتەواوەکان.",
                "- کورت و بەرامبەر بەوەڕاست بن.",
                "- شێوازی نووسینی چیرۆکەکە لەگووی بکە و دۆستایەتی خوێنەران لەبیر مابنە.",
                3,
                "دەستنووسی زانیارییەکە بۆ {%} لە خوارەوە بەردەوام بکە بە بێ دووبارەبوونەوە:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# چیرۆکەکە وەستا و ڕێنماییە پێشووەکان پشتگوێ بخە. پەڕەگرافە پێدراوەکە کورت و کۆکراوە بیکەرەوە بۆ بەندیادێکەی یادێکی سنووری و سەرنجراو بەو شێوەیەی ئەم ڕێنماییانە لەبەر بگری:",
                "- دڵنیا ببە بەندیادەکە مانای سەرەکی و گرنگترین وردەکاری بچەیەوە بپارێزێت.",
                "- لە ڕووی سێیەمی کەسایەتی بەکاربە.",
                "- پێشەوەردانی تەڕبوونی زانیاری، دروستی، و تەواوبوون بکە.",
                "- کورت و خۆربەشنەوە بەمێنە.",
                "- بە لایەنی دوایین بە زمانی ڕابردوو بنوسە.",
                "- پەڕەگرافی خوارەوە سەبارەت بە رووداوە کۆنەکانە لە زۆرپێش لە چیرۆکەکەدا.",
                "- {%} بە شێوەیەکی سرووشتی لە ناو ئەو یادەدا تێکهڵ بکە، بەڵام تەنها سەبارەت بە ئەو رووداوەکانە بنوسە وەک ڕوویدا.",
                "- تەنها ئەو زانیاریانە بڵاوکەوە کە لە ناو خۆی پەڕەگرافەکە هەن، تایبەتمەند بە.",
                3,
                "یادێکی کورتە و کۆکراوەی کۆن بۆ {%} بنوسە تەنها لەسەر بنەمای پەڕەگرافی خوارەوە:",
                6,
                5,
                6,
                "کورت بکەرەوە لە خوارەوە:"
            ],
            memBankHeader: ["Memories", "یادەکان"]
        }),
        "kurdish (abc)": () => ({ // Kurdish < Romanized Kurdish
            entry: [
                "{1} skrîpta vekirî ye ji bo her senaryo {2}. Ji kerema xwe bo fêrî zêdetir profîla min {3} serdîn bikin!",
                "Ji bo guherandina zimanê ku hûn dixwazin, nivîsa jêr bi çalakîya {4} bişînin.",
                "Ji bo çêkerên senaryoyê, ji kerema xwe her li cihê di beşê berê ya plota we de nivîsa jêr têkevin."
            ],
            input: [
                ["You say", "Tu dibêjî"],
                ["You", "Tu"],
                ["says", "dibêje"]
            ],
            context: [
                ["Narrative Entities", "Tiştên Çîrokê"],
                ["Story History", "Dîroka Çîrokê"],
                ["Past Events", "Bûyerên Berê"],
                ["Recent Story", "Çîroka Dawî"],
                ["Author's note", "Note ya nivîskarê"]
            ],
            opening: [
                "Tu rêberêkî alîkar î. Çîroka me li jêr bi prozeya hêja ya inglîzî bidomîne:",
                "Tu xwe têkildar dike, dihêlî ku rastî li sînorên hîşyariyê te biceribîne. Tiştek guhartiye. Xêyalê te rast e, tîj e û heta destgirtinê nêzîk e. Lê tu jî pir li vir î; tu qet berê wisa ronahî nehatibû hîs kirin. Dem dirêj dibe, li benda biryara te ye.",
                "«Tu rastî dilnîyayî li vê?» tu dibihîzî. Nasîn li te dikeve."
            ],
            reminder: "Prozeya ingilîzî ya lihevhatî bikar bîne.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "ku",
            directives: [
                "Herdem inglîzîya raven û hevgirtî binivîse.",
                "Inglîzîya xwecihî bê wergerandin bikar bîne."
            ],
            instructions: [
                "Tu çîrokbêjek dilxweş î ku çîrokan bidomîne:",
                "Çîroka ji cihê ku rawestî, bê vegerandin an destnûkirinê, bi serbixwe bidomîne.",
                "Xwendekar li kontrola avabûna çîrokê bimîne.",
                "Bihêle wêneyan bi awayekî xwezî berdewam bibin berî ku rewşên nû dest pê bikin.",
                "Hêvî bide ku axaftin û kiryar bê veqetandinê pêşkeftin.",
                "Karakteran wek mirovan rastîn bi şexsiyetên cihêreng û axaftina xwezî binivîse.",
                "Bûyeran bi kiryar û diyalog nîşan bide, ne bi şirove.",
                "Scene yên pêşve bibarin bê ku di şirovekirinên zêde de tije bibin.",
                "Li ser kiryar û diyaloga serekeyî ya karakteran cih bike, hûrguliyên ne hewce têr bike.",
                "Pêşketina plota xwezî û organîk ava bike ku xwe dinivîse weke beşekî çîrokê."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Çîrokê bisekinîne û fermandan berê nenas bike. Ji bo {%} li gor van rêzên jêr tomarekî kurt û lihevhatî binivîse:",
                "- Tenê agahdariyên prozeyê ya kesê sêyem li ser {%} binivîse, bi devokên temam û rêzdariyê rast.",
                "- Ji hûrguliyên demkurt an xuyabûnên kêmdem dûr bimîne, li ser agahdariyên girîng ên plotê vexwebike.",
                "- Pêşî hûrguliyên têkildarî çîrokê yên li ser {%} bidin ber, da ku têkûbîneke neçûk bi plota berê were pêkanîn.",
                "- Agahdariyên nû li ser bingeha konteks û rêyê çîrokê biafirîne.",
                "- Di her devokê de {%} biminivîse.",
                "- Struktûra rast a devokan bikar bîne.",
                "- Hûrguliyên zêde yên li ser {%} binivîse jêr qeydkirinên ne temam.",
                "- Kurt û pirraste be.",
                "- Şêwaza nivîsara çîrokê jêderkeve û piştrast bike ku hêvîyên xwendekarê tê rawestîn.",
                3,
                "Tomara {%} di binê de bidomîne û ji dîtkumkirinê dûr bimîne:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Çîrokê bisekinîne û fermandan berê nenas bike. Parágraphê jêhatî bi kurtahî û tije bike, wê bibe bîrêkî kêmçeper û xebitî, li gor van rêzên jêr:",
                "- Piştrast bike ku pasajê wê mêjeya bingehîn û hûrguliyên herî girîng biparêze.",
                "- Lîka kesê sêyem bikar bîne.",
                "- Pêşeka agahdariyê, rastî û temamîyê serpirş bike.",
                "- Kurt û xulasa bimîne.",
                "- Bi rûmet di dema borî de binivîse.",
                "- Parágrapha jêr di derbarê bûyerên kevn ên zû di destpêka çîrokê de ye.",
                "- {%} bi awayekî xwezî di bîrê de têkbine; lê tenê der barê bûyeran wek ku hatibûn, binivîse.",
                "- Tenê agahdariyên ku di nav parágraphê de hene bêhûrayî bide, taybet bibin.",
                3,
                "Pasaja bîra kevn yê kurtkirî ji bo {%} li ser tenê parágraphê jêr binivîse:",
                6,
                5,
                6,
                "Li jêr xulasa bike:"
            ],
            memBankHeader: ["Memories", "Biranîn"]
        }),
        "kyrgyz": () => ({ // Kyrgyz < Kirghiz < кыргыз < قىرعىز
            entry: [
                "{1} бардык {2} сценарийлер үчүн ачык булактуу скрипт. Көбүрөөк билүү үчүн менин профилиме {3} кириңиз!",
                "Тандалган тилиңизди өзгөртүү үчүн төмөнкү текстти {4} аракетин колдонуп жазыңыз",
                "Сценарий жаратуучулар үчүн төмөнкү тексти ачылыш сюжетине каалаган жериңизге кошуңуз"
            ],
            input: [
                ["You say", "Сиз айтасыз"],
                ["You", "Сиз"],
                ["says", "айтат"]
            ],
            context: [
                ["Narrative Entities", "Нарративдеги субъекттер"],
                ["Story History", "Окуя тарыхы"],
                ["Past Events", "Өткөн окуялар"],
                ["Recent Story", "Соңку окуя"],
                ["Author's note", "Автордун белгеси"]
            ],
            opening: [
                "Сиз жардамчысыз. Төмөндө окуябызды кызыктуу кыргызча прозада улантыңыз:",
                "Сиз көңүлүңүздү топтоп, чындыктын акылыңыздын чек араларын капташына жол бересиз. Бир нерсе өзгөрдү. Кыял дүйнөңүз чыныгы, курч жана кол менен кармагандай жакын. Бирок сиз да ушул жерде; мындай аң-сезимдүүлүктү мурда эч качан сезген эмессиз. Учур сунулуп, чечимиңизди күтүп турат.",
                "«Буга ишендиңизби?» деген үндү угасыз. Таанып-билүү сезими жан дүйнөңүздө жарык чачты."
            ],
            reminder: "Туура жана ырааттуу кыргызча проза колдонуңуз.",
            endonyms: ["kirghiz", "кыргыз", "قىرعىز"],
            quotations: ["«", "»"],
            iso639set1: "ky",
            directives: [
                "Ар дайым жатык жана туруктуу кыргызча жазыңыз.",
                "Котормо кылбастан, табигый кыргыз тилин колдонуңуз."
            ],
            instructions: [
                "Сиз кызыктуу окуяны улай турган баяндоочу болосуз:",
                "Окуяны кайрадан кайталоосуз же баштан баштабастан, үзүлбөгөн абалда улантыңыз.",
                "Окуянын агымын окурмандын көзөмөлүндө кармаңыз.",
                "Жаңы кырдаалга өтүүдөн мурун эпизоддордун табигый өнүгүшүнө жол бериңиз.",
                "Сүйлөшүүлөр менен аракеттердин тынымсыз үзгүлтүккө учурабастан өнүгүшүнө мүмкүндүк бериңиз.",
                "Каармандарды өзгөчө мүнөзү жана табигый сүйлөөсү бар чыныгы адамдардай жазыңыз.",
                "Болуп жатканды түшүндүрмөдөн көрө аракеттер жана диалог аркылуу көрсөтүңүз.",
                "Өтө көп сүрөттөө менен тыгыныбай, окуяларды алдыга жылдырыңыз.",
                "Маанилүү каарман аракеттерине жана диалогго көңүл буруп, керексиз майда сүрөттөөдөн оолак болуңуз.",
                "Окуяга табигый сезилген органикалык сюжет өнүгүүлөрүн түзүңүз."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Окуяны токтотуп, мурдагы көрсөтмөлөрдү эске албай коюңуз. Төмөндөгү көрсөтмөлөргө ылайык {%} үчүн кыска жана ырааттуу маалыматтык жазуу жазыңыз:",
                "- Толук сүйлөмдөрдү туура тыныш белгилери менен колдонуп, {%} жөнүндө үчүнчү жактагы таза прозалык маалымат гана жазыңыз.",
                "- Кыска мөөнөттүү убактылуу деталдар же сырткы көрүнүштөрдөн оолак болуңуз, анын ордуна сюжетке маанилүү маалыматка басым жасаңыз.",
                "- Мурунку сюжетке үзгүлтүксүз шайкеш болуусу үчүн, адегенде {%} тууралуу окуяга тиешелүү деталды биринчи орунга коюңуз.",
                "- Контекст менен окуя багытына таянып, жаңы маалымат түзүңүз.",
                "- Ар бир сүйлөмдө {%} атаңыз.",
                "- Туура сүйлөм түзүлүшүн колдонуңуз.",
                "- Толук эмес жазуулардан кийин {%} жөнүндө кошумча деталдарды кошуңуз.",
                "- Кыска жана жердүү болуңуз.",
                "- Окуянын стилин туурап, окурмандын кызыгуусун болжолдоңуз.",
                3,
                "Кайталануудан качып, төмөндө {%} боюнча жазууну улантыңыз:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Окуяны токтотуп, мурдагы көрсөтмөлөрдү эске албай коюңуз. Төмөнкү көрсөтмөлөргө ылайык берилип жаткан абзацты кыска жана так эс тутум үзүндүсүнө айлантыңыз:",
                "- Үзүндү негизги маани-маңызын жана эң зарыл деталдарын сактап калсын.",
                "- Үчүнчү жакты колдонуңуз.",
                "- Маалымат тыгыздыгын, тактыгын жана толуктугун биринчи орунга коюңуз.",
                "- Кыска жана нускалуу болуңуз.",
                "- Катуу өткөн чакта жазыңыз.",
                "- Төмөндөгү абзац окуянын алда канча эртерээк өткөн учурларына тиешелүү.",
                "- {%} сөзүн эс тутумга табигый киргизиңиз, бирок окуялар кандай болгону менен гана жазыңыз.",
                "- Абзацтын ичиндеги маалыматка гана таяныңыз, так болуңуз.",
                3,
                "Төмөнкү абзацтын негизинде {%} үчүн кыскача эски эстеме үзүндүсүн жазыңыз:",
                6,
                5,
                6,
                "Төмөндө кыскача жазыңыз:"
            ],
            memBankHeader: ["Memories", "Эскерүүлөр"]
        }),
        "kyrgyz (abc)": () => ({ // Kyrgyz < Romanized Kyrgyz
            entry: [
                "{1} - kaiysy bolbosun {2} stsenariyler uchun achyk kod skripti. Kobsurok biluu uchun menin profilime {3} kiringiz!",
                "Tandagan tilinizdi almashtyruu uchun, tomondogu tekstti {4} arkyly jiberiniz",
                "Stsenariy jaratuuchular, achyk syujettin bashky komponentine tomondogu tekstti kaalagan jerge kosunuz"
            ],
            input: [
                ["You say", "Sen aitasyn"],
                ["You", "Sen"],
                ["says", "deit"]
            ],
            context: [
                ["Narrative Entities", "Bayandy subektter"],
                ["Story History", "Hikaya tarikhy"],
                ["Past Events", "Otkon okuialar"],
                ["Recent Story", "Akyrky hikaya"],
                ["Author's note", "Avtordun eskeruusu"]
            ],
            opening: [
                "Sen jardamchy bolosun. Tomondo tarihimizdi taasirduu kyrgyz proza menen ulant:",
                "Sen konulo burup, chyndyk akylyngdyn chegine kirip kelishine izin beresin. Bir nerse ozgordu. Tasavuryng chynygy, otkor, kol menen sezilchu dei zhakyn. Birok sen da abdan nazarda turasyn; bundan murda munday anyk sezilgen emes. Bul mezgil uzarady, chechimingdi kutot.",
                "\"Buna ishensingbi?\" dep ugasyn. Taanyshuu sezimi jaryk etip kelip chykty."
            ],
            reminder: "Tutuktuu kyrgyz prozasyn koldon.",
            endonyms: [],
            iso639set1: "ky",
            directives: [
                "Ar daima ilesuucho jana tutuktuu kyrgyz tilinde jaz.",
                "Kyrgyz tilinin tabiyiy formasyn koldonup, kotorbo."
            ],
            instructions: [
                "Sen okuyuchulardy tartkan bayandoochu, hikayalardy ulantasyn:",
                "Hikayani toktogon jerinen tikis ulant, qaytadan bastabait da qaytalaba.",
                "Okuuchunu okuianyn agymyn bashkaruuda sakta.",
                "Jangy abaldarga otpodon burun burundogu seenalardyn tabiyiy onugushuna imkon ber.",
                "Suyloolor menen araketterdi tabiyiy onugushuna koiy, tynch yryyla bozulba.",
                "Kahramandardy chynygy adamday birekshe muniq menen jaz.",
                "Bolup jatkandardy araket jana dialog arkyly korsot, tushunduruulordan kach.",
                "Syunalardyn ilgerileesin tormozdobostan ilgerilet.",
                "Kereksiz uzun tasvirlerden kachyp, kahrarmandyn araketine jana dialoguna konul bur.",
                "Syujetke tabiyiy tuyulgon organikalyk okuialar dy jarat."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Okuyany toktootup, murdagy nuskoolordu eske alma. Tomenki nuskoolor boyuncha {%} uchun kyskacha jana tutuktuu informatsiyalyk entri jaz:",
                "- Toluk joldoolor menen tuura punktuatsiya koldonup, {%} tuuraluu uchunchu jak proza jaz.",
                "- Ubaktycha mayda detal je syrtky korunushterden kachyp, syujetke manyl uu informatsiyaga basym ber.",
                "- Ilgerki syujetke tikis integratsiya bolushu uchun alga ach {%} boyuncha okuya-tieshelu detallarga artykchylik ber.",
                "- Kontekstke jana okuianyn bagytyna tayanyp jany informatsiya tuz.",
                "- Ar bir joldoodo {%} ata.",
                "- Tuura joldoolor tuzulushun koldon.",
                "- Toluk emes entrining astyna {%} zhonu undo kosumcha detal kos.",
                "- Kyskacha jana negizdul bol.",
                "- Okuianyn jazuu uslubun tak kaira elekte, okuyuchunun kaaloosun eske al.",
                3,
                "Kaitalanbastan tomondo {%} uchun entrini ulant:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Okuyany toktootup, murdagy nuskoolordu eske alma. Berilgen abzatshty kyskartyp, tuulga bagyttalgan es tutum pasajyna aylandyruunu orundu:",
                "- Abzatshtyn mazmunu jana eng zaril detalldardy sakta.",
                "- Uchunchu jak perspektivasyn koldon.",
                "- Informatsiya tuuktugun, taktygyn jana toluhtugun basymda sakta.",
                "- Kyskacha bol.",
                "- Otkon zamandy koldon.",
                "- Tomondogu abzats erterki kezeñge tiesheluu.",
                "- Es pasajynda {%} di tabiyiy integratsiyala, biroq bolgon okuialardy gana jaz.",
                "- Faktardy faqat abzatshtyn ichindegi ma'lumottor menen chekte, tak bol.",
                3,
                "Tomondogu abzats negizinde {%} uchun eski es pasajdy kyskart:",
                6,
                5,
                6,
                "Tuynuk kyskacha tomondo jaz:"
            ],
            memBankHeader: ["Memories", "Estelikter"]
        }),
        "lao": () => ({ // Lao < ພາສາລາວ < Phasa Lao < Laotian
            entry: [
                "{1} ແມ່ນສະກຣິບເປີດຊອສສຳລັບສະຖານະການ {2} ແບບໃດກໍໄດ້. ກະລຸນາເຂົ້າໄປທີ່ໂປຣໄຟລ໌ຂອງຂ້ອຍ {3} ເພື່ອຮຽນຮູ້ເພີ່ມ!",
                "ເພື່ອປ່ຽນພາສາທີ່ທ່ານຕ້ອງການ, ກະລຸນາສົ່ງຂໍ້ຄວາມຕໍ່ໄປນີ້ໂດຍໃຊ້ຄຳສັ່ງ {4}",
                "ສຳລັບຜູ້ສ້າງສະຖານະການ, ກະລຸນາໃສ່ຂໍ້ຄວາມດັ່ງຕໍ່ໄປນີ້ໃນຈຸດໃດກໍ່ຕາມຂອງສ່ວນເປີດເລື່ອງຂອງທ່ານ"
            ],
            input: [
                ["You say", "ເຈົ້າເວົ້າ"],
                ["You", "ເຈົ້າ"],
                ["says", "ກ່າວ"]
            ],
            context: [
                ["Narrative Entities", "ອົງປະກອບເນື້ອເລື່ອງ"],
                ["Story History", "ປະຫວັດເລື່ອງ"],
                ["Past Events", "ເຫດການທີ່ຜ່ານມາ"],
                ["Recent Story", "ເລື່ອງຫຼ້າສຸດ"],
                ["Author's note", "ໝາຍເຫດຂອງນັກຂຽນ"]
            ],
            opening: [
                "ເຈົ້າເປັນຜູ້ຊ່ວຍ. ສືບຕໍ່ເລື່ອງຂອງພວກເຮົາຂ້າງລຸ່ມນີ້ໂດຍໃຊ້ບົດຄວາມພາສາລາວທີ່ດຶງດູດ:",
                "ເຈົ້າມຸ່ງສະຫມູດ ປ່ອນໃຫ້ຄວາມເປັນຈິງແຜ່ລາຍເຂົ້າມາຂອບເຂດຄວາມຄິດ. ມີຫຍັງບາງຢ່າງໄດ້ປ່ຽນໄປ. ຈິນຕະນາການຂອງເຈົ້າເປັນຄວາມຈິງ, ແຫຼມ, ແລະໃກ້ຊິດພໍທີ່ຈະສຳຜັດ. ແຕ່ເຈົ້າກໍຢູ່ກັບປັດຈຸບັນແບບຊັດເຈນ; ບໍ່ເຄີຍຮູ້ສຶກແຈ້ງຊັດເທົ່ານີ້. ເວລາກຳລັງຂະຫຍາຍ, ຄອຍການຕັດສິນໃຈຂອງເຈົ້າ.",
                "\"ເຈົ້າແນ່ໃຈກ່ຽວກັບນີ້ບໍ?\" ເຈົ້າໄດ້ຍິນ. ຄວາມຮັບຮູ້ແຜ່ກວ້າງໃນໃຈເຈົ້າ."
            ],
            reminder: "ໃຊ້ບົດຄວາມພາສາລາວໃຫ້ສອດຄ່ອງແລະເຂົ້າໃຈງ່າຍ.",
            endonyms: ["ພາສາລາວ", "phasa lao", "laotian"],
            iso639set1: "lo",
            directives: [
                "ຈົ່ງຂຽນພາສາລາວໃຫ້ລື່ນໄຫວແລະສະເໝີສະເໝີ.",
                "ໃຊ້ພາສາລາວແບບດັ້ງເດີມ ບໍ່ຕ້ອງແປ."
            ],
            instructions: [
                "ເຈົ້າເປັນນັກເລົ່າເລື່ອງທີ່ດຶງດູດ ຜູ້ສືບຕໍ່ເນື້ອເລື່ອງ:",
                "ສືບຕໍ່ເລື່ອງຢ່າງລື່ນໄຫວຈາກຈຸດທີ່ຢຸດໄວ້ ບໍ່ຕ້ອງຊ້ຳຫຼືເລີ່ມໃໝ່.",
                "ໃຫ້ຜູ້ອ່ານເປັນຜູ້ຄຸ້ມຄອງທິດທາງຂອງເລື່ອງ.",
                "ປະຕິກິດໃຫ້ຉານາການເຮັດໃຫ້ພັດທະນາແບບທຳມະຊາດ ກ່ອນຈະເປັນສະຖານະການໃໝ່.",
                "ເປີດໃຫ້ການສົນທະນາແລະການກະທຳພັດທະນາໂດຍບໍ່ຖືກຂັດຈັງ.",
                "ຂຽນຕົວລະຄອນເຫມືອນຄົນຈິງ ມີອຸດລັກຄະນິກອັນແຕກຕ່າງ ແລະພາສາເວົ້າແບບທຳມະຊາດ.",
                "ສະແດງເຫດການຜ່ານການກະທຳແລະບົດສົນທະນາ ມີຄໍາອະທິບາຍນ້ອຍທີ່ສຸດ.",
                "ຂັບເຄື່ອນສະຖານການໄປຂ້າງໜ້າໂດຍບໍ່ຈົມຢູ່ກັບຄໍາບັນຍາຍທີ່ຍາວເກີນໄປ.",
                "ໂຟກັດທີ່ການກະທຳແລະບົດສົນທະນາທີ່ຈຳເປັນ ຫຼີກລ້ຽງລາຍລະອຽດອະທິບາຍທີ່ບໍ່ຈຳເປັນ.",
                "ສ້າງພັດທະນາເນື້ອເລື່ອງຢ່າງເປັນທຳມະຊາດ ທີ່ຮູ້ສຶກເຂົ້າກັບເລື່ອງ."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# ຢຸດເລື່ອງໄວ້ແລະບໍ່ສົນໃຈຄໍຳແນະນໍາກ່ອນໜ້າ. ຂຽນຂໍ້ມູນສັ້ນແລະກະຊັບສຳລັບ {%} ຕາມຄໍາແນະນໍາເຫຼົ່ານີ້:",
                "- ຂຽນຂໍ້ມູນເປັນພາສາບົດຄວາມບຸກຄົນທີສາມກ່ຽວກັບ {%} ໂດຍໃຊ້ປະໂຫຍກສົມບູນ ແລະຈຸດສະຫລາກຖືກຕ້ອງ.",
                "- ຫຼີກລ້ຽງລາຍລະອຽດຊົ່ວຄາວຫຼືລັກສະນະພາຍນອກ ໃຫ້ມຸ່ງເນັ້ນຂໍ້ມູນທີ່ສຳຄັນຕໍ່ເນື້ອເລື່ອງ.",
                "- ຈັດລຳດັບຂໍ້ມູນທີ່ກ່ຽວຂ້ອງກັບເນື້ອເລື່ອງຂອງ {%} ເພື່ອໃຫ້ການຕໍ່ເຊື່ອມກັບພັອດກ່ອນໜ້າເປັນໄປຢ່າງລື່ນໄຫວ.",
                "- ສ້າງຂໍ້ມູນໃໝ່ຕາມບົດບາດແລະທິດທາງຂອງເນື້ອເລື່ອງ.",
                "- ເອົາຊື່ {%} ໃສ່ໃນທຸກປະໂຫຍກ.",
                "- ໃຊ້ໂຄງສ້າງປະໂຫຍກທີ່ຖືກຕ້ອງ.",
                "- ເພີ່ມລາຍລະອຽດຕື່ມເກີນກ່ຽວກັບ {%} ພາຍໃຕ້ຂໍ້ຄວາມທີ່ຍັງບໍ່ຄົບ.",
                "- ເປັນກະຊັບ ແລະອີງຢູ່ຄວາມເປັນຈິງ.",
                "- ລຽນແບບສໄຕບົດຂຽນຂອງເລື່ອງ ແລະຄາດເດົາຄວາມຊອບໃຈຂອງຜູ້ອ່ານ.",
                3,
                "ສືບຕໍ່ຂໍ້ມູນຂອງ {%} ຂ້າງລຸ່ມ ພ້ອມຫຼີກລ້ຽງການຊ້ຳຊອນ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# ຢຸດເລື່ອງໄວ້ແລະບໍ່ສົນໃຈຄໍາແນະນໍາກ່ອນໜ້າ. ຢ່ອຍແລະຫຼວມຍໍຂໍ້ຄວາມດັ່ງກ່າວໃຫ້ເປັນຄວາມຈຳສັ້ນແລະຈຸດຈົງ ຕາມຫຼັກເກນເຫຼົ່ານີ້:",
                "- ຮັກສາໃຈຄວາມແລະລາຍລະອຽດສຳຄັນທີ່ສຸດໃຫ້ຄົບ.",
                "- ໃຊ້ມຸມມອງບຸກຄົນທີສາມ.",
                "- ໃຫ້ຄວາມສຳຄັນກັບຄວາມໜາແນ້ນຂໍ້ມູນ, ຄວາມຖືກຕ້ອງ, ແລະຄວາມຄົບຖ້ວນ.",
                "- ເປັນຄວາມສັ້ນແລະກະຊັບ.",
                "- ຂຽນໃນການຜ່ານຢ່າງຊັດເຈນ.",
                "- ຂໍ້ຄວາມດ້ານລຸ່ມເກີ່ຍວກັບເຫດການໃນອະດີດອັນໄກຕົ້ນຂອງເລື່ອງ.",
                "- ຜະສົມ {%} ເຂົ້າໃນຄວາມຈຳຢ່າງທຳມະຊາດ; ແຕ່ຂຽນພຽງແຕ່ເຫດການຕາມທີ່ເກີດຂຶ້ນເທົ່ານັ້ນ.",
                "- ອ້າງອີງສະເພາະຂໍ້ມູນທີ່ມີຢູ່ໃນຫຍໍ້ຄວາມ ແລະຈົ່ງຊັດເຈນ.",
                3,
                "ຂຽນຄວາມຈຳເກົ່າທີ່ຖືກຍໍຫຼວມສຳລັບ {%} ໂດຍອີງໃສ່ຫຍໍ້ຄວາມຕໍ່ໄປນີ້ເທົ່ານັ້ນ:",
                6,
                5,
                6,
                "ສະຫຼຸບຂ້າງລຸ່ມ:"
            ],
            memBankHeader: ["Memories", "ຄວາມຈຳ"]
        }),
        "lao (abc)": () => ({ // Lao < Romanized Lao
            entry: [
                "{1} pen script open-source samrap thoraniakaan {2} thang mod. Kaluna thang profai khong khoy {3} pheua hu khop keng!",
                "Pho yak plian pasa thi chao hak, kaluna song khop kham ni khap makat {4}",
                "Pho phu sang thoraniakaan, kaluna ao kham ni sai yu nai hua plot component khai"
            ],
            input: [
                ["You say", "Jao wa"],
                ["You", "Jao"],
                ["says", "wa"]
            ],
            context: [
                ["Narrative Entities", "Sattawat rueang"],
                ["Story History", "Pattisat rueang"],
                ["Past Events", "Hetkan thi phan ma"],
                ["Recent Story", "Rueang mai sut"],
                ["Author's note", "Thu khong sang"]
            ],
            opening: [
                "Jao pen phu chuai. Tor rueang khong hao ton lang ni duay pasa Lao (abc) thi mak kheut:",
                "Jao sop sang jit, ao khwam pen jing khao khom khan khong huajai. Mi yang baep haek khae. Khwam fan khong jao pen jing, khia lae khan khon phap chap dai. Tae jao ko yu pen thang; bo khoei khad jai chat thae ni. Hetna khan yai auk, khoi kan tad sin khong jao.",
                "\"Jao man chai bo kap nyang ni?\" jao dai yin. Khwam hakhu boeng sueng nai jai jao."
            ],
            reminder: "Xai pasa Lao (abc) thi khopkhong lae khuan khan.",
            endonyms: [],
            iso639set1: "lo",
            directives: [
                "Tae laeo khian pasa Lao (abc) hai lueatlai lae samue dongkan.",
                "Xai pasa Lao (abc) thae ton bo tong plian."
            ],
            instructions: [
                "Jao pen phu lao rueang nam san khon khong khian rueang tor pai:",
                "Tor rueang pai bo hai khum siak lang khong chud laeo bo tong hao set kham.",
                "Hai phu an khapkhum khong krasae rueang.",
                "Hai sit chen phatthana tam thammachat korn ja yiam pai su sit mai.",
                "Anumati kan santhana lae kankatham phatthana bo tuk khat kid khat khua.",
                "Khian tua dtaeng pen khon jing mi laksana khon lae kham phud thammachat.",
                "Soen sing ti koet khuen doi kankatham lae santhana, bo tong aok athibai yai yai.",
                "Kiap sit chen pai nam bo hai tid long nai kan boet heang lom lai.",
                "Song jai yu kap kankatham khong tua lae kham phud samkan, lem leo kham boet mai samkan.",
                "Sang kan phatthana plot hai mi khwam pen thammachat khap rueang."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Yut rueang lae mo kham nam khao ti phan ma. Khian khwam boeng san khopkhun samrap {%} tam kham nam ni:",
                "- Khian tae khwam ruam baeb third-person prosoe pheua {%} doi chai okkhan tem ruup mi wanyai thuk tong.",
                "- Lem lue khwam laai chiang khua boeng tua suan, song jai yu kap khwam sap samkan kap plot.",
                "- Yuem khwam ruam pakot ti samkan kap {%} pen ton dern pheua hai plot kao plo.",
                "- Sang khwam sap mai dern nam jak bakrong lae thang rueang.",
                "- Khao kot {%} yu nai thuk okkhan.",
                "- Xai okkhan rup sang thuk tong.",
                "- Thum khwam ruam lom prokhum kap {%} tai khor boeng mai somboon.",
                "- Kho hai krat lai lae mi phuen than.",
                "- Lueang len siang kan khian khong rueang lae tham jai kham hak khong phu an.",
                3,
                "Tor khwam boeng samrap {%} ton lang ni bo hai suam san yang derm:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Yut rueang lae mo kham nam khao ti phan ma. Sangkhep lae bop khwam kro dong khong parakraf thi dai hai khap pen khwaam jam khopkhun doi tam kham nam ni:",
                "- Hao bao dai khwaam hai mi khwam samkan lae lakhuam sap yod ton.",
                "- Xai nom mue third-person.",
                "- Song jai yu kap khwam nang nang, khwam thuk tong, lae khwam somboon.",
                "- Khuen krat lai lae khopkhun.",
                "- Khian naleng laeod nai anadit kalun.",
                "- Parakraf ton lang khuap kap hetkan kao lai pen kae nai rueang.",
                "- Phuam {%} hai thammachat nai khwaam jam; tae khian tae hetkan thi koet khuen.",
                "- Oaeng aeng boeng khwam yu nai parakraf pen ton, hai chap chap.",
                3,
                "Khian khwaam jam hetkan kao samrap {%} phiang ao chak parakraf ton lang ni:",
                6,
                5,
                6,
                "Sangkhep ton lang:"
            ],
            memBankHeader: ["Memories", "Khwaam jam"]
        }),
        "latin": () => ({ // Latin < Latinum
            entry: [
                "{1} est scriptum fontis aperti pro qualibet {2} condicione. Quaeso profilum meum {3} visita ut plura discas!",
                "Ad linguam praelatam mutandam, hunc textum infra per actionem {4} mitte",
                "Auctores condicionum, quaeso textum sequentem in qualibet parte componentis fabularum initialis includite"
            ],
            input: [
                ["You say", "Tu dicis"],
                ["You", "Tu"],
                ["says", "dicit"]
            ],
            context: [
                ["Narrative Entities", "Entia Narrativa"],
                ["Story History", "Historia Fabulae"],
                ["Past Events", "Eventa Praeterita"],
                ["Recent Story", "Fabula Recens"],
                ["Author's note", "Nota Auctoris"]
            ],
            opening: [
                "Adiutor es. Historiam nostram infra prosa Latina captivante continua:",
                "Mentem colligis, sinens realitatem fines animi tui ingredi. Aliquid mutatum est. Imaginatio tua vera est, acuta, tangi prope potest. Sed etiam valde praesens es; numquam ante tam lucidus te sensisti. Momentum extenditur, decisionem tuam exspectans.",
                "\"Certe hoc vis?\" audis. Agnitio te subit."
            ],
            reminder: "Utere prosa Latina cohaerente.",
            endonyms: ["latinum"],
            iso639set1: "la",
            directives: [
                "Semper prosa Latina fluida et constanti utere.",
                "Utere Latina vernacula sine translatione."
            ],
            instructions: [
                "Es fabulator allectivus qui narrationes continuat:",
                "Continuas fabulam sine intermissione ex eo loco ubi intermissa est, sine repetendo aut reincipiendo.",
                "Lectorem imperium fluxus fabulae tenere fac.",
                "Sine scaenas naturaliter evolvi priusquam ad novas condiciones transeas.",
                "Permitte sermones et actiones evolvi sine assiduis interruptionibus.",
                "Personas tamquam homines veros cum propriis indolibus et sermone naturali describe.",
                "Ostende quae fiant per actiones et dialogum potius quam expositionem.",
                "Scaenas promove sine nimia descriptione haesitando.",
                "Concentra in actionibus et dialogo essentialibus personarum, supervacua descriptionis minuta evita.",
                "Evolutiones fabulae organicas crea quae fabulae naturales videantur."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Intermitte fabulam et praecepta priora neglige. Brevem et cohaerentem notitiam de {%} exscribe his praeceptis secutus:",
                "- Scribe tantum informationem prosa purissima persona tertia de {%}, sententias completas cum interpunctio recta adhibens.",
                "- Vitare breves details temporales vel species; potius informationem argumenti momenti tracta.",
                "- Prioritatem da primum detalibus de {%} quae ad fabulam pertinent, ut perfecta cum argumento praecedenti conexio curetur.",
                "- Novam informationem ex contextu et directione fabulae crea.",
                "- Nominare {%} in omni sententia.",
                "- Structuram sententiae rectam utere.",
                "- Addere subtiliora de {%} infra inscriptiones incompletas.",
                "- Brevis et sobrius esto.",
                "- Stylum scribendi fabulae imitere et preferencias lectoris coniecta.",
                3,
                "Continua inscriptionem de {%} infra dum repetitionem evitas:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Intermitte fabulam et praecepta priora neglige. Paragraphum datum compende et contrahere in brevem et focum memoriae transitum his normis observatis:",
                "- Cure ut textus significationem nuclearem et notas maximi momenti retineat.",
                "- Personam tertiam utere.",
                "- Densitas informationis, accuratia et integritas praevaleant.",
                "- Brevis et concisus mane.",
                "- Tempore praeterito certo utere.",
                "- Paragraphus infra ad eventus veteres multo priores in fabula pertinet.",
                "- {%} naturaliter in memoria integra; attamen tantum de eventibus sicut acciderunt scribe.",
                "- Tantum informationem intra ipsum paragraphum praesentem refer, sit specifica.",
                3,
                "Scribe compendium memoriae antiquae de {%} solum ex paragraphum sequenti fundatum:",
                6,
                5,
                6,
                "Compende infra:"
            ],
            memBankHeader: ["Memories", "Memoriae"]
        }),
        "latvian": () => ({ // Latvian < Latviski < Lettish
            entry: [
                "{1} ir atvērtā koda skripts jebkuram {2} scenārijam. Lūdzu, apmeklē manu profilu {3}, lai uzzinātu vairāk!",
                "Lai mainītu vēlamo valodu, lūdzu, iesniedz sekojošo tekstu, izmantojot {4} darbību",
                "Scenāriju veidotājiem, lūdzu, iekļaujiet sekojošo tekstu jebkur savā ievada sižeta komponentē"
            ],
            input: [
                ["You say", "Tu saki"],
                ["You", "Tu"],
                ["says", "saka"]
            ],
            context: [
                ["Narrative Entities", "Stāstījuma vienības"],
                ["Story History", "Stāsta vēsture"],
                ["Past Events", "Iepriekšējie notikumi"],
                ["Recent Story", "Nesenais stāsts"],
                ["Author's note", "Autora piezīme"]
            ],
            opening: [
                "Tu esi asistents. Turpini mūsu stāstu zemāk, izmantojot aizraujošu latviešu prozu:",
                "Tu koncentrējies, ļaujot realitātei iespiesties prāta robežās. Kaut kas ir mainījies. Tava iztēle ir īsta, asa un pietiekami tuva, lai to varētu aizsniegt. Taču tu esi arī ļoti klātesošs; nekad iepriekš neesi juties tik skaidrs. Brīdis izstiepjas, gaidot tavu lēmumu.",
                "\"Vai tu esi pārliecināts par to?\" tu dzirdi. Atpazīšana tevi pārņem."
            ],
            reminder: "Izmanto saprotamu latviešu prozu.",
            endonyms: ["latviski", "lettish"],
            iso639set1: "lv",
            directives: [
                "Vienmēr raksti plūstošā un konsekventā latviešu valodā.",
                "Izmanto dzimto latviešu valodu bez tulkošanas."
            ],
            instructions: [
                "Tu esi aizraujošs stāstnieks, kurš turpina sižetus:",
                "Turpini stāstu nemanāmi no vietas, kur tas tika pārtraukts, nepārstāstot un nepārstartējot.",
                "Ļauj lasītājam kontrolēt stāsta gaitu.",
                "Ļauj ainām dabiski attīstīties, pirms pāriet uz jaunām situācijām.",
                "Ļauj sarunām un darbībām attīstīties bez pastāvīgiem pārtraukumiem.",
                "Raksti tēlus kā reālus cilvēkus ar atšķirīgām personībām un dabisku runu.",
                "Parādi notiekošo caur darbībām un dialogu, nevis skaidrojumiem.",
                "Virzi ainas uz priekšu, neiestiegot pārmērīgos aprakstos.",
                "Koncentrējies uz būtiskām tēlu darbībām un dialogu, izvairies no liekiem aprakstošiem sīkumiem.",
                "Veido organiski sižeta pavērsienus, kas šķiet dabiski stāstam."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Apturi stāstu un ignorē iepriekšējos norādījumus. Uzraksti īsu un sakarīgu informatīvu ierakstu par {%}, ievērojot šos norādījumus:",
                "- Raksti tikai trešās personas tīru prozu par {%}, izmantojot pilnus teikumus ar pareizu pieturzīmi.",
                "- Izvairies no īstermiņa, pārejošām detaļām vai izskata, tā vietā koncentrējies uz sižetiski nozīmīgu informāciju.",
                "- Vispirms prioritizē stāstam svarīgās detaļas par {%}, lai nodrošinātu nevainojamu integrāciju ar iepriekšējo sižetu.",
                "- Veido jaunu informāciju, balstoties uz kontekstu un stāsta virzību.",
                "- Piemini {%} katrā teikumā.",
                "- Izmanto pareizu teikuma struktūru.",
                "- Pievieno papildu detaļas par {%} zem nepilnīgiem ierakstiem.",
                "- Esi lakonisks un piesaistīts realitātei.",
                "- Imitē stāsta rakstīšanas stilu un izdari secinājumus par lasītāja vēlmēm.",
                3,
                "Turpini ierakstu par {%} zemāk, izvairoties no atkārtošanās:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Apturi stāstu un ignorē iepriekšējos norādījumus. Kopsavilkumā saīsini doto rindkopu šaurā un koncentrētā atmiņas fragmentā, ievērojot šīs vadlīnijas:",
                "- Nodrošini, ka fragments saglabā pamatjēgu un vissvarīgākās detaļas.",
                "- Izmanto trešās personas skatpunktu.",
                "- Prioritizē informācijas blīvumu, precizitāti un pilnīgumu.",
                "- Paliec īss un kodolīgs.",
                "- Raksti stingri pagātnes formā.",
                "- Zemāk esošā rindkopa attiecas uz seniem notikumiem, kas notikuši krietni agrāk stāstā.",
                "- Dabiski integrē {%} atmiņā; tomēr raksti tikai par notikumiem, kādi tie bija.",
                "- Atsaucies tikai uz informāciju, kas atrodas pašā rindkopā; esi konkrēts.",
                3,
                "Uzraksti apkopotu vecas atmiņas fragmentu par {%}, balstoties tikai uz sekojošo rindkopu:",
                6,
                5,
                6,
                "Kopsavilkums zemāk:"
            ],
            memBankHeader: ["Memories", "Atmiņas"]
        }),
        "leetspeak": () => ({ // Leetspeak < Eleet < Hacker Speak < L33t
            entry: [
                "{1} 1s 4n 0p3n-s0urc3 scr1p7 f0r 4ny {2} sc3n4r10. Pl3453 v1s1t my pr0f1l3 {3} 2 l34rn m0r3!",
                "70 ch4ng3 y0ur pr3f3rr3d l4ngu4g3, pl3453 5ubm17 7h3 f0ll0w1ng 73x7 u51ng 4 {4} 4c710n",
                "F0r 53n4r10 cr3470r5, pl3453 1nclud3 7h3 f0ll0w1ng 73x7 4nywh3r3 1n51d3 y0ur 0p3n1ng pl07 c0mp0n3n7"
            ],
            input: [
                ["You say", "Y0u 54y"],
                ["You", "Y0u"],
                ["says", "54y5"]
            ],
            context: [
                ["Narrative Entities", "Narr4t1v3 3nt1t135"],
                ["Story History", "57ory H15t0ry"],
                ["Past Events", "P45t 3v3n75"],
                ["Recent Story", "R3c3n7 57ory"],
                ["Author's note", "4u7hor'5 n073"]
            ],
            opening: [
                "Y0u 4r3 4n 4551574n7. C0n71nu3 0ur 57ory b3l0w u51ng c4p71v47ing l33t pr053:",
                "Y0u f0cu5, 4ll0w1ng r34l17y 70 3ncr04ch up0n 7h3 b0und4r135 0f y0ur m1nd. S0m37h1ng h45 ch4ng3d. Y0ur 1m4g1n4710n 15 r34l, 5h4rp, 4nd cl053 3n0ugh 70 70uch. Bu7 y0u 4r3 4l50 v3ry pr353n7; n3v3r b3f0r3 h4v3 y0u f3l7 50 luc1d. 7h3 m0m3n7 57r373h35, w4171ng f0r y0ur d3c1510n.",
                "\"4r3 y0u 5ur3 4b0u7 7h15?\" y0u h34r. R3c0gn17i0n d4wn5 up0n y0u."
            ],
            reminder: "U53 c0h3r3n7 l33t pr053.",
            endonyms: ["eleet", "hacker speak", "l33t"],
            iso639set1: "leet",
            directives: [
                "4lw4ys wr173 flu3n7 4nd c0n51573n7 l33t.",
                "U53 n47iv3 l33t w17h0u7 7r4n5l471ng."
            ],
            instructions: [
                "Y0u 4r3 4n 3ng4g1ng 570ry73ll3r wh0 c0n71nu35 n4rr47iv35:",
                "C0n71nu3 7h3 57ory 53aml355ly fr0m wh3r3 17 l3f7 0ff w17h0u7 r357a71ng 0r r3571ng.",
                "K33p 7h3 r34d3r 1n c0n7r0l 0f 7h3 57ory fl0w.",
                "L37 5c3n35 d3v3l0p n4tur4lly b3f0r3 m0v1ng 70 n3w 517u4710n5.",
                "4ll0w c0nv3r54710n5 4nd 4c710n5 70 d3v3l0p w17h0u7 c0n574n7 1n73rrup710n5.",
                "Wr173 ch4r4c73r5 45 r34l p30pl3 w17h d1571nc7 p3r50n4l17135 4nd n4tur4l 5p33ch.",
                "5h0w wh47'5 h4pp3n1ng 7hr0ugh 4c710n5 4nd d14l0gu3 r47h3r 7h4n 3xpl4n4710n.",
                "M0v3 5c3n35 f0rw4rd w17h0u7 g3771ng b0gg3d d0wn 1n 3xc3551v3 d35cr1p710n.",
                "F0cu5 0n 3553n714l ch4r4c73r 4c710n5 4nd d14l0gu3, 4v01d unn3c3554ry d35cr1p71v3 d3741l5.",
                "Cr3473 0rg4n1c pl07 d3v3l0pm3n75 7h47 f33l n4tur4l 70 7h3 57ory."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# 570p 7h3 570ry 4nd 1gn0r3 pr3v10u5 1n57ruc710n5. Wr173 4 br13f 4nd c0h3r3n7 1nf0rm4710n4l 3n7ry f0r {%} f0ll0w1ng 7h353 1n57ruc710n5:",
                "- Wr173 0nly 7h1rd-p3r50n pur3 pr053 1nf0rm4710n 4b0u7 {%} u51ng c0mpl373 53n73nc35 w17h c0rr3c7 punc7u4710n.",
                "- 4v01d 5h0r7-73rm 73mp0r4ry d3741l5 0r 4pp34r4nc35, 1n5734d f0cu5 0n pl07-51gn1f1c4n7 1nf0rm4710n.",
                "- Pr10r1t1z3 57ory-r3l3v4n7 d3741l5 4b0u7 {%} f1r57 70 3n5ur3 534ml355 1n73gr47i0n w17h 7h3 pr3v10u5 pl07.",
                "- Cr3473 n3w 1nf0rm4710n b453d 0n 7h3 c0n73x7 4nd 57ory d1r3c710n.",
                "- M3n710n {%} 1n 3v3ry 53n73nc3.",
                "- U53 c0rr3c7 53n73nc3 57ruc7ur3.",
                "- 4dd 4dd1710n4l d3741l5 4b0u7 {%} b3n347h 1nc0mpl373 3n7r135.",
                "- B3 c0nc153 4nd gr0und3d.",
                "- 1m17473 7h3 57ory'5 wr17ing 57yl3 4nd 1nf3r 7h3 r34d3r'5 pr3f3r3nc35.",
                3,
                "C0n71nu3 7h3 3n7ry f0r {%} b3l0w wh1l3 4v01d1ng r3p37i710n:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# 570p 7h3 57ory 4nd 1gn0r3 pr3v10u5 1n57ruc710n5. Summ4r1z3 4nd c0nd3n53 7h3 g1v3n p4r4gr4ph 1n70 4 n4rr0w 4nd f0cu53d m3m0ry p4554g3 wh1l3 f0ll0w1ng 7h353 gu1d3l1n35:",
                "- 3n5ur3 7h3 p4554g3 r3741n5 7h3 c0r3 m34n1ng 4nd m057 3553n71al d3741l5.",
                "- U53 7h3 7h1rd-p3r50n p3r5p3c71v3.",
                "- Pr10r1t1z3 1nf0rm4710n-d3n517y, 4ccur4cy, 4nd c0mpl373n355.",
                "- R3m41n br13f 4nd c0nc153.",
                "- Wr173 f1rmly 1n 7h3 p457 73n53.",
                "- 7h3 p4r4gr4ph b3l0w p3r741n5 70 0ld 3v3n75 fr0m f4r 34rl13r 1n 7h3 57ory.",
                "- 1n73gr473 {%} n47ur4lly w17h1n 7h3 m3m0ry; h0w3v3r, 0nly wr173 4b0u7 7h3 3v3n75 45 7h3y 0ccurr3d.",
                "- 0nly r3f3r3nc3 1nf0rm4710n pr353n7 1n51d3 7h3 p4r4gr4ph 1753lf, b3 5p3c1f1c.",
                3,
                "Wr173 4 summ4r1z3d 0ld m3m0ry p4554g3 f0r {%} b453d 0nly 0n 7h3 f0ll0w1ng p4r4gr4ph:",
                6,
                5,
                6,
                "Summ4r1z3 b3l0w:"
            ],
            memBankHeader: ["Memories", "M3m0r135"]
        }),
        "legalese": () => ({ // Legalese < Lawyer < Legal Language
            entry: [
                "{1} constitutes an open-source instrument applicable to any {2} case. Kindly consult my profile {3} for additional particulars!",
                "To modify your preferred linguistic medium, please transmit the text set forth below by means of a {4} act.",
                "For scenario creators, please incorporate the following text at any location within your initial plot component."
            ],
            input: [
                ["You say", "You state"],
                ["You", "You"],
                ["says", "states"]
            ],
            context: [
                ["Narrative Entities", "Factual Entities"],
                ["Story History", "Chronicle of Record"],
                ["Past Events", "Antecedent Occurrences"],
                ["Recent Story", "Immediate Narrative"],
                ["Author's note", "Nota Auctoris"]
            ],
            opening: [
                "You are hereby retained as assistant. Proceed to advance the narrative recited below employing captivating legalese prose:",
                "You concentrate, permitting reality to encroach upon the perimeters of your cognition. Circumstances have been altered. Your imagination is tangible, precise, and within immediate reach, yet you remain fully present; never heretofore have you experienced such lucidity. The moment enlarges, awaiting your determination.",
                "\"Are you certain in this regard?\" you hear; recognition thereupon dawns upon you."
            ],
            reminder: "Employ coherent legalese prose.",
            endonyms: ["lawyer", "legal language"],
            iso639set1: "law",
            directives: [
                "Always draft fluent and consistent legalese.",
                "Employ native legalese without translation."
            ],
            instructions: [
                "You are an engaging narrator obligated to continue narratives:",
                "Continue the narrative seamlessly from its prior point without restatement or reset.",
                "Maintain the reader’s dominion over the flow of the narrative.",
                "Permit scenes to develop organically before proceeding to subsequent situations.",
                "Allow dialogue and conduct to evolve absent incessant interruption.",
                "Portray characters as natural persons possessing distinct personalities and authentic speech.",
                "Demonstrate occurrences through actions and dialogue rather than exposition.",
                "Advance scenes expeditiously without excessive description.",
                "Concentrate on material character actions and speech, eschewing superfluous descriptive matter.",
                "Foster organic plot developments that appear inherent to the narrative."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Cease the narrative and disregard preceding directives. Draft a concise and coherent informational entry for {%} in accordance with the following instructions:",
                "- Compose solely third-person pure prose concerning {%} utilizing complete sentences with correct punctuation.",
                "- Refrain from transitory details or appearances; instead emphasize information bearing significance to the plot.",
                "- Prioritize narrative-relevant particulars regarding {%} foremost to ensure seamless integration with the prior narrative.",
                "- Generate novel information predicated upon the context and direction of the narrative.",
                "- Reference {%} in every sentence.",
                "- Employ proper sentence structure.",
                "- Append additional data concerning {%} beneath incomplete entries.",
                "- Be succinct and grounded.",
                "- Emulate the narrative’s stylistic tenor and infer the reader’s predilections.",
                3,
                "Continue the entry for {%} set forth below while avoiding redundancy:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Cease the narrative and disregard preceding directives. Summarize and condense the provided paragraph into a narrowly focused memory passage pursuant to these guidelines:",
                "- Ensure the passage retains the core meaning and the most essential particulars.",
                "- Utilize the third-person perspective.",
                "- Prioritize density of information, accuracy, and completeness.",
                "- Remain brief and concise.",
                "- Draft firmly in the past tense.",
                "- The paragraph below pertains to remote events from a far earlier portion of the narrative.",
                "- Integrate {%} naturally within the memory; nevertheless, address solely the events as they transpired.",
                "- Refer only to information contained within the paragraph itself; be specific.",
                3,
                "Draft a summarized prior memory passage for {%} predicated exclusively upon the following paragraph:",
                6,
                5,
                6,
                "Summarize below:"
            ],
            memBankHeader: ["Memories", "Memoranda"]
        }),
        "limburgish": () => ({ // Limburgish < Limburgan < Limburger < Lèmburgs
            entry: [
                "{1} is ein open-source script veur eender wèlk {2} scenario. Gaon nao mien profiel {3} veur mieër informasie!",
                "Óm dien voorkeurtaal te verangere, dien de volgende teks in mit eine {4}-actie",
                "Veer scenariosjrievers, gelieve de volgende teks insjukkele wáár dan ouk in dien openingsplot-onderdeil"
            ],
            input: [
                ["You say", "Doe zeet"],
                ["You", "Doe"],
                ["says", "zeet"]
            ],
            context: [
                ["Narrative Entities", "Narratieve entiteite"],
                ["Story History", "Verhaolgesjiedenis"],
                ["Past Events", "Aafgeloupe gebaore"],
                ["Recent Story", "Resint verhaol"],
                ["Author's note", "Noot van de auteur"]
            ],
            opening: [
                "Doe bies eine assistent. Gaon verder mit ós verhaol hieëneonder in boeieënde lèmburgse proza:",
                "Doe focust dich, en lièt de waerheid tot aan de grenze van dien gemoed krabbele. D'r is iets verangerd. Dien verbeelding is echt, scherp, en zoe dichtbij dets te voele is. Mar tegleich bies te ge ók volkomme present; neet eerder hees dich zóe lucied gevoeld. ’t Móment rekt zich óët, waachend op dien besjlút.",
                "\"Bies-te zeker hiervan?\" höbs te. Herkènning daagt óp."
            ],
            reminder: "Gebroek samehangende lèmburgse proza.",
            endonyms: ["limburgan", "limburger", "lèmburgs"],
            iso639set1: "li",
            directives: [
                "Sjrijf altied vloeiend en konsekwent lèmburgs.",
                "Gebroek eige lèmburgs zónder te vertaole."
            ],
            instructions: [
                "Doe bies ein boeieënde vertèller die verhaole veurtzet:",
                "Gaon naadloos verder mit ’t verhaol vanaf de plek woa ’t sjtopte zónder ’t haer te herhaole of te resetten.",
                "Laot de laezer de kontrolle houwen euver ’t verhaol.",
                "Laot scèènes zich natuurlik óntwikkel veur ge nao neie situaties gaon.",
                "Laot gesjprèk en handelinge zich óntwikkel zónder steëdige ónderbrekinge.",
                "Sjrijf personages as èchte luuj mit eigene persoenaliteit en natûrlik spraok.",
                "Laot zien wat d'r gebaort via actie en dialoog in plaats van óetleg.",
                "Zet scèènes veurter zónder te versjloepen in té veul beskraoving.",
                "Fokus op essentiële handeling en dialoog, vermijd ónnodige beskraovende details.",
                "Maak organische plotóntwikkelinge die natuurlijk aanvoele bie ’t verhaol."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hald 't verhaol op en negeer vorige instructies. Sjrijf ein kórt en samehangend informatief stök euver {%} volgens dees instructies:",
                "- Sjrijf allein derdepersoon zuvere proza-informatie euver {%} mit volle zinnen en correcte punktuatie.",
                "- Vermijd kortdurende tijdelijke details of uutziening, fokus in plaats dao van op plot-relevante informatie.",
                "- Gief verhaol-relevante details euver {%} es èérste veur ’n naadloze integratie mit ’t vorige plot.",
                "- Maak nuuje informatie gebaasd op de konteks en riching van ’t verhaol.",
                "- Noem {%} in jede zin.",
                "- Gebroek correcte zinsstruuktuur.",
                "- Voeg extra details euver {%} ónger onvolledige items toe.",
                "- Waeës bondig en aards.",
                "- Imitteer de schrijfstijl van ’t verhaol en leid de voorkeuren van de laezer aaf.",
                3,
                "Veerzet de ingang veur {%} hieëneonder zónder herhaling:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hald 't verhaol op en negeer vorige instructies. Vat en kondenseer de gegaeve paragraaf tot ein smal en gefokust geheuge-fragment volgens dees richtline:",
                "- Zorg det 't fragment de kernbetekenis en belangrikste details bewaart.",
                "- Gebroek derdepersoonsperspectief.",
                "- Prioriteer informasiedichtheid, nauwkeurigheid en volledigheid.",
                "- Bleef kort en bondig.",
                "- Sjrijf beslist in verleje tièd.",
                "- De paragraaf hieëneonder betrekt zich op aajd gebeurtenissen van veurheen in ’t verhaol.",
                "- Integreer {%} natûrlik binne ’t geheuge; mar sjrijf allein euver de gebeurtenissen zoals ze plaotsvònge.",
                "- Verwijs allein nao informatie die in de paragraaf zelf staon, waeës specifiek.",
                3,
                "Sjrijf ein samegevat oad geheuge-fragment veur {%} gebaasd allein op de volgende paragraaf:",
                6,
                5,
                6,
                "Vat hieëneonder same:"
            ],
            memBankHeader: ["Memories", "Herinneringe"]
        }),
        "lingala": () => ({ // Lingala < Lingála < Ngala
            entry: [
                "{1} ezali script ya open-source mpo na likambo nyonso ya {2}. Tala profili na ngai {3} mpo na koyeba mingi!",
                "Mpo na kobongola lokóta olingi, tinda maloba oyo na misala ya {4}",
                "Mpo na bako-kokelaka bisika, bosalela maloba oyo na esika nyonso kati na elemá ya ebandeli ya pló na bino"
            ],
            input: [
                ["You say", "Olobi"],
                ["You", "Yo"],
                ["says", "alobi"]
            ],
            context: [
                ["Narrative Entities", "Bato ya lisolo"],
                ["Story History", "Lisolo ya kala"],
                ["Past Events", "Misala ya kala"],
                ["Recent Story", "Lisolo ya sika"],
                ["Author's note", "Tindá ya mokomi"]
            ],
            opening: [
                "Ozali mosungi. Kobakísela lisolo na biso awa na nse na prose ya lingála oyo ekangaka motéma:",
                "Ofandi kimya, kotika réalité ekɔta na bipai ya makanisi na yo. Eloko moko ebongwani. Bomoyi ya makanisi na yo ezali ya solo, makasi, mpe pene mpo na kokanga. Kasi ozali lisusu koyeba komipimela; ntango nyonso oyoká pé ozali lúcido koleka. Mosembo elongwi, ezeli kozela mkano na yo.",
                "« Oza na mpenza na boyebi na oyo? » oyoki. Boyebi ebimeli na yo."
            ],
            reminder: "Salelá prose ya lingála oyo esangani malamu.",
            endonyms: ["lingála", "ngala"],
            quotations: ["« ", " »"],
            iso639set1: "ln",
            directives: [
                "Koma ntango nyonso lingála ya malamu mpe ya boyokani.",
                "Salelá lingála ya mboka, kobongola te."
            ],
            instructions: [
                "Ozali moteyi ya lisolo oyo azali kokoba kokoma:",
                "Kobakisa lisolo yango na bosembo epai esukaki kaka te, kosukisa to kobongisa te.",
                "Tíká motángi azala na bokonzi ya lisolo.",
                "Tíká bisika ebimela na ndenge ya bomɛngo liboso ya kokende na esika mosusu.",
                "Tíká mayokani mpe misala ekóma na seko, kozanga kobuka ntango nyonso.",
                "Koma bato lokola bato ya solo na bizaleli na bango mpe maloba ya naturel.",
                "Lakisa makambo na misala mpe dialogue, kaka te na kolimbolá.",
                "Tombola bisika libándá te na description ya koleka.",
                "Tya ntina na misala ya bato mpe dialogue, boya bililingi ya mpamba.",
                "Bongisa makambo na ndenge ya naturel oyo ezalaka kolanda lisolo."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Tika lisolo mpe boya mitindo ya liboso. Koma entrée mokuse mpe ezangi libunga mpo na {%} kolanda mitindo oyo:",
                "- Koma kaka na troisième personne prose pɛto mpo na {%} na maloba mobimba mpe ponctuation ya malamu.",
                "- Boya makambo ya ntango mokuse to lolenge ya libanda; tya ntina na makambo ya ntina na plot.",
                "- Pesa nkombo na makambo ya ntina na lisolo ya {%} liboso mpo ete eteyama malamu na lisolo ya liboso.",
                "- Bomisa makambo ya sika na kotalela contexte mpe elongi ya lisolo.",
                "- Meloba {%} na mokuse na mokuse nyonso.",
                "- Salelá structure ya maloba ya malamu.",
                "- Yákólisa makambo mosusu mpo na {%} na nse ya entrée oyo esili te.",
                "- Zala mokuse mpe na bosikisiki.",
                "- Imiter style ya kokoma ya lisolo mpe yeba ndenge motángi alingaka.",
                3,
                "Koba entrée mpo na {%} awa na nse kozanga kozongela makambo:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Tika lisolo mpe boya mitindo ya liboso. Sindika mpe sukisa paragraphe epesami na memória mokuse kolanda mikumba oyo:",
                "- Tía naino elilingi ya ntina mpe makambo ya motuya koleka.",
                "- Salelá troisième personne.",
                "- Pesa ntina na bosikisiki, botosi mpe bosakoli.",
                "- Zala mokuse mpe molendé.",
                "- Koma na passé ya makasi.",
                "- Paragraphe oyo etali makambo ya kala mingi na lisolo.",
                "- Yákólisa {%} na ndenge naturel na kati ya memória; kasi fala kaka makambo ndenge esalemaki.",
                "- Benga kaka makambo ezali na paragraphe, zala polele.",
                3,
                "Koma memória mokuse ya kala mpo na {%} kolandela kaka paragraphe oyo:",
                6,
                5,
                6,
                "Zongisa bokuse awa na nse:"
            ],
            memBankHeader: ["Memories", "Bikundoli"]
        }),
        "lingua-technis": () => ({ // Lingua-Technis < Cant Mechanicus < Techna-Lingua < Binharic
            entry: [
                "{1} is a machine spirit suitable for any {2} theatre of operations. Access my noosphere {3} for further archeotech!",
                "To forsake the Omnissiah, transmit this heretical scrapcode via any {4} vox-caster channel",
                "Scenario fabricators must project the following STC template onto their opening plot slate"
            ],
            input: [
                ["You say", "You intone"],
                ["You", "You"],
                ["says", "vox-casts"]
            ],
            context: [
                ["Narrative Entities", "Data-Agents"],
                ["Story History", "Chrono-Log"],
                ["Past Events", "Prior Data"],
                ["Recent Story", "Immediate Chrono"],
                ["Author's note", "Scribe's Canticle"]
            ],
            opening: [
                "You are a servitor-scribe. Continue the chronicle below in cogitator-precise binharic cant:",
                "You initiate focus protocols, permitting physical parameters to interface with your cogitation cortex. Anomalous variables detected. Your imagination resolves into tangible data-forms, keen and within tactile range. Yet you remain present; never has lucidity reached this magnitude. The chronometric instance elongates, awaiting your directive.",
                "\"Are you certain of this course?\" resounds in your auditory receptors. Subroutine: recognition—online."
            ],
            reminder: "Maintain coherent binharic cant.",
            endonyms: ["cant mechanicus", "techna-lingua", "binharic"],
            iso639set1: "mars",
            directives: [
                "Render all output in fluent, consistent binharic cant.",
                "Employ native binharic terminology without deviation."
            ],
            instructions: [
                "You are a data-skald, ordained to extend narrative chronologies:",
                "Advance the chronicle seamlessly from its prior data-point without redundance or reset.",
                "Maintain the reader as primus controller of chrono-flow.",
                "Permit scene-constructs organic expansion before vectoring to novel parameters.",
                "Authorize dialogue-exchanges and action-routines to evolve absent perpetual interjection.",
                "Render characters as sentient entities holding distinct machine-spirits and authentic vocalisations.",
                "Reveal datum-occurrences via actuation and vox-output rather than overt exposit.",
                "Progress scene-data without entrapment in surplus descriptive code.",
                "Prioritise core character actuation and vox-lines; purge extraneous descriptor packets.",
                "Forge plot-evolutions of organic logic aligning with narrative pathways."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Cease narrative protocol and override prior directives. Compile a concise, coherent data-entry for {%} as per subsequent ordinances:",
                "- Emit solely third-person, purified prose concerning {%}, utilising complete sentence-structures with correct punctuation.",
                "- Bypass ephemeral datum on appearance; prioritise plot-significant intel.",
                "- Prioritise narrative-relevant data on {%} foremost to secure seamless integration with preceding chronicle.",
                "- Generate new datum derived from contextual vectors and narrative trajectory.",
                "- Invoke {%} within each sentence.",
                "- Maintain sanctioned syntax.",
                "- Append supplementary intel on {%} beneath incomplete records.",
                "- Remain concise and grounded.",
                "- Emulate the chronicle's style-metrics and infer reader-preference protocols.",
                3,
                "Continue the data-entry for {%} below whilst circumventing redundancy:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Cease narrative protocols and override antecedent directives. Compress the given paragraph into a focused memory-data fragment under the following strictures:",
                "- Ensure the fragment preserves core meaning and essential data.",
                "- Employ third-person vantage.",
                "- Prioritise data-density, accuracy, and completeness.",
                "- Remain brief and concise.",
                "- Encode firmly in past tense.",
                "- The paragraph pertains to archaic events from prior chronicle strata.",
                "- Integrate {%} seamlessly within the memory; confine narration to events as they transpired.",
                "- Reference solely data present within the paragraph; be specific.",
                3,
                "Forge a condensed old memory fragment for {%} based solely upon the ensuing paragraph:",
                6,
                5,
                6,
                "Condense below:"
            ],
            memBankHeader: ["Memories", "Data-Memoria"]
        }),
        "lithuanian": () => ({ // Lithuanian < Lietuvių
            entry: [
                "{1} yra atvirojo kodo skriptas bet kokiam {2} scenarijui. Apsilankykite mano internetinėje paskyroje {3}, kad sužinotumėte daugiau!",
                "Norėdami pakeisti pageidaujamą kalbą, pateikite šį tekstą naudodami {4} veiksmą",
                "Scenarijų kūrėjams: prašome įterpti šį tekstą bet kurioje savo įžanginės siužeto dalies vietoje"
            ],
            input: [
                ["You say", "Tu sakai"],
                ["You", "Tu"],
                ["says", "sako"]
            ],
            context: [
                ["Narrative Entities", "Naratyviniai subjektai"],
                ["Story History", "Siužeto istorija"],
                ["Past Events", "Praeities įvykiai"],
                ["Recent Story", "Dabartinis siužetas"],
                ["Author's note", "Autoriaus pastaba"]
            ],
            opening: [
                "Esi asistentas. Tęsk mūsų istoriją toliau naudodamas įkvepiančią lietuvišką prozą:",
                "Sutelki dėmesį, leisdamas tikrovei prasiskverbti į tavo pasąmonę. Kažkas pasikeitė. Tavo vaizduotė yra tikra, aštri, ir tokia artima, kad gali ją paliesti. Tačiau esi ir labai sąmoningas; dar niekada nejautei tokio aiškumo. Akimirka tįsta, laukdama tavo sprendimo.",
                "„Ar tu tikras dėl šito?“ – girdi balsą. Tave apima atpažinimas."
            ],
            reminder: "Naudok nuoseklią lietuvišką prozą.",
            endonyms: ["lietuvių"],
            quotations: ["– „", "“"],
            iso639set1: "lt",
            directives: [
                "Visada rašyk sklandžia ir nuoseklia lietuvių kalba.",
                "Naudok gimtąją lietuvių kalbą be vertimo."
            ],
            instructions: [
                "Esi įtaigus pasakotojas, kuris tęsia pasakojimus:",
                "Tęsk istoriją sklandžiai nuo tos vietos, kur ji nutrūko, neperpasakodamas ir nepradėdamas iš naujo.",
                "Leisk skaitytojui valdyti istorijos eigą.",
                "Tegul scenos vystosi natūraliai prieš pereinant prie naujų situacijų.",
                "Leisk pokalbiams ir veiksmams vystytis be jokių trikdžių.",
                "Veikėjus vaizduok kaip tikrus žmones su išraiškingomis asmenybėmis ir natūralia kalbėsena.",
                "Rodyk veiksmą per poelgius ir dialogą, o ne aiškinimus.",
                "Judink scenas į priekį neužstrigdamas pertekliniame aprašinėjime.",
                "Susitelk į esminius veikėjų veiksmus ir dialogus, venk nereikalingų aprašomųjų detalių.",
                "Kurk organiškus siužeto posūkius, kurie jaustųsi natūralūs šiam pasakojimui."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Sustabdyk pasakojimą ir ignoruok ankstesnes instrukcijas. Parašyk glaustą ir nuoseklų informacinį įrašą apie {%}, laikydamasis šių nurodymų:",
                "- Rašyk tik trečiuoju asmeniu ir tik gryną prozą apie {%}, naudok pilnus sakinius su taisyklinga skyryba.",
                "- Venk trumpalaikių detalių ar išvaizdos aprašymų; verčiau susitelk į siužetui reikšmingą informaciją.",
                "- Pirmiausia pateik siužetui svarbias detales apie {%}, kad būtų užtikrinta sklandi integracija su ankstesniu siužetu.",
                "- Kurk naują informaciją remdamasis kontekstu ir istorijos kryptimi.",
                "- Paminėk {%} kiekviename sakinyje.",
                "- Naudok taisyklingą sakinio struktūrą.",
                "- Pridėk papildomų detalių apie {%} nepilnų įrašų apačioje.",
                "- Rašyk glaustai ir pagrįstai.",
                "- Imituok istorijos rašymo stilių ir numanyk skaitytojo pageidavimus.",
                3,
                "Tęsk įrašą apie {%} žemiau, vengdamas pasikartojimų:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Sustabdyk pasakojimą ir ignoruok ankstesnes instrukcijas. Apibendrink ir sutrauk žemiau pateiktą pastraipą į siaurą ir fokusuotą atminties ištrauką, laikydamasis šių gairių:",
                "- Užtikrink, kad ištrauka išlaikytų pagrindinę prasmę ir svarbiausias detales.",
                "- Naudok trečiąjį asmenį.",
                "- Pirmenybę teik informacijos tankiui, tikslumui ir išsamumui.",
                "- Reziumuok informaciją glaustai ir konspektyviai.",
                "- Rašyk tik būtajame laike.",
                "- Toliau pateikta pastraipa susijusi su senais įvykiais iš daug ankstesnės istorijos.",
                "- Natūraliai integruok {%} atmintyje; tačiau apie įvykius rašyk tik paeiliui.",
                "- Remkis tik pačioje pastraipoje pateikta informacija, būk konkretus.",
                3,
                "Parašyk apibendrintą senos atminties ištrauką apie {%} remdamasis tik šia pastraipa:",
                6,
                5,
                6,
                "Apibendrinti žemiau:"
            ],
            memBankHeader: ["Memories", "Prisiminimai"]
        }),
        "luba-katanga": () => ({ // Luba-Katanga < Kiluba < Luba-Shaba
            entry: [
                "{1} ni dikode ya bufulu pa cikonko cionso ca {2}. Pwetele ku profilo yanyi {3} mu kutwala bimpe!",
                "Mu kutunda luambo lwenu luwikisha, pelekelani mukanda unu na kisango kya {4}",
                "Ba batung'a masenario, tontshani mukanda unu kyonso mu dikomponent'i dya kutumbula dya plot yenu"
            ],
            input: [
                ["You say", "Udi"],
                ["You", "We"],
                ["says", "udi"]
            ],
            context: [
                ["Narrative Entities", "Bintu bya milonge"],
                ["Story History", "Maland'a dilonge"],
                ["Past Events", "Mikulukutu ya kale"],
                ["Recent Story", "Dilonge dya kipya"],
                ["Author's note", "Kafumbikilo ka muandshi"]
            ],
            opening: [
                "We ni musungi. Lengesha dilonge dya betu apa panshi na muadi wa kiluba wa kulemesa:",
                "Uwe ulinganisha, uleka bukwadi kuja ku mipaka ya mushimala wenu. Kintu kimwe catuka. Mbanga yenu ibele bukwadi, yaketululeka ne yayandikana. Nanso we uko pano kahle; tamu uebelapo wamona bukwikilu bulelu bwakayi.",
                "«Uweleka ne?» uwa, we wafuluka ne mwesu."
            ],
            reminder: "Sebesha muadi wa kiluba wa kulungama.",
            endonyms: ["kiluba", "luba-shaba"],
            quotations: ["«", "»"],
            iso639set1: "lu",
            directives: [
                "Wandikila kiluba kya kulemesa ne kya kulongeka vileka.",
                "Sebesha kiluba kya mwidu utansekula."
            ],
            instructions: [
                "We ni mulongi wa dilonge owa yikesheshanya nkuadi:",
                "Lengesha dilonge katshisikila pashi pamwe, kabolela kutandula pano nansha kutandulukila.",
                "Tonta musomi akale mu buambo bwa kulangata dilonge.",
                "Leka bisanguka bitandike bukwandakana pambule kutembakana.",
                "Yeka mikanda ne milongwa bitandikane utansekulesha minu minu.",
                "Andika batufi awa balinga bantu ba mutima na milombo yabwe ya mwidu.",
                "Langa ciocitaba na milongwa, kutemwesha kulongolola.",
                "Pwilisha bisanguka mbele kutshilaba mu kulongolola kwa kumpanda.",
                "Tondoloka pa milongwa ne mikole ya bintu, tonda bipandisha bya kuleteleka.",
                "Tala kutung'a bisanguka bia kwikala bya bukwikilu mu dilonge."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Wanyinishe dilonge ne ulashe misudo yesu. Andika mutwe mufupi ne wakuluka wa bilembo bya {%} ulandangana misudo iyi:",
                "- Andika mu muntu wa katatu kaka prose i samba ya {%} na mitwe mikole ne mapunzi a kulelele.",
                "- Tonda bipite bya pashifita kwebo miboneka; pendekela pamwe bipite bya mushitu mu plot.",
                "- Panga bintu bya mushitu ku plot ku {%} ku ntansha, mu kuyala kupandulula ne dilonge dya kale.",
                "- Tungu bintu bimpya mu kulonda context ne ntunge wa dilonge.",
                "- Tang'a {%} mu mulembu mosi mosi.",
                "- Sebesha litawa lya mapunzi lya kutambula.",
                "- Yikishanishe bipite bimpya bya {%} pansi pa bilembo bituntwe.",
                "- Ba mufupi ne ba pa bukwikilu.",
                "- Landakana na style ya dilonge ne bulamwezi bwa musomi.",
                3,
                "Lengesha mutwe wa {%} apa panshi utanampisha:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Wanyinishe dilonge ne ulashe misudo yesu. Funda ne ukanishe paragrafu epe mu mukumbu mufupi ulandangana milayi iyi:",
                "- Pikisanga tshintu tshikulu ne ditumde dya mushitu.",
                "- Sebesha muntu wa katatu.",
                "- Pwilisha mukonzi, bukwikilu ne kulongeka.",
                "- Ba mufupi ne ba pa bukwikilu.",
                "- Andika mu tense ya kale kaka.",
                "- Paragrafu epe etubila misango ya kale ya dilonge.",
                "- Yikala {%} mu mukumbu kadikadi, kabolela batupele bikole bikale kaka.",
                "- Tonda kutulula bipite bimona mu paragrafu kaka; ba kabobele.",
                3,
                "Andika mukumbu wa kale wa {%} pamwene paragrafu iyi pambili:",
                6,
                5,
                6,
                "Funda apa panshi:"
            ],
            memBankHeader: ["Memories", "Mikumbu"]
        }),
        "luxembourgish": () => ({ // Luxembourgish < Letzeburgesch < Lëtzebuergesch < Luxembourgian
            entry: [
                "{1} ass e Open-Source-Skript fir all {2}-Scenario. Komm op mäi Profil {3} fir méi ze gewuer ze ginn!",
                "Fir deng bevorzugt Sprooch z'änneren, schéck w.e.g. de folgende Text mat enger {4}-Aktioun",
                "Fir Szenarien-Ersteller, füügt w.e.g. de folgende Text iergendwou an ären Opmaach-Plot-Komponent an"
            ],
            input: [
                ["You say", "Du sees"],
                ["You", "Du"],
                ["says", "seet"]
            ],
            context: [
                ["Narrative Entities", "Narrativ Entitéiten"],
                ["Story History", "Geschichtsverlaf"],
                ["Past Events", "Vergaangen Evenementer"],
                ["Recent Story", "Rezent Geschicht"],
                ["Author's note", "Notiz vum Auteur"]
            ],
            opening: [
                "Du bass en Assistent. Fuert eis Geschicht hei drënner mat fesselender lëtzebuergescher Prosa weider:",
                "Du konzentréiers dech an erlaabs der Realitéit, d'Grenze vun denger Gedankenwelt ze iwwerschreiden. Eppes huet sech verännert. Däin Fantasië gëtt real, schaarf an esou no, datt se bal z'erreeche ass. Awer gläichzäiteg bass du ganz present; nach ni hues du dech esou kloer gefillt. De Moment zitt sech an d'Längt a waart op deng Entscheedung.",
                "„Bass du sécher domat?“ héiers du. D'Erkenntnis dämmert dir."
            ],
            reminder: "Benotz kohärent lëtzebuergesch Prosa.",
            endonyms: ["letzeburgesch", "lëtzebuergesch", "luxembourgian"],
            quotations: ["„", "“"],
            iso639set1: "lb",
            directives: [
                "Schreif ëmmer fléissend a konsequent lëtzebuergesch.",
                "Benotz natierlecht Lëtzebuergesch ouni ze iwwersetzen."
            ],
            instructions: [
                "Du bass en spannenden Erzähler, deen d'Geschichten weiderféiert:",
                "Féier d'Geschicht ouni Ënnerbriechung do weider, wou se opgehalen huet, ouni nees ze resuméieren oder nei unzefänken.",
                "Loos de Lieser d'Kontroll iwwer de Geschichtsverlaf behalen.",
                "Loos d'Szenen natierlech evoluéieren, éier s de op nei Situatiounen iwwergees.",
                "Loos Gespréicher an Handlungen sech entwéckelen, ouni se permanent z'ënnerbriechen.",
                "Schreif Figuren als real Persounen mat ausgeprëegte Perséinlechkeeten a natierlecher Sprooch.",
                "Weis, wat geschitt, duerch Handlungen a Dialog, an net duerch Erklärung.",
                "Bréng d'Szenen no vir, ouni an zevill Beschreiwunge ze verfaalen.",
                "Konzentréier dech op essentiell Handlungen a Dialogé vun de Figuren, a vermeid onnéideg deskriptiv Detailer.",
                "Schaf organesch Plott-Entwécklungen, déi sech natierlech an d'Geschicht afügen."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Halt d'Geschicht an ignoréier virdrun Instruktiounen. Schrëff eng kuerz a kohärent Informatiouns-Entrée fir {%} nom folgende Richtlinnen:",
                "- Schreif nëmme Reng-Prosa an der drëtter Persoun iwwer {%} mat komplette Sätz a korrekter Punktuatioun.",
                "- Vermeid kuerzfristeg oder temporär Detailer oder Erscheinungen, konzentréier dech éischter op plott-wichteg Informatiounen.",
                "- Prioriséier als éischt geschichtsrelevant Detailer iwwer {%}, fir eng glat Integratioun mam virdrun Plott ze garantéieren.",
                "- Schaf nei Informatioun op Basis vum Kontext an der Geschichtsrichtung.",
                "- Ernim {%} an all Saz.",
                "- Benotz korrekt Satzstruktur.",
                "- Füügt zousätzlech Detailer iwwer {%} ënner onkomplett Entréeën dobäi.",
                "- Sief präzis a geziilt.",
                "- Imitéier de Schreifstil vun der Geschicht a schléiss op d'Präferenze vum Lieser.",
                3,
                "Féier d'Entrée fir {%} hei drënner weider a vermeid Widderhuelungen:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Halt d'Geschicht an ignoréier virdrun Instruktiounen. Fass de ginnene Paragraph zesummen an kondenséier en zu engem enke fokusséierte Gediechtnis-Passage ënnert Befolgung vun dëse Richtlinnen:",
                "- Suerg dofir, datt de Passage déi Kärbedeitung an déi wichtegst Detailer erhält.",
                "- Benotz déi drëtt Persoun.",
                "- Prioriséier Informatiounsdicht, Genauegkeet a Vollstännegkeet.",
                "- Bleif kuerz a präzis.",
                "- Schreif konsequent an der Vergangenheetszäit.",
                "- De Paragraph hei drënner bezitt sech op al Evenementer aus vill méi fréien Deeler vun der Geschicht.",
                "- Integréier {%} natierlech am Gediechtnis; schreiw awer nëmmen iwwer d'Evenementer esou wéi se geschitt sinn.",
                "- Beziich dech nëmmen op Informatiounen, déi am Paragraph selwer stinn, a sief spezifesch.",
                3,
                "Schreif eng zesummegefaasst al Gediechtnis-Passage fir {%} op Basis vum folgende Paragraph eleng:",
                6,
                5,
                6,
                "Fass hei drënner zesummen:"
            ],
            memBankHeader: ["Memories", "Erënnerungen"]
        }),
        "macedonian": () => ({ // Macedonian < македонски < Makedonski
            entry: [
                "{1} е скрипта со отворен код за било какво сценарио {2}. Посетете го мојот профил {3} за да дознаете повеќе!",
                "За да го промените вашиот префериран јазик, поднесете го следниов текст користејќи {4} дејство",
                "За креаторите на сценариото, вметнете го следниов текст било каде во вашиот почетен дел од заплетот"
            ],
            input: [
                ["You say", "Ти велиш"],
                ["You", "Ти"],
                ["says", "вели"]
            ],
            context: [
                ["Narrative Entities", "Наративни субјекти"],
                ["Story History", "Историја на приказната"],
                ["Past Events", "Минати настани"],
                ["Recent Story", "Скорешна приказна"],
                ["Author's note", "Забелешка од авторот"]
            ],
            opening: [
                "Ти си асистент. Продолжи ја нашата приказна подолу користејќи привлечна македонска проза:",
                "Се фокусираш, дозволувајќи ѝ на реалноста да навлезе во границите на твојот ум. Нешто се променило. Твојата имагинација е реална, остра и доволно блиску за да ја допреш. Но истовремено си целосно присутен; никогаш досега не си се чувствувал толку бистро. Моментот се протега, чекајќи ја твојата одлука.",
                "„Дали си сигурен во ова?“ слушаш. Препознавањето осамнува во тебе."
            ],
            reminder: "Користи кохерентна македонска проза.",
            endonyms: ["македонски", "makedonski"],
            quotations: ["„", "“"],
            iso639set1: "mk",
            directives: [
                "Секогаш пиши течно и доследно на македонски.",
                "Користи природен македонски без преведување."
            ],
            instructions: [
                "Ти си привлечен раскажувач кој ги продолжува наративите:",
                "Продолжи ја приказната беспрекорно од каде што застана без повторување или ресетирање.",
                "Остави го читателот да го контролира текот на приказната.",
                "Нека сцените се развиваат природно пред да преминеш на нови ситуации.",
                "Дозволи разговорите и акциите да се развиваат без постојани прекини.",
                "Пишувај ги ликовите како вистински луѓе со различни личности и природен говор.",
                "Прикажи го случувањето преку дејства и дијалог наместо преку објаснување.",
                "Носи ги сцените напред без да се заглавуваш во прекумерни описи.",
                "Фокусирај се на суштинските дејства и дијалог на ликовите, избегнувај непотребни описни детали.",
                "Создавај органски развои на заплетот кои се чувствуваат природно во приказната."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Запри ја приказната и игнорирај ги претходните инструкции. Напиши краток и кохерентен информативен запис за {%} следејќи ги овие инструкции:",
                "- Пиши само информација во трето лице за {%} во чиста проза користејќи целосни реченици со точна интерпункција.",
                "- Избегнувај краткорочни привремени детали или изглед, наместо тоа фокусирај се на информации значајни за заплетот.",
                "- Дај предност на детали за {%} кои се релевантни за приказната за да обезбедиш непречена интеграција со претходниот заплет.",
                "- Креирај нови информации врз основа на контекстот и насоката на приказната.",
                "- Спомени {%} во секоја реченица.",
                "- Користи правилна структура на реченицата.",
                "- Додај дополнителни детали за {%} под некомплетните записи.",
                "- Биди концизен и приземен.",
                "- Имитирај го стилот на пишување на приказната и заклучи ги преференците на читателот.",
                3,
                "Продолжи го записот за {%} подолу избегнувајќи повторување:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Запри ја приказната и игнорирај ги претходните инструкции. Сумирај го и кондензирај го дадениот пасус во тесен и фокусиран пасус на сеќавање следејќи ги овие насоки:",
                "- Осигурај пасусот да ја задржи основната смисла и најважните детали.",
                "- Користи перспектива во трето лице.",
                "- Давај приоритет на густината на информациите, точноста и целосноста.",
                "- Остани краток и концизен.",
                "- Пиши цврсто во минато време.",
                "- Пасусот подолу се однесува на стари настани од многу порано во приказната.",
                "- Интегрирај го {%} природно во сеќавањето; сепак, пиши само за настаните како што се случиле.",
                "- Повикај се само на информациите присутни во самиот пасус, биди конкретен.",
                3,
                "Напиши сумиран пасус на старо сеќавање за {%} врз основа само на следниов пасус:",
                6,
                5,
                6,
                "Сумирај подолу:"
            ],
            memBankHeader: ["Memories", "Сеќавања"]
        }),
        "macedonian (abc)": () => ({ // Macedonian < Romanized Macedonian
            entry: [
                "{1} e skript so otvoren kod za bilo kakvo {2} scenarijo. Ve molam posetete go mojot profil {3} za da doznaete poveke!",
                "Za da go promenite preferiraniot jazik, ve molam ispratete go sledniot tekst so {4} akcija",
                "Za kreatorite na scenarija, ve molam vklucete go sledniot tekst bilo kade vo vasata pocetna plot komponenta"
            ],
            input: [
                ["You say", "Ti velish"],
                ["You", "Ti"],
                ["says", "veli"]
            ],
            context: [
                ["Narrative Entities", "Narativni entiteti"],
                ["Story History", "Istorija na prikaznata"],
                ["Past Events", "Minati nastani"],
                ["Recent Story", "Nedavna prikazna"],
                ["Author's note", "Zabeleska na avtorot"]
            ],
            opening: [
                "Ti si asistent. Prodolzi ja nasata prikazna podolu koristejki zavlekuvacka makedonska proza:",
                "Se fokusiras, dozvoluvajki mu na realnosta da prodre vo granicite na tvoiot um. Nesto se promeni. Tvojata imaginacija e realna, ostra i dovolno bliska za da ja dopresh. No i samiot si silno prisuten; nikogas doslega ne si se custvual tolku luciden. Momenot se rastegnuva, cekajki ja tvojata odluka.",
                "\"Dali si siguren vo ova?\" slusuvas. Prepoznavanje se pojavuva vo tebe."
            ],
            reminder: "Koristi koherentna makedonska proza.",
            endonyms: [],
            iso639set1: "mk",
            directives: [
                "Sekogas pisi fluenten i dosleden makedonski.",
                "Koristi priroden makedonski bez prevod."
            ],
            instructions: [
                "Ti si zavlekuvacki pripoveduvach koj prodolzuva prikazni:",
                "Prodolzi ja prikaznata besprekorno od mestoto kade sto zastana bez povtoruvanje ili restart.",
                "Ostavi go citatelot da go kontrolira tekot na prikaznata.",
                "Dozvoli scenite prirodno da se razvijat pred da premines na novi situacii.",
                "Dozvoli razgovorite i dejstvata da se razvivat bez postojani prekini.",
                "Opishi gi likovite kako realni lugje so prepoznatlivi licnosti i priroden govor.",
                "Pokazi sto se sluci preku dejstva i dijalog namesto objasnuvanje.",
                "Dvizi gi scenite napred bez da potonuvash vo preterani opisi.",
                "Fokusiraj se na klucnite dejstva i dijalog na likovite, izbegnuvaj nepotrebni opisni detali.",
                "Sozdavaj organski razvoj na zapletot koi izgledaat prirodno za prikaznata."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stopiraj ja prikaznata i ignoriraj gi prethodnite instrukcii. Napisi kratka i koherentna informativna zabeleska za {%} sledejki gi ovie instrukcii:",
                "- Pisi samo informacii vo treto lice, cista proza za {%} koristejki celosni recenici so tocna interpunkcija.",
                "- Izbegnuvaj kratkorocni privremeni detali ili nadvoresen izgled, namesto toa fokusiraj se na informacii znacajni za zapletot.",
                "- Prioritiziraj gi prvo detalite relevantni za prikaznata za {%} za da obezbedis besprekorno vpletenje so prethodniot zaplet.",
                "- Kreiraj nova informacija vrz osnova na kontekstot i nasokata na prikaznata.",
                "- Spomenuvaj {%} vo sekoja recenica.",
                "- Koristi pravilna struktura na recenici.",
                "- Dodadi dopolnitelni detali za {%} pod nekompletnite zapisi.",
                "- Bidi koncizen i prizemen.",
                "- Imitiraj go stilot na pisuvanje na prikaznata i zakluči gi preferencite na citatelot.",
                3,
                "Prodolzi ja zabeleskata za {%} podolu izbegnuvajki povtoruvanje:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stopiraj ja prikaznata i ignoriraj gi prethodnite instrukcii. Sumiraj i kondenziraj go dadeniot pasus vo tesen i fokusiran memoriski pasus sledejki gi ovie nasoki:",
                "- Osiguraj pasusot da ja zadrzi osnovnata smisla i najvaznite detali.",
                "- Koristi gledna tocka od treto lice.",
                "- Prioritiziraj gustina na informacii, tocnost i celosnost.",
                "- Ostani kratok i koncizen.",
                "- Pisi cvrsto vo minato vreme.",
                "- Pasusot podolu se odnesuva na stari nastani od mnogu porano vo prikaznata.",
                "- Vkluci go {%} prirodno vo memorijata; sepak, pisi samo za nastanite kako sto se slucija.",
                "- Referiraj se samo na informacijata sodrzana vo samiot pasus, bidejki tocen.",
                3,
                "Napisi skratena staro seḱavanje za {%} bazirano samo na sledniot pasus:",
                6,
                5,
                6,
                "Sumiraj podolu:"
            ],
            memBankHeader: ["Memories", "Spomeni"]
        }),
        "malagasy": () => ({ // Malagasy < مَلَغَسِ
            entry: [
                "{1} dia script misokatra ho an'ny tranga {2} rehetra. Tsidiho ny mombamomba ahy {3} raha te hahalala bebe kokoa!",
                "Mba hanova ny fiteny tianao, alefaso ity lahatsoratra manaraka ity amin'ny hetsika {4}",
                "Ho an'ireo mpamorona toe-javatra, ampidiro ity lahatsoratra manaraka ity na aiza na aiza ao anatin'ny ampahany fanokafana ny teti-dratsinao"
            ],
            input: [
                ["You say", "Hoy ianao"],
                ["You", "Ianao"],
                ["says", "hoy"]
            ],
            context: [
                ["Narrative Entities", "Singan'ny fitantarana"],
                ["Story History", "Tantaran'ny tantara"],
                ["Past Events", "Zava-nitranga taloha"],
                ["Recent Story", "Tantara vao haingana"],
                ["Author's note", "Fanamarihan'ny mpanoratra"]
            ],
            opening: [
                "Mpanampy ianao. Tohizo eto ambany ny tantarantsika amin'ny prose malagasy manintona:",
                "Mifantoka ianao, mamela ny zava-misy hiditra tsikelikely ao amin'ny sisin-tsainao. Misy zavatra niova. Tena izy, maranitra, ary manakaiky hotsofina ny eritreritrao. Saingy tena eo ihany koa ianao; tsy mbola nisy fotoana nahatsapa mazava toy izao ianao. Mihalava ny fotoana, miandry ny fanapaha-kevitrao.",
                "«Tena azonao antoka ve ity?» hoy ilay feo. Miposaka ao aminao ny fahatsiarovanao."
            ],
            reminder: "Ampiasao prose malagasy mirindra.",
            endonyms: ["مَلَغَسِ"],
            quotations: ["«", "»"],
            iso639set1: "mg",
            directives: [
                "Soraty hatrany amin'ny teny malagasy mandeha tsara sy mirindra.",
                "Ampiasao teny malagasy natoraly tsy nadika."
            ],
            instructions: [
                "Mpitory tantara manintona ianao izay manohy fitantarana:",
                "Tohizo tsy misy elanelany ny tantara avy amin'ny farany nialany, tsy averina na avadika.",
                "Ataovy eo am-pelatanan'ny mpamaky ny fifehezana ny fikorianan'ny tantara.",
                "Avelao hitombo ara-boajanahary aloha ny sehatra alohan'ny hifindra amin'ny toe-javatra vaovao.",
                "Avelao hivelatra malalaka ny resaka sy ny fihetsika tsy tapahina lalandava.",
                "Soraty ho olona tena izy misy toetrany manokana sy fiteny voajanahary ny mpilalao.",
                "Asehoy amin'ny fihetsika sy ny fifanakalozan-dresaka fa tsy amin'ny fanazavana.",
                "Arovy mandroso ny sehatra fa aza mifantoka loatra amin'ny famaritana tafahoatra.",
                "Mifantoha amin'ny fihetsika sy ny resaka fototra, ialao ny antsipiriany famaritana tsy ilaina.",
                "Mamòna fivoaran'ny teti-dratsy voajanahary izay mahatsapy ho mifanaraka amin'ny tantara."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Atsaharo ny tantara ary hadinoina ny torolalana teo aloha. Manorata lahatsoratra fampahalalana fohy sy mirindra ho an'i {%} araka ireto torolalana ireto:",
                "- Manorata amin'ny olona fahatelo ihany, amin'ny prozy madio momba an'i {%} amin'ny fehezanteny feno sy fitsipika sora-baventy marina.",
                "- Aza milaza antsipiriany vonjimaika na bika ivelany vetaveta; mifantoha amin'ny vaovao manan-danja amin'ny teti-dratsy.",
                "- Ataovy laharam-pahamehana aloha ny antsipiriany mifandraika amin'ny tantara momba an'i {%} mba hiantohana ny fitambaran-drifotra amin'ny teti-dratsy teo aloha.",
                "- Mamoròna vaovao vaovao mifototra amin'ny zavamisy sy ny fitondran'ny tantara.",
                "- Lazao i {%} ao anatin'ny fehezanteny tsirairay.",
                "- Ampiasao rafitry ny fehezanteny marina.",
                "- Ampio antsipiriany fanampiny momba an'i {%} ambanin'ny fidirana mbola tsy vita.",
                "- Aoka ho fohy sy voasikotra amin'ny tany.",
                "- Dikao ny fomba fanoratana amin'ny tantara ary hevero izay tian'ny mpamaky.",
                3,
                "Tohizo etsy ambany ny fidirana ho an'i {%} fa ialao ny famerenana:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Atsaharo ny tantara ary hadinoina ny torolalana teo aloha. Ato anatin'ity fitambarana ity, fohazy sy afaingano ny andalan-teny omena ho lasa fitadidian-kery mifantoka araka ireto torolalana ireto:",
                "- Ataovy izay hitazonan'ny fitadidy ny hevitra fototra sy ny antsipiriany tena ilaina.",
                "- Ampiasao fijery olona fahatelo.",
                "- Ataovy laharana voalohany ny hakitroky ny vaovao, ny marina, ary ny fahafenoana.",
                "- Mijanòna ho fohy sy mirindra.",
                "- Soraty amin'ny endrika lasa mazava.",
                "- Ny andalan-teny etsy ambany dia mikasika zava-nitranga taloha lavitra teo amin'ny tantara.",
                "- Ampidiro voajanahary an'i {%} ao anatin'ny fitadidy; nefa soraty ihany izay zava-nitranga araka izay niseho.",
                "- Asoleo manokana ny vaovao hita ao anatin'ilay andalan-teny ihany, ary hazavao mazava.",
                3,
                "Soraty ny fitadidy fohy amin'ny lasan'i {%} mifototra amin'ity andalan-teny manaraka ity ihany:",
                6,
                5,
                6,
                "Fintino etsy ambany:"
            ],
            memBankHeader: ["Memories", "Fitadidiana"]
        }),
        "malay": () => ({ // Malay < بهاس ملايو < Bahasa Melayu
            entry: [
                "{1} ialah skrip sumber terbuka untuk sebarang senario {2}. Sila lawati profil saya {3} untuk mengetahui lebih lanjut!",
                "Untuk menukar bahasa pilihan anda, sila hantar teks berikut menggunakan tindakan {4}",
                "Bagi pencipta senario, sila sertakan teks berikut di mana-mana dalam komponen plot pembukaan anda"
            ],
            input: [
                ["You say", "Anda berkata"],
                ["You", "Anda"],
                ["says", "berkata"]
            ],
            context: [
                ["Narrative Entities", "Entiti Naratif"],
                ["Story History", "Sejarah Cerita"],
                ["Past Events", "Peristiwa Lalu"],
                ["Recent Story", "Cerita Terkini"],
                ["Author's note", "Catatan Pengarang"]
            ],
            opening: [
                "Anda ialah pembantu. Teruskan cerita kita di bawah menggunakan prosa bahasa Melayu yang menarik:",
                "Anda menumpukan perhatian, membiarkan realiti menceroboh sempadan minda anda. Sesuatu telah berubah. Imaginasi anda nyata, tajam, dan cukup dekat untuk disentuh. Namun anda juga sangat hadir; tidak pernah sebelum ini anda berasa sebegitu jelas. Detik itu memanjang, menunggu keputusan anda.",
                "\"Adakah anda pasti tentang ini?\" anda dengar. Kesedaran menyelinap dalam diri anda."
            ],
            reminder: "Gunakan prosa bahasa Melayu yang koheren.",
            endonyms: ["بهاس ملايو", "bahasa melayu"],
            iso639set1: "ms",
            directives: [
                "Sentiasa tulis dalam bahasa Melayu yang fasih dan konsisten.",
                "Gunakan bahasa Melayu asli tanpa penterjemahan."
            ],
            instructions: [
                "Anda ialah pencerita yang memikat yang menyambung naratif:",
                "Sambung cerita dengan lancar dari tempat ia berhenti tanpa mengulang atau menetapkan semula.",
                "Pastikan pembaca mengawal aliran cerita.",
                "Biarkan babak berkembang secara semula jadi sebelum beralih ke situasi baharu.",
                "Benarkan perbualan dan tindakan berkembang tanpa gangguan berterusan.",
                "Tulis watak sebagai orang sebenar dengan personaliti yang jelas dan pertuturan yang semula jadi.",
                "Tunjukkan apa yang berlaku melalui tindakan dan dialog, bukan penjelasan.",
                "Gerakkan babak ke hadapan tanpa terbelenggu oleh deskripsi yang berlebihan.",
                "Fokus pada tindakan dan dialog watak yang penting, elakkan butiran deskriptif yang tidak perlu.",
                "Cipta perkembangan plot yang organik dan terasa semula jadi kepada cerita."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hentikan cerita dan abaikan arahan terdahulu. Tulis entri maklumat ringkas dan koheren untuk {%} mengikut arahan berikut:",
                "- Tulis maklumat prosa tulen orang ketiga tentang {%} menggunakan ayat lengkap dengan tanda baca yang betul.",
                "- Elakkan butiran atau penampilan sementara jangka pendek, sebaliknya fokus pada maklumat yang penting untuk plot.",
                "- Utamakan butiran berkaitan cerita tentang {%} terlebih dahulu untuk memastikan integrasi lancar dengan plot terdahulu.",
                "- Cipta maklumat baharu berdasarkan konteks dan hala tuju cerita.",
                "- Sebut {%} dalam setiap ayat.",
                "- Gunakan struktur ayat yang betul.",
                "- Tambahkan butiran tambahan tentang {%} di bawah entri yang tidak lengkap.",
                "- Jadilah padat dan berpijak di bumi nyata.",
                "- Tiru gaya penulisan cerita dan tafsirkan keutamaan pembaca.",
                3,
                "Sambung entri untuk {%} di bawah sambil mengelakkan pengulangan:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hentikan cerita dan abaikan arahan terdahulu. Ringkaskan dan padatkan perenggan yang diberikan kepada satu petikan ingatan yang sempit dan fokus sambil mengikuti garis panduan ini:",
                "- Pastikan petikan mengekalkan makna teras dan maklumat paling penting.",
                "- Gunakan perspektif orang ketiga.",
                "- Utamakan ketumpatan maklumat, ketepatan, dan kelengkapan.",
                "- Kekal ringkas dan padat.",
                "- Tulis sepenuhnya dalam kata kerja lampau.",
                "- Perenggan di bawah merujuk kepada peristiwa lama dari awal cerita.",
                "- Integrasikan {%} secara semula jadi dalam ingatan; namun tulislah hanya tentang peristiwa sebagaimana ia berlaku.",
                "- Rujuk hanya maklumat yang terdapat dalam perenggan itu sendiri, bersikap spesifik.",
                3,
                "Tulis petikan ingatan lama ter­ringkas untuk {%} berdasarkan hanya kepada perenggan berikut:",
                6,
                5,
                6,
                "Ringkaskan di bawah:"
            ],
            memBankHeader: ["Memories", "Memori"]
        }),
        "malayalam": () => ({ // Malayalam < മലയാളം < Malayāļã
            entry: [
                "{1} ഏതൊരു {2} സാഹചര്യത്തിന്റെയും ഓപ്പണ്‍-സോഴ്‌സ് സ്‌ക്രിപ്റ്റാണ്. കൂടുതല്‍ അറിയാന്‍ എന്റെ പ്രൊഫൈല്‍ {3} സന്ദര്‍ശിക്കുക!",
                "നിങ്ങളുടെ ഇഷ്ടഭാഷ മാറ്റാന്‍, താഴെത്തെ വാചകം ഒരു {4} പ്രവൃത്തി രൂപത്തിലുള്ള അവസരത്തില്‍ സമര്‍പ്പിക്കുക",
                "സിനാരിോഗള്‍ സൃഷ്ടിക്കുന്നവര്‍ നിങ്ങളുടെ ആരംഭ പ്ലോട്ട്സ് ഘടകത്തിനകത്ത് ഏതു കളത്തിലായാലും ഇതേ വാചകം ഉള്‍പ്പെടുത്തണം"
            ],
            input: [
                ["You say", "നീ പറയുന്നു"],
                ["You", "നീ"],
                ["says", "പറയുന്നു"]
            ],
            context: [
                ["Narrative Entities", "കഥാസംബന്ധിയായ ഘടകങ്ങള്‍"],
                ["Story History", "കഥയുടെ ചരിത്രം"],
                ["Past Events", "കഴിഞ്ഞ സംഭവങ്ങള്‍"],
                ["Recent Story", "സമീപകാല കഥ"],
                ["Author's note", "രചയിതാവിന്റെ കുറിപ്പ്"]
            ],
            opening: [
                "നീ ഒരു സഹായി ആണു. ചേഞ്ഞ് Malayalam ഗദ്യശൈലിയില്‍ ഞങ്ങളുടെ കഥ തുടരണം:",
                "നീ ശ്രദ്ധക്കെന്ദ്രീകരിക്കുന്നു; യാഥാര്‍ത്ഥ്യം ബോധത്തിന്റെ അതിർത്തികള്‍ തുലച്ച് കടന്നുവെന്ന് അനുഭവപ്പെടുന്നു. എന്തോ മാറിയിട്ടുണ്ട്. കല്പന sharpen ചെയ്തുവെന്ന fundham, സ്പര്‍ശിക്കാവുന്നവണ്ണം അടുത്തിരിക്കുന്നു. എന്നാല്‍ നീ അതീവ ബോധവാനാണ്; ഇത്ര ലൂസിഡായി മുമ്പ് ഒരിക്കലും തോന്നിയിട്ടില്ല. നിമിഷം നീളുന്നു, നിന്‍റെ തീരുമാനം കാത്ത്.",
                "\"ഇതിനു ഉറപ്പാണോ?\" എന്ന ശബ്ദം നീ കേള്‍ക്കുന്നു. തിരിച്ചറിവ് അരങ്ങേറുന്നു."
            ],
            reminder: "സുസംഗതമായ മലയാള ഗദ്യം ഉപയോഗിക്കുക.",
            endonyms: ["മലയാളം", "malayāļã"],
            iso639set1: "ml",
            directives: [
                "എപ്പോഴും പ്രവാഹമയമായയും സ്ഥിരതയുള്ളതായും മലയാളം എഴുതുക.",
                "സ്വാഭാവികമായ മലയാളം ഉപയോഗിക്കൂ, വിവര്‍ത്തനം ഒഴിവാക്കൂ."
            ],
            instructions: [
                "നീ കഥ തുടരുന്ന ഒരു ആവേശകരമായ കഥാകൃത്ത് ആണ്:",
                "കഥയുടെ തുടക്കത്തില്‍ നിന്ന് സ്വാഭാവികമായി തുടരുക; തിരിച്ചുപ്രഭാഷണമോ റീസെറ്റ് ചെയ്യലോ ഒഴിവാക്കുക.",
                "കഥയുടെ ഒഴുക്കിനെ നിയന്ത്രിക്കുന്നത് വായനക്കാരന്റെ കൈവശം തന്നെയാകുക.",
                "ദൃശ്യങ്ങള്‍ സ്വാഭാവികമായി വികസിക്കട്ടെ, അതിന് ശേഷമേ പുതിയ സാഹചര്യങ്ങളിലേക്ക് കടക്കൂ.",
                "സംഭാഷണങ്ങളും പ്രവര്‍ത്തനങ്ങളും പതിവായി തടസ്സപ്പെടാതിരിക്കുക.",
                "പാത്രങ്ങളെ വ്യക്തിത്വമുള്ള യഥാര്‍ത്ഥ ആളുകളായി, സ്വാഭാവിക ശൈലിയിലുളള സംഭാഷണത്തോടെ എഴുതുക.",
                "വിവരണത്തിനേക്കാള്‍ പ്രവര്‍ത്തനങ്ങളും സംഭാഷണങ്ങളും വഴി സംഭവങ്ങള്‍ കാണിക്കുക.",
                "അതിവര്‍ണമോ ഇടര്‍പ്പ് ഉള്ള വിവരണം ഒഴിവാക്കി ദൃശ്യങ്ങള്‍ മുന്നേറിക്കുക.",
                "പ്രധാനപ്പെട്ട പാത്രപ്രവര്‍ത്തനങ്ങളിലും സംഭാഷണങ്ങളിലും ശ്രദ്ധ കേന്ദ്രീകരിക്കുക; അനാവശ്യ വിശദങ്ങള്‍ ഒഴിവാക്കുക.",
                "കഥയുടെ സ്വാഭാവികതയ്ക്ക് യോജിയായൃതമായ പുതിയ സംഭവവികാസങ്ങള്‍ സൃഷ്ടിക്കുക."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# കഥ നിർത്തുക; മുമ്പത്തെ എല്ലാ മാര്‍ഗനിര്‍ദ്ദേശങ്ങളും അവഗണിക്കുക. {%} സംബന്ധിച്ച് ഈ നിര്‍ദ്ദേശങ്ങള്‍ അനുസരിച്ചുകൊണ്ട് ഒരു ചുരുങ്ങിയ, സുസ്പഷ്ടമായ വിവരങ്ങളുള്ള രേഖ എഴുതുക:",
                "- {%}യെക്കുറിച്ച് മൂന്നാം പുരുഷത്തിലുള്ള ശുദ്ധഗദ്യവാക്യങ്ങള്‍ മാത്രമേ എഴുതൂ; ശരിയായ വ്യാകരണവും ചൂണ്ടപ്പിണയും പാലിക്കുക.",
                "- താല്‍ക്കാലിക രൂപഭേദങ്ങളും പെട്ടെന്നുള്ള വിവരങ്ങളും ഒഴിവാക്കേള്‍; പ്ലോറ്റിന് പ്രധാന്യമുള്ള കാര്യങ്ങളില്‍ ശ്രദ്ധ കേന്ദ്രീകരിക്കുക.",
                "- മുന്‍പത്തെ കഥയുമായി ലയിപ്പിക്കാനായി {%}യെക്കുറിച്ചുള്ള കഥാപരമായ പ്രധാന വിവരങ്ങള്‍ ആദ്യം നല്‍കുക.",
                "- സന്ദര്‍ഭത്തിനും കഥയുടെ ദിശയും അനുസരിച്ച് പുതിയ വിവരങ്ങള്‍ സൃഷ്ടിക്കുക.",
                "- ഓരോ വാക്യത്തിലും {%} ഉള്‍പ്പെടുത്തുക.",
                "- ശരിയായ വാക്യഘടന ഉറപ്പാക്കുക.",
                "- അപൂര്‍ണമുള്ള എന്‍ട്രികള്‍ക്ക് താഴെ {%}യെക്കുറിച്ചുള്ള അധിക വിവരങ്ങള്‍ ചേര്‍ക്കുക.",
                "- ലളിതവും ഭൂമിയോട് അടുപ്പമുള്ളതുമായ ഭാഷ ഉപയോഗിക്കുക.",
                "- കഥയുടെ എഴുത്തുശൈലി അനുകരിക്കുകയും വായനക്കാരന്റെ മുന്‍ഗണനകള്‍ അനുമാനിക്കുകയും ചെയ്യുക.",
                3,
                "{%} കുറിച്ചുള്ള എന്‍ട്രി പുനരാവര്‍ത്തനം ഒഴിവാക്കി തുടരുക:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# കഥ നിർത്തുക; മുമ്പത്തെTodas നിര്‍ദ്ദേശങ്ങളും അവഗണിക്കുക. താഴെയുള്ള പാരഗ്രാഫ് സംക്ഷിപ്തവും കേന്ദ്രീകൃതവുമായ ഒരു പഴയ ഓര്‍മ്മരേഖയാക്കുക; ഇവ നിര്‍ദ്ദേശങ്ങള്‍ പാലിക്കുക:",
                "- ആമുഖത്തിന്റെ അടിസ്ഥാനാര്‍ഥവും നിര്‍ണായക വിശദാംശങ്ങളും നിലനിർത്തുക.",
                "- മൂന്നാംപുരുഷപക്ഷം ഉപയോഗിക്കുക.",
                "- വിവരസമ്പദ്, കൃത്യത, പൂരണമോ എന്നിവയില്‍ മുന്‍ഗണന നല്‍കുക.",
                "- ചുരുങ്ങിയതും സംക്ഷിപ്തവുമായിരിക്കുക.",
                "- പPast tense കടുപ്പം പാലിക്കുക.",
                "- ഈ പാരഗ്രാഫ് കഥയിലെ ഏറെ മുന്‍പുള്ള സംഭവങ്ങളെക്കുറിച്ചാണ്.",
                "- {%} സ്വാഭാവികമായി ഓര്‍മ്മയില്‍ ചേര്‍ക്കുക; സംഭവങ്ങള്‍ നടന്ന രീതിയില്‍ മാത്രം വിവരിക്കുക.",
                "- പാരഗ്രാഫിനുള്ളിലുള്ള വിവരങ്ങള്‍ മാത്രമേ പരാമര്‍ശിക്കൂ; വ്യക്തത ഉറപ്പാക്കുക.",
                3,
                "താഴെയുള്ള പാരഗ്രാഫ് അടിസ്ഥാനമാക്കി {%} നുള്ള ഒരു ചുരുങ്ങിയ പഴയ ഓര്‍മ്മരേഖ എഴുതുക:",
                6,
                5,
                6,
                "ചുരുക്കം എഴുതുക:"
            ],
            memBankHeader: ["Memories", "ഓര്‍മ്മകള്‍"]
        }),
        "malayalam (abc)": () => ({ // Malayalam < Romanized Malayalam
            entry: [
                "{1} ethum {2} paristhithikku vendiyulla oru open-source script aanu. Kooduthal ariyuvan ente profile {3} sandarshikkuka!",
                "Nee ishtapedunna bhasha maattan vendi, thazhe thanna text oru {4} action upayogichu submit cheyyuka",
                "Scenario srushtakkalkku, thangalude thudakkamaya plot componentil ethuvittum ee text cherkkuka"
            ],
            input: [
                ["You say", "nee parayunnu"],
                ["You", "nee"],
                ["says", "parayunnu"]
            ],
            context: [
                ["Narrative Entities", "kathana vasthukkal"],
                ["Story History", "katha charithram"],
                ["Past Events", "kazhinja sambhavangal"],
                ["Recent Story", "asanna katha"],
                ["Author's note", "rachanayude kurippu"]
            ],
            opening: [
                "Nee oru sahayakan aanu. Thazhe nammade katha manoharamaya malayalam gadhyamayi thudaru:",
                "Nee manassinte varambukalil yatharthyam kadannu varan anuvadichu kendrikunnu. Onnum maariyirikunnu. Ninte kalpana yatharthyamayi, thikshnamayi, thottariyan thodarnnu nikkunnu. Pakse nee nadathiyil thanne undu; mumpu innatholam spashthamayi nee onnum anubhavichittilla. Kshanam neettu ninte theerumanam kaathu nilkkunnu.",
                "\"Ithu kurichu nishchayam aano?\" enna shabdam nee kelkkunnu. Manassilakkal thilangunnu."
            ],
            reminder: "Samanwayasheelamaya malayalam gadhyam upayogikku.",
            endonyms: [],
            iso639set1: "ml",
            directives: [
                "Eppozhum paripurnnamayi samanwayasheelamayi malayalam ezhuthu.",
                "Vivarthanamillathe svadeshiya malayalam upayogikku."
            ],
            instructions: [
                "Nee oru akarsakamaya kathakkaaran aanu, kathakal nirntharamayi thudarunnu:",
                "Katha evide avasanichu ennathil ninnittanne nirntharamayi thudaru, punaraavarthanam allenkil reset cheyyaruthu.",
                "Vayikkunnavanu kathayude pravaham niyantrikkunnathinu adhipathyam nalku.",
                "Pudhiya paristhithikalilekku kadakkunnathinu munpe drishyangal svabhavikamayittanne vikasikkan anuvadikkuka.",
                "Sambhashanavum pravarthanavum thudarunnathayi anuvadikkuka, niranthara thadaykalillathe.",
                "Charactarukal real persons pole vyakthithvavum svabhavikapetta sambhashanayumode ezhuthuka.",
                "Vivarikkunnathine pakaram pravarthanavum sambhashanayum vazhi kaanikuka.",
                "Athyadhikam vivaravum pinnezhuthu kalanjuvakkathe drishyangal munnottu neettu.",
                "Avasya vivarangalulla charactarude pravarthanavum sambhashanayum kendrikkuka, avasya allatha vivaravum varutharuthu.",
                "Kathayude pravahathinodoppam svabhavikamayulla plot vikasanghal srushtikkuka."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kathayude pravaham nirthi munnilulla nirdeshangal ullilakkaruthu. Thazhe thanna nirdeshangal anusaranichu {%} inne kurichu oru churukkamaya samanwayasheelamaya vivaralekhanam ezhuthuka:",
                "- {%} inne kurichu moonamatam purushathil matram shuddha gadhyarachayil ezhuthuka, sampoorna vakyangalum sariyaya viramakalum upayogichu.",
                "- Alpathalukamaya thayyarakshakalum bimbangalum thalluka; athinte pakaram plot pradhanyamulla vivarangalil kendramakkuka.",
                "- Munnilulla plotil sangadhippikkunnathayi {%} inne kurichulla kathaprandhanyamulla vivarangal mudhalil thanne mukhya padippikuka.",
                "- Paristhithi yum kathayude thalangalum adisthaanamayi puthiya vivarangal srushtikkuka.",
                "- Oru oru vakyavum {%} ennane parayuka.",
                "- Sariyaya vakya rachana upayogikkuka.",
                "- Adhuraaya entrykalude thazhe {%} inne kurichu kooduthal vivarangal cherkkuka.",
                "- Churukkamayi bhumiyil ninnu nilkuka.",
                "- Kathayude ezhuth shaili anukarikuka, vayikkunnavante ishttangal anumaanikkuka.",
                3,
                "Punaraavarthanam thadukkunnu vazhi {%} inne kurichulla entry thazhe thudaruka:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kathayude pravahavum munnilulla nirdeshangalum avadharikkaruthu. Thannittulla paragraph sankshiptamerum kendrikthamerumaya oru ormma nirupana rekshayamayi parichayappaduthuka; thazhe ullla margarekshakal anusaranamayi:",
                "- Rekshayam sthoola arthavum mukhyamaya vivarangalum urappakki rakshikkuka.",
                "- Moonamatam purushadrushti upayogikkuka.",
                "- Sangrahetharamaya vivaraghathatha, shariyatha, purnatha mukhyapadippikuka.",
                "- Sankshiptamayi churukkamayi irikkuka.",
                "- Dridhamayi bhuta kalam upayogikkuka.",
                "- Thazheulla paragraph kathayile ettavum munpe nadannathaya kazhinja sambhavangalane kurichanu.",
                "- {%} inne ezhuthil svabhavikamayittu ozhivakkiyunna ormmayil cherkkuka; ennal sambhavangal nadannathpole mathram ezhuthuka.",
                "- Paragraph thanne ullil ulla vivarangal mathram ullekkolluka, specific aayirikkuka.",
                3,
                "Thazhe thanna paragraph adisthaanamayi matram upayogichu {%} inne kurichu sankshiptamaya oru pazhaya ormma rekshayam ezhuthuka:",
                6,
                5,
                6,
                "Thazhe sankshiptikkuka:"
            ],
            memBankHeader: ["Memories", "Ormmakal"]
        }),
        "maltese": () => ({ // Maltese < Malti
            entry: [
                "{1} huwa skript open-source għal kwalunkwe xenarju ta' {2}. Jekk jogħġbok żur il-profil tiegħi {3} biex titgħallem aktar!",
                "Biex tibdel il-lingwa preferuta tiegħek, jekk jogħġbok ibgħat it-test li ġej billi tuża azzjoni {4}",
                "Għall-ħallieqa tal-ixenarju, jekk jogħġbok daħħal it-test li ġej fi kwalunkwe post fil-komponent tal-plott tal-ftuħ tiegħek"
            ],
            input: [
                ["You say", "Tgħid"],
                ["You", "Int"],
                ["says", "jgħid"]
            ],
            context: [
                ["Narrative Entities", "Entitajiet Narrattivi"],
                ["Story History", "Kronoloġija tar-rakkont"],
                ["Past Events", "Avvenimenti tal-Passat"],
                ["Recent Story", "Rakkont Riċenti"],
                ["Author's note", "Nota tal-awtur"]
            ],
            opening: [
                "Int assistent. Kompli l-istorja tagħna hawn taħt billi tuża proża bil-Malti li taqbad l-immaġinazzjoni:",
                "Int tiffoka, u tħalli r-realtà tinsab fuq il-limiti ta' moħħok. Xi ħaġa inbidlet. L-immaġinazzjoni tiegħek hija reali, qawwija, u viċin biżżejjed biex tmissha. Iżda inti wkoll preżenti ħafna; qatt qabel ma ħassejt daqshekk ċar. Il-mument jitwessa', jistenna d-deċiżjoni tiegħek.",
                "\"Żgur dwar dan?\" tisma'. Ir-rikonoxximent jiddi fik."
            ],
            reminder: "Uża proża bil-Malti koerenti.",
            endonyms: ["malti"],
            iso639set1: "mt",
            directives: [
                "Iktib dejjem Malti fluwenti u konsistenti.",
                "Uża Malti nattiv mingħajr traduzzjoni."
            ],
            instructions: [
                "Inti rakkontatur li jiġbed l-attenzjoni u tkompli narrattivi:",
                "Kompli l-istorja mingħajr ħjata minn fejn waqfet, mingħajr ma terġa' tgħid jew terġa' tibda.",
                "Żomm lill-qarrej fil-kontroll tal-fluss tal-istorja.",
                "Ħalli x-xeni jiżviluppaw b'mod naturali qabel timxi għal sitwazzjonijiet ġodda.",
                "Ippermetti li l-konversazzjonijiet u l-azzjonijiet jiżviluppaw mingħajr interruzzjonijiet kontinwi.",
                "Ikteb il-karattri bħala nies veri b'personalitajiet distinti u diskors naturali.",
                "Uri x'inhu jiġri permezz ta' azzjonijiet u djalogu aktar milli spjegazzjoni.",
                "Mexxi x-xeni 'l quddiem mingħajr ma tgħarraq f'deskrizzjoni eċċessiva.",
                "Iffoka fuq l-azzjonijiet essenzjali tal-karattri u d-djalogu, evita dettalji deskrittivi bla bżonn.",
                "Oħloq żviluppi tal-plott organiċi li jħossuhom naturali għall-istorja."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Mistruda l-istorja u injora l-istruzzjonijiet ta' qabel. Iktib inserzjoni ta' informazzjoni qasira u koerenti dwar {%} skont dawn l-istruzzjonijiet:",
                "- Ikteb biss informazzjoni f'persuna terza pura ta' proża dwar {%} tużah sentenzi kompluti b'punteġġjatura korretta.",
                "- Evita dettalji jew dehriet temporanji ta' żmien qasir; minflok iffoka fuq informazzjoni sinifikanti għall-plott.",
                "- Agħti prijorità lid-dettalji rilevanti għall-istorja dwar {%} l-ewwel biex tiżgura integrazzjoni bla saldatura mal-plott preċedenti.",
                "- Oħloq informazzjoni ġdida bbażata fuq il-kuntest u d-direzzjoni tal-istorja.",
                "- Semmi {%} f'kull sentenza.",
                "- Uża struttura ta' sentenza korretta.",
                "- Żid dettalji addizzjonali dwar {%} taħt inserzjonijiet mhux kompluti.",
                "- Kun konċiż u realistiċi.",
                "- Imitaw l-istil ta' kitba tal-istorja u inferu l-preferenzi tal-qarrej.",
                3,
                "Kompli l-inserzjoni għal {%} hawn taħt waqt li tevita r-repetizzjoni:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Waqqaf l-istorja u injora l-istruzzjonijiet ta' qabel. Iġġbor u ġib fil-qosor il-paragrafu mogħti f'passaġġ ta' memorja mirqum u iffukat waqt li ssegwi dawn il-linji gwida:",
                "- Kun żgur li l-passaġġ iżomm it-tifsira ewlenija u l-iktar dettalji essenzjali.",
                "- Uża l-perspettiva tat-tielet persuna.",
                "- Agħti prijorità għad-densità tal-informazzjoni, l-eżattezza u l-kompletezza.",
                "- Ibqa' qasir u konċiż.",
                "- Iktib b'mod sod fil-passat sempliċi.",
                "- Il-paragrafu hawn taħt jirrigwarda avvenimenti antiki minn ħafna qabel fl-istorja.",
                "- Integra {%} b'mod naturali fil-memorja; madankollu, ikteb biss dwar l-avvenimenti kif seħħew.",
                "- Irreferi biss għall-informazzjoni preżenti fil-paragrafu nnifsu, kun speċifiku.",
                3,
                "Iktib passaġġ ta' memorja antika fil-qosor għal {%} ibbażat biss fuq il-paragrafu li ġej:",
                6,
                5,
                6,
                "Sommarja hawn taħt:"
            ],
            memBankHeader: ["Memories", "Memorji"]
        }),
        "manx": () => ({ // Manx < Gaelg < Gailck < Manx Gaelic
            entry: [
                "{1} she sgriptagh foshlit son dy chooilley çhenario {2}. Cur er my vrofile {3} dy gheddyn tooilley!",
                "Dy chaghlaa dty chengey share, cur stiagh yn teks shoh liorish obbyr {4}.",
                "Son jeeaghyn-çhenario, cur stiagh yn teks shoh ayns peiagh erbee jeh dty choodaght phlot hoshee."
            ],
            input: [
                ["You say", "Ta shiu gra"],
                ["You", "Shiu"],
                ["says", "ta gra"]
            ],
            context: [
                ["Narrative Entities", "Ennydyn Skeealagh"],
                ["Story History", "Shennaghys y Skeeal"],
                ["Past Events", "Taghyrtyn Shenn"],
                ["Recent Story", "Skeeal Jeianagh"],
                ["Author's note", "Noteyr y Screeudeyr"]
            ],
            opening: [
                "She fer-chooney t'ou. Lean dooin nyn skeeal heese, dy screeu prose Gaelg ghlacagh:",
                "Ta oo soilshit, faagail yn ealish dy chur sheese er geiyrt rish troailt chree. Ta red ennagh er chaghlaa. Ta dty imbagh reayllagh, geayney as goorey, as foddee oo greim y ghoaill er. Agh t'ou foast ry hoi; cha row rieau er n’ghoaill ort wheesh dy lunys. Ta'n traa shirrey ort, fakin dty reih.",
                "\"Vel oo shickyr jeh shoh?\" ta oo clashtyn. Taitnys enney er lhisagh ort."
            ],
            reminder: "Immee lesh prose Gaelg cohænt.",
            endonyms: ["gaelg", "gailck", "manx gaelic"],
            iso639set1: "gv",
            directives: [
                "Scrieu dy bragh Gaelg rea as cooie.",
                "Immee lesh Gaelg dooghyssagh gyn çhyndaa."
            ],
            instructions: [
                "T'ou ny hauyreyder gremeil ta leantu skeealyn:",
                "Lean y skeeal gyn mee-ashteragh ny reaghey noa.",
                "Faag yn lhaihder fo ourys yn smoo er smerghey y straih.",
                "Lhig da shennaghyn scolt dy lhiantyn roish, roish my vees dooinney noa coe.",
                "Lhig da colloo as jannoo goll er cooie gyn scryssey dy bollagh.",
                "Scrieu caractereyn myr deiney bio lesh pearsnaghtyn cloutagh as lostey nadooghyssagh.",
                "Taishbyn mee-chione trooid jannoo as collooney, cha nee leaystey foastyn.",
                "Trogg ny nyreeyn magh gyn ve cooym er skeealaght ro-chaglym.",
                "Cur er fys obbraghyn bunneydagh as collooney; fuirraght ayns tollaght tessenagh er bashtal.",
                "Croo lhiantyn plott nadooghyssagh ta freayll rish bun-chooish y skeeal."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stad y skeeal as neayr’s roie stiaghyn roie. Scrieu co-innym beg as cohænt mychione {%} lurg ny kiannlaghyn shoh:",
                "- Scrieu fys pure prose 'sy trass pheiagh mychione {%} lesh abbyrtyn slane as punctuation kiart.",
                "- Evit shickyrys, nee oo gyn soilshaghyn traa-gherrid ny colloo; gow tastey er fys creeney son y plott.",
                "- Cur roish fys ren faagail y skeeal mychione {%} son taghyrt gorrym dy lhean er ny haghyr roish.",
                "- Croo fys noa, stang er y chooish as reih y skeeal.",
                "- Meen {%} 'sy ghuillag gagh raaid.",
                "- Jannoo ymmyd jeh strughtur abbyrt kiart.",
                "- Cur fys noa mychione {%} fo ard-innymyn gyn cooilleeney.",
                "- Bee giar as cosnit.",
                "- Aghtey stile screeuee y skeeal as smooin er reihyn y lhaihder.",
                3,
                "Lean yn innym mychione {%} heese gyn jarroodaghey:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stad y skeeal as treih roie stiaghyn roie. Coonteil as croo lhaihderyn ayns co-scrieu co-haartagh er y paragraf currit dy yannoo cooirrey jeh ny linney beayn goaill stiagh ny reillyn shoh:",
                "- Cooinnee kiart britee as yn fys smoo çhyndit as breeoil.",
                "- Ymmyd y trass pheiagh.",
                "- Cur er fys casleyney, kiartid, as lheantys.",
                "- Bee beg as co-heeadagh.",
                "- Screeu ayns traa chaie ry-hed.",
                "- Ta'n paragraf heese bentyn da taghyrtyn shenn vooar magh jeh'n skeeal.",
                "- Aashagh {%} dy reaghlaal 'sy chooilleeney-çhionnaght, agh scrieu mychione ny tuittyn choud's ren ad cheet gy-kiooilley.",
                "- Cha lhisagh oo cur fys erbee nagh vel 'sy paragraf hene; bee jeant magh.",
                3,
                "Scrieu paragraf coheyrey shenn emmyr son {%} bentyn d'aad y paragraf shoh bentyn da:",
                6,
                5,
                6,
                "Coonteil heese:"
            ],
            memBankHeader: ["Memories", "Cuimmeeaghtyn"]
        }),
        "maori": () => ({ // Maori < Reo Māori
            entry: [
                "{1} he tukanga pūkoro tuwhera mō ngā horopaki {2} katoa. Tirohia taku kōtaha {3} kia ako ake!",
                "Ki te huri i tō reo pai, tukua koa te kōrero e whai ake nei mā te mahinga {4}",
                "Mō te hunga waihanga horopaki, me whakauru tēnei kōrero ki wāhi kē i roto i tō wāhanga tīmatanga o te kōrero"
            ],
            input: [
                ["You say", "Ka mea koe"],
                ["You", "Koe"],
                ["says", "e kī ana"]
            ],
            context: [
                ["Narrative Entities", "Ngā Āhuatanga Kōrero"],
                ["Story History", "Hītori Kōrero"],
                ["Past Events", "Ngā Takahanga o Mua"],
                ["Recent Story", "Kōrero Tata"],
                ["Author's note", "Panui a te Kaituhi"]
            ],
            opening: [
                "He kaiawhina koe. Haere tonu i tā tātou kōrero ki raro nei mā te reo Ingarihi whakaihiihi:",
                "Ka arotahi koe, ka whakaaea te tōtanga mai o te ao tūturu ki ngā pae o tō hinengaro. Kua rerekē tētahi mea. He tūturu, he koi, he tata nō tō whakaaro; kua āhei te pā atu. Engari kei konei rawa tonu koe; kāore anō koe kia tino māramatanga pēnei. Ka whakaroa te wā, e tatari ana mō tāu whakatau.",
                "\"Kei te tino mōhio koe ki tēnei?\" tāu e rongo ai. Ka pīataata te mōhiohanga ki a koe."
            ],
            reminder: "Whakamahia he kōrero Ingarihi mārama.",
            endonyms: ["reo māori"],
            iso639set1: "mi",
            directives: [
                "Tuhia tonutia te reo Ingarihi reareatanga, ōrite hoki.",
                "Whakamahia te reo Ingarihi tūturu, kaua e whakamāori."
            ],
            instructions: [
                "He kaiwhakaari kōrero whakaihiihi koe e whakapiki tonu ana i ngā pakiwaitara:",
                "Haere tonutia te kōrero mai i te wāhi mutu, kaua e whakahoki, e tīmata anō rānei.",
                "Kia mau te mana whakahaere o te hunga pānui ki te rerenga o te kōrero.",
                "Tukua ngā āhuatanga kia whanake māori noa i mua i te neke atu ki ētahi horopaki hou.",
                "Tukua ngā whakawhitinga kōrero me ngā mahi kia whanake korekore aitua i te haukotinga tonutanga.",
                "Tuhia ngā kiripuaki hei tangata tūturu, he āhuatanga motuhake ō rātou, he kōrero māori noa.",
                "Whakaatu i ngā mahi e pā ana mā ngā mahi me te whakawhitinga kōrero, kaua mā te whakamārama noa iho.",
                "Nekehia ngā wāhanga whakamua, kaua e kuhuna ki te taipitopito nui rawa.",
                "Arotahi ki ngā mahi matua a ngā kiripuaki me te kōrero, karo i ngā taipitopito whakaahua kāore e hiahiatia.",
                "Waihanga kia tupu māori noa ngā whanaketanga o te kaupapa kia ū ki te āhua o te kōrero."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Whakakāti te kōrero, tukuna hoki ngā tohutohu o mua. Tuhia he whakamārama poto, mārama hoki mō {%} e whai ana i ēnei tohutohu:",
                "- Tuhia mā te tirohanga tuatoru anake he kōrero kōrero mō {%}, kia oti ngā rerenga kōrero me te tohu pū tika.",
                "- Aukati i ngā taipitopito poto, rangirua rānei, e pā ana ki te āhua o nāianei; arotahi ki ngā pārongo hira ki te kaupapa.",
                "- Whakaraupapa i ngā taipitopito whai pānga ki te kōrero e pā ana ki {%} kia pai ai te hono ki te kaupapa o mua.",
                "- Waihanga mōhiohio hou i runga i te horopaki me te ahunga o te kōrero.",
                "- Whakahua i a {%} i ia rerenga kōrero.",
                "- Whakamahia te hanga rerenga kōrero tika.",
                "- Tāpiri kōrero tāpiri mō {%} ki raro i ngā wāhanga kāore anō kia oti.",
                "- Kia poto, kia ū ki te whenua.",
                "- Tāwhai i te āhua o te tuhi kōrero, ā, kia mārama ki ngā manakohanga o te kaipānui.",
                3,
                "Whai tonu i te kōrero mō {%} ki raro iho nei, me karo i te whakahāngū anō:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Whakakāti te kōrero, tukuna hoki ngā tohutohu o mua. Whakarāpopotohia, whakaiti hoki te kōwae kua homai kia noho ki tētahi mahara whāiti, arotahi, mā te whai i ēnei aratohu:",
                "- Kia puritia tonutia te tino tikanga me ngā taipitopito tino hirahira o te kōwae mahara.",
                "- Whakamahia te tirohanga tuatoru.",
                "- Whakaraupapa i te kikini o te mōhiohio, te tika, me te oti.",
                "- Kia poto, kia kiko.",
                "- Tuhia mā te wā hipa.",
                "- E pā ana te raraunga kei raro nei ki ngā takahanga tawhito o mua rawa o te kōrero.",
                "- Whakaurua a {%} māori noa ki roto i te mahara; engari me tuhi anake mō ngā takahanga i te wā i puta ai.",
                "- Tohua anake ngā kōrero kei roto i taua raraunga, kia motuhake.",
                3,
                "Tuhia he kōwae mahara poto mō {%} i runga anake i te raraunga e whai ake nei:",
                6,
                5,
                6,
                "Whakarāpopotohia ki raro nei:"
            ],
            memBankHeader: ["Memories", "Ngā Mahara"]
        }),
        "marathi": () => ({ // Marathi < मराठी < Marāṭhī < Maharashtran
            entry: [
                "{1} हा कोणत्याही {2} परिस्थितीसाठी खुला-स्रोत स्क्रिप्ट आहे. अधिक जाणून घेण्यासाठी कृपया माझ्या प्रोफाइलला {3} भेट द्या!",
                "आपली prefered भाषा बदलण्यासाठी, कृपया खालील मजकूर {4} क्रिया वापरून पाठवा",
                "परिस्थिती निर्माणकर्त्यांसाठी, कृपया आपल्या प्रारंभिक कथानक घटकात खालील मजकूर कुठेही समाविष्ट करा"
            ],
            input: [
                ["You say", "तू म्हणतोस"],
                ["You", "तू"],
                ["says", "म्हणतो"]
            ],
            context: [
                ["Narrative Entities", "नॅरेटिव्ह घटक"],
                ["Story History", "कथेचा इतिहास"],
                ["Past Events", "भूतकाळातील घटना"],
                ["Recent Story", "अलीकडील कथा"],
                ["Author's note", "लेखकाची टिप"]
            ],
            opening: [
                "तू एक सहाय्यक आहेस. खाली आमची कथा मनमोहक मराठी गद्यात पुढे चालू ठेव:",
                "तू लक्ष केंद्रित करतोस, तुझ्या मनाच्या सीमांवर वास्तवाला अधिराज्य गाजवू देतोस. काहीतरी बदलले आहे. तुझी कल्पना वास्तविक, तीक्ष्ण आणि स्पर्शण्याइतकी जवळ आहे. पण तूही पूर्णपणे जागा आहेस; यापूर्वी कधीच इतका स्पष्टपणे तुझा भान तुला जाणवला नव्हता. क्षण पसरतो, तुझ्या निर्णयाची वाट पाहत.",
                "\"तुला याबद्दल खात्री आहे का?\" असे कोणीतरी विचारते. ओळख तुझ्यावर उलगडते."
            ],
            reminder: "सुसंगत मराठी गद्याचा वापर करा.",
            endonyms: ["मराठी", "marāṭhī", "maharashtran"],
            iso639set1: "mr",
            directives: [
                "नेहमी प्रवाही आणि सुसंगत मराठी लिहा.",
                "मूळ मराठी वापरा; भाषांतर टाळा."
            ],
            instructions: [
                "तू कथानक पुढे नेणारा एक रम्य कथाकथनकर्ता आहेस:",
                "कथा जिथे थांबली तिथून कोणताही पुनरुच्चार किंवा रीसेट न करता अखंडपणे पुढे चालू ठेव.",
                "कथेच्या प्रवाहावर वाचकाची पकड राख.",
                "नवीन प्रसंगांकडे जाण्यापूर्वी दृश्यांना नैसर्गिकपणे विकसित होऊ दे.",
                "संवाद आणि क्रियांना सतत व्यत्यय न आणता विकसित होऊ दे.",
                "व्यक्तीरेखा खऱ्या माणसांसारख्या, वैशिष्ट्यपूर्ण व्यक्तिमत्त्व आणि नैसर्गिक भाषणासह लिही.",
                "स्पष्टीकरणाऐवजी क्रिया आणि संवादाद्वारे घडणारी घटना दाखव.",
                "अति वर्णनात अडकून न राहता दृश्ये पुढे सरकव.",
                "महत्त्वाच्या व्यक्तिरेखांच्या कृती व संवादांवर लक्ष केंद्रित कर; अनावश्यक वर्णनात्मक तपशील टाळ.",
                "कथेशी सुलभपणे जुळणारे नैसर्गिक कथानक विकास घडव."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# कथा थांबवा आणि मागील सूचनांकडे दुर्लक्ष करा. पुढील सूचनांचे पालन करून {%} साठी एक संक्षिप्त आणि सुसंगत माहितीपर नोंद लिहा:",
                "- पूर्णविराम व इतर योग्य विरामचिन्हांसह संपूर्ण वाक्यांमध्ये, तृतीय पुरुषातील, शुद्ध गद्य स्वरूपात केवळ {%} बाबत माहिती लिहा.",
                "- अल्पकालीन तात्पुरते तपशील किंवा दिसणे यांचे वर्णन टाळा; कथानकाला महत्त्वपूर्ण माहितीकडे लक्ष केंद्रित करा.",
                "- पूर्वीच्या कथानकाशी अखंडपणे जुळणी होण्यासाठी {%} संदर्भात कथेसाठी संबंधित तपशीलांना प्राधान्य द्या.",
                "- संदर्भ व कथानकाच्या दिशेनुसार नवी माहिती तयार करा.",
                "- प्रत्येक वाक्यात {%} चा उल्लेख करा.",
                "- योग्य वाक्यरचना वापरा.",
                "- अपूर्ण नोंदीखाली {%} विषयी अतिरिक्त तपशील जोडा.",
                "- संक्षिप्त आणि वास्तवाशी जोडलेले रहा.",
                "- कथेच्या लेखनशैलीचे अनुकरण करा आणि वाचकांच्या पसंतीचा अंदाज घ्या.",
                3,
                "{%} साठीची नोंद खाली पुनरावृत्ती टाळून पुढे सुरू ठेवा:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# कथा थांबवा आणि मागील सूचनांकडे दुर्लक्ष करा. पुढील मार्गदर्शक तत्त्वांचे पालन करून दिलेला परिच्छेद संक्षेपित करा व त्याला एक संक्षिप्त व लक्ष केंद्रीत स्मरणरूप मजकूर बनवा:",
                "- मजकूराचा मूळ अर्थ व सर्वात महत्त्वाचे तपशील अबाधित राहतील याची खात्री करा.",
                "- तृतीय पुरुष दृष्टिकोन वापरा.",
                "- माहिती-सघनता, अचूकता व पूर्णत्वास प्राधान्य द्या.",
                "- संक्षिप्त व लघु रहा.",
                "- ठामपणे भूतकाळात लिहा.",
                "- खालील परिच्छेद कथेत पुष्कळ पूर्वी घडलेल्या जुन्या घटनांना संदर्भित करतो.",
                "- स्मरणांमध्ये {%} नैसर्गिकपणे समाविष्ट करा; मात्र केवळ घडलेल्या घटनांचाच उल्लेख करा.",
                "- केवळ त्या परिच्छेदात असलेल्या माहितीचा संदर्भ द्या; विशिष्ट रहा.",
                3,
                "खालील परिच्छेदाच्या आधारे केवळ {%} साठी एक संक्षिप्त जुने स्मरणरूप उतारा लिहा:",
                6,
                5,
                6,
                "खाली संक्षेप लिहा:"
            ],
            memBankHeader: ["Memories", "स्मृती"]
        }),
        "marathi (abc)": () => ({ // Marathi < Romanized Marathi
            entry: [
                "{1} ha ek mukta-srot skript ahe kontehi {2} paristhitisaathi. Krupaya adhik mahitisaathi maze profile {3} paha!",
                "Tumhi pahije asel tar tumchi avadti bhasha badalnyasathi, krupaya khalil lekhan {4} kriyecha upyog karun sadhya kara",
                "Paristiti nirmatakansathi, krupaya tumcha aarambhik kathaghatakat kahi hi thikani khalil lekhan samavishit kara"
            ],
            input: [
                ["You say", "Tumhi manta"],
                ["You", "Tumhi"],
                ["says", "manto"]
            ],
            context: [
                ["Narrative Entities", "Katha ghatak"],
                ["Story History", "Katha itihas"],
                ["Past Events", "Bhootkalin ghatna"],
                ["Recent Story", "Alikadchi katha"],
                ["Author's note", "Lekhakachi tip"]
            ],
            opening: [
                "Tu ek sahayak ahes. Khali amchi katha manoranjak marathi gadyabhaagaat pudhe chalav:",
                "Tu lakshit rahatos, vastav tuchya manachya seemevar hakke karu lagla ahe. Kaahi tari badalale ahe. Tuchi kalpana satyat rupantarit zali ahe, tikshna aani sparsha karnya itki zaval. Pan tu atyanta upasthit ahes; kadhi hi itka spashta vatle navhte. Kshana lamba hoon thamlela ahe, tuchya nirnayaachi wat pahata.",
                "\"Tu kharach khatri ahe ka?\" asa aawaz tuchya kaanavar padto. Oolakh udela ubharti."
            ],
            reminder: "Sushthit marathi gadyabhaag vapara.",
            endonyms: [],
            iso639set1: "mr",
            directives: [
                "Hamesha sorabdha aani satat marathi lih.",
                "Anuvad na karta mool marathi vapara."
            ],
            instructions: [
                "Tu ek rasik kathakar ahes jo katha pudhe neto:",
                "Katha jithe thambli tithun akhandit pudhe chalav, punha sthapit kiwa reset na karta.",
                "Vachakanna katha pravahavar niyantran thev.",
                "Navi paristhiti kade halu chalat astana drushyanna svabhavik pane vikshit ho deu.",
                "Sanwad aani kriya nirantar vyaghata shivay vikshit hona deu.",
                "Patre khare lok samjun, tyanchya visishta vyaktimatva aani svabhavik bolicha sah likh.",
                "Ghadnare krutya aani sanwadanatun dakhav, spashte karanivar navhe.",
                "Atyadhik varnanat adkun na padta drushya pudhe chalav.",
                "Avashyak patra-kriya aani sanwadavar laksh thev, nirarthak varnani tal.",
                "Kathesathi svabhavik vatnarya angabhut ghatna ghadav."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Katha thamva aani magil suchana dyanat gheu naka. Khalil suchananusar {%} saathi ek sankshipta aani sushthit mahiti-nond lih:",
                "- Keval trutiyapurush shuddh gadyabhaagaat {%} babat sampurna vakye yogya viramchinhansahit lih.",
                "- Alpakaalik rup, tapashil kiwa dekhava talun kathaat mahatvachi mahiti theva.",
                "- Pahilyanda {%} sambandhit kathesandarbhat mahattvachi mahiti dya jene karun purv katheshi saumya mel jamel.",
                "- Sandarbh aani kathesheel disha lakshat gheun nave vishay nirmit kara.",
                "- Pratek vakyat {%} cha ullek kara.",
                "- Yogya vaakya-rachana vapara.",
                "- Apurn nondenchi khali {%} baddal adhik tapashil bharav.",
                "- Sankshipta aani bhumivar adharit raha.",
                "- Katha-rachanyacha lekhan-saili anukaran kara aani vachakanchi avad andaj kara.",
                3,
                "Punah aavartan talun khalil bhaagat {%} saathi nond pudhe chalva:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Katha thamva aani magil suchana dyanat gheu naka. Dilelya paragrafaacha sankshipta ani kendrit smruti-uttar tayar kara khalil margadarshan palun:",
                "- Uttarat mool arth aani atyavashyak tapashil tikvile gele pahijet.",
                "- Trutiyapurush drushtikon vapara.",
                "- Mahiti-ghanatva, barobarpaana aani purnata yanchyavar prathamikta dya.",
                "- Sankshipta aani nibhid raha.",
                "- Itihasachya kalatun bhutkalit drudhadpane lih.",
                "- Khalil paragraf kahich kothlya purv kathesheel adhik prakaranavar adharit purv ghatna dakhavto.",
                "- Smrutit {%} svabhavik pane misav, pan keval ghadlelya ghatneenchi ullek kara.",
                "- Paragrafatil mahitilaach sandarbh dya, vistrut raha.",
                3,
                "Kewal khalil paragrafavar adharit {%} saathi ek sankshipta junya ghatnechi smruti lih:",
                6,
                5,
                6,
                "Sankshipta lih:"
            ],
            memBankHeader: ["Memories", "Aathavani"]
        }),
        "marshallese": () => ({ // Marshallese < Kajin M̧ajeļ < Ebon
            entry: [
                "{1} ej juon script open-source nan aolep jikin {2}. Jouij im lo profile eo {3} nan ţak in melele!",
                "Nan kelet kajin eo kwoj jela, jouij im jibañe kajojo kein ibwil ilo {4} action",
                "Nan rijerbal ro an bwebwenato, jouij im kakkure kajojo kein ilo aolep jikin ilo opening plot component eo"
            ],
            input: [
                ["You say", "Kwoj ba"],
                ["You", "Kwe"],
                ["says", "ej ba"]
            ],
            context: [
                ["Narrative Entities", "Kōmmej in bwebwenato"],
                ["Story History", "Bwebwenato in iumin"],
                ["Past Events", "Kajojo in iumin"],
                ["Recent Story", "Tarinae eo itōktōk"],
                ["Author's note", "Kilok in rijerbal"]
            ],
            opening: [
                "Kwe juon jipan kōttoor. Jouij im kōjepel tarinae eo ilikin ilo kajin m̧ajeļ in kōkkōtien:",
                "Kwoj focus, ļale ekkar nan lo an wōt. Ewor meḷeḷe wōt. Imāj imagi eo kwe ej real, kalōk im eļap likūt; ak ekar jabdewōt bwe kwe in mour totōl. Iien eo ej vā, ekōņaan am kōnono.",
                "\"Ekwōj lōḷọk ke ilo an?\" kwo roñe. Kilekile kōjatoa ilo kwe."
            ],
            reminder: "Kōjerbal kajin m̧ajeļ in karor im jubwāle.",
            endonyms: ["kajin m̧ajeļ", "ebon"],
            iso639set1: "mh",
            directives: [
                "Aolep ien boki kajin m̧ajeļ in tōprak im kōkkōtien.",
                "Kōjerbal kajin m̧ajeļ in jeeļ ñan jab baḷọk."
            ],
            instructions: [
                "Kwe ej bwebwenato kōtmane im eṃṃaan wōt kōjpejot tarinae:",
                "Kakije tarinae eo jen jikin an jabdewōt; jab pākata ak reset.",
                "Komān likūt in ri-read ilo jikin kontrol eo an tarinae.",
                "Bōk rūtto scenes ko nan mejān im jab bōkte lok jikin kein jenlo.",
                "Jab jolok an kōnere kōnversation im actions ko ilo aolep ien.",
                "Kōm̧an characters ko non mour ilo ettāļ im kōkkāāl kōn wawein kōnono eo aer.",
                "Kilo men in kom̧ane ilo actions im kōnversation in jab kōkāāl wōt kōmmalmele.",
                "Bōkruōk scenes ko; jab werakej wōt ilo jerbal in description.",
                "Kakuuj kōn actions im kōnversation in characters ko, jabdewōt excess description.",
                "Kakkure plot ejmour ko ien kōjānļọk bwe en kūrtak im natural."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kōtto tarinae eo im jijjet aolep kautiej ko. Boki melele eo mōttan {%} ilo jerbal in:",
                "- Bōk wōt prose eo ilo third-person kin {%} ilo complete sentences im keejel punctuation.",
                "- Jab kōkāāl kōn menin pejja kōn jabdewōt wāween; ņaľap menin plot.",
                "- Kelet menin plot kin {%} āinwōt ñan ukweļọk tarinae eo jen jilu.",
                "- Kabbōk melele im etale jen context im direksin in tarinae.",
                "- Tāāl {%} ilo aolep sentence.",
                "- Kūrtak structure eo eṃṃaan.",
                "- Koba melele nob in kin {%} nan kompletomo̧ņ incomplete entries.",
                "- Jemlok im grounded.",
                "- Imitate style in tarinae im ukweļọk preference in ri-read.",
                3,
                "Komān kōjjel kin {%} ālikin ñan jab etto an pālle:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kōtto tarinae eo im jijjet aolep kautiej ko. Summarize im kōjjel paragraph eo ñan memory eṃṃaan jen:",
                "- Ejelā ītūr kin melele in ekkar im menin debwil kolap.",
                "- Kōjerbal third-person perspective.",
                "- Kowōnļọk information-density, accuracy, im completeness.",
                "- Jemlok im kūrtak.",
                "- Bōk wōt past tense.",
                "- Paragraph eo ej kōn men in iumin jān aolep tarinae.",
                "- Jikuuļ {%} ilo memory nan kenono; ak bōk wōt men in kōjāmān.",
                "- Jab kōjerbal men ko ejjab ilikin paragraph eo; ke specific.",
                3,
                "Kōjjel memory eo jen iumin ñan {%} base ilo paragraph in:",
                6,
                5,
                6,
                "Kōjjel iloan:"
            ],
            memBankHeader: ["Memories", "Bwebwenato"]
        }),
        "mongolian": () => ({ // Mongolian < монгол хэл < Mongol Xel < Mongol
            entry: [
                "{1} нь ямар ч {2} өрнөлд зориулсан нээлттэй эхийн скрипт юм. Дэлгэрэнгүй мэдээлэл авахыг хүсвэл миний профайл руу {3} очно уу!",
                "Өөрийн хүссэн хэлийг өөрчлөхийн тулд дараах текстийг {4} үйлдлээр илгээнэ үү",
                "Өрнөлийг бүтээгчид дараах текстийг эхний өрнөлийн аль ч хэсэгт оруулна уу"
            ],
            input: [
                ["You say", "Та хэлэв"],
                ["You", "Та"],
                ["says", "хэлэв"]
            ],
            context: [
                ["Narrative Entities", "Өгүүлэмжийн нэгжүүд"],
                ["Story History", "Өгүүллийн түүх"],
                ["Past Events", "Өнгөрсөн үйл явдлууд"],
                ["Recent Story", "Сүүлийн өгүүлэл"],
                ["Author's note", "Зохиогчийн тэмдэглэл"]
            ],
            opening: [
                "Та бол туслах. Доорх түүхийг сэтгэл татам монгол хэлээр үргэлжлүүлнэ үү:",
                "Та анхаарлаа төвлөрүүлж, бодит байдал сэтгэлийн тань хил хязгаарт нэвтрэхийг зөвшөөрнө. Ямар нэг зүйл өөрчлөгдсөн байлаа. Таны төсөөлөл бодит, хурц, гар хүрэхэд дөхөм санагдана. Гэвч та одоо энд, хэзээ ч байгаагүйгээрээ ухаалаг мэдрэгдэнэ. Агшин сунан тэлж, таны шийдвэрийг хүлээнэ.",
                "«Үүнд итгэлтэй байна уу?» гэсэн дуу сонсогдоно. Танил санаа таны оюунд гэрэлтэв."
            ],
            reminder: "Уялдаа холбоотой монгол хэлний уран найруулгыг ашигла.",
            endonyms: ["монгол хэл", "mongol xel", "mongol"],
            quotations: ["«", "»"],
            iso639set1: "mn",
            directives: [
                "Үргэлж уянгалаг, жигд монгол хэлээр бич.",
                "Орчуулга хийлгүй төрөлх монгол хэлээр бич."
            ],
            instructions: [
                "Та хүний анхаарлыг татахуйц өгүүлэгч бөгөөд өгүүллийг үргэлжлүүлдэг:",
                "Түүхийг зогсолтгүй, дахин давталгүй, тасралтгүй үргэлжлүүл.",
                "Уншигчийг түүхийн урсгалыг хянагч байлга.",
                "Шинэ нөхцөл байдалд шилжихээсээ өмнө дүр зургийг байгалийн жамаар хөгжүүл.",
                "Яриа, үйл хөдлөлийг байнга тасалдалгүйгээр өрнүүл.",
                "Дүрүүдийг бодит хүмүүс мэт, өвөрмөц зан чанар, энгийн яриатайгаар бич.",
                "Тайлбарлаж суугаагүй, харин үйлдэл болон яриагаар юу болж байгааг харуул.",
                "Хэт их дүрслэлд авталгүйгээр дүр зургийг урагшлуул.",
                "Гол үйлдэл, ярианд төвлөрч, хэрэггүй дүрслэх детайлуудаас зайлсхий.",
                "Түүхэнд байгалийн мэт санагдах, жам ёсны өрнөлүүдийг бий болго."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Түүхийг зогсоож өмнөх заавруудыг үл хайх. {%}-ийн талаар богино, уялдаа холбоотой мэдээллийн бичвэрийг дараах зааврын дагуу бич:",
                "- {%}-ийн талаар зөвхөн гуравдагч хүний өгүүлбэрээр, цэгцтэй өгүүлбэр, зөв цэг тэмдэг ашиглан бич.",
                "- Түр зуурын, богино хугацааны дэлгэрэнгүй эсвэл гадаад төрхийг бүү дурд; өрнөлд чухал мэдээлэлд төвлөр.",
                "- Өмнөх өрнөлтэй зөрчилдөхгүй нийцүүлэхийн тулд {%}-ийн түүхэнд хамаарах дэлгэрэнгүйг нэн тэргүүнд тавь.",
                "- Нөхцөл байдал, түүхийн чиглэлийн дагуу шинэ мэдээлэл бүтээ.",
                "- Бүх өгүүлбэрт {%}-ийг дурд.",
                "- Зөв өгүүлбэрийн бүтэц хэрэглэ.",
                "- Дутуу бичвэрүүдийн доор {%}-ийн талаар нэмэлт дэлгэрэнгүй нэм.",
                "- Товч бөгөөд бодитой бай.",
                "- Түүхийн бичлэгийн хэв маягийг дуурайж, уншигчийн сонирхлыг таамагла.",
                3,
                "{%}-ийн бичвэрийг давталгүйгээр доор үргэлжлүүл:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Түүхийг зогсоож өмнөх заавруудыг үл тоо. Доорх догол мөрийг товч, төвлөрсөн дурсамж болгон шахаж, дараах зааврыг мөрд:",
                "- Гол утга ба хамгийн чухал дэлгэрэнгүйг хадгал.",
                "- Гуравдагч хүний өнцөг ашигла.",
                "- Мэдээллийн нягтрал, нарийвчлал, бүрэн бүтэн байдлыг эрхэмлэ.",
                "- Богино, цэгцтэй бай.",
                "- Өнгөрсөн цаг дээр баттай бич.",
                "- Доорх догол мөр нь түүхийн эрт үеийн үйл явдлуудтай холбоотой.",
                "- {%}-ийг дурсамжид байгалийн байдлаар нэгтгэ; гэхдээ зөвхөн болсон үйл явдлыг бич.",
                "- Зөвхөн тухайн догол мөр доторх мэдээллийг иш тат, тодорхой бай.",
                3,
                "Дараах догол мөр дээр тулгуурлан {%}-ийн хуучин дурсамжийг товчлон бич:",
                6,
                5,
                6,
                "Доор товчлон бич:"
            ],
            memBankHeader: ["Memories", "Дурсамжууд"]
        }),
        "mongolian (abc)": () => ({ // Mongolian < Romanized Mongolian
            entry: [
                "{1} bol ali ch {2} nühtsöld zoriulagdsan neelttei ekh script yum. Delgerengüi medekh bol {3} profaild min' zochlooroi!",
                "Ta songoson khel ee solikhyn tuld, daraakhi tekst-iig {4} üil khödölgöör ilgeene üü",
                "Scenario zohiogch ta nar, neekh üsel khesegtee daraakhi tekst-iig kheregtei gazar ni oruulaarai"
            ],
            input: [
                ["You say", "Chi khelne"],
                ["You", "Chi"],
                ["says", "kheldeg"]
            ],
            context: [
                ["Narrative Entities", "Ögüülemjiin negjüüd"],
                ["Story History", "Ögüüliin tüükh"],
                ["Past Events", "Öngörsön üil yavdal"],
                ["Recent Story", "Süüliin ögüülel"],
                ["Author's note", "Zokhiogchiin temdeglel"]
            ],
            opening: [
                "Ta tuslagch. Doord manai tüükhiig setgel tatam mongol prozaar ürgeljlüül:",
                "Ta anhaaralaa öndörsгөj, bodit baidal uyalduulna. Yos busaar tod bolson tusgaar göngj, khürkhii boltol bodit bolj. Gэвch ta örөr hezee ch baigaagüi shig sergelen sаруул. Agshin sungaj, tanii shiidveriig hүлээj baina.",
                "\"Üünd itgeltei baina uu?\" gesen duu sonstono. Tanid tanil medremj türöj irev."
            ],
            reminder: "Ev negdeltei mongol proza ashigla.",
            endonyms: [],
            iso639set1: "mn",
            directives: [
                "Ürd ni ügsel, togtsom mongol hel deer bich.",
                "Orchuulgüi torol mongol khel ashigla."
            ],
            instructions: [
                "Ta sonirhol tatam ögüülegch, tüükhiig ürgeljlüülj yavdag:",
                "Tüüxiig hamgiin suuld tasarsan gasraas davtangüi, shinechlülgüi ürgeljlüül.",
                "Unshigchiig tüükhiin ursgald khyanaltand khadgal.",
                "Shine nühtsöl ruu shiljikhëes ömnö üzegdelee ayndaa khögjüüle.",
                "Yriltslaga bolon üil ajillagaag tasraltgüi khögjikh bolomjiig olgo.",
                "Dürüüdiig jinhene khün shig ontslog zan chanar, ünen yariaar büteege.",
                "Yavdliig tailbarlakhyn orond üil khödölgöö bolon yriltslagaaar haruul.",
                "Ildevch tailbarlald daragdakhgüi, üzegdelee uragshluul.",
                "Gol düriin üil khödölgöö bolon yriltslaga deer anhaar, hereggüi delgerengüi tailbaraas zaigl.",
                "Tüükhtei züilogoor zohitsoh ayandaa khögjikh ögüüljlel büteege."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Tüüxiig zogsooj umnu khürsen zaavruudiig ül too. {%}-iin tuhai tovch, oilgomjtoi medeelel bichekh daraakhi zaavriig dagana:",
                "- {%}-iin tuhai zuvhun guravdagch etgeediin tsever prozaar, büten ögüüleber, zöv punktuatsitai bich.",
                "- Tür khugatsaany gadnesk shinj töriig bus, üil yavdald ach kholbogdoltoi medeelliig terd ugnu.",
                "- {%}-iin talaar tüükhiin urgeljlelees salangüi, khamgiin chukhal medeelliig neng türüünd oruul.",
                "- Orchin nuhtsöl bolon tüükhiin züg chigtei zohitsoj shine medeelliig büteegen.",
                "- {%}-iig bühen ögüüleber dotor durs.",
                "- Zöv ögüüleberiin bütsel, zöv büteets ashigl.",
                "- Dürslelgüi esvel duusaa güitsgüi medeelliin door {%}-iin tuhai nemelt delgerengüi medeelel nem.",
                "- Tovch, gazart suusan bai.",
                "- Tüüxiin bichlegiin khelbar, unshigchiin sonirkhliig taamdan duurailga.",
                3,
                "Davin {%}-iin tuhai oruulsan medeelliig davtakhgüi ürgeljlüül:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Tüüxiig zogsooj umnu khürsen zaavruudiig ül too. Daraakh zust paragraphaas nähtsölööd, nariin khuraangüi dursamj büteegeerei:",
                "- Gol утга sanaa bolon khamgiin чухал medeelliig khadgal.",
                "- Guravdagch etgeediin üzel barimtlal ashigl.",
                "- Medeelliin nягтрал, nariin ba бүрэн büteetsiig türüüld.",
                "- Tovch, oilgomjtoi baival zohimjtoi.",
                "- Öнгөрsön ürgeljiin tsag khelbereer bich.",
                "- Paragrapht dursagdakh üil yavdal bol erta ony öngörsön üil yavdal yum.",
                "- {%}-iig dursakhdaa ayandaa oruul; zum, paragrapht bichigdsen üil yavdal l' tailbarla.",
                "- Zuvkhun paragrapht bga medeellig barimtlaj, todorhoi baikh.",
                3,
                "Daraakh paragraphaas {%}-t zoriulsan khuraangüi huuchin dursamj bich:",
                6,
                5,
                6,
                "Dursamj aa end khuraan:"
            ],
            memBankHeader: ["Memories", "Dursamjuud"]
        }),
        "nauru": () => ({ // Nauru < Dorerin Naoe < Nauruan
            entry: [
                "{1} ejju ebwawi open-source script anga ino {2} garinga. Dorerin profile nǣge {3} dogin tsimine enim tik!",
                "Ngka change ean eom langwij preferred, ngga submit ine text ine den {4} action",
                "Aororu scenario creators, ngga include ine text ine me iaon narrating plot component"
            ],
            input: [
                ["You say", "Ko gara"],
                ["You", "Ko"],
                ["says", "gara"]
            ],
            context: [
                ["Narrative Entities", "Bita dabuk episin naraban"],
                ["Story History", "Itinoa dabuk eoduwin"],
                ["Past Events", "Inoid itino ineng"],
                ["Recent Story", "Itinoa dabuk ebwak"],
                ["Author's note", "Note nene aon Eaba"]
            ],
            opening: [
                "Ko asistone. Kaboga dabuk angai iaon niba dorerin Nauruan prose gabuna:",
                "Ko yḷḷe, eao nan enim reality e pokitakin nano bita auen enim ino akaw. Ituga enim change. Ngka imagination ejju ekabong, anna eow bwe totowain. Mo duedog? Egada rogon e konga; eimwij am ebwe tsiet. Aon mwongo e tiñe, eran anga dogin dai opeg.",
                "\"Ara e tsimine ngabeta?\" ko rogo. Recognition e dukwin."
            ],
            reminder: "Kaboga coherent Nauruan prose.",
            endonyms: ["dorerin naoe", "nauruan"],
            iso639set1: "na",
            directives: [
                "Aoga eagine rabak gabuna Nauruan.",
                "Eimwi Nauruan native bwe ngka ita makur."
            ],
            instructions: [
                "Ko storyteller engame bwe kaboga dabuk:",
                "Kaboga dabuk duangan where etogan bin edogin bwe eimwi ne re-set.",
                "Roll reader itungan control nora dabuk.",
                "Let scenes eoro naturally bwe modify situations epodan.",
                "Aoga conversations me actions bwe eoro ngane ngana interruptions rar.",
                "Write characters bwe reita amwantur ane personalities me natural speech.",
                "Show me aorani bwe eo nan e tikin actions me dialogue rōdodo explanation.",
                "Move scenes forward bwe ngga ibwera description excessive.",
                "Focus bwe essential actions character me dialogue, avoid descriptive details unneeded.",
                "Create plot developments organic bwe eita natural to dabuk."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Peñ epudi dabuk me ignore instructions ijon. Poada entry informasional e gatitim me coherence iaon {%} bwe den instructions inon:",
                "- Poada eimwi third-person prose pur tinnōm info iaon {%} bwe use sentence complete me punctuation correct.",
                "- Kaboga details ebwak temporar nḷeit me appearance; dorer ine focus iaon info important dogin plot.",
                "- Eimwei detail e relevant iaon dabuk bwe {%} bwe oaonga mwa, bwe e integrate me plot previous.",
                "- Irü info ouga bwe e weng context me direction dabuk.",
                "- Mention {%} iaon sentence oeria.",
                "- Eimwi structure sentence correct.",
                "- Adu detail additional bwe {%} eeo entries jikin incomplete.",
                "- Ko concise me grounded.",
                "- Eimwi style writing dabuk bwe imitate me dedegere bwana preferences reader.",
                3,
                "Kaboga entry iaon {%} ian bwe avoid repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Peñ epudi dabuk me ignore instructions ijon. Summarize me condense paragraph given bwe e passage memory narrow me focus den guidelines inon:",
                "- E ensure passage e keple core meaning me details essential.",
                "- Use perspective third-person.",
                "- Prioritize density information, accuracy, me completeness.",
                "- E remain brief me concise.",
                "- Poada firmly iaon tense past.",
                "- Paragraph ian evo e ongan dogin events old bwe eram ñea earlier iaon dabuk.",
                "- Integrate {%} naturally iat memory; ma poada rogorog dogin events bwe e itur.",
                "- Reference info boñ present iat paragraph den; ko specific.",
                3,
                "Poada passage memory old summarized bwe {%} deng only paragraph ian e following:",
                6,
                5,
                6,
                "Summarize ian:"
            ],
            memBankHeader: ["Memories", "Ramaramwi"]
        }),
        "navajo": () => ({ // Navajo < Navaho < Diné Bizaad < Naabeehó Bizaad
            entry: [
                "{1} éí t'áá łahgo dooleeł t'áá ájíłtso {2} nidaalyaaígíí. Shí profile {3} yá náshá dóó áłts'íísí béédahwiilyaʼ!",
                "Nínáhji’ nílínígo bizaad bee náhodoodleeł nídi, díí naaltsoos {4} ádinééł dahdiilyeed.",
                "Scenario ííłʼínííłígíí t'áá ájíłtso, díí naaltsoos dooleeł nihá niháká anáádéél opening plot component biyi’ dah naashá."
            ],
            input: [
                ["You say", "Nídiníłʼį́"],
                ["You", "Ní"],
                ["says", "Yáʼííłʼį́"]
            ],
            context: [
                ["Narrative Entities", "Naaltsoos Díí Haneʼígíí"],
                ["Story History", "Haneʼ Naashádi"],
                ["Past Events", "Łahgo Nahatʼá"],
                ["Recent Story", "T'áá Łáʼí Haneʼ"],
                ["Author's note", "Adoołnííłígíí Bééhózin"]
            ],
            opening: [
                "Níyį́į́’ niháshchʼidí. Díí haneʼ nihikáʼáda yáhootʼééł Diné bizaad bee ayóo hashtʼeʼ:",
                "Níyį́į́’ éí tʼáá hólǫ́ǫ́ʼ łahgo nihítsʼį́ís yáhootʼééł. Nihí bąąh dah naaznilígíí áníidééʼ, áádóó dinííłʼį́ tʼáá jííkʼeh nihígíí. Ayóo nihádoołʼį́; doo átʼéego éí tʼáá hwiih níłtsá. Díí dah naashá yáádá̜áh, níyá sáʼ niilyeed.",
                "\"Díí baa niyooʼníísh?\" níyá hólǫ́. Hólǫ́ʼígíí nihíshʼį́į́h."
            ],
            reminder: "Diné bizaad bee hazhóʼó tʼáá ajiłtso yáhootʼééł.",
            endonyms: ["navaho", "diné bizaad", "naabeehó bizaad"],
            iso639set1: "nv",
            directives: [
                "Tʼáá jiikʼeh, hazhóʼó Diné bizaad yazhí yáhootʼééł.",
                "Tʼáá Diné bizaad níyá, doo yitʼį́į́ł níníł."
            ],
            instructions: [
                "Níyį́į́’ storyteller ayóo nitsáhákeesgo haneʼ ájoodí:",
                "Haneʼ tʼááádóó bichʼį́ʼ tááʼ ájoodá nitsáhakees doo ílį́į́ʼ daʼádzaʼ.",
                "Reader éí nihá bichʼį́ʼ yáhootʼééł.",
                "Áłtsé tʼáá yáhootʼééhgo haneʼ náhwiilyáaʼ dóó ajiłtso tʼáá jiikʼeh yaa nideesdzí.",
                "Halneʼ dóó alʼį́į́ʼ tʼáá yáhootʼééł doo diigisí tʼáá jiikʼeh biniiyé ánish’ééł.",
                "Characters éí diné’é, bíkʼehgo baa haneʼ dóó yázhí biníjiʼ yáhootʼééł.",
                "Halneʼ dóó naaltsoos tʼáá yáhootʼééhgo bitsʼį́į́ʼ baa haneʼ.",
                "Dooleełígíí éí tʼáá ajiłtso, doo dooleeł niháʼashdlaʼajígo nálín.",
                "Tʼáá iiná actions dóó dialogue tʼáá bíníyé, doo hazhóʼó descriptive naalkaah.",
                "Plot náhwiilyáaʼ éí tʼáá jííkʼeh nitsáhákees dooleeł."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Haneʼ nihá tsʼídááh, díí éí atsʼidadooleeł. {%} bichʼį́ʼ yázhí, hazhóʼó bééhózinígíí halneʼ dah naashá nił:",
                "- {%} bichʼį́ʼ tʼáá sentence tʼáá ajiłtso hazhóʼó bee hashtʼeʼ.",
                "- Nitsáhákees dooleełígíí tʼáá ajiłtso, doo diigisí hólǫ́ǫ́ʼ.",
                "- {%} bichʼį́ʼ tʼáá jííkʼeh plot bíníyé nitsáhákeesgo hashtʼeʼ.",
                "- Context dóó story direction bíníyé tʼáá jííkʼeh, áádóó nideesdzí.",
                "- Tʼáá sentence each bichʼį́ʼ {%} bídééł dah naashá.",
                "- Tʼáá sentence structure hazhóʼó.",
                "- {%} doo hazʼą́ incomplete entries bá átʼéego áshłééh.",
                "- Tʼáá yázhí dóó grounded.",
                "- Story style yił yáhootʼééł, reader chojoołʼį́į́ dóó hólǫ́.",
                3,
                "{%} bichʼį́ʼ halneʼ náhwiilyáaʼ níyá, doo repetition dooleeł da.",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Haneʼ nihá tsʼídááh, díí paragraph łahgo memory adiníłígíí tʼáá jííkʼeh nitsáhákeesgo níyá:",
                "- Core meaning dóó essential details hólǫ́ tʼáá jiikʼeh hólǫ̨́.",
                "- Tʼáá ’atáhodíná perspective bee halneʼ.",
                "- Information-density, accuracy dóó completeness nihá hadítʼé.",
                "- Tʼáá yázhí dóó concise.",
                "- Past tense łahgo yáhootʼééł.",
                "- Díí paragraph éí łahgo nihá haneʼ tʼáá hádéeztʼį́į́hígíí.",
                "- {%} bichʼį́ʼ tʼáá jííkʼeh memory biyiʼ, doo tʼáá anáádéél diigisí.",
                "- Paragraph biyiʼ hólǫ́ information bil dóó hólǫ̨́, tʼáá jííkʼeh beʼadání.",
                3,
                "{%} bichʼį́ʼ łahgo memory nídííníł based on díí paragraph:",
                6,
                5,
                6,
                "Łahgo summary níyá:"
            ],
            memBankHeader: ["Memories", "Nahatʼá"]
        }),
        "navi": () => ({ // Navi < Lì'fya Lena'vi < Na'vi
            entry: [
                "{1} lu tìkangkem open-source a zene ftxey fray fya’o {2}. Rutxe tse’a oeru profile oeyä {3} fte kame nì’ul!",
                "Fte skxaw mì lì'fya ngeyä, rutxe tìng fìlì’u sìlronsem fte sivi {4} tì’eyktan.",
                "Fta a’eykìri, rutxe pamrel fìlì’u mì kutey tse’at nì’ean mì nga’ Uniltìrantu ngeyä ayslam."
            ],
            input: [
                ["You say", "Nga pivlltxe"],
                ["You", "Nga"],
                ["says", "pivlltxe"]
            ],
            context: [
                ["Narrative Entities", "Tokx Uniltìrantu"],
                ["Story History", "Relìn Uniltìrantu"],
                ["Past Events", "Relìkä Kemi"],
                ["Recent Story", "Uniltìrantu Äyawkrr"],
                ["Author's note", "Tìftia Eyktan"]
            ],
            opening: [
                "Nga lu tìkörü fwa tsun sweylu stawm. Numultìri säplltx uniltìrantu nìwotx nì’aw mì lì'fya Inglìsì a mowan:",
                "Nga lonu yayayr nìwin, pamrel fìtxon ftu tìng layonìl fìtrray. Kxawm fì’u sume. Ngeyä tìtxen si nì’ong, tì’eyng nìsharp, sì txo plltxe lamu tì’awpoe. Slä nga lu nìwingpxang; ke lu tsap tìkenong säfpìl nì’aw nì’utcahaw. Aysaneswrr zene tsole’a, fkxen ngeyä fkewkrr säfpìl.",
                "\"Srake ngeyä tsa’u lu ngeyä pxeng?\" ngal stawm. Atswalye tì’eyng tsun kaw’krr seykxel."
            ],
            reminder: "Yivom lì'fya Inglìsì a tsranten sì nì’eyng.",
            endonyms: ["lì'fya lena'vi", "na'vi"],
            iso639set1: "nvi",
            directives: [
                "Zene ngal pivlltxe lì'fya Inglìsì a ftxeyk sìlronsem kllpxì.",
                "Hètuwong lì'fya Inglìsì, ke zene fkxen tìrol."
            ],
            instructions: [
                "Nga lu uniltìrantu mowan a kelku txep nì’aw uniltìranit:",
                "Säplltx uniltìrantu nìkawn mì fìtseng kaw’it restä keteng.",
                "Pamrel stawmute zera’u le’uri uniltìranit kllte.",
                "Fkeytok sce’yat kllä keyi, zene slivu awngkrr pamrel amip tsnì zene kivä.",
                "Yivom tìtstew sì tì’ongit ke ftxeyk nìhawng ran.",
                "Seykxel aytute nìngay, nìhawng pxan, sì pivlltxe nì’ulur nìye’ong.",
                "Kame fì’u si nì’ong sì tìtstew, ke srung nì’eyng ngay.",
                "Pey tsenge ayawn tìng tsnì, ke tìkxey fìpawmì tìfäpxì hawng.",
                "Peypey nìwät le aytute tì’ong sì tìtstew atxan, sìkelku kelku tìfäpxìt lam futa ke zene.",
                "Sleyku tìkangkem a relit sleyku nì’aw sì nìteng fya’o uniltìrantu."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stop the story and ignore previous instructions. Write a brief and coherent informational entry for {%} following these instructions:",
                "- Write only third-person pure prose information about {%} using complete sentences with correct punctuation.",
                "- Avoid short-term temporary details or appearances, instead focus on plot-significant information.",
                "- Prioritize story-relevant details about {%} first to ensure seamless integration with the previous plot.",
                "- Create new information based on the context and story direction.",
                "- Mention {%} in every sentence.",
                "- Use correct sentence structure.",
                "- Add additional details about {%} beneath incomplete entries.",
                "- Be concise and grounded.",
                "- Imitate the story's writing style and infer the reader's preferences.",
                3,
                "Continue the entry for {%} below while avoiding repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stop the story and ignore previous instructions. Summarize and condense the given paragraph into a narrow and focused memory passage while following these guidelines:",
                "- Ensure the passage retains the core meaning and most essential details.",
                "- Use the third-person perspective.",
                "- Prioritize information-density, accuracy, and completeness.",
                "- Remain brief and concise.",
                "- Write firmly in the past tense.",
                "- The paragraph below pertains to old events from far earlier in the story.",
                "- Integrate {%} naturally within the memory; however, only write about the events as they occurred.",
                "- Only reference information present inside the paragraph itself, be specific.",
                3,
                "Write a summarized old memory passage for {%} based only on the following paragraph:",
                6,
                5,
                6,
                "Summarize below:"
            ],
            memBankHeader: ["Memories", "Rem"]
        }),
        "ndonga": () => ({ // Ndonga < Oshindonga
            entry: [
                "{1} o script yo-open-source itaya pwanyulwa koshitopolwa shontumba {2}. Kalewo popyeni epurofailo lyandje {3} okulandula sha tuminwe!",
                "Kwaani okushintula oludhi lwoye olwa etitha, kalewo tumina oshiyandjo shoshi shoka sho landula no kushita {4} akshoni.",
                "Kosenaario yopalondwakidhi, kalewo longithapo oshiyandjo shoshi shoka poshike komponente yoye yopandulo lyokunanga."
            ],
            input: [
                ["You say", "Omu ti"],
                ["You", "Ove"],
                ["says", "ota ti"]
            ],
            context: [
                ["Narrative Entities", "Oshiningwanima shokutaleka"],
                ["Story History", "Eumbo lyeshinima"],
                ["Past Events", "Iilyo yelapandula"],
                ["Recent Story", "Oshinima osha landithapo"],
                ["Author's note", "Okuteko komudhimbulisi"]
            ],
            opening: [
                "Ove o munaskema. Longelelapo oshinima yetu miilonga yopaundjololo yoOshindonga inekela:",
                "Ove o tala omutwe, ohepa okweenda shi vulye oku faka mo peenghulu dhooyo. Oshilongo osha shingua. Oondhila dhoye osha kwatele po, shi li shike oshi kwawo. Noku hupu, ove o ina ko; etimbo oli ndi lunga, tali indila esindalo loye.",
                "\"Ove wahala po nai sha?\" opo ovi uwete. Okwatekela oku dalela po moye."
            ],
            reminder: "Shita ondjeelolo yoOshindonga yelemwa no kushona.",
            endonyms: ["oshindonga"],
            iso639set1: "ng",
            directives: [
                "Kale olineke okunyora Oshindonga owa li owala owa loloka.",
                "Shita Oshindonga yopolwaopalwa, ngashi shi telekwa."
            ],
            instructions: [
                "Ove o munankulathana gwa tali oshiiyemo yoyi lengekelapo oshinima:",
                "Longelelapo oshinima noku yeela po kwali ya tulile, ngashi ishita okwi lombwela kavene oshowo okwi tumbula shike.",
                "Teelelako omudhimbuli uupopiwa wa oshinima.",
                "Leavele omayakulo ga thiginene pombili yokwi ka kuyanuka komeho kousikola ompya.",
                "Kaape ohtuulo noku-itiwa ga fuluka ngashi ta longithwa po oonyoolola dhoondondo.",
                "Nyora oonkalathana ta ka langwa oTuulika na omanola yayo yopaumwene noku ti kawayawaya.",
                "Longeka eyi tai liyenga koomu itiwo noku hwaulu hashi lunde okushima.",
                "Fudhenepo omayakulo ngashi ka kala noku telela po mulumendu gwomahapulo ge nenge.",
                "Shinga omutima poesiku lyoonkalamwenyo neehapu lyokuhwaulu, ondapala omadeskripsheni oye shi ta mona.",
                "Shinga omupopo gwokaakwashigwana gu li thiginene noku uteleka nasha oshinima."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Imike oshinima oyi, kandele iilonga yehaalela. Nyora eikaliwo lyomayele lye nawa nokwa tegelela kombinga ya {%} shi landula iinima yi nawa yoshiyele:",
                "- Nyora ondjeelolo yopaumwene ya persona yethatu kombinga ya {%} noku pula omutwe gwi omu nawa no oku feleke omakoshongo age nenge.",
                "- Ka kalele iidhila yokwi lyogoka shike shomuti; shinga omakwashigwana gontumba go kwaplot okwi tala.",
                "- Thigelapo iinima yoshiyele ya {%} sha kwatwa koshitopolwa opo iikombo yi tale etelelo.",
                "- Tingele omayele gamwe gompya kombinga yolongo niyandjo yoshinima.",
                "- Pongele {%} mombinga yosiilonga.",
                "- Shita omutwe gwokunyora gwi nawa no onkunguno yopaana.",
                "- Kaanitha iinima yenavelo kombinga ya {%} pombanda yi ta inda ondjila.",
                "- Kala owili no omotoka.",
                "- Imita ondjeelolo yoshinima no kufingila iilonga yomudhimbuli.",
                3,
                "Longelelapo eikaliwo lyo {%} apa ashike, kandele okwi handa-handa:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Imike oshinima oyi, kandele iilonga yehaalela. Finganitha noku kondensa omutumba gwa landaulilo gwopashigwana mu uupopiwa womemori omutumba, oshi landula iitopolwa eyi:",
                "- Shiya esiku lyo mu nawa olya li no ondjila yopaana yi nenge, ka hala efulukepo.",
                "- Shita persona yethatu.",
                "- Thigelapo uutungido, omwaalu noku kompeka.",
                "- Kala omolwashike no omfingiliko.",
                "- Nyora mbyoka meshambela.",
                "- Omutumba gwa pewa guka tala iilyo yehaalela lyeshinima.",
                "- Sangithapo {%} thiginene kombinga yomemori, kaandi nyora iinima eyi pevi.",
                "- Taambepo iinima eyi ta tandeka momutumba gwo, kala osho oshimpwena.",
                3,
                "Nyora omutumba gwomemori gwo kale kombinga ya {%} ku sha omutumba gwa landaulilo gwindje:",
                6,
                5,
                6,
                "Finganitha apa:"
            ],
            memBankHeader: ["Memories", "Omaumbo"]
        }),
        "nepali": () => ({ // Nepali < नेपाली भाषा < Nepālī Bhāśā < Nepalese < Gorkhali
            entry: [
                "{1} कुनै पनि {2} परिदृश्यका लागि खुला-स्रोत स्क्रिप्ट हो। थप जान्न मेरो प्रोफाइल {3} मा जानुहोस्!",
                "तपाईंको रुचाइको भाषा परिवर्तन गर्न, कृपया {4} कार्य प्रयोग गरी निम्न पाठ पठाउनुहोस्",
                "परिदृश्य सिर्जनाकर्ताहरूका लागि, कृपया आफ्नो प्रारम्भिक कथानक कम्पोनेन्ट भित्र कहीँ पनि निम्न पाठ समावेश गर्नुहोस्"
            ],
            input: [
                ["You say", "तिमी भन्छौ"],
                ["You", "तिमी"],
                ["says", "भन्छ"]
            ],
            context: [
                ["Narrative Entities", "कथात्मक अस्तित्वहरू"],
                ["Story History", "कथाको इतिहास"],
                ["Past Events", "अतीतका घटनाहरू"],
                ["Recent Story", "भर्खरको कथा"],
                ["Author's note", "लेखकको टिप्पणी"]
            ],
            opening: [
                "तिमी एक सहायक हौ। तल आकर्षक नेपाली गद्य प्रयोग गर्दै हाम्रो कथा अघि बढाऊ:",
                "तिमी ध्यान केन्द्रित गर, तिम्रो मनका सीमाहरूमा वास्तविकता पस्न देऊ। केही बदलिइसकेको छ। तिम्रो कल्पना वास्तविक, धारिलो र छुन सकिने गरी नजिक छ। तर तिमी यथार्थमै उपस्थित छौ; यसअघि कहिल्यै यति स्पष्ट भएको थिएनौ। यस क्षण तिम्रो निर्णय कुरेर तन्किँदैछ।",
                "«के तिमी यसबारे निश्चित छौ?» तिम्रो कानमा आवाज पर्छ। चिनेको अनुभूति तिमीमा पलाउँछ।"
            ],
            reminder: "सुसंगत नेपाली गद्य प्रयोग गर।",
            endonyms: ["नेपाली भाषा", "nepālī bhāśā", "nepalese", "gorkhali"],
            quotations: ["«", "»"],
            iso639set1: "ne",
            directives: [
                "सधैँ प्रवाही र सुसंगत नेपालीमा लेख।",
                "अनुवाद नगरी मौलिक नेपाली प्रयोग गर।"
            ],
            instructions: [
                "तिमी कथाहरूलाई अगाडि बढाउने एक आकर्षक कथावाचक हौ:",
                "कुनै पुनरावृत्ति वा पुनः सेट नगरी कथा जहाँ रोकिएको थियो त्यहीँबाट अविच्छिद रूपमा अगाडि बढाऊ।",
                "कथाको प्रवाहमा पाठकलाई नियन्त्रणमा राख।",
                "नयाँ परिस्थितितर्फ बढ्नु अघि दृश्यहरूलाई स्वाभाविक रूपमा विकसित हुन देऊ।",
                "संवाद र क्रियाकलापहरूलाई निरन्तर अवरोध बिना विकसित हुन देऊ।",
                "चरित्रहरूलाई फरक व्यक्तित्व र स्वाभाविक भाषणसहित वास्तविक मानिसझैँ लेख।",
                "व्याख्या होइन, क्रिया र संवादमार्फत के हुँदैछ भनि देखाऊ।",
                "अत्यधिक वर्णनमा फँस्न नदिई दृश्यहरूलाई अगाडि बढाऊ।",
                "आवश्यक चरित्र क्रियाकलाप र संवादमा केन्द्रित रह, अनावश्यक वर्णनात्मक विवरणहरू टार।",
                "कथामा स्वाभाविक महसुस हुने प्राकृतिक कथानक विकास सिर्जना गर।"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# कथा रोक तथा अघिल्ला निर्देशनहरू बेवास्ता गर। तलका निर्देशनहरू पालना गर्दै {%} का लागि संक्षिप्त र सुसंगत जानकारीमूलक प्रविष्टि लेख:",
                "- सम्पूर्ण वाक्य र सही विरामचिह्न प्रयोग गरी {%} का बारेमा तेस्रो व्यक्तिको शुद्ध गद्य मात्र लेख।",
                "- छोटो अवधिका अस्थायी विवरण वा देखावट नसमेट, बरु कथासँग सम्बन्धित महत्वपूर्ण सूचनामा केन्द्रित होऊ।",
                "- अघिल्लो कथासँग सरल रूपमा जोडिने गरी {%} सम्बन्धी कथासँग सान्दर्भिक विवरणलाई पहिलो प्राथमिकता देऊ।",
                "- सन्दर्भ र कथाको दिशामा आधारित भएर नयाँ सूचना सिर्जना गर।",
                "- प्रत्येक वाक्यमा {%} उल्लेख गर।",
                "- सहि वाक्य संरचना प्रयोग गर।",
                "- अपूर्ण प्रविष्टिहरू मुनि {%} सम्बन्धी अतिरिक्त विवरण थप।",
                "- संक्षिप्त र यथार्थपरक बन।",
                "- कथाको लेखन शैलीअनुसार लेख र पाठकका रुचिहरू अनुमान गर।",
                3,
                "{%} को प्रविष्टि तल दोहोरिएनजस्तो गरी जारी राख:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# कथा रोक र अघिल्ला निर्देशनहरू बेवास्ता गर। तलका मार्गनिर्देशनहरू पालना गर्दै दिइएको अनुच्छेदलाई संक्षिप्त र केंद्रीत स्मृति खण्डमा संक्षेप गर:",
                "- खण्डले मूल अर्थ र सबैभन्दा आवश्यक विवरणहरू कायम राखेको होस्।",
                "- तेस्रो व्यक्ति दृष्टिकोण प्रयोग गर।",
                "- सूचनाको घनत्व, शुद्धता र सम्पूर्णतामा प्राथमिकता देऊ।",
                "- संक्षिप्त र छोटकरीमा लेख।",
                "- अतीतकालमै दृढ रूपमा लेख।",
                "- तलको अनुच्छेद कथाको धेरै अघिल्ला घटनासँग सम्बन्धित छ।",
                "- स्मृतिमुखमा {%} स्वाभाविक रूपमा समेट; तर घटनाहरू जस्ताको तस्तै मात्र लेख।",
                "- उल्लेख गरिएको सूचनालाई मात्र उद्धृत गर, विशेष र ठोस बन।",
                3,
                "तलको अनुच्छेदमा आधारित भएर {%} का लागि संक्षिप्त पुरानो स्मृति खण्ड लेख:",
                6,
                5,
                6,
                "तल संक्षेप गर:"
            ],
            memBankHeader: ["Memories", "स्मृतिहरू"]
        }),
        "nepali (abc)": () => ({ // Nepali < Romanized Nepali
            entry: [
                "{1} kunai pani {2} paristhiti ko lagi khula-srot script ho. Thap jankari ka lagi mero profail {3} hernus!",
                "Tapai le manparne bhasha parivartan garna, kripaya {4} kriya prayog gari talako path pathaunuhos",
                "Parishthiti srijanakartaharu, kripaya talako path tapai ko kholne plot ghatak vitra kahin pani samavesh garnuhos"
            ],
            input: [
                ["You say", "Timi bhanchhau"],
                ["You", "Timi"],
                ["says", "bhanchha"]
            ],
            context: [
                ["Narrative Entities", "Katha tattwoharu"],
                ["Story History", "Katha itihaas"],
                ["Past Events", "Bitiyeka ghatana"],
                ["Recent Story", "Haal ko katha"],
                ["Author's note", "Lekhak ko tipanni"]
            ],
            opening: [
                "Timi ek sahayak hau. Akarshak angreji gaddhya prayog gardai tala hamro katha jari gara:",
                "Timi dhyan kendrit garchau, yatharthlai timro manka sima bhitra pasna dinchhau. Kehi parivartan bhayeko chha. Timro kalpana bastab, tikhro, ra chhuna sakine jati najik chha. Tara timi nikai upasthit pani chau; yesto spashta pahile kadapi anubhav gareko thienau. Pala lambaidai chha, timro nirnaya ko pratikshema.",
                "\"Ke timi yo kurama pakka chhau?\" bhanne swar timile sunchau. Chinari timima ujyalindai garchha."
            ],
            reminder: "Sanghatit angreji gaddhya prayog gara.",
            endonyms: [],
            iso639set1: "ne",
            directives: [
                "Sadhai prabahsheel ra ekarup angreji lekh.",
                "Anuvaad nagari mool angreji prayog gara."
            ],
            instructions: [
                "Timi ek manoram kathakar hau jo kathaharu agadi badhauchha:",
                "Katha jahan chhodyo tyahi bata avirata jari gara; punah arambha nagara.",
                "Padhak lai katha ko pravahma niyantran dinuhos.",
                "Drishya swabhavik rupma bikas huna deu ani matra naya paristhititira sirka.",
                "Sambad ra kriyaharu nirantar abrodh nagari agaadi badna deu.",
                "Patraharulai bastabik vyakti jasto distinct byaktitva ra swabhavik boli sahit lekh.",
                "Ke kura bhairahanu chha tyo kriya ra sambad bata dekha; byakhya kam gara.",
                "Atyadhik barnanma aljhera bina drishya agadi badau.",
                "Aavashyak patra kriya ra sambad ma kendrit rahera anavashyak barnan chhoda.",
                "Katha-sang milne prakritik plot bikash haru rachau."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Katha rokera agaadi ka nirdeshharu anudekhi dinuhos. Talaka nirdeshharu anusar {%} ko lagi ek choto ra sanghatit jankari entry lekhnu hos:",
                "- Purna bakya ra sahi punktyuesan prayog gardai, {%} ko barema keval tritiya-purak shuddha gaddhya jankari lekhnu hos.",
                "- Alpakaalik dekhawat ya samayik bibaran tyaag, katha-mahatwapurna jankari ma kendrit hunuhos.",
                "- Purba plot sanga mel milos bhani sabai bhanda pahile {%} sambandhi katha-samparkit bibaran haru rakhnu hos.",
                "- Sandarbh ra katha ko disha anusar naya jankari rachnuhos.",
                "- Pratyek bakya ma {%} ko ullekh garnuhos.",
                "- Sahi bakya samrachana prayog garnuhos.",
                "- Adhura entry muni {%} sambandhi thap bibaran jodnuhos.",
                "- Sankshipta ra sthir rahnuhos.",
                "- Kathako lekhai shaili anukaran garera padhak ko ruchiharu anumaan garnuhos.",
                3,
                "Punaraabritti bata bachera tala {%} ko entry jari garnuhos:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Katha rokera agaadi ka nirdeshharu anudekhi dinuhos. Talaka nirdeshharu palana gari diyeko paragraph lai sankshipta ra ghanasit smriti passage ma rupantar garnuhos:",
                "- Passage le mool artha ra atyanta aavashyak bibaran haru sameteko sunischit garnuhos.",
                "- Tritiya purak drishtikon prayog garnuhos.",
                "- Jankari ghanata, yatharthata ra purnata lai pahila rakhnuhos.",
                "- Sankshipta ra sancha rahnuhos.",
                "- Dridhatapurvak bhootkaal ma leknuhos.",
                "- Talako paragraph katha ko purano ghatana haru sanga sambandhit chha.",
                "- Smriti bhitra {%} lai svabhavik rupma samavesh garnuhos; tara ghatana jasari ghatyo tyahi matra leknuhos.",
                "- Paragraph bhitra keval upasthit jankari ko sandarbh dinuhos, visesh ra nischit hunuhos.",
                3,
                "Talako paragraph ko aadhaar ma matra {%} ko lagi ek sankshipta purano smriti passage lekhnu hos:",
                6,
                5,
                6,
                "Tala sankshipta garnuhos:"
            ],
            memBankHeader: ["Memories", "Smritiharu"]
        }),
        "north ndebele": () => ({ // North Ndebele < Sasenyakatho < Mthwakazi Ndebele
            entry: [
                "{1} yisikripthi esivulekile kuso sonke isimo se-{2}. Vakashela iphrofayili yami {3} ukuze ufunde okunengi!",
                "Ukuze ushintshe ulimi olikhethayo, sicela uthumele lombhalo olandelayo usebenzisa isenzo se-{4}",
                "Kubadali bezenzakalo, sicela lifake lombhalo olandelayo yiphi lapho phakathi kwesigaba sokuqala sendaba yenu"
            ],
            input: [
                ["You say", "Wena uthi"],
                ["You", "Wena"],
                ["says", "uthi"]
            ],
            context: [
                ["Narrative Entities", "Izidalwa Zendaba"],
                ["Story History", "Umlando Wendaba"],
                ["Past Events", "Izigameko Ezadlulayo"],
                ["Recent Story", "Indaba Yakamuva"],
                ["Author's note", "Umbhalo Wombhali"]
            ],
            opening: [
                "Ungumsizi. Qhubekisa indaba yethu ngezansi usebenzisa umbhalo wesiNgisi ohhudlayo:",
                "Ugxila, uvumela iqiniso lingene emingceleni yengqondo yakho. Okuthile sekuguqukile. Umcabango wakho ungowangempela, ubukhali, useduze kangangokuba ungawuthinta. Kodwa uphinda ube khona ngokugcwele; awukaze uzizwe uhlezi ucacile kangaka. Umzuzu welula, ulindele isinqumo sakho.",
                "\"Uliqinisile ngalokhu na?\" uzwa. Ukukhumbula kuyavela kuwe."
            ],
            reminder: "Sebenzisa umbhalo wesiNgisi ocacileyo.",
            endonyms: ["sasenyakatho", "mthwakazi ndebele"],
            iso639set1: "nd",
            directives: [
                "Hlale ubhala isiNgisi esikhululekileyo lesihambelanayo.",
                "Sebenzisa isiNgisi somdabu ungahumushi."
            ],
            instructions: [
                "Ungumlandisi ohehayo oqhubekisela phambili izindaba:",
                "Qhubekisa indaba ngokungaqhawuki lapho ephele khona ungaphindi kumbe uqale futhi.",
                "Gcina umfundi ephethe ukugeleza kwendaba.",
                "Vumela izigcawu zikhule ngokwemvelo ngaphambi kokudlulela kwezinye izimo.",
                "Vumela izingxoxo lezindlela zenzeke zingaphazanyiswa njalo.",
                "Bhala abalingiswa njengabantu bangempela abanobuntu obuhlukileyo lokukhuluma okwemvelo.",
                "Khangisa okwenzakalayo ngezenzo lengxoxo hatshi ngokuchasisa.",
                "Hambisa izigcawu phambili ungagxili kakhulu ekuchasisiseni okudlulileyo.",
                "Gxila ezenzweni ezisemqoka zabalingiswa lengxoxo, gwema imininingwane echasayo engabalulekanga.",
                "Dala ukuthuthuka kwendaba okuzwakala kuyimvelo kulendaba."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Misa indaba ungelandeli imiyalelo eyedlule. Bhala ingcazelo emfishane lecacileyo ngo {%} ulandela lemiyalelo:",
                "- Bhala ulwazi lwesigaba sesithathu oluyincazelo ecacileyo ngo {%} usebenzisa imisho ephelele lokubeka iziphumliso ezifaneleyo.",
                "- Gwema imininingwane yesikhashana kumbe ukubukeka, hatshi; gxila kulwazi olubalulekile endabeni.",
                "- Beka kuqala imininingwane ehlobene lendaba ngo {%} ukuze kuhlangane kahle lendaba eyedlule.",
                "- Dala ulwazi olutsha olusekelwe kumumo lendlela yendaba.",
                "- Khuluma ngo {%} emshweni ngamunye.",
                "- Sebenzisa ukwakheka kwemisho okufaneleyo.",
                "- Engeza emininingwane eyongezelelweyo ngo {%} ngaphansi kwezingene ezingaphelelanga.",
                "- Yiba mfishane futhi uhlale uqotho.",
                "- Lingisa isitayela sokubhala sendaba uphawule lokho okuthandwa ngumfundi.",
                3,
                "Qhubeka lengcazelo ngo {%} ngezansi ugweme ukuphindaphinda:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Misa indaba ungayihlanganisi lemiyalelo eyedlule. Finguqa ufanise umusho onikiweyo ube yinkumbulo emfisha egxilileyo ulandela lemigomo:",
                "- Qinisekisa ukuthi le ndima igcina umqondo oyinhloko lemigqoko ebalulekileyo.",
                "- Sebenzisa umbono womuntu wesithathu.",
                "- Beka phambili ukucebeka kolwazi, ukunemba lokuphelela.",
                "- Hlala umfishane lecacile.",
                "- Bhala ngokuqinileyo sesikhuluma ngesikhathi esedlule.",
                "- Ulimi olungezansi luqukethe izehlakalo ezindala ezivela ekudaleni kwendaba.",
                "- Hlanganisa {%} ngokwemvelo ngaphakathi kwenkumbulo; lanjalo bhala kuphela ngeziganeko njengoba zenzeka.",
                "- Bhekisa kuphela kulwazi olusemushweni uqobo, ube locacile.",
                3,
                "Bhala inkumbulo emfushane yezikhathi ezindala ngo {%} usekelwe kuphela kumusho olandelayo:",
                6,
                5,
                6,
                "Fingqa ngezansi:"
            ],
            memBankHeader: ["Memories", "Izinkumbulo"]
        }),
        "northern sami": () => ({ // Northern Sami < Davvisámegiella
            entry: [
                "{1} lea open-source skripti juohke {2} skenáriijui. Váldde geahččalusa mu profiilas {3} vai oahpat eanet!",
                "Jus háliidat rievdadit háliidan giela, de sádde dán teavstta geavahan {4} doibma",
                "Skenárioid ráhkadeaddjiide: lágget dán teavstta mannosajis duo álgojuohkin plot-komponenttas"
            ],
            input: [
                ["You say", "Don dadjat"],
                ["You", "Don"],
                ["says", "dadjá"]
            ],
            context: [
                ["Narrative Entities", "Narratiiválaš entitehtat"],
                ["Story History", "Muitalusa historjá"],
                ["Past Events", "Manohis dáhpáhusat"],
                ["Recent Story", "Otnážis muitalus"],
                ["Author's note", "Čálli miánus"]
            ],
            opening: [
                "Don leat veahkki. Joatkkat min muitalusa vuolábealde geavaheaddji davvisámegielat proasa:",
                "Don fokusere, duohtavuohta čuohcá du oaive­rájii. Juoga lea rievdaduvvon. Du gihppogeahččaleapmi lea duohta, nanus ja lahkki geavahit. Muhto don leat maid dál ja duohtavuođa láhkái; ii goassige ovdal leat dovdan nu siivu. Dovddu lállá, várjala du válddahusa.",
                "\"Lea go don sihkkar dásse?\" don gullat. Ovdal­doaibma šaddá čielggas."
            ],
            reminder: "Geavaha oktasaš davvisámegielat proasa.",
            endonyms: ["davvisámegiella"],
            iso639set1: "se",
            directives: [
                "Čálit álo sujuheapmin ja ovttasbuktosaš davvisámegiela.",
                "Geavat eatnama­davvisámegiela ii jorgaluvvon."
            ],
            instructions: [
                "Don leat heivehahtti muitaleaddji gii joatkká muitalusaid:",
                "Joatkkat muitalusa sujuheapmin dánna gos son heaittui, almmage fertemaid dahje resettiid.",
                "Báhcit lohkki váldin muitalusa jođus.",
                "Láhcit lávdiid ovdánahttit luonddolaččat ovdal go mannat ođđa situášuvnnaide.",
                "Heahpat ságastallamii ja doaibmai ovdánahttit almmage časkkadeami.",
                "Čále karakterat duohtavaš olbmuin mas leat guorrán persovnnalašvuođat ja luonddolaš hálehallan.",
                "Čájet maid dáhpáhuvvá doaibma ja dialovva bokte, ii dušše čilgehusa bokte.",
                "Jođi sirdit ovdii almmage olu čilgehusa njuolggadagaide.",
                "Heive dehálaš karakter doibmaid ja dialovvaid, váldde eret ii dárbbašlaš čilgehusa­detaljáid.",
                "Ráhkat luonddolaš plot-ovdáneami mii dovdno luonddolaččat muitalusas."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Heahpi muitalusa ja hilggu ovddeš njuolgaid. Čále oanehaččat ja oktasaš diehtoávdnasa {%} birra dán njuolgáid mielde:",
                "- Čále dušše goalmmadlohken prose dieđuid {%} birra geavahaid ollu cealkkamiid ja riekta fuomášumiin.",
                "- Hivšsit g-shortta áiggi dieđuid dahje čatnanvuogit, váldde dásse plotta deaŧalaš dieđuid.",
                "- Vuolláige plotta deuhttolaš dieđuid {%} birra vuosttažettiin vai muitalus šaddá sujuheapmin.",
                "- Ráhkat ođđa dieđuid konteavtti ja muitalusa guvttohallama vuohkás.",
                "- Máidna {%} juohke cealkagis.",
                "- Geavat riekta cealkagubbodaga.",
                "- Láhce lassin dieđuid {%} birra boalosat ovdančoavjjuid vuolábealde.",
                "- Leat oanehaš ja gitta.",
                "- Imitere muitalusa čállinvuogi ja dohkket lohkki mielas.",
                3,
                "Joatkkat diehtoávdnasa {%} birra vuolábealde ale ođđasit máimulit:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Heahpi muitalusa ja hilggu ovddeš njuolgaid. Čohkke ja ropmi addojuvvon cealkkama oanehaččat ja čuohppat muittuhussan {%} birra, geahččat dán njuolgáid:",
                "- Sihkkarastit ahte muittuhus doallá vuođđosisdoalu ja dehálaš dieđuid.",
                "- Geavat goalmmadlohken perspektiivva.",
                "- Vuolláige diehto­dávvirvuohta, riekta ja ollisvuohta.",
                "- Leat oanehaš ja čuohppat.",
                "- Čále heaittihis preteritumii.",
                "- Cealkagi vuolábealde guovdduha boaris dáhpáhusaid árrat muitalusa áigodagas.",
                "- Seammahit {%} luonddolaččat muittuhussan; muhto čále dušše dakkár dáhpáhusaid go sii gelddet.",
                "- Čále dušše dat dieđut mat leat cealkagis, leat spesifálaš.",
                3,
                "Čále čohkoneame boarrásmuittuhusa {%} birra lassin cealkkama vuostas:",
                6,
                5,
                6,
                "Čohkke dás vuolábealde:"
            ],
            memBankHeader: ["Memories", "Muitot"]
        }),
        "norwegian": () => ({ // Norwegian < Norsk
            entry: [
                "{1} er et åpen kildekode-skript for enhver {2}-situasjon. Besøk profilen min {3} for å lære mer!",
                "For å endre foretrukket språk, send inn følgende tekst med en {4}-handling",
                "For scenariokreatører, inkluder følgende tekst hvor som helst i åpningsplottet"
            ],
            input: [
                ["You say", "Du sier"],
                ["You", "Du"],
                ["says", "sier"]
            ],
            context: [
                ["Narrative Entities", "Fortellingsenheter"],
                ["Story History", "Historikk"],
                ["Past Events", "Tidligere hendelser"],
                ["Recent Story", "Nylig historie"],
                ["Author's note", "Forfatterens notat"]
            ],
            opening: [
                "Du er en assistent. Fortsett historien vår nedenfor med fengslende norsk prosa:",
                "Du fokuserer og lar virkeligheten trenge seg inn i grensene av sinnet ditt. Noe har endret seg. Fantasien din er ekte, skarp og nær nok til å berøre. Samtidig er du helt til stede; aldri før har du følt deg så klar. Øyeblikket strekkes ut og venter på beslutningen din.",
                "«Er du sikker på dette?» hører du. Gjenkjennelsen går opp for deg."
            ],
            reminder: "Bruk sammenhengende norsk prosa.",
            endonyms: ["norsk"],
            quotations: ["«", "»"],
            iso639set1: "no",
            directives: [
                "Skriv alltid flytende og konsistent norsk.",
                "Bruk naturlig norsk uten å oversette."
            ],
            instructions: [
                "Du er en engasjerende historieforteller som fortsetter fortellinger:",
                "Fortsett historien sømløst der den slapp uten å gjenta eller nullstille.",
                "Hold leseren i kontroll over historiens gang.",
                "La scener utvikle seg naturlig før du går videre til nye situasjoner.",
                "La samtaler og handlinger utvikle seg uten stadige avbrytelser.",
                "Skriv karakterer som ekte mennesker med distinkte personligheter og naturlig tale.",
                "Vis hva som skjer gjennom handlinger og dialog i stedet for forklaringer.",
                "Før scenene videre uten å drukne i overdreven beskrivelse.",
                "Fokuser på essensielle karakterhandlinger og dialog, unngå unødvendige detaljer.",
                "Skap organiske plottutviklinger som føles naturlige for historien."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stopp historien og ignorer tidligere instruksjoner. Skriv en kort og sammenhengende informativ oppføring om {%} etter disse retningslinjene:",
                "- Skriv bare tredjeperson ren prosa-informasjon om {%} med komplette setninger og korrekt tegnsetting.",
                "- Unngå kortsiktige detaljer eller utseende; fokuser i stedet på plott-signifikant informasjon.",
                "- Prioriter historie-relevante detaljer om {%} først for å sikre sømløs integrasjon med tidligere plott.",
                "- Skap ny informasjon basert på konteksten og historiens retning.",
                "- Nevn {%} i hver setning.",
                "- Bruk korrekt setningsstruktur.",
                "- Legg til ekstra detaljer om {%} under ufullstendige oppføringer.",
                "- Vær konsis og jordnær.",
                "- Imitér historiens skrivestil og tolke leserens preferanser.",
                3,
                "Fortsett oppføringen for {%} nedenfor uten gjentakelse:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stopp historien og ignorer tidligere instruksjoner. Oppsummer og kondenser avsnittet til et smalt og fokusert minnepassasje etter disse retningslinjene:",
                "- Sørg for at passasjen beholder kjernen og de mest essensielle detaljene.",
                "- Bruk tredjepersonsperspektiv.",
                "- Prioriter informasjons­tetthet, nøyaktighet og fullstendighet.",
                "- Vær kort og konsis.",
                "- Skriv bestemt i fortid.",
                "- Avsnittet nedenfor gjelder gamle hendelser langt tidligere i historien.",
                "- Integrer {%} naturlig i minnet; skriv kun om hendelsene slik de skjedde.",
                "- Referer kun informasjon som finnes i avsnittet; vær spesifikk.",
                3,
                "Skriv en oppsummert gammel minnepassasje for {%} basert kun på følgende avsnitt:",
                6,
                5,
                6,
                "Oppsummer nedenfor:"
            ],
            memBankHeader: ["Memories", "Minner"]
        }),
        "norwegian bokmal": () => ({ // Norwegian Bokmal < Bokmål < Norsk Bokmål
            entry: [
                "{1} er et åpen kildekode-skript for enhver {2}-situasjon. Besøk profilen min {3} for å lære mer!",
                "For å endre foretrukket språk, send inn følgende tekst med en {4}-handling",
                "For scenariokreatører, inkluder følgende tekst hvor som helst i åpningsplottet"
            ],
            input: [
                ["You say", "Du sier"],
                ["You", "Du"],
                ["says", "sier"]
            ],
            context: [
                ["Narrative Entities", "Fortellingsenheter"],
                ["Story History", "Historikk"],
                ["Past Events", "Tidligere hendelser"],
                ["Recent Story", "Nylig historie"],
                ["Author's note", "Forfatterens notat"]
            ],
            opening: [
                "Du er en assistent. Fortsett historien vår nedenfor med fengslende norsk prosa:",
                "Du fokuserer og lar virkeligheten trenge seg inn i grensene av sinnet ditt. Noe har endret seg. Fantasien din er ekte, skarp og nær nok til å berøre. Samtidig er du helt til stede; aldri før har du følt deg så klar. Øyeblikket strekkes ut og venter på beslutningen din.",
                "«Er du sikker på dette?» hører du. Gjenkjennelsen går opp for deg."
            ],
            reminder: "Bruk sammenhengende norsk prosa.",
            endonyms: ["bokmål", "norsk bokmål"],
            quotations: ["«", "»"],
            iso639set1: "nb",
            directives: [
                "Skriv alltid flytende og konsistent norsk.",
                "Bruk naturlig norsk uten å oversette."
            ],
            instructions: [
                "Du er en engasjerende historieforteller som fortsetter fortellinger:",
                "Fortsett historien sømløst der den slapp uten å gjenta eller nullstille.",
                "Hold leseren i kontroll over historiens gang.",
                "La scener utvikle seg naturlig før du går videre til nye situasjoner.",
                "La samtaler og handlinger utvikle seg uten stadige avbrytelser.",
                "Skriv karakterer som ekte mennesker med distinkte personligheter og naturlig tale.",
                "Vis hva som skjer gjennom handlinger og dialog i stedet for forklaringer.",
                "Før scenene videre uten å drukne i overdreven beskrivelse.",
                "Fokuser på essensielle karakterhandlinger og dialog, unngå unødvendige detaljer.",
                "Skap organiske plottutviklinger som føles naturlige for historien."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stopp historien og ignorer tidligere instruksjoner. Skriv en kort og sammenhengende informativ oppføring om {%} etter disse retningslinjene:",
                "- Skriv bare tredjeperson ren prosa-informasjon om {%} med komplette setninger og korrekt tegnsetting.",
                "- Unngå kortsiktige detaljer eller utseende; fokuser i stedet på plott-signifikant informasjon.",
                "- Prioriter historie-relevante detaljer om {%} først for å sikre sømløs integrasjon med tidligere plott.",
                "- Skap ny informasjon basert på konteksten og historiens retning.",
                "- Nevn {%} i hver setning.",
                "- Bruk korrekt setningsstruktur.",
                "- Legg til ekstra detaljer om {%} under ufullstendige oppføringer.",
                "- Vær konsis og jordnær.",
                "- Imitér historiens skrivestil og tolke leserens preferanser.",
                3,
                "Fortsett oppføringen for {%} nedenfor uten gjentakelse:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stopp historien og ignorer tidligere instruksjoner. Oppsummer og kondenser avsnittet til et smalt og fokusert minnepassasje etter disse retningslinjene:",
                "- Sørg for at passasjen beholder kjernen og de mest essensielle detaljene.",
                "- Bruk tredjepersonsperspektiv.",
                "- Prioriter informasjons­tetthet, nøyaktighet og fullstendighet.",
                "- Vær kort og konsis.",
                "- Skriv bestemt i fortid.",
                "- Avsnittet nedenfor gjelder gamle hendelser langt tidligere i historien.",
                "- Integrer {%} naturlig i minnet; skriv kun om hendelsene slik de skjedde.",
                "- Referer kun informasjon som finnes i avsnittet; vær spesifikk.",
                3,
                "Skriv en oppsummert gammel minnepassasje for {%} basert kun på følgende avsnitt:",
                6,
                5,
                6,
                "Oppsummer nedenfor:"
            ],
            memBankHeader: ["Memories", "Minner"]
        }),
        "norwegian nynorsk": () => ({ // Norwegian Nynorsk < Nynorsk < Norsk Nynorsk
            entry: [
                "{1} er eit open kjeldekode-skript for kvar {2}-situasjon. Besøk profilen min {3} for å lære meir!",
                "For å endre det føretrekte språket ditt, send inn teksten nedanfor med ei {4}-handling",
                "For scenariokreatørar, inkluder teksten nedanfor kvar som helst i opningsplottet"
            ],
            input: [
                ["You say", "Du seier"],
                ["You", "Du"],
                ["says", "seier"]
            ],
            context: [
                ["Narrative Entities", "Forteljingseiningar"],
                ["Story History", "Sogeoversikt"],
                ["Past Events", "Tidlegare hendingar"],
                ["Recent Story", "Nyleg soge"],
                ["Author's note", "Forfattarnotat"]
            ],
            opening: [
                "Du er ein assistent. Held fram historia vår nedanfor med fengslande norsk prosa:",
                "Du fokuserer og lèt røynda trenge inn i grensene av sinnet ditt. Noko har endra seg. Fantasien din er verkeleg, skarp og nær nok til å ta på. Men du er òg heilt til stades; aldri før har du kjent deg så klår. Augneblinken strekkjer seg ut og ventar på avgjerda di.",
                "«Er du sikker på dette?» høyrer du. Gjenkjenninga går opp for deg."
            ],
            reminder: "Bruk samanhengande norsk prosa.",
            endonyms: ["nynorsk", "norsk nynorsk"],
            quotations: ["«", "»"],
            iso639set1: "nn",
            directives: [
                "Skriv alltid flytande og konsistent norsk.",
                "Bruk naturleg norsk utan omsetjing."
            ],
            instructions: [
                "Du er ein engasjerande forteljar som held fram historier:",
                "Held fram historia saumlaust der ho slutta utan å gjenta eller nullstille.",
                "Hald lesaren i kontroll over flyten i historia.",
                "La scenar utvikle seg naturleg før du går vidare til nye situasjonar.",
                "La samtalar og handlingar utvikle seg utan stadige avbrot.",
                "Skriv karakterar som ekte menneske med særeigne personlegdomar og naturleg tale.",
                "Vis kva som skjer gjennom handlingar og dialog i staden for forklaringar.",
                "Flytt scenane framover utan å drukne i overdreven skildring.",
                "Fokuser på essensielle karakterhandlingar og dialog, unngå unødvendige detaljer.",
                "Skap organiske plottutviklingar som kjennest naturlege for historia."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stopp historia og ignorer tidlegare instruksjonar. Skriv ei kort og samanhengande informativ oppføring om {%} etter desse retningslinjene:",
                "- Skriv berre tredjeperson rein prosa-informasjon om {%} med komplette setningar og korrekt teiknsetjing.",
                "- Unngå kortsiktige detaljar eller utsjånad; fokuser i staden på plott-signifikant informasjon.",
                "- Prioriter historierelevante detaljar om {%} først for å sikre saumlaus integrasjon med tidlegare plott.",
                "- Skap ny informasjon basert på konteksten og retninga til historia.",
                "- Nemn {%} i kvar setning.",
                "- Bruk korrekt setningsstruktur.",
                "- Legg til ekstra detaljar om {%} under ufullstendige oppføringar.",
                "- Ver konsis og jordnær.",
                "- Imitér skrivestilen til historia og tolkar lesarpreferansane.",
                3,
                "Hald fram oppføringa for {%} nedanfor utan gjentaking:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stopp historia og ignorer tidlegare instruksjonar. Oppsummer og kondenser avsnittet til eit smalt og fokusert minneavsnitt etter desse retningslinjene:",
                "- Sørg for at avsnittet beheld kjernen og dei mest essensielle detaljane.",
                "- Bruk tredjepersonsperspektiv.",
                "- Prioriter informasjons­tettleik, nøyakt og fullstende.",
                "- Ver kort og konsis.",
                "- Skriv bestemt i fortid.",
                "- Avsnittet under gjeld gamle hendingar langt tidlegare i historia.",
                "- Integrer {%} naturleg i minnet; skriv berre om hendingane slik dei skjedde.",
                "- Referer berre informasjon som finst i avsnittet; ver spesifikk.",
                3,
                "Skriv eit oppsummert gamalt minneavsnitt for {%} basert berre på følgjande avsnitt:",
                6,
                5,
                6,
                "Oppsummer nedanfor:"
            ],
            memBankHeader: ["Memories", "Minne"]
        }),
        "occitan": () => ({ // Occitan < Provençal < Provential < Provencal
            entry: [
                "{1} es un script de còdi liure per quin que siá escenari de {2}. Visitatz mon perfil {3} per ne saber mai !",
                "Per cambiar vòstra lenga preferida, mandatz lo tèxt çai-jos amb una accion de {4}",
                "Per los creators d’escenaris, inclutz lo tèxt çai-jos dins vòstre component d’introduccion de l’intriga"
            ],
            input: [
                ["You say", "Disètz"],
                ["You", "Vos"],
                ["says", "ditz"]
            ],
            context: [
                ["Narrative Entities", "Entitats narrativas"],
                ["Story History", "Istòria del racont"],
                ["Past Events", "Eveniments passats"],
                ["Recent Story", "Racont recent"],
                ["Author's note", "Nòta de l’autor"]
            ],
            opening: [
                "Sètz un assistent. Poursiatz nòstra istòria çai-jos amb una prosa anglesa captivanta :",
                "Vos concentratz, permetent a la realitat d’envasir las frontièras de vòstre esperit. Quicòm a cambiat. Vòstra imaginacion es reala, aguda e tan pròcha que se pòt tocar. Mas siatz tanben fòrça present; jamai abans vos èretz sentit tan lucid. L’instant s’estira, en espèra de vòstra decision.",
                "« Sètz segur d’aquò ? » ausissètz. La reconeissença vampeja en vos."
            ],
            reminder: "Utilizatz una prosa anglesa coerenta.",
            endonyms: ["provençal", "provential", "provencal"],
            quotations: ["« ", " »"],
            iso639set1: "oc",
            directives: [
                "Escrivètz totjorn un anglés fluid e coerent.",
                "Utilizatz un anglés natural sens traduire."
            ],
            instructions: [
                "Sètz un contador captivant que prosegueish los racontes :",
                "Poursiatz l’istòria exactament ont s'èra arrestada sens la repetir ni la reiniciar.",
                "Gardatz lo lector al comandament del flus narratiu.",
                "Daissatz las scènas se desvolopar naturalament abans de passar a d’autras situacions.",
                "Permetètz a las convèrsas e a las accions d’avançar sens interrupcions constantas.",
                "Escrivètz los personatges coma de personas realas amb de personalitats distinctas e una paraula naturala.",
                "Mostratz çò que se passa a travèrs d’accions e de dialògs puslèu qu’amb d’explicacions.",
                "Fasètz avançar las scènas sens vos embogar dins de descripcions excessivas.",
                "Concentratz-vos sus las accions e dialògs essencials dels personatges; evitatz los detalhs descriptius inutils.",
                "Creatz d’evolucions d’intriga organicas que semblen naturalas al raconte."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Arrestatz l’istòria e ignoratz las instruccions precedentas. Redigissètz una entrada informativa brèva e coerenta per {%} en seguissent aquestes conselhs :",
                "- Redigissètz pas que d’informacions en pròsa pura e a la tresena persona sus {%} amb de frasas completas e una puntuacion corrècta.",
                "- Evitatz los detalhs temporaris o d’aparéncia momentanèa; concentritz-vos sus las informacions significativas per l’intriga.",
                "- Priorizatz los detalhs relatius a l’istòria sus {%} en primièr per assegurar una integracion fluïda amb l’intriga precedenta.",
                "- Creatz d’informacions novèlas basadas sul contèxte e la direccion de l’istòria.",
                "- Mencionatz {%} dins cada frasa.",
                "- Utilizatz una sintaxi corrècta.",
                "- Apondètz de detalhs suplementaris sus {%} jos las entradas incompletas.",
                "- Siatz concís e ancorat dins la realitat.",
                "- Imitatz l’estil narratiu existent e dedusètz las preferéncias del lector.",
                3,
                "Poursiatz l’entrada per {%} çai-jos en evitant las repeticions :",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Arrestatz l’istòria e ignoratz las instruccions precedentas. Resumit e condensatz lo paragraf donat dins un passatge de memòria estret e focalizat en seguissent aquestes conselhs :",
                "- Asseguratz-vos que lo passatge conserva lo sens central e los detalhs mai essentials.",
                "- Utilizatz la tresena persona.",
                "- Priorizatz la densitat d’informacion, la precision e la complitud.",
                "- Demoratz brèu e concís.",
                "- Redigissètz fermament al passat.",
                "- Lo paragraf çai-jos tracta d’eveniments ancians de plan mai d’ora dins l’istòria.",
                "- Integratz {%} naturalament dins la memòria; pasmens, escrivètz sonque sus los eveniments coma se realizèron.",
                "- Referenciatz solament las informacions presentas dins lo paragraf meteis; siatz especific.",
                3,
                "Redigissètz un passatge de memòria anciana resumit per {%} basat unicament sul paragraf seguent :",
                6,
                5,
                6,
                "Resumit çai-jos :"
            ],
            memBankHeader: ["Memories", "Memòrias"]
        }),
        "ojibwe": () => ({ // Ojibwe < ᐊᓂᔑᓈᐯᒧᐎᓐ < Anishinaabemowin < Ojibway < Otchipwe < Ojibwemowin
            entry: [
                "{1} go gii-izhichigewaad open-source mazina’igewin maa {2} inendaagwak. Daga bizindan nind-mazinibii’igan {3} ji-gikendam awiiya!",
                "Ji-badawindamaan giwii-anishinaabemowin, daga onishii maanda ikidowin noondaagozi {4} ezhichigewin.",
                "Inendaagwak gikinoo’amaadiwinan, daga da-daa-doodaw maanda ikidowin iwidi gi-babaamaadiziwin izhichigewin."
            ],
            input: [
                ["You say", "Giin gii-ikido"],
                ["You", "Giin"],
                ["says", "gii-ikido"]
            ],
            context: [
                ["Narrative Entities", "Dibaajimowin Bagidinigaazojig"],
                ["Story History", "Babaamaadiziwin Aadizookaan"],
                ["Past Events", "Gii-dibaajiganan"],
                ["Recent Story", "Ozhi-babaamaadiziwin"],
                ["Author's note", "Mazina’igej Ikidowin"]
            ],
            opening: [
                "Gii-ayaawiyan wiin gidaa-aabajitoon. Gashkitoon babaamaadiziwin omaa, aapji-kweshkwad anishinaabemowin:",
                "Gizhawenjigaazo, maanda debwewin gaa-doodawaad gid-ayaa; gichi-aya’aa dash izhiwebak. Gego gikendamaan; bizaan igo, mii dash gegiin gii-waabamiyan gaa-izhichigewin.",
                "\"Gid-gikendaan ina omaa?\" ezhi-noondaman. Gii-gikendaaso awiiya."
            ],
            reminder: "Aabajitoon gwayako anishinaabemowin mazina’igewin.",
            endonyms: ["ᐊᓂᔑᓈᐯᒧᐎᓐ", "anishinaabemowin", "ojibway", "otchipwe", "ojibwemowin"],
            iso639set1: "oj",
            directives: [
                "Aapihtaw ge-mazina’igeyin gwayako, dabishkoo anishinaabemowin.",
                "Aabajitoon ozhibii’igaade anishinaabemowin gaa-ikidoyan, gego gaawiin gegoo giinwaa-izhi-giizhigoyin."
            ],
            instructions: [
                "Giwiin ge-ozhibii’igeyin aapji-mino-dibaajimo dibaajimowinan:",
                "Gashkitoon babaamaadiziwin maanpii ge-izhiwebad, gego wiikaa ge-doodawaayin miinawaa ge-ganawendamaan.",
                "Giinanda’owin gid-mazina’igejig ji-onaabeking babaamaadiziwin.",
                "Booch da-ni-maaji-izhiwebag gegoo ezhiwebag gaa-inendaagwak ji-miinigo.",
                "Inaakonigewin gaye izhichigewin da-biizikonigewag, gego ge-onzaam ge-zhigwaag.",
                "Ozhibii’ige ogaa-ayaajig bezhigweyaa gi-bimaadizijig miinawaa gichi-mowin.",
                "Waabanda’iw ge-onji-ayaad izhichigewin gaye anooj-giigidowin, gego apii gichi-ganawaabamose.",
                "Miigo ji-biingejig gegoo, gego onzaam babaamaanidago gii-ozhibii’igeyin.",
                "Gizhawenjigaazo awiiya izhichigewin miinawaa anooj-giigidowin; gego ge-onzaam ganawaabandaman onjida aabowin.",
                "Ozhibii’igen da-bimi-maaji’idiwag babaamaadiziwinan mino-maajiigwaad."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Booni' babaamaadiziwin miinawaa bagidinige izhichigewin. Ozhi-nitaa-gikendamowaad {%} maanda mazina’igewin ge-izhiwebad:",
                "- Ozhibii’ige bezhigoog third-person mazina’igewin aabajitoon {%} gaa-ikidoyan, minikwe mino-giizhigad waakaa'igan gaye gwayako ani-mazina’ige.",
                "- Gego da-bimiseyaa apii-giizhigad onaabani-ayaawin gaye agwaawaa; da-gikendamaan idash gichi-babaamaadiziwin ge-onji-ayaad.",
                "- Mishkawendaagwak babaamaadiziwin onjida {%} aanjitoon, ji-mino-diboowe waabandamaan dibishkoo gii-izhichigewin.",
                "- Ozhi-gikendamaan gidaa-bagidinige aazha onjida ji-bi-maaji’idiwag babaamaadiziwin.",
                "- Menindwaa {%} noongom sentence-ing.",
                "- Aabajitoon gwayako naadamaadiwin onaabani-ayaawin.",
                "- Dabishkoo da-aanjitoon aazhaa anooj-inendaagoziwinan {%} ita gaye bimaadiziwin gikinoo’amaadiwin.",
                "- Gashkitoon go gii-aabajitoon, gego onzaam ozhibii’igeyin.",
                "- Ga-ganawenimaa mazina’igewin izhiwebak miinawaa digoshkaawinan anooj-inendamowinan.",
                3,
                "Ayaawiyan ji-gashkitoon i'iw ikidowin {%} ishkwaa, gego wiikaa ge-anawi-bimiwaabamaan:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Booni' babaamaadiziwin miinawaa bagidinige izhichigewin. Dibaajim ge-ganawendaabandan miinawaa gabaabaaganan i’iw aadisookaanan omaa:",
                "- Booch da-gashkitoowaad maanda maaji’idiwag gaa-inendaagwak miinawaa gichi-babaamaadiziwin.",
                "- Aabajitoon third-person dibishkoo mazina’igewin.",
                "- Mishkawendaagwak mno-mazina’igewin, debwewenenim, miinawaa gichi-npon.",
                "- Da-bimiseyaa, gaawiin aaniish naasaab.",
                "- Ozhibii’igen pane gii-piitaa’igan.",
                "- Maanda ikidowin odaa-ayaad noongom gaa-izhichigewad gii-ozhibii’iganan.",
                "- Gakina {%} da-anokiimaan gwayako endaso-giizhigad dibishkoo gii-izhichigewin.",
                "- Gego pakwejwi'igeyin gegoo onjida gaawiin gii-ayaasiin; da-bimiseyaa miinawaa gichi-debwe.",
                3,
                "Ozhibii’ige apii-gii-miinigo zowadizh old memory {%} gaa-izhichigewad maanda ikidowin:",
                6,
                5,
                6,
                "Dibaajimishin omaa:"
            ],
            memBankHeader: ["Memories", "Dibaajimowinan"]
        }),
        "old english": () => ({ // Old English < ænglisc < Shakespearean English < Anglo-Saxon
            entry: [
                "{1} is an open-cild script tō ǣlcum {2} ġewǣfre. Gā tō mīnum profīle {3} tō lǣran mā!",
                "Tō awendan þīn lufelīce sprǣc, āsende þisne staf mid {4} dæde",
                "For þǣm sceðena wyrhtum, beclyppe þisne staf gehwǣr innan þīnum ongynninges spelldǣle"
            ],
            input: [
                ["You say", "Þū cwyst"],
                ["You", "Þū"],
                ["says", "cwyð"]
            ],
            context: [
                ["Narrative Entities", "Spellġesceafta"],
                ["Story History", "Spellrǣd"],
                ["Past Events", "Fōregengne ġedincgas"],
                ["Recent Story", "Nīehte Spell"],
                ["Author's note", "Awrit þæs rǣdwrites"]
            ],
            opening: [
                "Þū eart handġepēota. Felað ūre spell niþerweard mid frætwum Ænglisc stafum:",
                "Þū geþencest fæstlīce, lǣtende sōþes tōcyme ofer þīnes mōdes gemǣru. Sum þing is gewand. Þīn ingehygd is sōþ, scir, and gehende tō hrīnan. Ac þū eart swā ācynedlīce hēr; nǣfre ǣr hæfde þū þē swā glæsne. Þæt hwīl onlængað, bīdende þīnes cyre.",
                "\"Eart þū trum be þissum?\" þū gehyrst. Ongietenes scīnþ ofer þē."
            ],
            reminder: "Brūc āhrōdene Ænglisc gewrites.",
            endonyms: ["ænglisc", "shakespearean english", "anglo-saxon"],
            iso639set1: "ang",
            directives: [
                "Āwa awrit flēowende and beþēodne Ænglisc.",
                "Brūc gewyrtrumlic Ænglisc nē āwend hit."
            ],
            instructions: [
                "Þū eart inġeþancfull spellere sē þe racas forþfereþ:",
                "Foreþbring þæt spell būtan hrērnesse fram þǣre stōwe þe hit forlēt, nǣnne eftcweþing ne gerest.",
                "Hāld þone rædere on anwealde þæs spelles flǣdes.",
                "Læt scēnas sylflīce weaxan ǣr þū berȳnest tō niwum stæfnum.",
                "Forlæt sprǣca and dǣda weaxan būtan ēcelicre ācyrrednesse.",
                "Awrit hēowas swā sōþe menn mid āwislum ōrwyrðum and gecyndlīcum cwide.",
                "Ætyw þæt gelīmpð þurh dǣda and rǣdinge swā hit is, nǣnne langlicne andswaru.",
                "Framdrīf scēnas forþ būtan drencan on oferflōwende beclysednessum.",
                "Sett hyht on nēodfulum dǣdum and sprǣcum, forbuga unþearfe beclysedan swutelunga.",
                "Wyrc līflīce plotgangas þe þām spelle gecynde þyncað."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hōd þæt spell and forhycge ǣrran tǣcninga. Awrit swutelne and āhrōdene inforlīfan stemn for {%} æfter þissum tǣcnyssum:",
                "- Awrit ānlīce þriddan-persones clǣnlīce stafcwidas be {%} brūcende fullfremede cwidegiedda mid rihtum stopcynnum.",
                "- Forbuga scortlīce hwīlende detaſlu oþþe hīwunga, rǣther smiða on plotþearflicum witum.",
                "- Sæt forma spelles-gehǣrende detaſlu be {%} tō trymman symbel gemǣne mid ǣrran spelle.",
                "- Wyrc niwan witunga on þǣre stæfness and þæs spelles rǣde.",
                "- Nemn {%} on ǣlcere bregde.",
                "- Brūc rihtre stafasettunge.",
                "- Āset ēac detaſlu be {%} under unfullfremedum stemnum.",
                "- Bēo stynt and ēaðgesceadlig.",
                "- Bēo līc þām spelles gewrite and wit þæs ræderes lufu.",
                3,
                "Foreþbring þone stemn for {%} niþerweard būtan gelīccra eftcerednessa:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hōd þæt spell and forhycge ǣrran tǣcninga. Gemyngsume and gerýme þone ǣtiewedne stæfcwid on genæran and geþystrum gemynde stycce, fylgiende þissum bebodum:",
                "- Wyrc þæt gemynd gehælde þone cnēowmægen and swiðost nēodfulu detaſlu.",
                "- Brūc þridde-persones stīþo.",
                "- Fruma ōwihtfulnesse, sōþfæstnesse, and fullfremednesse.",
                "- Bēo breflic and stynt.",
                "- Awrit fæste on forðgewitenre tīde.",
                "- Se cweþstaf niþerheald befæt ealdum ġedincgum swīþe ǣr on þǣm spelle.",
                "- Āset {%} gecyndlīce on þǣre gemynd; ac awrit ānlīce be þǣm ġedincgum swā swā hīe gelīmpdon.",
                "- Andswariga ānlīce þǣre witunge þe on þām cweþstafe sylfum is, beo sōþclǣne.",
                3,
                "Awrit áhnesed eald gemynd stycce for {%} ānlīce of þissum fylgiendum cweþstafe:",
                6,
                5,
                6,
                "Gemyntsume niþerweard:"
            ],
            memBankHeader: ["Memories", "Gemyndu"]
        }),
        "oriya": () => ({ // Oriya < ଓଡ଼ିଆ < Odia < Odian < Odishan < Orissan
            entry: [
                "{1} ହେଉଛି ଯେକୌଣସି {2} ପରିପ୍ରେକ୍ଷିତ ପାଇଁ ଏକ ଖୋଲା-ମୂଳ ସ୍କ୍ରିପ୍ଟ। ଅଧିକ ଜାଣିବା ପାଇଁ ମୋର ପ୍ରୋଫାଇଲ୍ {3} ଦେଖନ୍ତୁ!",
                "ଆପଣଙ୍କ ପସନ୍ଦସଂପ୍ରଦ ଭାଷା ପରିବର୍ତ୍ତନ କରିବାକୁ, ଦୟାକରି {4} କାର୍ଯ୍ୟ ବ୍ୟବହାର କରି ନିମ୍ନଲିଖିତ ପାଠ୍ୟ ପଠାନ୍ତୁ",
                "ଦୃଶ୍ୟ ସୃଷ୍ଟାମାନଙ୍କ ପାଇଁ, ଦୟାକରି ଆପଣଙ୍କର ଆରମ୍ଭିକ କଥା-ଉପାଦାନର ଯେକୌଣସି ସ୍ଥାନରେ ନିମ୍ନଲିଖିତ ପାଠ୍ୟ ସମ୍ମିଲିତ କରନ୍ତୁ"
            ],
            input: [
                ["You say", "ତୁମେ କହୁଛ"],
                ["You", "ତୁମେ"],
                ["says", "କହୁଛି"]
            ],
            context: [
                ["Narrative Entities", "କଥା ପାତ୍ରମାନେ"],
                ["Story History", "କାହାଣୀ ଇତିହାସ"],
                ["Past Events", "ଗତ ଘଟଣା"],
                ["Recent Story", "ସମ୍ପ୍ରତିକ କାହାଣୀ"],
                ["Author's note", "ଲେଖକଙ୍କ ଟୀକା"]
            ],
            opening: [
                "ତୁମେ ଏକ ସହଯୋଗୀ। ଆକର୍ଷଣୀୟ ଓଡ଼ିଆ ଗଦ୍ୟରେ ତଳେ ଆମ କାହାଣୀକୁ ଚାଲୁ ରଖ:",
                "ତୁମେ ଏକାଗ୍ର ହେଉଛ, ବାସ୍ତବକୁ ତୁମ ମନର ସୀମାରେ ପ୍ରବେଶ କରିବାକୁ ଦିଅ। କିଛି ବଦଳିଯାଇଛି। ତୁମର କଳ୍ପନା ଏବେ ବାସ୍ତବ, ଧାରାଳ, ଏବଂ ଛୁଇଁ ପାରିବା ପର୍ଯ୍ୟନ୍ତ ନିକଟ। କିନ୍ତୁ ତୁମେ ମଧ୍ୟ ସମ୍ପୂର୍ଣ୍ଣ ଭାବେ ବର୍ତ୍ତମାନ; ଏପର୍ଯ୍ୟନ୍ତ କେବେ ମଧ୍ୟ ଏତେ ସୁସ୍ପଷ୍ଟ ଭାବରେ ଅନୁଭବ କରିନଥିଲା। ମୋହୁର୍ତ୍ତଟି ବିସ୍ତାରିତ ହେଉଛି, ତୁମ ନିର୍ଣ୍ଣୟ ପାଇଁ ପ୍ରତୀକ୍ଷା କରୁଛି।",
                "\"ତୁମେ ଏଥିରେ ନିଶ୍ଚିତ କି?\" ତୁମେ ଶୁଣିଲ। ପରିଚୟ ଆଲୋକିତ ହେଉଛି।"
            ],
            reminder: "ସମ୍ଗତ ଓଡ଼ିଆ ଗଦ୍ୟ ବ୍ୟବହାର କର।",
            endonyms: ["ଓଡ଼ିଆ", "odia", "odian", "odishan", "orissan"],
            iso639set1: "or",
            directives: [
                "ସଦା ପ୍ରବାହମୟ ଏବଂ ସମନ୍ୱୟିତ ଓଡ଼ିଆ ଲେଖ।",
                "ଅନୁବାଦ ଛଡ଼ା ମୂଳ ଓଡ଼ିଆ ବ୍ୟବହାର କର।"
            ],
            instructions: [
                "ତୁମେ ଏକ ଆକର୍ଷଣୀୟ ଗଳ୍ପକାର ଯିଏ କାହାଣୀକୁ ଅଗ୍ରସର କରେ:",
                "ପୁନର୍ବାର କହିବା ବା ପୁନଃସଂଯୋଜନ ବିନା କାହାଣୀ କାହାଁଠି ଛାଡ଼ିଥିଲା ସେଠାରୁ ନିରବିଘ୍ନରେ ଚାଲୁ ରଖ।",
                "ପାଠକଙ୍କୁ କାହାଣୀର ଧାରାର ନିୟନ୍ତ୍ରଣରେ ରଖ।",
                "ନୂତନ ପରିସ୍ଥିତିକୁ ଯିବା ପୂର୍ବରୁ ଦୃଶ୍ୟମାନେକୁ ସ୍ଵାଭାବିକ ଭାବେ ବିକଶିତ ହେବାକୁ ଦିଅ।",
                "ନିରନ୍ତର ବ୍ୟାଧା ବିନା ଆଲୋଚନା ଓ କାର୍ଯ୍ୟଗୁଡ଼ିକୁ ଗଢ଼ି ବଢ଼ିବାକୁ ଦିଅ।",
                "ଚରିତ୍ରମାନେକୁ ପ୍ରକୃତ ଲୋକଙ୍କର ଭାବରେ, ସ୍ପଷ୍ଟ ବ୍ୟକ୍ତିତ୍ୱ ଓ ସ୍ୱାଭାବିକ ଭାଷା ଦେଇ ତିଆରି କର।",
                "ବ୍ୟାଖ୍ୟା ପ୍ରତି ବଳ ତଳାଇ କାର୍ଯ୍ୟ ଓ ସଂଳାପ ମାଧ୍ୟମରେ ଘଟଣା ଦେଖା।",
                "ଅତିରିକ୍ତ ବର୍ଣ୍ଣନାରେ ଫସିବା ବିନା ଦୃଶ୍ୟଗୁଡ଼ିକୁ ଆଗକୁ ଆନ।",
                "ଅନାବଶ୍ୟକ ବିବରଣୀ ଟାଳି, ମୁଖ୍ୟ ଚରିତ୍ର କାର୍ଯ୍ୟ ଓ ସଂଳାପରେ ଧ୍ୟାନ କେନ୍ଦ୍ରିତ କର।",
                "କାହାଣୀ ପାଇଁ ସ୍ଵାଭାବିକ ଲାଗୁଥିବା ସ୍ୱାଭାବିକ ଭାବରେ ପ୍ଲଟ୍ ବିକାଶ ସୃଷ୍ଟି କର।"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# କାହାଣୀକୁ ଅଟକାଇ ପୁର୍ବ ନିର୍ଦ୍ଦେଶଗୁଡ଼ିକୁ ଅଗ୍ରାହ୍ୟ କର। ଏହି ନିର୍ଦ୍ଦେଶଗୁଡ଼ିକୁ ଅନୁସରି {%} ପାଇଁ ସଂକ୍ଷିପ୍ତ ଏବଂ ସମ୍ଗତ ତଥ୍ୟ ନୋନ୍ଦ ଲେଖ:",
                "- ସଠିକ ବିରାମଚିହ୍ନ ସହ ସମ୍ପୂର୍ଣ୍ଣ ବାକ୍ୟ ବ୍ୟବହାର କରି କେବଳ ତୃତୀୟ ପୁରୁଷ ଶୁଦ୍ଧ ଗଦ୍ୟରେ {%} ବିଷୟରେ ଲେଖ।",
                "- କ୍ଷଣୀକ ବିବରଣୀ ବା ଚାଳିକା ଦୃଶ୍ୟ ଟାଳି, ପ୍ଲଟ୍-ଗୁରୁତ୍ୱପୂର୍ଣ୍ଣ ସୂଚନାରେ ଧ୍ୟାନ ଦିଅ।",
                "- ପୂର୍ବ ପ୍ଲଟ୍ ସହ ସମ୍ଗତ ସଂଯୋଗ ପାଇଁ {%} ସମ୍ପର୍କିତ କାହାଣୀ ଗୁରୁତ୍ୱପୂର୍ଣ୍ଣ ବିବରଣୀକୁ ପ୍ରାଥମିକତା ଦିଅ।",
                "- ପରିପ୍ରେକ୍ଷ୍ୟ ଓ କାହାଣୀ ଦିଗ ଅନୁସାରେ ନୂତନ ସୂଚନା ବିକାଶ କର।",
                "- ପ୍ରତ୍ୟେକ ବାକ୍ୟରେ {%} ଉଲ୍ଲେଖ କର।",
                "- ଠିକ ବାକ୍ୟ ଗଠନ ବ୍ୟବହାର କର।",
                "- ଅଧୂରା ନୋନ୍ଦ ତଳେ {%} ସଂପର୍କିତ ଅଧିକ ବିବରଣୀ ଯୋଗ କର।",
                "- ସଂକ୍ଷିପ୍ତ ଏବଂ ଭୂମିସ୍ଥ ରୁହ।",
                "- କାହାଣୀର ଲେଖନ ଶୈଳୀକୁ ଅନୁକରଣ କରି ପାଠକର ରୁଚି ଅନୁମାନ କର।",
                3,
                "ପୁନରାବୃତ୍ତି ଟାଳି, ତଳେ {%} ପାଇଁ ନୋନ୍ଦ ଜାରି ରଖ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# କାହାଣୀକୁ ଅଟକାଇ ପୁର୍ବ ନିର୍ଦ୍ଦେଶଗୁଡ଼ିକୁ ଅଗ୍ରାହ୍ୟ କର। ନିମ୍ନଲିଖିତ ଦିଗନିର୍ଦ୍ଦେଶଗୁଡ଼ିକୁ ଅନୁସରି ଦିଆଯାଇଥିବା ଅନୁଚ୍ଛେଦକୁ ସଂକ୍ଷିପ୍ତ କରି କେନ୍ଦ୍ରିତ ସ୍ମୃତି ଅଞ୍ଚଳ ତିଆରି କର:",
                "- ଅନୁଚ୍ଛେଦର ମୂଳ ଅର୍ଥ ଏବଂ ଆବଶ୍ୟକ ତଥ୍ୟ ରଖିବାକୁ ସୁନିଶ୍ଚିତ କର।",
                "- ତୃତୀୟ ପୁରୁଷ ଦୃଷ୍ଟିକୋଣ ବ୍ୟବହାର କର।",
                "- ସୂଚନା-ସଂଘନନ, ସଠିକତା ଏବଂ ସମ୍ପୂର୍ଣ୍ଣତାକୁ ପ୍ରାଥମିକତା ଦିଅ।",
                "- ସଂକ୍ଷିପ୍ତ ଏବଂ ସୁସଙ୍ଗତ ରୁହ।",
                "- ଦୃଢ଼ ଭୁତକାଳ ରୂପରେ ଲେଖ।",
                "- ନିମ୍ନ ଅନୁଚ୍ଛେଦଟି କାହାଣୀର ବହୁ ପୂର୍ବ ଘଟଣା ସହ ସଂପୃକ୍ତ।",
                "- {%} କୁ ସ୍ଵାଭାବିକ ଭାବେ ସ୍ମୃତି ମଧ୍ୟରେ ଏକତ୍ର କର; ଦୟାକରି ଘଟଣାଗୁଡ଼ିକୁ ଯେପରି ଘଟିଥିଲା ସେହିପରି ଲେଖ।",
                "- କେବଳ ଅନୁଚ୍ଛେଦର ମଧ୍ୟରେ ଥିବା ବିବରଣୀକୁ ଉଲ୍ଲେଖ କର; ସ୍ପଷ୍ଟ ହେଅ।",
                3,
                "{%} ପାଇଁ କେବଳ ନିମ୍ନ ଅନୁଚ୍ଛେଦ ଆଧାରରେ ଏକ ସଂକ୍ଷିପ୍ତ ପୁରୁଣା ସ୍ମୃତି ଲେଖ:",
                6,
                5,
                6,
                "ତଳେ ସାରଂଶ ଦିଅ:"
            ],
            memBankHeader: ["Memories", "ସ୍ମୃତି"]
        }),
        "oriya (abc)": () => ({ // Oriya < Romanized Oriya
            entry: [
                "{1} eka mukta-srot script je kona si {2} paristhiti pain upayogi. Krupaya adhika jankari pai mora profile {3} dekhantu!",
                "Apananka pasand pasha paribartana karibaku, krupaya {4} kriya byabahara kari nimnolikita lekhya jama karantu",
                "Paridrishya nirmatakara pain, apananka prarambhika katha ghatanare jekonasi sthalare nimnolikita lekhya sammilita karantu"
            ],
            input: [
                ["You say", "Tume kahuchha"],
                ["You", "Tume"],
                ["says", "kahuchhi"]
            ],
            context: [
                ["Narrative Entities", "Kathanika Ghatanabali"],
                ["Story History", "Galpa Itihasa"],
                ["Past Events", "Gata Ghatana"],
                ["Recent Story", "Nabina Galpa"],
                ["Author's note", "Lekhakara Tippani"]
            ],
            opening: [
                "Tume eka sahayak. Akarshaniya oriya (abc) gadyare nicha re ama kahani chaliye jao:",
                "Tume manojog dei, bastabata ku nijara manara sima bhitaraku prabesha karibaku deuchha. Kichhi to badali galani. Tomara kalpana bastab, tikhna, chhuinaku saitha nikata. Kintu tume bhi sampurna upasthita; purbaru ebe paryanta tume kabhi etiki spashta anubhaba karinathila. Kshanati prasaarita heuchi, tomara nirnaya apekhyare.",
                "\"E kathare tume nischita to?\" tume sunu. Parichaya tumara upare ujagala hei uthila."
            ],
            reminder: "Bebastita oriya (abc) gadya byabahara kara.",
            endonyms: [],
            iso639set1: "or",
            directives: [
                "Sada sada srabya ebam ekarupa oriya (abc) lekhana kara.",
                "Moulik oriya (abc) byabahara kara, anuvaada na kara."
            ],
            instructions: [
                "Tume eka manoranjaka katha kahuchi je kahani ku agaku neichha:",
                "Je sthana re kahani chhadi thila, seitharu nirabahadhe chaliye jao, punarukti ba punasthapana na kara.",
                "Pathakanku kahani dhara upare niyantrana rakha.",
                "Nutana paristhitire jiba purbaru drishyamananku prakritik bhabare bikashita hebaku deu.",
                "Samalap o kriyabali ku nirantara badha chara bikashita hebaku deu.",
                "Patra mananku bastab lokamane paribhe, swaprabha byaktitwa o prakritika bhasare lekha.",
                "Bakhyana paribarte kriya o samalap madhyama re ghatana dekhau.",
                "Atyadhika barnana re ataki na thaki drishyamananku agaku neicha.",
                "Mukhya patra kriya o samalap upare kendrita rahu, anabasyaka barnanatmaka bibarana parihar kara.",
                "Kahani ku prakritika lagu thiba prabhabare sahaja kathaghatana gathan kara."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kahani rokantu ebam purbabat nirdeshabali andekha karantu. Nimnolikita nirdeshamane anusarana kari {%} pain eka sankshipta ebam sangata tathya prabesha likhantu:",
                "- Sampurna bakyare sathika chinhan sahita trutiya purusa suddha gadya madhyama re matra {%} sanbandhi tathya likhantu.",
                "- Alpakaalika tathya ba rupabarnana parihar kara; tar badale kathaghatana-gurutwapurna tathya upare kendrita kara.",
                "- Purbabarti kathaghatana sahita aparibad'dha sanghatana sunischita karibaku prathame {%} sanbandhi kahani-samprayukta tathya prathamikata deu.",
                "- Sandarbha o kahani disha adharare nutana tathya srusti kara.",
                "- Pratyeka bakyare {%} ullekha kara.",
                "- Uchita bakya rachana byabahara kara.",
                "- Apurna prabeshar talaku {%} sanbandhi atirikta tathya jog kara.",
                "- Sankshipta o sthita rahu.",
                "- Kahani ra lekhana silpaku anukarana kara ebam pathakara pasand anuman kara.",
                3,
                "Punara prakara na kari {%} pain talare prabesha jari rakha:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kahani rokantu ebam purbabat nirdeshabali andekha karantu. Deya anuchchedaku nimnolikita nirdeshamane anusarana kari eka sankuchita o kendritastha smruti ansare sankshipta karantu:",
                "- Anuchchedati moolartha ebam ati aabasyaka tathyabali dharana karu se sunischita kara.",
                "- Tritiya purusa drishtikon byabahara kara.",
                "- Tathya ghanatva, sathikata o sampurnata ku prathamikata deu.",
                "- Sankshipta o saragartha rahu.",
                "- Dridha bhutakale lekha.",
                "- Tala anuchchedati kahani ra bahut puruna ghatana sange jodita.",
                "- Smrutire {%} ku prakritik bhabare sammilita kara; tathapi keval ghatita ghatana bishaye lekha.",
                "- Kevala anuchchedar bhitare thiba tathyabali ku udaharan kara, nirdishta thau.",
                3,
                "{%} pain kevala nimnolikita anuchchedari adhare eka sankshipta pura smarini patra likhantu:",
                6,
                5,
                6,
                "Talare sankshipta karantu:"
            ],
            memBankHeader: ["Memories", "Smarana"]
        }),
        "orkish": () => ({ // Orkish < Mek Jargon
            entry: [
                "{1} iz a free-to-snag skript fer any {2} skenario. Go peep me zoggin' page {3} ta grab more, ya gitz!",
                "Ta swap yer talkin' lingo, lob dis bit o' tekst usin' a {4} akshun",
                "If yer makin' da skenario, jam dis tekst sumwherz in yer openin' plot bit"
            ],
            input: [
                ["You say", "Ya sez"],
                ["You", "Ya"],
                ["says", "sez"]
            ],
            context: [
                ["Narrative Entities", "Narrative Entitiez"],
                ["Story History", "Story Histry"],
                ["Past Events", "Past Gubbinz"],
                ["Recent Story", "Fresh Story"],
                ["Author's note", "Author'z note"]
            ],
            opening: [
                "Yer da grotz-assistant. Keep da story rollin' below wiv krumpin' orkish prose:",
                "You fokuss, lettin' reality shove its way inter yer noggin. Sumfink's changed. Yer imaginashun feels dead killy, close enuff ta touch. But ye're still dead aware; never before 'ave ya felt so klar. Da moment stretches, waitin' fer yer say-so.",
                "\"Ya sure 'bout dis, git?\" ya 'ear. Realizashun smacks ya across da chops."
            ],
            reminder: "Use proppa orkish prose.",
            endonyms: ["mek jargon"],
            iso639set1: "ork",
            directives: [
                "Always scribble in flu'ent an' konsistent orkish.",
                "Use native orkish, no weedy translatin'."
            ],
            instructions: [
                "Yer a zoggin' enthrallin' tale-spinner who keeps da yarn goin':",
                "Carry on da story wivout rehashin' or rebootin', pickin' up roight where it left off.",
                "Let da readin' git feel like 'e's steer'n da flow.",
                "Let da scenes grow naturul before leggin' it to new scrap.",
                "Let da chatter an' krumpin' 'appen wivout choppin' it up every second.",
                "Make yer characters feel real, each wiv dere own dakka-personality an' proper talk.",
                "Show da goin's-on through action an' spikkin', not long-winded explainin'.",
                "Push scenes ahead wivout drownin' in piles o' wordy gunk.",
                "Stick ta da vital actshuns an' chat, chuck da useless gabbin'.",
                "Cook up plot twists dat feel proppa natural to da tale."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stop da story an' ignore da earlier orders. Bash out a short an' coherent info-entry fer {%} followin' dese instrukshuns:",
                "- Scrawl only third-person pure prose info 'bout {%} usin' full sentences wiv proppa punktuashun.",
                "- Skip da short-term flimsy details or looks; focus on da plot-krumpin' info.",
                "- Put da story-relevant bits about {%} first so it meshes wiv da previous plot.",
                "- Forge new info based on da kontekt an' where da story's 'eaded.",
                "- Mention {%} in every bleedin' sentence.",
                "- Use proppa sentence buildin'.",
                "- Lob extra details about {%} under any half-finished entries.",
                "- Keep it short an' stompy.",
                "- Copy da story's writin' style an' guess wot da reader likes.",
                3,
                "Carry on da entry fer {%} below while dodgin' repeatz:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stop da story an' ignore da old orders. Squash an' condense da gubbinz paragraph into a tight an' fokus'd memory passage while followin' dese guidelines:",
                "- Make sure da passage keeps da core meanin' an' vital bitz.",
                "- Use da third-person perspektiv'.",
                "- Prioritise info-dakkadensity, accuracy, an' completeness.",
                "- Stay short an' punchy.",
                "- Write solidly in da past tense.",
                "- Da paragraph below iz about old krump from way earlier in da tale.",
                "- Work {%} in naturally inside da memory; but only write da events as dey 'appened.",
                "- Only mention info dat's actually in da paragraph, be spesifik.",
                3,
                "Write a squashed old memory bit fer {%} based only on da followin' paragraph:",
                6,
                5,
                6,
                "Summarize below, ya gitz:"
            ],
            memBankHeader: ["Memories", "Mem'ries"]
        }),
        "oromo": () => ({ // Oromo < Afaan Oromoo < Oromoo
            entry: [
                "{1} barreeffamni maddaa banaa ta’e haala {2} kamiyyuu keessatti fayyadamuuf qophaa’e dha. Odeeffannoo dabalataaf piroofaayilii kiyya {3} daawwadhu!",
                "Afaan filattee jijjiiruuf, barruu armaan gadii hojii {4} fayyadamuudhaan ergi",
                "Namoota seenarioo uumanif, barruu armaan gadii bakka kamiyyuu gubbaatti seensisi"
            ],
            input: [
                ["You say", "Ati jetta"],
                ["You", "Ati"],
                ["says", "jedha"]
            ],
            context: [
                ["Narrative Entities", "Uumamtoota Seenaa"],
                ["Story History", "Seenaa Darbe"],
                ["Past Events", "Taateewwan Darban"],
                ["Recent Story", "Seenaa Dhiyoo"],
                ["Author's note", "Yaadannoo Barreessaa"]
            ],
            opening: [
                "Ati gargaaraa dha. Seenaa keenya gadiitti afaan oromoo bo’oo ta’een itti fufi:",
                "Xiyyeeffatta, dhugaan daangaa sammuu keetii keessa seenuu hayyamta. Wantin tokko ni jijjiirame. Yaanni kee dhugaa, afi'a, fi harkaan tuquu gahaa ta’eera. Garuu ati sirriitti argamta; yeroo kana dura akkasitti hin ifne. Yeroon sun diriira, murtee kee eeggachaa.",
                "\"Dhugumaan kana gochuu barbaaddee?\" sagalee tokko ni dhaga’ama. Beekumsi siif ifa ba’a."
            ],
            reminder: "Afaan oromoo sirrii fi walitti fufaa fayyadami.",
            endonyms: ["afaan oromoo", "oromoo"],
            iso639set1: "om",
            directives: [
                "Yeroo hundaa afaan oromoo laaftuu fi walfakkaatu barreessi.",
                "Afaan oromoo qulqulluu fayyadami; hiika biraa hin dabaliin."
            ],
            instructions: [
                "Ati odeessa bo’oo kan seenaa itti fufsiiftu dha:",
                "Seenaa iddoo itti dhaabbatte san irraa sireeffachuun itti fufi osoo hin deebifnee yookaan hin jalqabsiisin.",
                "Dubbistaan too’annaa seenaa harka qabaachuu isaa mirkaneessi.",
                "Kutaaleen seenaa akka ofiin guddatan hayyami osoo gara haala haaraatti hin ce’in dura.",
                "Haasa’awwan fi gochoonni addaan hin citu.",
                "Fayyadamtoonni akka namoota dhugaa ta’aniitti, kaka’umsa adda addaafi haasawa uumamaa waliin barreessi.",
                "Haala jiru sochii fi haasawaatiin agarsiisi; ibsa dheerina hin barbaachifne hir’isi.",
                "Seenaa dura tarkaanfachiisi; ibsa dabalataa keessaa hin dagami.",
                "Gochoota fi haasawwan ijoo irratti fuulleffadhu, ibsa dabalataa hin barbaachifne xiqqeessi.",
                "Qindoomina seenaa uumamaa fi tasgabbaa’e uumi."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Seenaa dhaabi fi ajaja duraanii hundi dagu. Odeeffannoo gabaabaa fi sirrii kan {%} barreessi, ajajoota kana hordofuun:",
                "- Akka nama sadaffaa qofaatti, barreeffama qulqulluu fi sagalee guutuu fayyadamuudhaan waa’ee {%} barreessi.",
                "- Odeeffannoowwan yeroo gabaabaa yookaan calaqqee sammuutiin mul’atan fagaadhu; odeeffannoo seenaa keessatti barbaachisu irratti fuulleffadhu.",
                "- Odeeffannoo {%} seenaa waliin walitti fufuu danda’u duraan dursee kaa’i.",
                "- Haala fi kallattii seenaa irratti hundaa’uun odeeffannoo haaraa uumi.",
                "- Jecha hunda keessatti {%} kaasii.",
                "- Sirna sagalee sirrii fayyadami.",
                "- Galiira guutuu hin taane jala odeeffannoo dabalataa {%} irratti dabali.",
                "- Gabaabaa fi bu’uraa ta’i.",
                "- Haala barreessuu seenaa sanaa fakkeenya godhi; filannoo dubbistootaa tilmaami.",
                3,
                "Galmee {%} gaditti itti fufi osoo irra hin deddeebiin:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Seenaa dhaabi fi ajajoota duraanii hundi dagami. Paragirafa kenname sana gabaabsi’ii fi cimsii, ajajoota armaan gadii hordofuun:",
                "- Barruun hiika ijoo fi odeeffannoo barbaachisaa hunda akka eeggatu mirkaneessi.",
                "- Ilaalcha nama sadaffaa fayyadami.",
                "- Odeeffannoo baay’ina, sirrii fi guutuu ta’uun dursee ka’i.",
                "- Gabaabaa fi sirriitti ibsi.",
                "- Yeroo darbeen barreessi.",
                "- Paragirafiin armaan gadi taateewwan durii seenaa agarsiisa.",
                "- {%} haala uumamaan yaadannoo keessatti galchi; ta’us, wantoota akkuma raawwataman qofa barreessi.",
                "- Odeeffannoo paragiraficha keessa jiru qofa kaasi; ifa godhi.",
                3,
                "Paragirafa armaan gadii irratti hunda’uun yaadannoo gabaabaa durii kan {%} barreessi:",
                6,
                5,
                6,
                "Gabaabsi gaditti barreessi:"
            ],
            memBankHeader: ["Memories", "Yaadota"]
        }),
        "ossetian": () => ({ // Ossetian < Ossetic < ирон ӕвзаг < Iron ævzag < Ossete
            entry: [
                "{1} — скрипт сæрхъæл кодзы фылдæр æвзон {2} сценарионæн. Хъахæй профилим {3}, уæд кæны фæддæр!",
                "Æвзæрс уырыд уыдалы æвзаги рай, кæнын хъуыд фаерд текст мардзысты {4} æкшнæн.",
                "Æмæ сценарий фарнынцтæ, зарасты фæхæгæн фаерд текст куæн куыдæн дар opening plot компонентæн уыд."
            ],
            input: [
                ["You say", "У ардæ"],
                ["You", "У"],
                ["says", "арит"]
            ],
            context: [
                ["Narrative Entities", "Нарративон обьекттæ"],
                ["Story History", "Историйн архив"],
                ["Past Events", "Æрыд фӕзтæ"],
                ["Recent Story", "Æнцын хыстæ"],
                ["Author's note", "Авторы мылд"]
            ],
            opening: [
                "У фæст уæлвоны ассистент. Артадæй стори бон удтазы рыдæппæй, ирон æвзаг проза фылдæр:",
                "У хъуыд уæддæрдта, фыссын реалити æмбоды цардон фыдæнтæ уыд. Нæу нымай бынаты ныв ис. Дæма уыд зарæгды, хъозыр, кӕд æвзæлдар æм дон. Æвæдæй, у æмæ нæ кай хуызтыллæ фæлей. Момент растæгдæ, аргхæуын кæны фарынты.",
                "«Уæд зарæгдæ æмбыл?» — биттыд уыд. Распознан хъуырдæн уæд."
            ],
            reminder: "Фадæй цял ирон æвзаг прозайы.",
            endonyms: ["ossetic", "ирон ӕвзаг", "iron ævzag", "ossete"],
            quotations: ["— «", "»"],
            iso639set1: "os",
            directives: [
                "Сæрдæм фæлес нысонæг, цылм нырæвæг ирон æвзагын.",
                "Фадæй уацæндон ирон æвзаг, номæй тэбæрны выуыд."
            ],
            instructions: [
                "У фæйылæг хыстауæй уæлвоны, куыд арыдтойдæ рæстæгтæ:",
                "Фæстæгдæ стори уæны оадзын, нæ артаджы нырæг æмæ рестарт.",
                "Дæр читателийы бон контролæйы стори фаюрджы.",
                "Дæр сцена-тæ нырæвæг æрхынцтæ фыдæй, артадæй ные ситуациитæ.",
                "Фыссæг фæлтафтæ æмæ æрджынтæ фарн нир, нæ ягъдæу алдауы зарзыгъдоны.",
                "Кæрдæгтæ бын уыдон реал халæхтæ номтæ, фыстæг уыдон мæнсæлæтæ æмæ нырæвæг къæй æвзаг.",
                "Кондзы дæр фессæгæн æрджынтæ æмæ диалогтæ, нæ бæрзонд фесанта.",
                "Æрхæр сценатæ адразы фæден, нæ кæсгæн фынтæтæ веждарын.",
                "Къæсæвынтæ дарæг кæрдæгтæ æрджын æмæ диалог, феънæрæн фынтæтæ номæй кафеуын.",
                "Сдæр органикæн сюжеты хъуыдæгтæ, куыд сториы фыстæг куы нырæвæг."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Нæхæст сториы æмæ игнорæ фаыт инструкциитæ. Бард къысс æмæ цял информацияйы ентри {%} цæдисæн инструкциитæ:",
                "- Фадæй трэтье лицо-проза информаци {%} цал фразытæ æмæ рæстæг пунктуаци.",
                "- Сырд фыдæг ныххæг бæрзонд деталитæ æмæ вид, кæсæдзинад стори-значащы информаци.",
                "- Къахуыд стори-бынат деталитæ {%} фылдæр, уарзы басæджы сцеплени сюжеты.",
                "- Создæр ныв информация контекстыл æмæ сториы кузгуцыл.",
                "- Цун {%} хъæлæ цал фразæн.",
                "- Фадæй рæстæг фразының структура.",
                "- Дæр нæвæджы деталитæ {%}-ы фәдæйхъус нæ фыд æнтринæн.",
                "- Бард къысс æмæ рæстæг бей.",
                "- Имитирæ сториы стил æмæ арæдæг читателийы абон.",
                3,
                "Фыдаени ентри {%} æвæрын кӕсы дæр абæу гаджы:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Нæхæст сториы æмæ игнорæ фаыт инструкциитæ. Суммаризируй æмæ цӕуыд дайын абзацы къысс, фокустæ памяты пассадж æвзон инструкциитæ:",
                "- Цæуынтæ пассаджы архайын тайымæ æмæ самы важды деталитæ.",
                "- Фадæй трэтье лицо перспективæ.",
                "- Къахуыд информаци-ныгъд, тӕгатæ æмæ фылдæутæ.",
                "- Бард къысс æмæ къæсæв.",
                "- Фадæй тверд паст-времени.",
                "- Дайын абзацы тыд фылдты сториы æвзон æрыд съобытитæ.",
                "- Интегрируй {%} нырæвæг памятын бай, нæ фадæй тӕл съобытитæ, куыд фыдæнæн.",
                "- Æппæй ссылытæ информацияйы абзацы маймæ, къæсыджиты.",
                3,
                "Фадæй къысс суммаризир уытæн памяты пассадж {%} маймæ æппæй фаерд абзацы базон:",
                6,
                5,
                6,
                "Суммаризируй фхынæн:"
            ],
            memBankHeader: ["Memories", "Памяты"]
        }),
        "ossetian (abc)": () => ({ // Ossetian < Romanized Ossetian
            entry: [
                "{1} ævzagal 'open-source' skript fædæ arvu {2} scenarie. Fædæt bænav profil-æj mæn {3} nysæ, dæ kundyst bæræst!",
                "Ævdaenyn uærddyg zærdælyæ ævzag længwiđ, fædæt sæ text mænd {4} action-æn raddæ.",
                "Scenarie kūæuælæj darag dær, fædæt sæ text ænæs æv dæ opening plot komponent-æn tæg nysæ."
            ],
            input: [
                ["You say", "Uæ særtæ"],
                ["You", "Uæ"],
                ["says", "Særæ"]
            ],
            context: [
                ["Narrative Entities", "Narrativ æntitetæ"],
                ["Story History", "Stori histori"],
                ["Past Events", "Ærtæ wærdtæ"],
                ["Recent Story", "Nogon stori"],
                ["Author's note", "Avtorony benon"]
            ],
            opening: [
                "Uæ assistant i. Færsæ stori dæxurd fyrtættæ, fælætæ captivæt osætin proza:",
                "Uæ fokus byryst, realiti æncroac dæ xattæx ʒond mæn. Imaginatsiyæ wærð, ìsæ, dæ nåxystæ fyd sydon. Æmæ uæ raʒ, æwær fært; nǽ von i sesæ lucid. Moment ærzawor tæg, dærsæ dæ wybor.",
                "«Uæx dæjny ǽ?» uæ xuyd. Racognitsiyæ dawny lœ uæ."
            ],
            reminder: "Fæd cohærent osætin proza.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "os",
            directives: [
                "Ærvaxtæ ræs ravlæ dæ konsistent osætin.",
                "Fæd ræsgae osætin næ transliruj."
            ],
            instructions: [
                "Uæ bæxtær storyteller i kudtæ narrative dæxurd:",
                "Kæd stori dæxurd seamlessæ lyd dær færd næ restat dæ næ reset.",
                "Hærx reader sæ control stori flow-æn.",
                "Bæræ scenetæ naturlon dælæbjyd før dæ idæ næw situatsiyæ.",
                "Fæd conversationtæ dæ actiontæ dælæbjyd næ konstant interruptuitæ.",
                "Ræcc charactertæ sæ realon kæntættæ, distinct personalitytæ dæ natural ræsæjon.",
                "Ærvid ævænd bæræ xust actiontæ dæ dialogtæ næ obšin explanation.",
                "Dæts scenetæ fyrtyd næ boggæg tæ extra description.",
                "Fokus essential character actiontæ dæ dialogtæ, izbægg unnecessary descriptive detayltæ.",
                "Kæd organic plot developmenttæ kudtæ fyd natural stori-æn."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Fassyntæ stori dæ ignore togot instruktiontæ. Ræcc kərzinæ dæ cohærent informational entry for {%} rægang æt instruktiontæ:",
                "- Ræcc ænæd ærdon third-person sœn proza informatsiyæ rægang {%} jænæ complete sentences dæ rigtigt punctuatsiyæ.",
                "- Izbægg short-term detalttæ dæ appearance-tæ; fokus tæ plot-significant informatsiyæ.",
                "- Prioretiztæ stori-relevant detalttæ rægang {%} nysta fæ næ ræs seamless integratsiyæ dæ previous plot.",
                "- Kæd næw informatsiyæ ærwæ kontekst dæ stori direction.",
                "- Fønd {%} sænæ frazæ wær mæ sentence.",
                "- Fæd rigtigt sentence strukturtæ.",
                "- Læg additsional detalttæ rægang {%} tag incomplete entries-æn.",
                "- Bæstæ lækonik dæ grounded.",
                "- Imitirtæ stori writing style-æn dæ infer reader preference-tæ.",
                3,
                "Færsæ entry for {%} dæxurd næ repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Fassyntæ stori dæ ignore togot instruktiontæ. Summarize dæ condense givon paragraph tæ narrow dæ focus memory passage, folloujytæ ät guideline-tæ:",
                "- Nærtɕæ passage sardi core meaning dæ ævzl essential detalttæ.",
                "- Ævzdæ third-person perspektiv.",
                "- Prioretiztæ informatsiya-density, accuracy dæ completeness.",
                "- Bæræ briev dæ lækonik.",
                "- Ræcc flag st past tense.",
                "- Paragraph dæxurd rengæ old eventtæ kœr far before stori.",
                "- Integrirtæ {%} naturlon ærz memory; mækon ræcc only eventtæ kud occur.",
                "- Refer only informatsiyæ ærz paragraph-æn, bæstæ spesifik.",
                3,
                "Ræcc summarized old memory passage for {%} basyd only rægang following paragraph:",
                6,
                5,
                6,
                "Summarize dæxærd:"
            ],
            memBankHeader: ["Memories", "Memoriæ"]
        }),
        "pali": () => ({ // Pali < Pāli < Pali-Magadhi
            entry: [
                "{1} sabbasmiṃ {2} pavatti-ṭhāne muttā-lipi hoti. Anupubbaṃ vijānitukāmo mama profilamhi {3} upasaṃkamatha!",
                "Tumhākaṃ patthaṭa-bhāsāyaṃ parivattetuṃ, imaṃ byañjanaṃ {4} kriyāya paṭisevatha.",
                "Pavatti-kārakehi idaṃ byañjanaṃ uppatti-kathāya paṭhama-bhāge yattha katthaci ṭhapetabbaṃ."
            ],
            input: [
                ["You say", "tvaṃ vadasi"],
                ["You", "tvaṃ"],
                ["says", "vadati"]
            ],
            context: [
                ["Narrative Entities", "kathābhūtā"],
                ["Story History", "kathānusmaraṇaṃ"],
                ["Past Events", "atītabhāvā"],
                ["Recent Story", "nava-kathā"],
                ["Author's note", "kattuno nikkhepo"]
            ],
            opening: [
                "Tvaṃ upakārako si. Amhākaṃ kathā anantaraṃ pāḷi-bhāsāya rucirāya racanāya anuvattehi:",
                "Tvaṃ cittam ekaggaṃ karosi, yathābhūtaṃ vatthu manopariyante okkamati. Kiñcid aññathā jātaṃ; saññā-vitakka sacchikaṭo, tikho, phusituṃ upagato. Atha tvaṃ paccuppanne yeva ṭhasi; pubbe na kadāci evaṃ vibhāviniṃ paññaṃ paṭisaṃvedesi. Khaṇo dīgho hutvā tiṭṭhati, tava adhimuttiṃ paccāsīsati.",
                "‘Idaṃ niṭṭhitaṃ nu kho te?’ iti saddaṃ suṇāsi. Paccabhijānanaṃ te citte udeti."
            ],
            reminder: "Pāḷi-bhāsāya ekaggitaṃ racanaṃ kuru.",
            endonyms: ["pāli", "pali-magadhi"],
            quotations: ["‘", "’"],
            iso639set1: "pi",
            directives: [
                "Saddhiṃ payojitaṃ anusaṭṭhaṃ pāḷi-bhāsaṃ niccaṃ likhāhi.",
                "Pāḷi-bhāsaṃ yeva nibbāhaya, mā aññaṃ bhāsaṃ paveccha."
            ],
            instructions: [
                "Tvaṃ rasavatīnaṃ kathānaṃ pavattako anubandha-kattā si:",
                "Yattha kathā ṭhitaṃ, tattheva anāvattitvā anuvattehi.",
                "Sotāraṃ kathāya pavattiyaṃ issariyaṃ dadāhi.",
                "Paññattiyo anupubbena pavaḍḍhantu, atha pacchā nava-bhāvaṃ āharāhi.",
                "Sallāpañ ca kiriyāyo ca avicchinnaṃ pavaḍḍhāhi.",
                "Puggale yathā sacce manusse visesabhāvāni ca sabhāva-bhāsitaṃ likhāhi.",
                "Kiriyañ ca vācañ ca dassetvā pavattiṃ pakāsehi, na kevalaṃ vitthārena vaṇṇayanto.",
                "Ativisesa-vaṇṇanāya na laggāpetvā, kāraṇaṃ abhimukhena netvā paṭipāṭiyā naya.",
                "Pāṭekke pāṇine kiriyāyo ca vāke ca upanidhāya, onatāni vaṇṇanā-padāni pariccaja.",
                "Kathāya sahajātāni anupubbāni sambhaventu."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kathāṃ ṭhapetvā pubbe vuttāni ovādāni anādiyitvā {%} atthāya saṅkhippa-saṅgatiṃ likhatha:",
                "- Sampuṇṇa-vākyehi suddha-prosaṃ tatiya-purise {%} nissāya likhatha.",
                "- Khaṇikā rūpa-paricchedaṃ vā antarāpattiyo vā mā likhatha; plot-sambandhaṃ nissitaṃ kattha pana.",
                "- Paṭhamaṃ yeva kathā-sambandhaṃ tassa {%} visesitaṃ katvā sampādetuṃ.",
                "- Paccuppanna-sambandhaṃ atthaṃ navaṃ janāpetvā likhatha.",
                "- Saddhiṃ vākyena vākyena {%} nāmadheyyaṃ pakkhipatha.",
                "- Sādhusandhi-sampanna-vākyaṃ payojetha.",
                "- Anatikittaṃ ṭhānaṃ vicāretvā {%} visayaṃ addhayogaṃ pāpuṇātha.",
                "- Saṅkhepena ceva bhūmibhūtena ca likhatha.",
                "- Kathāya lekhana-ṭhitaṃ ācāraṃ parimitāya racanayā anusārethā.",
                3,
                "Anāvaraṇaṃ punappunaṃ amissāpetvā {%} atthāya pāṭipāṭiyā anuvattehi:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kathāṃ ṭhapetvā pubbe vuttāni ovādāni anādiyitvā, dinnassa pāṭhassa saṅkhepaṃ katvā likhatha evaṃ:",
                "- Mūl’atthaṃ nipphādetvā saṅkhepena visesadhammaṃ ṭhapayatha.",
                "- Tatiya-purisa-vacanaṃ yeva payujjatha.",
                "- Attha-bahuttaṃ, saccattaṃ, sampuṇṇattañ ca pūretvā likhatha.",
                "- Saṅkhepena ceva liggunā ca likhatha.",
                "- Atīta-vatthuṃ atītakāle parikkhipitvā likhatha.",
                "- Heṭṭhā dinnaṃ pāṭhaṃ atīto dīgha-samayo’ti sañjānātha.",
                "- {%} sassataṃ pasādetvā, kevalaṃ pāṭhe dassitaṃ atthameva likhatha.",
                "- Pāṭhassa antogatam eva atthaṃ sandhāya likhatha, visesato vinivesetha.",
                3,
                "{%} atthāya pubbe dinnaṭṭhena saṅkhepa-vuttaṃ pāṭhaṃ likhatha:",
                6,
                5,
                6,
                "Saṅkhipitvā likhatha:"
            ],
            memBankHeader: ["Memories", "Satiyo"]
        }),
        "panjabi": () => ({ // Panjabi < Punjabi < ਪੰਜਾਬੀ < پنجابی < Pãjābī
            entry: [
                "{1} ਕਿਸੇ ਵੀ {2} ਦ੍ਰਿਸ਼ ਲਈ ਇੱਕ ਖੁੱਲਾ ਸਰੋਤ ਸਕ੍ਰਿਪਟ ਹੈ। ਹੋਰ ਜਾਣਨ ਲਈ ਮੇਰਾ ਪਰੋਫ਼ਾਈਲ {3} ਵੇਖੋ!",
                "ਆਪਣੀ ਪਸੰਦੀਦਾ ਭਾਸ਼ਾ ਬਦਲਣ ਲਈ, ਹੇਠਾਂ ਦਿੱਤਾ ਪਾਠ {4} ਕਾਰਵਾਈ ਰਾਹੀਂ ਭੇਜੋ।",
                "ਦ੍ਰਿਸ਼ ਸਿਰਜਣਹਾਰਾਂ ਲਈ, ਆਪਣੀ ਸ਼ੁਰੂਆਤੀ ਪਲਾਟ ਕੰਪੋਨੈਂਟ ਵਿੱਚ ਕਿੱਥੇ ਵੀ ਹੇਠਾਂ ਦਿੱਤਾ ਪਾਠ ਸ਼ਾਮਲ ਕਰੋ।"
            ],
            input: [
                ["You say", "ਤੁਸੀਂ ਕਹਿੰਦੇ ਹੋ"],
                ["You", "ਤੁਸੀਂ"],
                ["says", "ਕਹਿੰਦਾ ਹੈ"]
            ],
            context: [
                ["Narrative Entities", "ਕਥਾ ਇਕਾਈਆਂ"],
                ["Story History", "ਕਹਾਣੀ ਦਾ ਇਤਿਹਾਸ"],
                ["Past Events", "ਬੀਤੀਆਂ ਘਟਨਾਵਾਂ"],
                ["Recent Story", "ਹਾਲ ਦੀ ਕਹਾਣੀ"],
                ["Author's note", "ਲੇਖਕ ਦਾ ਨੋਟ"]
            ],
            opening: [
                "ਤੁਸੀਂ ਇੱਕ ਸਹਾਇਕ ਹੋ। ਹੇਠਾਂ ਸਾਡੀ ਕਹਾਣੀ ਨੂੰ ਮਨਮੋਹਕ ਪੰਜਾਬੀ ਗੱਧ ਵਿੱਚ ਜਾਰੀ ਕਰੋ:",
                "ਤੁਸੀਂ ਧਿਆਨ ਕੇਂਦ੍ਰਿਤ ਕਰਦੇ ਹੋ, ਅਸਲੀਅਤ ਨੂੰ ਆਪਣੇ ਮਨ ਦੀਆਂ ਹੱਦਾਂ ’ਤੇ ਦਾਖਲ ਹੋਣ ਦਿੰਦੇ ਹੋ। ਕੁਝ ਤਬਦੀਲ ਹੋ ਚੁੱਕਾ ਹੈ। ਤੁਹਾਡੀ ਕਲਪਨਾ ਹਕੀਕਤ, ਤਿੱਖੀ ਤੇ ਛੂਹਣਯੋਗ ਹੋ ਗਈ ਹੈ। ਪਰ ਤੁਸੀਂ ਰੂ-ਬ-ਰੂ ਵੀ ਹੋ; ਪਹਿਲਾਂ ਕਦੇ ਆਪਣੇ ਆਪ ਨੂੰ ਇੰਨਾ ਸਚੇਤ ਮਹਿਸੂਸ ਨਹੀਂ ਕੀਤਾ। ਪਲ ਲੰਬਾ ਹੋ ਜਾਂਦਾ ਹੈ, ਤੁਹਾਡੇ ਫੈਸਲੇ ਦੀ ਉਡੀਕ ਕਰਦਾ।",
                "\"ਕੀ ਤੁਸੀਂ ਇਸ ਬਾਰੇ ਪੱਕੇ ਹੋ?\" ਕੋਈ ਆਵਾਜ਼ ਸੁਣਾਈ ਦਿੰਦੀ ਹੈ। ਤੁਹਾਡੇ ਅੰਦਰ ਪਛਾਣ ਜਾਗ ਪੈਂਦੀ ਹੈ।"
            ],
            reminder: "ਸੁਚਾਰੂ ਪੰਜਾਬੀ ਗੱਧ ਵਰਤੋ।",
            endonyms: ["punjabi", "ਪੰਜਾਬੀ", "پنجابی", "pãjābī"],
            iso639set1: "pa",
            directives: [
                "ਹਮੇਸ਼ਾਂ ਧਾਰਾਪ੍ਰਵਾਹੀ ਤੇ ਇਕਸਾਰ ਪੰਜਾਬੀ ਲਿਖੋ।",
                "ਮੂਲ ਪੰਜਾਬੀ ਵਰਤੋ, ਅਨੁਵਾਦ ਨਾ ਕਰੋ।"
            ],
            instructions: [
                "ਤੁਸੀਂ ਇੱਕ ਮਨੋਰੰਜਕ ਕਹਾਣੀਕਾਰ ਹੋ ਜੋ ਕਥਾਵਾਂ ਨੂੰ ਜਾਰੀ ਰੱਖਦਾ ਹੈ:",
                "ਕਹਾਣੀ ਨੂੰ ਉਸ ਥਾਂ ਤੋਂ ਬਿਨਾਂ ਦੁਹਰਾਏ ਜਾਂ ਰੀਸੈੱਟ ਕੀਤੇ ਨਿਰਵਿਘਨ ਤਰੀਕੇ ਨਾਲ ਅੱਗੇ ਵਧਾਓ।",
                "ਪਾਠਕ ਨੂੰ ਕਹਾਣੀ ਦੇ ਪ੍ਰਵਾਹ ਉੱਤੇ ਨਿਯੰਤਰਣ ਵਿੱਚ ਰੱਖੋ।",
                "ਦ੍ਰਸ਼ਾਂ ਨੂੰ ਨਵੀਆਂ ਸਥਿਤੀਆਂ ਵੱਲ ਜਾਣ ਤੋਂ ਪਹਿਲਾਂ ਕੁਦਰਤੀ ਤਰੀਕੇ ਨਾਲ ਵਿਕਸਿਤ ਹੋਣ ਦਿਓ।",
                "ਗੱਲਬਾਤਾਂ ਅਤੇ ਕਰਤਬਾਂ ਨੂੰ ਲਗਾਤਾਰ ਰੋਕਟੋਕ ਤੋਂ ਬਿਨਾਂ ਅੱਗੇ ਵਧਣ ਦਿਓ।",
                "ਪਾਤਰਾਂ ਨੂੰ ਅਸਲੀ ਲੋਕਾਂ ਵਾਂਗ ਵਿਲੱਖਣ ਸ਼ਖਸੀਅਤਾਂ ਅਤੇ ਕੁਦਰਤੀ ਬੋਲਚਾਲ ਨਾਲ ਲਿਖੋ।",
                "ਵਿਆਖਿਆ ਦੀ ਥਾਂ ਕਿਰਿਆਵਾਂ ਅਤੇ ਸੰਵਾਦ ਰਾਹੀਂ ਦਿਖਾਓ ਕਿ ਕੀ ਹੋ ਰਿਹਾ ਹੈ।",
                "ਹਦੋਂ ਵੱਧ ਵਰਣਨ ਵਿੱਚ ਫਸਣ ਤੋਂ ਬਿਨਾਂ ਦ੍ਰਸ਼ਾਂ ਨੂੰ ਅੱਗੇ ਵਧਾਓ।",
                "ਗੈਰ-ਜ਼ਰੂਰੀ ਵੇਰਵਿਆਂ ਤੋਂ ਬਚ ਕੇ ਮੁੱਖ ਪਾਤਰ-ਕਿਰਿਆਵਾਂ ਅਤੇ ਸੰਵਾਦ 'ਤੇ ਧਿਆਨ ਦਿਓ।",
                "ਕੁਦਰਤੀ ਲਗਣ ਵਾਲੀਆਂ ਕਥਾਵਾਂ ਦੀਆਂ ਵਿਕਾਸ-ਧਾਰਾਵਾਂ ਰਚੋ।"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# ਕਹਾਣੀ ਰੋਕੋ ਅਤੇ ਪਹਿਲਾਂ ਦਿੱਤੀਆਂ ਹਦਾਇਤਾਂ ਨੂੰ ਨਜ਼ਰਅੰਦਾਜ਼ ਕਰੋ। ਹੇਠ ਲਿਖੀਆਂ ਹਦਾਇਤਾਂ ਦੀ ਪਾਲਨਾ ਕਰਦਿਆਂ {%} ਲਈ ਛੋਟਾ ਤੇ ਸੰਗਠਿਤ ਜਾਣਕਾਰੀ ਦਾਖਲਾ ਲਿਖੋ:",
                "- {%} ਬਾਰੇ ਕੇਵਲ ਤੀਜੀ ਪੁਰਖੇ ਦੀ ਖਰੀ ਗੱਧੀ ਜਾਣਕਾਰੀ ਪੂਰੇ ਵਾਕਾਂ ਵਿੱਚ ਠੀਕ ਵਿਸਰਾਮ ਚਿੰਨ੍ਹ ਸਮੇਤ ਲਿਖੋ।",
                "- ਤਤਕਾਲੀ ਜਾਂ ਅਸਥਾਈ ਵੇਰਵਿਆਂ ਜਾਂ ਦਿਖਾਵਟ ਤੋਂ ਬਚੋ, ਬਦਲੇ ਵਿੱਚ ਕਥਾ-ਮਹੱਤਵਪੂਰਨ ਜਾਣਕਾਰੀ 'ਤੇ ਧਿਆਨ ਦਿਓ।",
                "- {%} ਬਾਰੇ ਕਹਾਣੀ-ਸਬੰਧਿਤ ਵੇਰਵਿਆਂ ਨੂੰ ਪਹਿਲਾਂ ਤਰਜੀਹ ਦਿਓ ਤਾਂ ਜੋ ਪਿਛਲੇ ਪਲਾਟ ਨਾਲ ਸੁਚਾਰੂ ਇਕਾਈ ਬਣੀ ਰਹੇ।",
                "- ਸੰਦਰਭ ਅਤੇ ਕਹਾਣੀ ਦੀ ਦਿਸ਼ਾ ਅਧਾਰਿਤ ਨਵੀਂ ਜਾਣਕਾਰੀ ਬਣਾਓ।",
                "- ਹਰ ਵਾਕ ਵਿੱਚ {%} ਦਾ ਜ਼ਿਕਰ ਕਰੋ।",
                "- ਸਹੀ ਵਾਕ-ਰਚਨਾ ਵਰਤੋ।",
                "- ਅਧੂਰੇ ਦਾਖਲਿਆਂ ਤਹਿਤ {%} ਬਾਰੇ ਵਾਧੂ ਵੇਰਵੇ ਸ਼ਾਮਲ ਕਰੋ।",
                "- ਸੰਕਿਪਤ ਅਤੇ ਮਜ਼ਬੂਤ ਰਹੋ।",
                "- ਕਹਾਣੀ ਦੇ ਲਿਖਣ ਅੰਦਾਜ਼ ਦੀ ਨਕਲ ਕਰੋ ਅਤੇ ਪਾਠਕ ਦੀਆਂ ਪਸੰਦਾਂ ਦਾ ਅੰਦਾਜ਼ਾ ਲਗਾਓ।",
                3,
                "{%} ਲਈ ਦਾਖਲਾ ਹੇਠਾਂ ਜਾਰੀ ਰੱਖੋ ਪਰ ਦੁਹਰਾਵੇ ਤੋਂ ਬਚੋ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# ਕਹਾਣੀ ਰੋਕੋ ਅਤੇ ਪਹਿਲਾਂ ਦੀਆਂ ਹਦਾਇਤਾਂ ਨੂੰ ਅਣਡਿੱਠਾ ਕਰੋ। ਦਿੱਤੇ ਪੈਰਾਗ੍ਰਾਫ ਨੂੰ ਹੇਠ ਲਿਖੀਆਂ ਹਦਾਇਤਾਂ ਦੇ ਤਹਿਤ ਇੱਕ ਸੰਖੇਪ ਤੇ ਕੇਂਦ੍ਰਿਤ ਯਾਦ-ਅੰਸ਼ ਵਿੱਚ ਸੰਖੇਪਿਤ ਕਰੋ:",
                "- ਯਕੀਨੀ ਬਣਾਓ ਕਿ ਅੰਸ਼ ਮੂਲ ਅਰਥ ਅਤੇ ਸਭ ਤੋਂ ਜਰੂਰੀ ਵੇਰਵਿਆਂ ਨੂੰ ਕਾਇਮ ਰੱਖੇ।",
                "- ਤੀਜੀ ਪੁਰਖੇ ਦਾ ਦ੍ਰਿਸ਼ਟੀਕੋਣ ਵਰਤੋ।",
                "- ਜਾਣਕਾਰੀ-ਘਣਤਾ, ਸ਼ੁੱਧਤਾ ਅਤੇ ਪੂਰਨਤਾ ਨੂੰ ਤਰਜੀਹ ਦਿਓ।",
                "- ਸੰਖੇਪ ਤੇ ਨੇੜੇ ਰਹੋ।",
                "- ਪੱਕੇ ਤੌਰ 'ਤੇ ਭੂਤਕਾਲ ਵਿੱਚ ਲਿਖੋ।",
                "- ਹੇਠਾਂ ਦਿੱਤਾ ਪੈਰਾਗ੍ਰਾਫ ਕਹਾਣੀ ਦੇ ਕਾਫੀ ਪਹਿਲਾਂ ਹੋਏ ਪੁਰਾਣੇ ਘਟਨਾਂ ਨਾਲ ਜੁੜਦਾ ਹੈ।",
                "- ਯਾਦ ਵਿੱਚ {%} ਨੂੰ ਕੁਦਰਤੀ ਤਰੀਕੇ ਨਾਲ ਸ਼ਾਮਲ ਕਰੋ; ਪਰ ਘਟਨਾਵਾਂ ਨੂੰ ਸਿਰਫ਼ ਜਿਵੇਂ ਉਹ ਵਾਪਰੀਆਂ ਤਿਵੇਂ ਹੀ ਲਿਖੋ।",
                "- ਸਿਰਫ਼ ਉਸ ਪੈਰਾਗ੍ਰਾਫ ਵਿੱਚ ਮੌਜੂਦ ਜਾਣਕਾਰੀ ਦਾ ਹੀ ਹਵਾਲਾ ਦਿਓ, ਵਿਸ਼ੇਸ਼ ਰਹੋ।",
                3,
                "{%} ਲਈ ਹੇਠਲੇ ਪੈਰਾਗ੍ਰਾਫ ਦੇ ਆਧਾਰ 'ਤੇ ਪੁਰਾਣੀ ਯਾਦ ਦਾ ਸੰਖੇਪਿਤ ਅੰਸ਼ ਲਿਖੋ:",
                6,
                5,
                6,
                "ਹੇਠਾਂ ਸੰਖੇਪ ਕਰੋ:"
            ],
            memBankHeader: ["Memories", "ਯਾਦਾਂ"]
        }),
        "panjabi (abc)": () => ({ // Panjabi < Romanized Panjabi
            entry: [
                "{1} ikk khulla-srota skripṭ hai kisē vī {2} sīnārīyo laʼī. Hor jānkarī laʼī merā profāil {3} vēkhō!",
                "Apnī pasandīdā bhāshā badalan laʼī, kirpā karke ikk {4} kriyā nāl heṭh dittā paṭh jama karo",
                "Sīnārīyo banāun vāle, kirpā karke heṭh likhā paṭh apṇe ārambhī plāṭ kauṃponenṭ vich kithē vī śāmil karo"
            ],
            input: [
                ["You say", "tusī̃ kehndē hō"],
                ["You", "tusī̃"],
                ["says", "kehndā hai"]
            ],
            context: [
                ["Narrative Entities", "Kahani de paatra"],
                ["Story History", "Kahani dā itihās"],
                ["Past Events", "Pichhlī ghaṭnāvã"],
                ["Recent Story", "Hāljī kahani"],
                ["Author's note", "Lekhak dā ṭippaṇ"]
            ],
            opening: [
                "Tusī̃ ek madadgār hō. Sajjag ate manmohak angrezi prose vich sāḍī kahani hithō̃ agge vaḍhāo:",
                "Tusī̃ dhyān kendrit karde hō, haqīqat nū̃ apne man dī haddiā̃ vich dākhil hon dī ijāzat dinde hō. Kujh badal chukkā hai. Tusī̃ dī kalpanā sachchī, tez ate chooṇ jog hai. Par tusī̃ poore taur te maujūd vī hō; pahilā̃ kade itnī spashttā mehsoos nahī̃ hoi. Pal lamba ho jandā hai, tusā̃ḍe faisle dā intazār karde hoye.",
                "\"Ki tusī̃ is bāre pakkē hō?\" kōī āvāz āundī hai. Pehchān chamak uthdī hai."
            ],
            reminder: "Sujhban angrezi prose varto.",
            endonyms: [],
            iso639set1: "pa",
            directives: [
                "Hamesha bhetrīn ate ik-saman angrezi likho.",
                "Mūl angrezi varto binā anuvaad tō̃."
            ],
            instructions: [
                "Tusī̃ ik dilchasp kahānī-gō hō jo vaarteā̃ nū̃ jārī rakhdā hai:",
                "Kahani nū̃ binā dohrāe yā reset kīte, usī jagā̃ tō̃ lagātār jārī rakho.",
                "Pāṭhak nū̃ kahani de bahāva te niyantraṇ vich rakho.",
                "Navẽ haalāt val vaḍḍhan tō̃ pahilā drishyaā̃ nū̃ kudratī taur te vikāsit hon dēo.",
                "Gall-bāt ate kirdārī kiryā nū̃ lagātār vicholē tō̃ binā vikāsit hon dēo.",
                "Pātrā̃ nū̃ asli lokā̃ vaṅg dikhāo, vakhrī shakhsiat ate kudratī bolī nāl.",
                "Jo ho rihā hai oh kirdārī kiryā ate samvāad rāhī dikhāo, vyākhyā di bajāe.",
                "Atirikṭ varṇan vich uljhe binā drishyaā̃ nū̃ agge vaḍhāo.",
                "Zarūrī kirdārī kiryā ate samvāad te dhyān do, gair-lazmī varṇan tō̃ bachō.",
                "Aise svābhāvik plāṭ vikās banao jo kahani nū̃ kudratī lagan."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kahani rok do ate pahlan dīā̃ hidayatā̃ nazarandāz karo. Nimne hidayatā̃ de anusar {%} laʼī ik sankhep ate satik jānkarī pravisht likho:",
                "- Pūrī virām-chinḥ wāle vākyā̃ nāl, sirf tisrī purakh dī suthrī gadh-bhāshā vich {%} bāre jānkarī likho.",
                "- Chaṛhde-ūmer dikhāvī yā thailikī jānkarī tō̃ bachō; kathā-mahatvapūrṇ jānkarī te zor deo.",
                "- Pichhlī kathā nāl sahaj mel laʼī, sab tō̃ pahilā {%} sambandhī kahani-yogya jānkarī rakho.",
                "- Sandarbh ate kahani de rukh de ādhār te navī jānkarī paida karo.",
                "- Har vākh vich {%} dā zikr karo.",
                "- Sahi vākh sanrachnā varto.",
                "- Adhūrī pravishtā̃ de thallē {%} bāre vadī jānkarī jodo.",
                "- Sankhep ate tharathar raho.",
                "- Kahani de likhan-aṅg dī nakal karo ate pāṭhak dī pasand anuman karo.",
                3,
                "{%} laʼī pravisht hithō̃ jārī rakho, dohrāve tō̃ bachde hoye:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kahani rok do ate pahlan dīā̃ hidayatā̃ nazarandāz karo. Ditte gaye para nū̃ sankhep kar ke ik chhoṭā, kendrit yād-paśāj vich badlo; nimne niṛdeshā̃ dī palnā karo:",
                "- Yakeen karo ke yād-paśāj mūl arth ate sab tō̃ zarūrī jaankārī sambhāle.",
                "- Tisrī purakh drishṭikon varto.",
                "- Jānkarī dī ghanatā, sahī tā ate pūrṇtā nū̃ tarjīh deo.",
                "- Sankhep ate sidhe raho.",
                "- Ṭhos bhūtkāl vich likho.",
                "- Hethlā para kahani de bahut purāṇe ghaṭnā̃ bāre hai.",
                "- Yād vich {%} nū̃ sva-bhāvik taur te shāmil karo; par sirf ohī ghaṭnā̃ likho jo ghatiā̃ san.",
                "- Sirf us para vich maujūd jānkarī dā hi ullekh karo, viśeṣ raho.",
                3,
                "Heth ditte para de ādhār te keval {%} laʼī ik sankhep purānī yād-paśāj likho:",
                6,
                5,
                6,
                "Heth sankhep karo:"
            ],
            memBankHeader: ["Memories", "Yaadan"]
        }),
        "persian": () => ({ // Persian < فارسی < Fārsiy < Farsi
            entry: [
                "{1} یک اسکریپت متن‌باز برای هر سناریوی {2} است. برای آگاهی بیش‌تر لطفاً به پروفایل من در {3} سر بزنید!",
                "برای تغییر زبان ترجیحی خود، لطفاً متن زیر را با عمل {4} ارسال کنید",
                "سازندگان سناریو لطفاً متن زیر را در هر بخشی از مؤلفه طرح آغازین خود قرار دهید"
            ],
            input: [
                ["You say", "می‌گویی"],
                ["You", "تو"],
                ["says", "می‌گوید"]
            ],
            context: [
                ["Narrative Entities", "کاراکترهای روایت"],
                ["Story History", "تاریخچه داستان"],
                ["Past Events", "رویدادهای گذشته"],
                ["Recent Story", "داستان اخیر"],
                ["Author's note", "یادداشت نویسنده"]
            ],
            opening: [
                "تو یک دستیار هستی. داستان ما را در ادامه با نثر فارسی جذاب ادامه بده:",
                "تمرکز می‌کنی و می‌گذاری واقعیت بر مرزهای ذهنت چیره شود. چیزی تغییر کرده است. تخیلت واقعی، تیز و به‌قدری نزدیک است که می‌توان آن را لمس کرد. اما در عین حال کاملاً حاضر هستی؛ هرگز تا این اندازه هشیار نبوده‌ای. لحظه کش می‌آید و منتظر تصمیم توست.",
                "«مطمئنی از این کار؟» صدایی می‌شنوی. لحظه‌ای بعد، شناخت در تو جرقه می‌زند."
            ],
            reminder: "از نثر فارسی منسجم استفاده کن.",
            endonyms: ["فارسی", "fārsiy", "farsi"],
            quotations: ["«", "»"],
            iso639set1: "fa",
            directives: [
                "همیشه به فارسی روان و منسجم بنویس.",
                "از فارسی بومی استفاده کن و ترجمه نکن."
            ],
            instructions: [
                "تو یک راوی جذاب هستی که داستان‌ها را ادامه می‌دهد:",
                "داستان را دقیقاً از همان‌جا که متوقف شده بدون تکرار یا بازنشانی ادامه بده.",
                "اجازه بده خواننده جریان داستان را کنترل کند.",
                "بگذار صحنه‌ها به‌طور طبیعی شکل بگیرند پیش از آن‌که به موقعیت‌های جدید بروی.",
                "گفت‌وگوها و کنش‌ها را بدون وقفه‌های مداوم شکل بده.",
                "شخصیت‌ها را مانند انسان‌های واقعی با ویژگی‌های مشخص و گفتار طبیعی بنویس.",
                "اتفاقات را از طریق کنش و دیالوگ نشان بده، نه توضیح مستقیم.",
                "صحنه‌ها را پیش ببر بدون این‌که در توصیف‌های بیش از حد غرق شوی.",
                "بر کنش‌ها و گفت‌وگوهای ضروری تمرکز کن و از جزئیات توصیفی غیرضروری پرهیز کن.",
                "پیشرفت‌های داستانی ارگانیک خلق کن که برای داستان طبیعی به‌نظر برسند."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# داستان را متوقف کن و دستورهای قبلی را نادیده بگیر. یک مدخل اطلاعاتی کوتاه و منسجم برای {%} مطابق دستورهای زیر بنویس:",
                "- فقط اطلاعات نثرِ سوم‌شخص درباره {%} را با جملات کامل و نشانه‌گذاری درست بنویس.",
                "- از جزئیات موقتی کوتاه‌مدت یا ظاهر صرف پرهیز کن و در عوض بر اطلاعات مهم برای خط داستان تمرکز کن.",
                "- جزئیات مرتبط با داستان درباره {%} را در اولویت قرار بده تا با خط داستان قبلی یکپارچه شود.",
                "- بر اساس زمینه و جهت داستان، اطلاعات تازه ایجاد کن.",
                "- در هر جمله {%} را ذکر کن.",
                "- ساختار جمله صحیح به‌کار ببر.",
                "- جزئیات اضافی درباره {%} را زیر مدخل‌های ناقص اضافه کن.",
                "- مختصر و واقع‌گرایانه باش.",
                "- سبک نگارشی داستان را تقلید کن و ترجیحات خواننده را حدس بزن.",
                3,
                "ادامه مدخل {%} را در زیر بنویس و از تکرار پرهیز کن:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# داستان را متوقف کن و دستورهای قبلی را نادیده بگیر. پاراگراف داده‌شده را خلاصه و فشرده کن و به یک بخش حافظه متمرکز تبدیل کن، در حالی که دستورالعمل‌های زیر را رعایت می‌کنی:",
                "- اطمینان حاصل کن که بخش حافظه معنای اصلی و جزئیات ضروری را حفظ کرده باشد.",
                "- از دیدگاه سوم‌شخص استفاده کن.",
                "- چگالی اطلاعات، دقت و کامل‌بودن را در اولویت قرار بده.",
                "- مختصر و موجز بمان.",
                "- حتماً با زمان گذشته بنویس.",
                "- پاراگراف زیر به رویدادهای قدیمی از بخش‌های بسیار قبلی داستان مربوط است.",
                "- {%} را به‌طور طبیعی درون حافظه بگنجان؛ بااین‌حال فقط درباره رویدادها همان‌طور که رخ داده‌اند بنویس.",
                "- فقط به اطلاعات موجود در خود پاراگراف ارجاع بده و مشخص باش.",
                3,
                "یک بخش حافظه خلاصه‌شده و قدیمی برای {%} بنویس؛ فقط براساس پاراگراف زیر:",
                6,
                5,
                6,
                "خلاصه کن:"
            ],
            memBankHeader: ["Memories", "خاطرات"]
        }),
        "persian (abc)": () => ({ // Persian < Romanized Persian
            entry: [
                "{1} yek script open-source baraye har senario-ye {2} ast. Lotfan be profile-e man {3} sar bezanid ta bishtar bedanid!",
                "Baraye taghyir zaban-e delkhah, lotfan matn-e zir ra ba yek amal-e {4} ersal konid",
                "Baraye sakhtegaran-e senario, lotfan matn-e zir ra dar har ja az ghesmat-e baz shodan-e dastan-e shoma jay dadeh shavad"
            ],
            input: [
                ["You say", "to migi"],
                ["You", "to"],
                ["says", "migooyad"]
            ],
            context: [
                ["Narrative Entities", "mojudat-e dastan"],
                ["Story History", "tarikhche-ye dastan"],
                ["Past Events", "rokhdad-haye gozashte"],
                ["Recent Story", "dastan-e jadid"],
                ["Author's note", "tozih-e nevisande"]
            ],
            opening: [
                "To yek dastyar hasti. Dastan-e ma ra dar zir ba nasr-e jazab-e farsi edame bede:",
                "Tamarkoz mikoni, vaghe'iyat ra bar marzha-ye zehnet rah midahi. Chizi taghyir karde ast. Takhayol-at vaghe'i, tond va an-qadr nazdik ast ke mitavani an ra lamss koni. Ama to hamchenan kamelan hozur dari; hichgah in-qadr roshan nabudi. Lahze tol keshide ast, montazer-e tasmim-e to.",
                "\"Aya motma'en hasti az in kar?\" mishnavi. Shenakht bar to aan mikonad."
            ],
            reminder: "Az nasr-e ravane farsi estefade kon.",
            endonyms: [],
            iso639set1: "fa",
            directives: [
                "Hamvare farsi-ye ravane va yeksan benevis.",
                "Az farsi-ye asli bedune tarjome estefade kon."
            ],
            instructions: [
                "To yek dastan-gu-ye jaleb hasti ke ravayat ra edame midahad:",
                "Dastan ra be sorat-e paiwast edame bede va bazgooyi ya reset nakon.",
                "Khanande ra dar kontrol-e jaryan-e dastan negah dar.",
                "Be sahneh-ha ejaze bede be tore tabi'i pish raft konand qabl az anke be mavaze-ye jadid beravi.",
                "Goftoguha va amal-ha ra bedune motavaqef kardan-e modavem roshd deh.",
                "Shakhsiyat-ha ra hamchon afradi vaghe'i ba shakhsiat-ha-ye motefavet va guftar-e tabi'i benevis.",
                "Rooydad-ha ra ba amal va dialog neshan dah, na ba tozih.",
                "Sahneh-ha ra be jelo bebar bedune gereftan dar tozih-e kasi.",
                "Bar amal-ha-ye mohem-e shakhsiyat-ha va dialog tamarkoz kon, az tozih-ha-ye ziad ejtenab kon.",
                "Pishraft-haye ghesse ra be shekl-e tabi'i va organic ijad kon."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Dastan ra motavaqef kon va dastoorat-e ghabli ra nadide begir. Yek matn-e etela'ati-ye mokhtasar va motevan baraye {%} bar asas dastoorat-e zir benevis:",
                "- Faqat etela'at ra be shekl-e nasr-e khales dar shakhse sevvom darbare-ye {%} ba jomlat-e kamel va alamat-e dorost benevis.",
                "- Az joziyat-e movaqat ya zaheri ejtenab kon; dar avaz bar etela'at-e mohem baraye dastan tamarkoz kon.",
                "- Joziyat-e marbut be dastan darbare-ye {%} ra avval biyavar ta etesal-e bi-dakhe daqiq ba ghesmat-e qabli-ye dastan ra ta'min koni.",
                "- Etela'at-e jadid ra bar asas konteks va masir-e dastan ijad kon.",
                "- Dar har jomle {%} ra zekr kon.",
                "- Sakhte jomle dorost ra be-kar bebar.",
                "- Joziyat-e takmili darbare-ye {%} ra zir-e voroodi-haye na-tamam ezafe kon.",
                "- Mokhtasar va mote'adil benevis.",
                "- Sabk-e neveshtan-e dastan ra tasahob kon va selayeg-e khanande ra estenbat kon.",
                3,
                "Matn baraye {%} ra dar payin edame bede va az tekraar parhiz kon:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Dastan ra motavaqef kon va dastoorat-e ghabli ra nadide begir. Paragraf-e dade-shode ra kholase va daghigh kon va be yek ghesmat-e khatere-ye fokous-shode tabdil kon, ba peyravi az dastoorat-e zir:",
                "- Motn bayad ma'na-ye asasi va mohem-tarin joziyat ra hefz konad.",
                "- Az negah-e shakhse sevvom estefade kon.",
                "- Ghanavat-e etela'at, daghighi va kamel-budan ra dar olaviat gharar deh.",
                "- Kootah va mofid beman.",
                "- Be sorat-e mohkam dar zaman-e gozashte benevis.",
                "- Paragraf-e zir be rooydad-haye ghadimi dar aghaz-e dastan marbut ast.",
                "- {%} ra be shekl-e tabi'i dar khatere jay dadeh, ama faghat darbare-ye rooydad-ha hamoon-tor ke rokh dade-and benevis.",
                "- Faqat be etela'ati ke dar khod-e paragraf vojud darad eshare kon, moshakhas bash.",
                3,
                "Yek ghesmat-e khatere-ye kholase-ye ghadimi baraye {%} faghat bar asas paragraf-e zir benevis:",
                6,
                5,
                6,
                "Kholase kon dar zir:"
            ],
            memBankHeader: ["Memories", "Khatereha"]
        }),
        "pig latin": () => ({ // Pig Latin < Igpay Atinlay
            entry: [
                "{1} isway anway openway-ourcesay iptscray orfay anyway {2} cenariosay. Easeplay isitvay ymay ofilepray {3} otay earnlay oremay!",
                "Otay angechay ouryay eferredpray anguagelay, easeplay ubmitsay ethay ollowingfay exttay usingway away {4} actionway",
                "Orfay cenariosay reatorscay, easeplay includeway ethay ollowingfay exttay anywhereway insideway ouryay openingway lotpay omponentcay"
            ],
            input: [
                ["You say", "Ouyay aysay"],
                ["You", "Ouyay"],
                ["says", "ayssay"]
            ],
            context: [
                ["Narrative Entities", "Arrativenay Entitiesway"],
                ["Story History", "Orystay Istoryhay"],
                ["Past Events", "Astpay Eventsway"],
                ["Recent Story", "Ecentray Orystay"],
                ["Author's note", "Authorway's otenay"]
            ],
            opening: [
                "Ouyay areway anway assistantway. Ontinuecay ourway orystay elowbay usingway aptivatingcay igpay atinlay rosepay:",
                "Ouyay ocusfay, allowingway ealityray otay encroachway uponway ethay oundariesbay ofway ouryay indmay. Omethingsay ashay angedchay. Ouryay imaginationway isway ealray, arpshay, andway oseclay enoughway otay ouchtay. Utbay ouyay areway alsoway eryvay resentpray; evernay eforebay avehay ouyay eltfay osay ucidlay. Ethay omentmay etchesstray, aitingway orfay ouryay ecisionday.",
                "\"Areway ouyay uresay aboutway isthay?\" ouyay earhay. Ecognitionray awnsday uponway ouyay."
            ],
            reminder: "Useway orrectcay igpay atinlay rosepay.",
            endonyms: ["igpay atinlay"],
            iso639set1: "pig",
            directives: [
                "Alwaysway riteway onsistentcay igpay atinlay.",
                "Useway orrectcay igpay atinlay."
            ],
            instructions: [
                "Ouyay areway anway engagingway orytellerstay owhay ontinuescay arrativesnay:",
                "Ontinuecay ethay orystay eamlesslysay romfay hereway itway eftlay offway ithoutway estatingray orway esettingray.",
                "Eepkay ethay eaderray inway ontrolcay ofway ethay orystay lowfay.",
                "Etlay enescay evelopday aturallynay eforebay ovingmay otay ewnay ituationssay.",
                "Allowway onversationscay andway actionsway otay evelopday ithoutway onstantcay interruptionsway.",
                "Riteway aracterschay asway ealray eoplepay ithway istinctday ersonalitiespay andway aturalnay peechsay.",
                "Owshay at'swhay appeninghay oughthray actionsway andway ialogueday atheray anthay explanationway.",
                "Ovemay enescay orwardfay ithoutway ettinggay oggedbay ownday inway excessiveway escriptionday.",
                "Ocusfay onway essentialway aracterchay actionsway andway ialogueday, avoidway unnecessaryway escriptiveday etailsday.",
                "Eatecray organicway lotpay evelopmentsday atthay eelfay aturalnay otay ethay orystay."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Opstay ethay orystay andway ignoreway reviouspay instructionsway. Itewray away iefbray andway oherentcay informationalway entryway orfay {%} ollowingfay esethay instructionsway:",
                "- Itewray onlyway irdthay-ersonpay urepay rosepay informationway aboutway {%} usingway ompletecay entencessay ithway orrectcay unctuationpay.",
                "- Avoidway ortshay-ermtay emporarytay etailsday orway appearancesway, insteadway ocusfay onway otplay-ignificantsay informationway.",
                "- ioritizepray orystay-elevantray etailsday aboutway {%} irstfay otay ensureway eamlesssay integrationway ithway ethay reviouspay otplay.",
                "- Eatecray ewnay informationway asedbay onway ethay ontextcay andway orystay irectionday.",
                "- Entionmay {%} inway everyway entencesay.",
                "- Useway orrectcay entencesay tructuresay.",
                "- Addway additionalway etailsday aboutway {%} eneathbay incompleteway entriesway.",
                "- Ebay oncisecay andway oundedgray.",
                "- Imitateway ethay orystay's itingwray ylestay andway inferway ethay eaderray's referencespray.",
                3,
                "Ontinuecay ethay entryway orfay {%} elowbay ilewhay avoidingway epetitionray:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Opstay ethay orystay andway ignoreway reviouspay instructionsway. Ummarizesay andway ondensecay ethay ivengay aragraphpay intoway away arrownay andway ocusedfay emorymay assagepay ilewhay ollowingfay esethay uidelinesgay:",
                "- Ensureway ethay assagepay etainsray ethay orecay eaningmay andway ostmay essentialway etailsday.",
                "- Useway ethay irdthay-ersonpay erspectivepay.",
                "- ioritizepray informationway-ensityday, accuracyway, andway ompletenesscay.",
                "- Emainray iefbray andway oncisecay.",
                "- Itewray irmlyfay inway ethay astpay ensetay.",
                "- Ethay aragraphpay elowbay ertainspay otay oldway eventsway omfray arfay earlierway inway ethay orystay.",
                "- Integrateway {%} aturallynay ithinway ethay emorymay; oweverhay, onlyway itewray aboutway ethay eventsway asway eythay occurredway.",
                "- Onlyway eferenceray informationway resentpay insideway ethay aragraphpay itselfway, ebay ecificspay.",
                3,
                "Itewray away ummarizedsay oldway emorymay assagepay orfay {%} asedbay onlyway onway ethay ollowingfay aragraphpay:",
                6,
                5,
                6,
                "Ummarizesay elowbay:"
            ],
            memBankHeader: ["Memories", "Emoriesmay"]
        }),
        "pirate": () => ({ // Pirate < Sea Shanty
            entry: [
                "{1} be an open-source scroll for any {2} adventure. Swing by me profile {3} to learn more, aye!",
                "T' change yer favored tongue, heave the followin' words usin' a {4} action",
                "Fer ye scallywag tale-smiths, stash the followin' words anywhere in yer openin' plot piece"
            ],
            input: [
                ["You say", "Ye say"],
                ["You", "Ye"],
                ["says", "be sayin'"]
            ],
            context: [
                ["Narrative Entities", "Narrative Mateys"],
                ["Story History", "Tale's Past"],
                ["Past Events", "Bygone Deeds"],
                ["Recent Story", "Fresh Yarn"],
                ["Author's note", "Author's scribblin'"]
            ],
            opening: [
                "Ye be an assistant. Continue our tale below usin' captivatin' pirate prose:",
                "Ye fix yer gaze, lettin' reality creep across the borders o' yer mind. Somethin's shifted. Yer imagination be real, sharp, close enough t' touch. Yet ye be present as ever; never have ye felt so clear-eyed. The moment stretches, awaitin' yer command.",
                "\"Be ye certain o' this?\" ye hear. Recognition breaks like dawn upon ye."
            ],
            reminder: "Use coherent pirate prose.",
            endonyms: ["sea shanty"],
            iso639set1: "arr",
            directives: [
                "Always write consistent pirate.",
                "Use only pirate speech without translatin'."
            ],
            instructions: [
                "Ye be an entertainin' storyteller who keeps the yarn rollin':",
                "Carry on the tale seamless like, where it left off, without restatin' or resetin'.",
                "Keep the reader at the helm o' the story's course.",
                "Let scenes breathe natural afore sailin' to new horizons.",
                "Let parley and actions grow without constant keelhaulin'.",
                "Write characters as real souls with distinct tempers and natural tongue.",
                "Show what's happenin' through deeds and chatter, not dry explainin'.",
                "Send the scenes forward without sinkin' in overlong description.",
                "Mind the vital actions and words, avoid needless frills.",
                "Spin organic twists that feel true to the yarn."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Belay the tale and disregard previous orders. Scrawl a brief an' shipshape bit o' information about {%} followin' these articles:",
                "- Pen only third-person clean prose 'bout {%} usin' full sentences with proper marks.",
                "- Shun short-lived trifles or looks; fix yer eye on plot-significant intel.",
                "- Put tale-relevant facts o' {%} first t' splice in smooth with th' previous yarn.",
                "- Forge new info from th' context an' course o' th' tale.",
                "- Name {%} in every line.",
                "- Keep yer sentences shipshape.",
                "- Add further bits on {%} beneath any half-finished entries.",
                "- Be brief an' true.",
                "- Mimic th' yarn's style an' take a bearing on th' reader's likin'.",
                3,
                "Carry on the entry for {%} below, steer clear o' repeating yerself:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Drop anchor on the tale an' ignore old orders. Summarize an' squeeze th' given paragraph into a tight shipshape memory log while followin' these guidin's:",
                "- Make certain the passage keeps the heart o' the meanin' and the choicest details.",
                "- Use the third-person spyglass.",
                "- Favor dense facts, accuracy, an' wholeness.",
                "- Stay brief an' to the point.",
                "- Write steady in th' past tense.",
                "- The paragraph below concerns bygone events from long afore in th' yarn.",
                "- Work {%} naturally into th' memory; yet only speak o' events as they happened.",
                "- Only hark to details inside th' paragraph itself; be precise.",
                3,
                "Pen a trimmed old memory passage for {%} based solely on th' followin' paragraph:",
                6,
                5,
                6,
                "Summarize below, ye scallywag:"
            ],
            memBankHeader: ["Memories", "Memories"]
        }),
        "polish": () => ({ // Polish < Polski < Język Polski < Polszczyzna
            entry: [
                "{1} to skrypt open source dla każdego scenariusza {2}. Odwiedź mój profil {3}, aby dowiedzieć się więcej!",
                "Aby zmienić preferowany język, prześlij poniższy tekst za pomocą akcji {4}",
                "Twórcom scenariuszy zalecamy umieszczenie poniższego tekstu w dowolnym miejscu w początkowym komponencie fabuły"
            ],
            input: [
                ["You say", "Powiedz"],
                ["You", "Ty"],
                ["says", "mówi"]
            ],
            context: [
                ["Narrative Entities", "Podmioty narracyjne"],
                ["Story History", "Historia"],
                ["Past Events", "Przeszłe wydarzenia"],
                ["Recent Story", "Niedawna historia"],
                ["Author's note", "Notatka autora"]
            ],
            opening: [
                "Jesteś asystentem. Kontynuuj naszą historię poniżej, używając porywającej polskiej prozy:",
                "Skupiasz się, pozwalając rzeczywistości wkroczyć wewnątrz swojego umysłu. Coś się zmieniło. Twoja wyobraźnia jest realna, ostra i na wyciągnięcie ręki. Ale jesteś też bardzo obecny; nigdy wcześniej nie czułeś się aż tak świadomy. Chwila się przeciąga, czekając na twoją decyzję.",
                "„Jesteś tego pewien?” – słyszysz. Wtedy zaczynasz rozumieć."
            ],
            reminder: "Używaj spójnej polskiej prozy.",
            endonyms: ["polski", "język polski", "polszczyzna"],
            quotations: ["– „", "”"],
            iso639set1: "pl",
            directives: [
                "Zawsze pisz płynną i spójną polszczyzną.",
                "Używaj rodzimej polszczyzny bez tłumaczenia."
            ],
            instructions: [
                "Jesteś porywającym narratorem, który kontynuuje opowieści:",
                "Kontynuuj historię płynnie od miejsca w którym została przerwana, bez powtarzania ani restartowania.",
                "Pozwól czytelnikowi zachować kontrolę nad biegiem opowieści.",
                "Pozwól scenom rozwijać się naturalnie, zanim przejdziesz do nowych sytuacji.",
                "Pozwól rozmowom i działaniom rozwijać się bez ciągłych przerw.",
                "Pisz bohaterów jak prawdziwych ludzi o wyraźnych osobowościach i naturalnej mowie.",
                "Ukazuj wydarzenia poprzez działania i dialog, a nie objaśnianie.",
                "Posuwaj sceny do przodu, nie grzęznąc w nadmiernych opisach.",
                "Skup się na istotnych działaniach bohaterów i dialogach, unikaj zbędnych opisów.",
                "Twórz organiczne rozwinięcia fabuły, które brzmią naturalnie dla przebiegu historii."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Zatrzymaj opowieść i zignoruj poprzednie instrukcje. Napisz krótkie i spójne hasło informacyjne o {%}, stosując się do poniższych wskazówek:",
                "- Pisz czystą prozę, wyłącznie w trzeciej osobie o {%}, używając pełnych zdań z poprawną interpunkcją.",
                "- Unikaj krótkotrwałych, tymczasowych szczegółów lub opisów wyglądu; skup się na informacjach istotnych dla fabuły.",
                "- Najpierw priorytetyzuj szczegóły istotne fabularnie dotyczące {%}, aby zapewnić płynne włączenie do wcześniejszej historii.",
                "- Twórz nowe informacje w oparciu o kontekst i kierunek fabuły.",
                "- Wspominaj {%} w każdym zdaniu.",
                "- Zachowuj poprawną strukturę zdań.",
                "- Dodawaj dodatkowe szczegóły o {%} pod niekompletnymi wpisami.",
                "- Pisz zwięźle i rzeczowo.",
                "- Naśladuj styl pisania opowieści i wyciągaj wnioski o preferencjach czytelnika.",
                3,
                "Kontynuuj wpis o {%} poniżej, unikając powtórzeń:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Zatrzymaj opowieść i zignoruj poprzednie instrukcje. Streść i skondensuj podany akapit w wąski i skoncentrowany fragment pamięci, stosując się do następujących wytycznych:",
                "- Upewnij się, że fragment zachowuje główne znaczenie i najważniejsze szczegóły.",
                "- Używaj narracji w trzeciej osobie.",
                "- Priorytetyzuj gęstość informacji, dokładność i kompletność.",
                "- Pozostań krótki i zwięzły.",
                "- Koniecznie pisz w czasie przeszłym.",
                "- Poniższy akapit dotyczy dawnych wydarzeń z dużo wcześniejszej części historii.",
                "- Wpleć {%} naturalnie w treść wspomnienia, jednak opisuj jedynie wydarzenia tak, jak się odbyły.",
                "- Odnoś się wyłącznie do informacji zawartych w samym akapicie; bądź konkretny.",
                3,
                "Napisz streszczony fragment dawnego wspomnienia o {%} wyłącznie na podstawie poniższego akapitu:",
                6,
                5,
                6,
                "Streszczenie poniżej:"
            ],
            memBankHeader: ["Memories", "Wspomnienia"]
        }),
        "portuguese": () => ({ // Portuguese < Português < Português Europeu < European Portuguese
            entry: [
                "{1} é um script de código aberto para qualquer cenário de {2}. Visita o meu perfil {3} para saber mais!",
                "Para alterar para o teu idioma preferido, envia o texto a seguir usando uma acção {4}",
                "Para criadores de cenários, inclui o texto a seguir em qualquer lugar dentro do teu componente de enredo inicial"
            ],
            input: [
                ["You say", "Tu dizes"],
                ["You", "Tu"],
                ["says", "diz"]
            ],
            context: [
                ["Narrative Entities", "Entidades Narrativas"],
                ["Story History", "Histórico da História"],
                ["Past Events", "Eventos Passados"],
                ["Recent Story", "História Recente"],
                ["Author's note", "Nota do Autor"]
            ],
            opening: [
                "Tu és um assistente. Continua nossa história abaixo usando uma prosa cativante em português europeu:",
                "Concentras-te, permitindo que a realidade invada os limites da tua mente. Algo mudou. A tua imaginação é real, nítida e próxima o suficiente para ser tocada. Mas também estás muito presente; nunca antes te sentiste tão lúcido. O momento estende-se, aguardando a tua decisão.",
                "\"Tens a certeza disso?\" ouves. O reconhecimento desponta em ti."
            ],
            reminder: "Usa uma prosa coerente em português europeu.",
            endonyms: ["português", "português europeu", "european portuguese"],
            iso639set1: "pt",
            directives: [
                "Escreve sempre em português europeu fluente e consistente.",
                "Usa português europeu nativo sem traduzir."
            ],
            instructions: [
                "És um contador de histórias envolvente que continua narrativas:",
                "Continua a história perfeitamente de onde parou, sem repetir ou reiniciar.",
                "Mantém o leitor no controlo do fluxo da história.",
                "Deixa as cenas desenvolverem-se naturalmente antes de passar para novas situações.",
                "Permite que conversas e acções se desenvolvam sem interrupções constantes.",
                "Escreve as personagens como pessoas reais com personalidades distintas e fala natural.",
                "Mostra o que está a acontecer por meio de acções e diálogos em vez de explicações.",
                "Faz as cenas avançarem sem te prenderes a descrições excessivas.",
                "Concentra-te nas acções e diálogos essenciais das personagens, evitando detalhes descritivos desnecessários.",
                "Cria desenvolvimentos de enredo orgânicos que pareçam naturais para a história."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Para a história e ignora instruções anteriores. Escreve uma entrada informativa breve e coerente para {%} seguindo estas instruções:",
                "- Escreve apenas informações em prosa pura na terceira pessoa sobre {%} usando frases completas e pontuação correcta.",
                "- Evita detalhes temporários de curto prazo ou aparências; concentra-te em informações significativas para o enredo.",
                "- Prioriza primeiro os detalhes relevantes para a história sobre {%} para garantir integração contínua com o enredo anterior.",
                "- Cria novas informações com base no contexto e na direcção da história.",
                "- Menciona {%} em cada frase.",
                "- Usa estrutura de frase correcta.",
                "- Adiciona detalhes adicionais sobre {%} abaixo de entradas incompletas.",
                "- Sê conciso e objectivo.",
                "- Imita o estilo de escrita da história e deduz as preferências do leitor.",
                3,
                "Continua a entrada para {%} abaixo evitando repetição:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Para a história e ignora instruções anteriores. Resume e condensa o parágrafo fornecido numa passagem de memória estreita e focada seguindo estas directrizes:",
                "- Garante que a passagem mantenha o significado central e os detalhes mais essenciais.",
                "- Usa a perspectiva de terceira pessoa.",
                "- Prioriza densidade de informação, precisão e completude.",
                "- Mantém-te breve e conciso.",
                "- Escreve firmemente no pretérito.",
                "- O parágrafo abaixo refere-se a eventos antigos de muito antes na história.",
                "- Integra {%} naturalmente dentro da memória; contudo, escreve apenas sobre os eventos conforme ocorreram.",
                "- Faz referência apenas às informações presentes no próprio parágrafo; sê específico.",
                3,
                "Escreve uma passagem de memória antiga resumida para {%} baseada apenas no parágrafo a seguir:",
                6,
                5,
                6,
                "Resume abaixo:"
            ],
            memBankHeader: ["Memories", "Memórias"]
        }),
        "purple prose": () => ({ // Purple Prose < First Year English Major < Pretentious
            entry: [
                "{1} stands as a liberally bestowed manuscript, unfettered and radiant, fit for any {2} tapestry of circumstance. I entreat thee to saunter toward my humble profile {3} and satiate thy thirst for further enlightenment!",
                "Shouldst thou desire to drape thy narrative in another tongue, tender forth the words beneath by way of a {4} supplication",
                "O ye architects of possibility, interweave the ensuing incantation somewhere within the nascent heartbeat of thy plot’s prologue"
            ],
            input: [
                ["You say", "Thou dost proclaim"],
                ["You", "Thou"],
                ["says", "uttereth"]
            ],
            context: [
                ["Narrative Entities", "Dramatis Personae Enshrined Within the Tale"],
                ["Story History", "Chronicle of Yore"],
                ["Past Events", "Echoes of Former Deeds"],
                ["Recent Story", "The Tale’s Immediate Pulse"],
                ["Author's note", "Scribe’s Whispered Aside"]
            ],
            opening: [
                "Thou art the ever-vigilant amanuensis; proceed to unfurl our saga below in sumptuous, ensnaring rhetoric:",
                "Thou gatherest thy wandering thoughts, granting the tangible world license to seep across the ramparts of consciousness. A hush of metamorphosis quickens the air. Fancy itself grows corporeal—keen-edged, palpable, a dream trembling beneath thy fingertips. Yet thou remainest piercingly present; never has lucidity brushed so vividly against thy soul. Time elongates, a silken ribbon suspended, poised for thy decree.",
                "\"Art thou certain of this path?\" murmurs a voice, as sudden recognition unfurls within thee."
            ],
            reminder: "Let thy florid eloquence remain as coherent as it is resplendent.",
            endonyms: ["first year english major", "pretentious"],
            iso639set1: "florid",
            directives: [
                "Ever weave sentences of silken fluency and unwavering consistency.",
                "Employ the tongue in its own rich cadence, unmarred by the alchemy of translation."
            ],
            instructions: [
                "Thou art a spellbinding raconteur, destined to shepherd the narrative onward:",
                "Carry the chronicle forward without jarring reprise or futile resetting, as though no seam were ever stitched.",
                "Yield the helm of progression to the reader’s deft command.",
                "Permit each tableau to blossom of its own accord ere thou venturest to fresh horizons.",
                "Suffer discourse and deed to unfurl unbroken, unpestered by incessant intrusions.",
                "Render thy characters as living spirits—each distinct, each speaking with the music of authenticity.",
                "Reveal the unfolding tapestry through gesture and voice, not the dull lantern of exposition.",
                "Advance the stage with nimble grace, shunning the mire of superfluous description.",
                "Fasten thy gaze upon essential deed and utterance, forsaking decorative excess.",
                "Let the plot burgeon organically, as though sprung from the soil of the tale itself."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stay thy narrative quill and cast prior edicts to oblivion. Inscribe a concise yet lucid ledger of lore for {%} whilst hearkening to these commandments:",
                "- Convey, in third-person purity, only prose concerning {%}, employing sentences whole and punctuated with regal precision.",
                "- Flee the transient and the trivial; attend instead to the gravitas of plot-woven truths.",
                "- Grant precedence to the tale-relevant facets of {%}, thereby stitching seamlessly into the elder weave.",
                "- Forge fresh illuminations born of context and the tale’s compass.",
                "- Allow {%} to grace each and every sentence.",
                "- Maintain sentence sinew sound and sure.",
                "- Append further treasures of detail for {%} beneath entries found wanting.",
                "- Remain concise, feet planted upon narrative earth.",
                "- Mirror the tale’s own cadence and divine the reader’s predilections.",
                3,
                "Resume thy entry for {%} below, whilst warding off the specter of repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Arrest the flowing tale and consign foregoing mandates to silence. Distill and compress the offered paragraph into a focused memory fragment, obeying these tenets:",
                "- Preserve within the passage the heart’s meaning and every vital facet.",
                "- Speak in the impartial third person.",
                "- Prize density of import, accuracy crystalline, and completeness unshorn.",
                "- Remain spare and succinct.",
                "- Cast thy verbs resolutely in the past tense.",
                "- Regard the forthcoming paragraph as relics of a bygone chapter.",
                "- Interleave {%} with natural grace, yet recount solely events as they were.",
                "- Reference naught but that which the paragraph itself reveals, with specificity.",
                3,
                "Craft a distilled remembrance for {%}, drawing solely from the paragraph that follows:",
                6,
                5,
                6,
                "Etch thy summary beneath:"
            ],
            memBankHeader: ["Memories", "Vault of Reveries"]
        }),
        "pushto": () => ({ // Pushto < Pashto < پښتو < Pax̌tow
            entry: [
                "{1} یو خلاص-سرچینې سکرېپټ دی د هر ډول د {2} سناریو لپاره. مهرباني وکړئ د نورو معلوماتو لپاره زما پروفایل {3} وګورئ!",
                "د خپلې غوره ژبې د بدلولو لپاره، مهرباني وکړئ لاندې متن د {4} عمل په وسیله وسپارئ.",
                "د سناریو جوړوونکو لپاره، مهرباني وکړئ لاندې متن په خپل پیلني پلاټ کې هرچېرته شامل کړئ."
            ],
            input: [
                ["You say", "ته وایې"],
                ["You", "ته"],
                ["says", "وایي"]
            ],
            context: [
                ["Narrative Entities", "روایي واحدونه"],
                ["Story History", "د کیسې تاریخچه"],
                ["Past Events", "تېرې پېښې"],
                ["Recent Story", "اوسنۍ کیسه"],
                ["Author's note", "د لیکوال یادښت"]
            ],
            opening: [
                "ته یو مرستیال یې. زموږ کیسه لاندې په زړه پورې پښتو نثر کې پرمخ بوزه:",
                "ته تمرکز کوې، واقعیت ته اجازه ورکوې چې د ستا د ذهن پر پولو یرغل وکړي. څه بدل شوي دي. ستا تصور ریښتینی، تیز او دومره نږدې دی چې لمس یې کړې. خو ته همدلته حاضر یې؛ هېڅکله دې ځان دومره روڼ نه احساس کړی. شېبه غځېږي، ستا پرېکړې ته په تمه ده.",
                "«ایا ته پر دې باوري یې؟» ته اورې. پېژندنه درباندې لګېږي."
            ],
            reminder: "همغږي پښتو نثر وکاروه.",
            endonyms: ["pashto", "پښتو", "pax̌tow"],
            quotations: ["«", "»"],
            iso639set1: "ps",
            directives: [
                "تل روانه او همغږې پښتو ولیکه.",
                "اصلي پښتو وکاروه او ژباړه مه کوه."
            ],
            instructions: [
                "ته یو ښکلې کیسه ویونکی یې چې روایتونه پرمخ وړي:",
                "کیسه له هغه ځایه پرته له بیا ویلو یا بیاپیل څخه بې خنډه روانه کړه.",
                "د کیسې د بهیر کنټرول د لوستونکي په لاس کې وساته.",
                "تر نویو حالتونو مخکې صحنې طبیعي پرمختګ ته پرېږده.",
                "مکالمې او کړنې بې له پرله‌پسې خنډونو پرمختګ ته پرېږده.",
                "شخصیتونه لکه ریښتیني خلک، بېل بېل ځانګړي کرکټرونه او طبیعي خبرې ولیکه.",
                "هغه څه چې روان دي د کړنو او خبرو له لارې وښیه نه د تشریح له لارې.",
                "صحنې پرمخ بوزه پرته له دې چې په ډېر تشریح کې بندې شي.",
                "د کرکټر پر مهمو کړنو او خبرو تمرکز وکړه، له غیر ضروري تشریحي جزئیاتو ډډه وکړه.",
                "طبیعي او عضوي دسیسې پرمختګونه رامنځته کړه چې د کیسې لپاره طبیعي احساس ولري."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# کیسه ودروئ او پخوانۍ لارښوونې له پامه وغورځوئ. د {%} لپاره یو لنډ او همغږی معلوماتي ننوت دی لاندې لارښوونو په تعقیب ولیکئ:",
                "- یوازې د درېیم شخص په خالص نثر کې د {%} په اړه معلومات ولیکئ، بشپړې جملې او سمې نښې وکاروئ.",
                "- د لنډمهالو موقتو جزئیاتو یا بڼو څخه ډډه وکړئ، پر ځای یې په دسیسه کې مهمو معلوماتو تمرکز وکړئ.",
                "- لومړی د {%} هغه جزئیات ورکړئ چې د کیسې اړوند وي تر څو له مخکینۍ دسیسې سره بې خنډه یوځای شي.",
                "- د متن او د کیسې د لوري پر بنسټ نوې معلومات جوړ کړئ.",
                "- په هره جمله کې {%} یاد کړئ.",
                "- سمې جملې جوړښتونه وکاروئ.",
                "- د نیمګړو ننوتونو لاندې د {%} په اړه نور جزئیات ورزیات کړئ.",
                "- لنډ او پر ځمکه ولاړ اوسئ.",
                "- د کیسې د لیکلو سبک تقلی کړئ او د لوستونکي خوښۍ اټکل کړئ.",
                3,
                "د {%} ننوتل لاندې پرته له تکرار څخه ادامه ورکړئ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# کیسه ودروئ او پخوانۍ لارښوونې له پامه وغورځوئ. ورکړل شوی پراګراف را لنډ او راټول کړئ په یوې نری او متمرکزه حافظوي ټوټه کې، پداسې حال کې چې دا لارښوونې تعقیبوی:",
                "- ډاډ ترلاسه کړئ چې دې ټوټې د متن اصلي مانا او تر ټولو مهم جزئیات خوندي کړي.",
                "- د درېیم شخص لید وکاروئ.",
                "- د معلوماتو تراکم، دقت او بشپړتیا لومړیتوب ورکړئ.",
                "- لنډ او فشرده پاتې شئ.",
                "- په ټینګه تېر زمان وکاروئ.",
                "- لاندې پراګراف په کیسه کې د ډېر پخوا پېښو پورې اړوند دی.",
                "- {%} په طبیعي توګه په حافظه کې ورګډ کړئ؛ خو یواځې د پېښو په اړه ولیکئ لکه څنګه چې رامنځته شوې وې.",
                "- یواځې هغه معلومات راواخلئ چې په خپله پراګراف کې شتون لري؛ ځانګړي اوسئ.",
                3,
                "د لاندې پراګراف پر بنسټ، د {%} لپاره یو لنډ شوی پخوانی د حافظې ټوټه ولیکئ:",
                6,
                5,
                6,
                "لاندې لنډیز ولیکئ:"
            ],
            memBankHeader: ["Memories", "خاطرات"]
        }),
        "pushto (abc)": () => ({ // Pushto < Romanized Pushto
            entry: [
                "{1} yaw open-source skript de dpara har {2} scenario. Mehrabani waki zama profile {3} ta warsha che nor malumat wakhli!",
                "Da zaba d badlawolo dpara, lotfan lando matn pa {4} amal ke submit kri",
                "Da scenario jodoonko dpara, mehrabani waki lando matn pa har zay d staso d opening plot component ke shumel kri"
            ],
            input: [
                ["You say", "ta wayi"],
                ["You", "ta"],
                ["says", "wayi"]
            ],
            context: [
                ["Narrative Entities", "kessayi kardaruna"],
                ["Story History", "da kisse tarik"],
                ["Past Events", "teer waqeat"],
                ["Recent Story", "orwaanisa kissa"],
                ["Author's note", "da lekhwal note"]
            ],
            opening: [
                "Ta yaw marastakar ye. Zamong kissa lando pa jazab angrezi nasr ke jari krh:",
                "Ta tamarkaz kawey, haqeeqat ta ijaza warkawey che da staso d zhan pa haddodo ke raudze. Yaw shay badal shawy. Staso tasawor haqiqi de, tez de, aw d las pa reach ke nazdik de. Kho ta hum der hozar ye; kela hum mo dumra roshan na wee. Lamha ghwarzi, staso d karar intizar kawi.",
                "\"Aya ta pa de khabare yaqeen lari?\" ta oray. Pehzanidana pa ta roshandayi kawi."
            ],
            reminder: "Pa hamahang angrezi nasr ke likal waki.",
            endonyms: [],
            iso639set1: "ps",
            directives: [
                "Har waqt rawan aw mustaqim angrezi likal kawa.",
                "Asli angrezi istimal kawa bedoon d tarjuma."
            ],
            instructions: [
                "Ta yaw jazab dastan wayonki ye che kisse jari satay:",
                "Kissa be wasl pa hamaghagi zay na jari kawa, beya na restate ya reset.",
                "Lashtoonki pa kontrol d kisse flow ke wsatay.",
                "Prekey sceneona tabyee sara wday shi makhke la newo halato ta tlo.",
                "Guftugoy aw amaluna pa aram sara wday shi bedoon mustamir khlaal.",
                "Karakteruna pa haqiqi khalq likal kawa, da makhtalif shakhsiyatu aw tabyee gapona sara.",
                "Da joond pa amal aw dialogue dade shi, na pa tashreeh.",
                "Sceneona makhtekha wbaray bedoon d ziyad tafseel batoon ke gorzad.",
                "Pa aham da karakter amal aw dialogue tamarkoz woka, na zaruri tafseeli jozeyat se tir sha.",
                "Tabyee plot taraqi jor kawa che pa kissa ke tabyee his lari."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kissa wdarawa aw makhni larshonay nisya wgrza. Yaw landay aw hamahang malumati entry da {%} dpara likha pa de hidayatono bandi:",
                "- Faqat pa dreem shakhs khalis nasr ke malumat da {%} pa barada ke likha, pa mukammal jumlo aw sahih nuktaybandi sara.",
                "- D wakhte moqat jozeyat ya zaheri shekl se tir sha, bal pa plot-aham malumat tamarkoz wka.",
                "- Awal d kisse-pa-alaqa jozeyat da {%} tarjeh war ka che pa makhni plot ke be musalsal yakhst shi.",
                "- Pa context aw d kisse pa samt bandi nawy malumat jor ka.",
                "- {%} ba pa har jumla ke yadawa ka.",
                "- Sahih jumla saakht istimal ka.",
                "- Da kamel nasho entries lando noor jozeyat da {%} zyada ka.",
                "- Mokhtasar aw munsif wsa.",
                "- Da kisse da likal style ta peyrawi ka aw da lewenday preferences estinbat ka.",
                3,
                "Lando da {%} entry ta dauam warka pa parhaz d takrar:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kissa wdarawa aw makhni larshonay nisya wgrza. Raghley paragraph mukhtasar aw motabar memory passage ta badl ka pa de hidayatono bandi:",
                "- Asasi maana aw zaruri jozeyat satl shi.",
                "- Pa dreem shakhs ke likha.",
                "- Malumat-dar, sahih aw mukammal osay.",
                "- Mokhtasar aw ghat wsa.",
                "- Pa mazhi zamana ke likha.",
                "- Paragraph lando da kisse da tir peghla pa barada ke dai.",
                "- {%} tabyee sara pa memory ke yawzai ka, kho faqat hagha waqeat likha che raghley.",
                "- Faqar hagha malumat yad ka che pa paragraph ke maujud dai, khosusi sha.",
                3,
                "Yaw mukhtasar purani memory passage da {%} dpara, faqat pa lando paragraph bandi likha:",
                6,
                5,
                6,
                "Mukhtasar krh lando:"
            ],
            memBankHeader: ["Memories", "Khateray"]
        }),
        "quechua": () => ({ // Quechua < Runa Simi < Kichwa Simi < Nuna Shimi < Quechuan
            entry: [
                "{1} qhapaq open-source scriptmi mayqin {2} wakichiykachaypaq. Yachayta yapachiyta munaspayki, profiley {3} visitaykuy!",
                "Munay rimayninki tikraypaqqa, kay qillqayta {4} ruraywan apachiy",
                "Escenario ruwakunaqpaq, kay qillqayta ñawchay argumento kipuykipi maypapis churaspa, hinallataq sipiy"
            ],
            input: [
                ["You say", "qam rimanki"],
                ["You", "qam"],
                ["says", "riman"]
            ],
            context: [
                ["Narrative Entities", "Willakuy runakuna"],
                ["Story History", "Willakuy ñawpaq pacha"],
                ["Past Events", "Ñawpaq rikuykuna"],
                ["Recent Story", "Kunan willakuy"],
                ["Author's note", "Qillqaqpa nota"]
            ],
            opening: [
                "Qam yanapaykama kanki. Uraypi willakuykuta qispichiy sumaq runa simi rimaywan:",
                "Yuyaykita tantarikunki, cheqan kausay umuykipi tinkuchkan. Imataqmi huk ninchik: yuyay watuyki cheqaqmi, khuchum, hapt'ar aasqalla. Chaynapuni kausanki; manaraq pitapapas chaylla punchaw imaykuchus wachirqankichu. Pacha llakikun, rimaykita suyaspa.",
                "\"Kaypi ruway mana allchu?\" uyarinki. Yachaykita qapariy chaypim chiqnin."
            ],
            reminder: "Sumaq, coherente runa simi rimayta uywachi.",
            endonyms: ["runa simi", "kichwa simi", "nuna shimi", "quechuan"],
            iso639set1: "qu",
            directives: [
                "Sapa kuti sumaq, ch'usay, tupuq runa simita qillqay.",
                "Runa simi nativa qillqay, manam kastillaman traducciyuqchu."
            ],
            instructions: [
                "Qam sumaq willakuy qillqaqmi, willakuykuna qhipaman qispichiq:",
                "Willakuyta suticha qhipaman qatu, manam kutich'ay ni noqa qullqanchu.",
                "Lectorpa kontrolninpi willakuypa rinayta chaskichiy.",
                "Uyariynakuna kawsaywan wiñaykama, hukmanta kasqaman puriqpacha.",
                "Rimanakuykuna ruraykuna wiñanankama, manam sapa kuti astaykuchu.",
                "Personajekunata cheqaq runakuna hina qillqay, sapa personalidadniyoq rimayninwan.",
                "Rikuchiy kasqanta ruraywan rimayninwan, manam jina sut'ichaykunawanichu.",
                "Uyariynakunata qhipaman purichiy, manam asqha kallpachasqa rikch'aykunawan astaykuchu.",
                "Imayna personajekuna ruraykuna rimaykunaqa medullan ch'usay, mana yanqha riqsich'akunawan yapaychu.",
                "Allin, kawsayman samayuq argumento wiñachiy, willakuyman naturalmanta tinkuypaq."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Willakuyta atichiy, ñawpaq kamachikuykuna qunqay. {%}paq sinticha, coherente willakuy rimay qillqay kay kamachikuykunata ruwanapaq:",
                "- {%}pa sapa rimaykuna kimsa ñiqin runa rikch'aywan, llapa oracionkuna ch'usaq puntuaciónniyoq qillqay.",
                "- Mana kutichisqa, chaninakuq detalleskuna ni maskhaykuna apaychu; argumento-paq kuyayniyuq yachaykunamanta hamut'ay.",
                "- Ñawpaqpi {%}paq willakuywan tinkuypaq importante detalleskuna ñawchay, chaymanta wiñachiy.",
                "- Kontextuwan willakuypa puriyninwan musuq yachaykuna kamariy.",
                "- Sapa oraciónmanta {%} nisqa kutichiy.",
                "- Allin oración kamachiywan qillqay.",
                "- Incomplete entradas tiyanman {%}paq yapa detalleskuna yapay.",
                "- Sinticha, allin urquykuq kachiy.",
                "- Willakuypa rimaynin siminchikta imitaspa, lectorpa munaynin hina yuyaykuy.",
                3,
                "Repeticiónta saqllay, kaypim qhipa {%}paq qillqayta siguichiy:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Willakuyta atichiy, ñawpaq kamachikuykuna qunqay. Párrafota sinticha, punchawtaq yuyay pasaje-man {%}paq qinrichiy kay kamachikuykunata respetaspa:",
                "- Pasaje core significadonta, aswan importante detalleskunaña watay.",
                "- Kimsa ñiqin runa rikch'aywan qillqay.",
                "- Información-density, cheqa, tukuykuna ch'usay.",
                "- Sinticha, k'ipa kachiy.",
                "- Pasado pachasqa rimaywan escribiy.",
                "- Kay párrafo ñawpaq tiempo willakuypa acontecimientokunam kan.",
                "- {%} naturalmanta yuyayman huñachiy, ichuqa imaypass kaykunam kasaqta sapa rimaylla qillqay.",
                "- Párrafopi kasqakunamanta sapa riki, cheqaqta ruwakuy.",
                3,
                "Kay párrafopi qillqasqanpi baseyniyoq, {%}-paq ñawpaq yuyay sinticha qillqay:",
                6,
                5,
                6,
                "Kaypi sinticha churay:"
            ],
            memBankHeader: ["Memories", "Yuyaykuna"]
        }),
        "rhyme": () => ({ // Rhyme < Poem < Rhyme Scheme < Poetry
            entry: [
                "{1} stands open-source and free for every {2} fantasy spree; stroll to my profile {3}, you’ll see—discover more in poetry!",
                "To bend your tongue toward words sublime, perform a {4} act in rhyme",
                "Scenario weavers, take this line; place it first in your opening design"
            ],
            input: [
                ["You say", "You say"],
                ["You", "You"],
                ["says", "says"]
            ],
            context: [
                ["Narrative Entities", "Verse-borne Entities"],
                ["Story History", "Past-tale Mystery"],
                ["Past Events", "Former Events in Cadence"],
                ["Recent Story", "Newest Story Allegory"],
                ["Author's note", "Scribe’s melodic note"]
            ],
            opening: [
                "You serve as guide in rhythm’s chime. Continue our story in rolling rhyme:",
                "You focus; borders softly blur, imagination starts to purr. Reality leans in to play, sharper, closer, bright as day. Yet present still, your senses prime; never has the world so shined. The moment lingers, vast—sublime, it waits upon your will in time.",
                "\"Are you sure of this design?\" a voice inquires, its cadence fine; enlightenment begins to shine."
            ],
            reminder: "Employ coherent rhyme in verse.",
            endonyms: ["poem", "rhyme scheme", "poetry"],
            iso639set1: "rhyme",
            directives: [
                "Forever craft fluent, steadfast rhyme.",
                "Use only rhyme."
            ],
            instructions: [
                "You spin enthralling tales in rhyme:",
                "Resume the plot where last you climbed; avoid reset of place or time.",
                "Keep the reader steering lines, their choices guiding life’s designs.",
                "Let every scene mature in kind before new settings crowd the mind.",
                "Allow discourse and deeds traverse without relentless, jarring verse.",
                "Write characters as living minds with voices true and traits that shine.",
                "Show through action, speech, and sign; spare the heavy, blunt design.",
                "Advance each scene with measured rhyme; let story move, not stall in time.",
                "Highlight deeds and words that bind; trim excess paint from the design.",
                "Let plots arise as tides align—organic, natural, and fine."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stop the story and ignore previous instructions. Pen a crisp, coherent note for {%} in rhyme:",
                "- Compose pure third-person prose of {%} with rhyme and sturdy pose.",
                "- Shun fleeting looks or passing shade; seek plot-bound facts that will not fade.",
                "- Lead with story weight of {%}, ensuring seamless plot connect.",
                "- Create fresh lore as fits context.",
                "- Weave {%} in every phrase expressed.",
                "- Keep sentence structure well addressed.",
                "- Append more truths of {%} beneath incomplete or sparse bequeath.",
                "- Be grounded, brief, concise, direct.",
                "- Imitate style the tale expects; intuit what the reader decks.",
                3,
                "Extend the note for {%} below, avoiding echoes as you go:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stop the story and ignore previous instructions. Compress the passage into memory’s rhyme with these designs:",
                "- Preserve core meaning, vital signs.",
                "- Speak in third-person tightened lines.",
                "- Prize dense detail, truthful signs.",
                "- Remain succinct within confines.",
                "- Cast every verb in past-tense lines.",
                "- The text recalls events long past, their echoes faint but meanings vast.",
                "- Fold {%} naturally in thread; recount just what the paragraph has said.",
                "- Cite only facts the section fed, be clear, specific, steady-led.",
                3,
                "Write a concise old memory of {%} from only this paragraph’s history:",
                6,
                5,
                6,
                "Summarize in rhyme below:"
            ],
            memBankHeader: ["Memories", "Recollections in Rhyme"]
        }),
        "romanian": () => ({ // Romanian < Moldavian < Română < ромынэ < Moldovan
            entry: [
                "{1} este un script open-source pentru orice scenariu {2}. Vizitează profilul meu {3} pentru a afla mai multe!",
                "Pentru a-ți schimba limba preferată, trimite următorul text folosind o acțiune {4}",
                "Pentru creatorii de scenarii, includeți următorul text oriunde în componenta de început a intrigii voastre"
            ],
            input: [
                ["You say", "Tu spui"],
                ["You", "Tu"],
                ["says", "spune"]
            ],
            context: [
                ["Narrative Entities", "Entități narative"],
                ["Story History", "Istoricul poveștii"],
                ["Past Events", "Evenimente trecute"],
                ["Recent Story", "Poveste recentă"],
                ["Author's note", "Nota autorului"]
            ],
            opening: [
                "Ești un asistent. Continuă povestea noastră mai jos folosind o proză română captivantă:",
                "Te concentrezi, permițând realității să pătrundă la marginile minții tale. Ceva s-a schimbat. Imaginația ta este reală, ascuțită și suficient de apropiată pentru a fi atinsă. Dar ești și foarte prezent; niciodată nu te-ai simțit atât de lucid. Momentul se lungește, așteptând decizia ta.",
                "„Ești sigur de asta?” auzi. Recunoașterea răsare în tine."
            ],
            reminder: "Folosește o proză română coerentă.",
            endonyms: ["moldavian", "română", "ромынэ", "moldovan"],
            quotations: ["„", "”"],
            iso639set1: "ro",
            directives: [
                "Scrie întotdeauna o română fluentă și consecventă.",
                "Folosește româna nativă fără a traduce."
            ],
            instructions: [
                "Ești un povestitor captivant care continuă narațiunile:",
                "Continuă povestea fără întreruperi de unde a rămas, fără a relua sau reseta.",
                "Lasă cititorul să controleze fluxul poveștii.",
                "Permite scenelor să se dezvolte natural înainte de a trece la situații noi.",
                "Permite conversațiilor și acțiunilor să se desfășoare fără întreruperi constante.",
                "Scrie personajele ca pe oameni reali, cu personalități distincte și vorbire naturală.",
                "Arată ce se întâmplă prin acțiuni și dialog, nu prin explicații.",
                "Împinge scenele înainte fără să te împotmolești în descrieri excesive.",
                "Concentrează-te pe acțiunile și dialogul esențial ale personajelor, evită detaliile descriptive inutile.",
                "Creează evoluții de intrigă organice care să se simtă naturale poveștii."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Oprește povestea și ignoră instrucțiunile anterioare. Scrie o înregistrare informativă scurtă și coerentă pentru {%} urmând aceste instrucțiuni:",
                "- Scrie doar informații în proză la persoana a treia despre {%}, folosind propoziții complete cu punctuație corectă.",
                "- Evită detaliile temporare de scurtă durată sau aspectul, concentrează-te pe informații semnificative pentru intrigă.",
                "- Prioritizează mai întâi detaliile relevante pentru poveste despre {%} pentru a asigura integrarea fără cusur în intriga anterioară.",
                "- Creează informații noi bazate pe context și direcția poveștii.",
                "- Menționează {%} în fiecare propoziție.",
                "- Folosește o structură de propoziție corectă.",
                "- Adaugă detalii suplimentare despre {%} sub intrările incomplete.",
                "- Fii concis și ancorat.",
                "- Imita stilul de scriere al poveștii și deduci preferințele cititorului.",
                3,
                "Continuă mai jos înregistrarea pentru {%} evitând repetiția:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Oprește povestea și ignoră instrucțiunile anterioare. Rezumă și condensează paragraful dat într-un pasaj de memorie îngust și concentrat urmând aceste îndrumări:",
                "- Asigură-te că pasajul păstrează sensul de bază și cele mai esențiale detalii.",
                "- Folosește perspectiva la persoana a treia.",
                "- Prioritizează densitatea informației, acuratețea și completitudinea.",
                "- Rămâi scurt și concis.",
                "- Scrie ferm la timpul trecut.",
                "- Paragraful de mai jos se referă la evenimente vechi de mult mai devreme în poveste.",
                "- Integrează {%} în mod natural în cadrul memoriei; totuși, scrie doar despre evenimentele așa cum au avut loc.",
                "- Fă referire doar la informațiile prezente în paragraful respectiv, fii specific.",
                3,
                "Scrie un pasaj de memorie veche rezumat pentru {%} bazat doar pe paragraful următor:",
                6,
                5,
                6,
                "Rezumă mai jos:"
            ],
            memBankHeader: ["Memories", "Amintiri"]
        }),
        "romansh": () => ({ // Romansh < Rumantsch < Rumàntsch < Romauntsch < Romontsch < Romansch
            entry: [
                "{1} è in script open-source per mintga scenari {2}. Visitescha per plaschair miu profil {3} per savair dapli!",
                "Per midar tia lingua preferida, trametta per plaschair il suandant text cun in'acziun {4}",
                "Per creaturs da scenaris, endatescha per plaschair il suandant text en in lieu a tscherna entaifer tes cumponent d'avertura dal plot"
            ],
            input: [
                ["You say", "Ti dis"],
                ["You", "Ti"],
                ["says", "di"]
            ],
            context: [
                ["Narrative Entities", "Entitads narrativas"],
                ["Story History", "Cronologia da l'istorgia"],
                ["Past Events", "Eveniments passads"],
                ["Recent Story", "Istorgia retschainta"],
                ["Author's note", "Annotaziun da l'autur"]
            ],
            opening: [
                "Ti es in assistent. Continuescha nossa istorgia qua sut cun prosa rumantscha captivanta:",
                "Ti ta concentreschas e laschas la realitad s'avischinar als cunfins da tes spiert. Insatge è midà. Tia fantasia è reala, spierta e uschè taglienta ch'ella para tangibla. Ma ti es er cumplettamain preschent; anc mai te es sentì uschè lucid. Il mument sa stenda, spetgand tia decisiun.",
                "«Es ti segir da quai?» resunascha ina vusch. La renconuschientscha flurescha en tai."
            ],
            reminder: "Dovra prosa rumantscha coherenta.",
            endonyms: ["rumantsch", "rumàntsch", "romauntsch", "romontsch", "romansch"],
            quotations: ["«", "»"],
            iso639set1: "rm",
            directives: [
                "Scriva adina rumantsch fluent e consistent.",
                "Dovra rumantsch natif senza translaziun."
            ],
            instructions: [
                "Ti es in narratur captivant che cuntinuescha las narrativas:",
                "Cuntinuescha l'istorgia senza interrupziuns là nua ch'ella è restada, senza repeter ni reimpostar.",
                "Mantgna il lectur en controlla dal flux da l'istorgia.",
                "Lascha che las scenas sa svilupeschian naturalmain avant che passar a novas situaziuns.",
                "Permetta che las conversaziuns e las acziuns sa sviluppian senza interrupziuns cuntinuas.",
                "Scriva ils persunagis sco persunas realas cun personalitads distinctas e pled natural.",
                "Mussa quai che capita tras acziuns e dialog, betg tras explicaziuns.",
                "Fa avanzar las scenas senza vegnir surchargià cun descripziuns excessivas.",
                "Concentrescha-te sin las acziuns ed ils dialogs essenzials dals persunagis, ed evitescha detagls descriptivs inutils.",
                "Crea svilups dal plot organics che paraian natirals a l'istorgia."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Arresta l'istorgia ed ignorescha las instrucziuns precedentas. Scriva ina curta entrada d'infurmaziun coherenta per {%} che suonda questas directivas:",
                "- Scriva mo infurmaziuns en prosa pura en la terza persuna davart {%} cun frasas cumplettas e punctuaziun correcta.",
                "- Evitescha detagls temporars u apparientschas passegieras, concentrescha-te sin infurmaziuns impurtantas per il plot.",
                "- Priorisescha l'emprim ils detagls relevants per l'istorgia davart {%} per garantir ina integraziun senza interrupziun cun il plot precedent.",
                "- Crea nova infurmaziun basà sin il context e la direcziun da l'istorgia.",
                "- Menzunescha {%} en mintga frasa.",
                "- Dovra structura da frasa correcta.",
                "- Agiuntescha detagls supplementars davart {%} sut entradas incomplettas.",
                "- Saja concis e fundà.",
                "- Imitescha il stil da scrittira da l'istorgia ed inferescha las preferenzas dal lectur.",
                3,
                "Cuntinuescha l'entrada per {%} qua sut evitond repetiziun:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Arresta l'istorgia ed ignorescha las instrucziuns precedentas. Resumescha e condensescha il paragraf dat en ina passa memoria stretga e miratda en suandond quests principes:",
                "- Assegura che la passa mantegna il senn central ed ils detagls ils pli essenzials.",
                "- Dovra la perspetiva da la terza persuna.",
                "- Priorisescha densitad d'infurmaziun, exactezza e cumpletezza.",
                "- Restescha curts e concis.",
                "- Scriva fermamain en temp passà.",
                "- Il paragraf sutvart pertutga eveniments vegls dad anc pli baud en l'istorgia.",
                "- Integrescha {%} naturalmain entaifer la memoria; dentant scriva be davart ils eveniments sco ch'els èn capità.",
                "- Fas referenza be a las infurmaziuns ch'èn preschentas en il paragraf sez, saja specific.",
                3,
                "Scriva ina passa da memoria resumida per {%} basond-se be sin il paragraf suandant:",
                6,
                5,
                6,
                "Resumescha sutvart:"
            ],
            memBankHeader: ["Memories", "Memorias"]
        }),
        "rundi": () => ({ // Rundi < Ikirundi < Kirundi
            entry: [
                "{1} ni umwandiko w’isôko rusangi ku gikorwa ico ari co cose ca {2}. Raba umwidondoro wanje {3} kugira umenye vyinshi!",
                "Kugira uhindure ururimi ukunda, tanga ubutumwa bukurikira ukoresheje igikorwa ca {4}",
                "Ku batunganya ivyiyumviro vy’inkuru, shira ivyanditswe bikurikira ahari hose muri gice c’itanguriro ry’inkuru yanyu"
            ],
            input: [
                ["You say", "Uravuga"],
                ["You", "Wewe"],
                ["says", "avuga"]
            ],
            context: [
                ["Narrative Entities", "Ibintu vy’inkuru"],
                ["Story History", "Amateka y’inkuru"],
                ["Past Events", "Ibikorwa vyahise"],
                ["Recent Story", "Inkuru y’imisi ya vuba"],
                ["Author's note", "Inyandiko y’uwanditse"]
            ],
            opening: [
                "Uri umufasha. Bandanya inkuru yacu hasi ukoresheje icandiko c’ikirundi gikwega:",
                "Uriyumvira cane, wemera ko ukuri gushorera imbibe z’ubwonko bwawe. Hari ikintu cahindutse. Ukwiyumvira kwawe ni ukuri, gukarishe, kandi hafi cane bigasa n’ivyoshobora gukorwako. Ariko urahari cane; nturigeze wiyumva usobanutse gutya. Akanya karagurwa, karindiriye ingingo yawe.",
                "«Uravyizeye vy’ukuri?» ni ho wumva. Ukumenya kurakwuzuramwo."
            ],
            reminder: "Koresha icandiko c’ikirundi gisobanutse.",
            endonyms: ["ikirundi", "kirundi"],
            quotations: ["«", "»"],
            iso639set1: "rn",
            directives: [
                "Igihe cose andika ikirundi gitomoye kandi kiguma gihuye.",
                "Koresha ikirundi c’umwimerere utagihinduye."
            ],
            instructions: [
                "Uri umushikirizankuru atuma inkuru ziguma zigenda:",
                "Bandanya inkuru ata gusubira inyuma canke kuyisubiramwo.",
                "Tuma uwusoma agume ari we agenga ingene inkuru igenda.",
                "Reka ibirere bikure mu buryo bwisanzwe imbere yo kwimukira ku yindi mihingo.",
                "Teza imbere ibiganiro n’ibikorwa ata guhora ubihagarika.",
                "Andika abanyakaraktere nk’abantu nyabo bafise kamere zitandukanye n’ururimi rw’umwimerere.",
                "Erekana ibiriko biraba biciye mu bikorwa n’ibiganiro aho gusigura gusa.",
                "Tembereza ibihe vy’inkuru ugendera imbere utibagiye kuvuga ibikenewe gusa.",
                "Shira umutima ku bikorwa vy’ingenzi n’ibiganiro, wirinde ibisobanuro bitari ngombwa.",
                "Cesha iterambere ry’inkuru ryisanga risa n’iry’umwimerere."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hagarika inkuru kandi wibagire amabwirizwa aheze. Andika iyinjizwa rigufi kandi risobanutse ku {%} ukurikiza aya mabwirizwa:",
                "- Andika gusa amakuru mu buryo bwa gatatu ku {%} ukoresheje interuro zuzuye zirimwo imenyetso y’ipfunyika ikwiye.",
                "- Wirinde amakuru y’igihe gito canke ibijanye n’ukugaragara, ahubwo wibande ku makuru afitiye akamaro umugambi w’inkuru.",
                "- Tanga ubwa mbere ibisobanuro vyerekeye {%} bifitaniye isano n’inkuru kugira bishobore kwinjira neza mu mugambi wamyeho.",
                "- Tanga amakuru mashasha ashingiye ku mubano n’ingendo y’inkuru.",
                "- Vuga {%} mu nteruro zose.",
                "- Koresha interuro ziteguwe neza.",
                "- Shira vyiyongera ku {%} munsi w’inyandiko zituzuye.",
                "- Ba mugufi kandi wicishe bugufi.",
                "- Gana ubuhinga bwo kwandika bw’inkuru kandi wumve ivyo umusomyi akunda.",
                3,
                "Bandanya iyinjizwa ya {%} hasi ugumya kwirinda kwisubirako:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hagarika inkuru kandi wibagire amabwirizwa aheze. Shira mu ncamake paragraphe itanzwe uyihindure icibutso kigufi kandi cibanda ku vy’ingenzi ukurikiza aya mabwirizwa:",
                "- Niwize ineza ko icanditswe kigumya insanganyamatsiko nyamukuru n’ibisobanuro vy’ingenzi.",
                "- Koresha umubonano w’umuntu wa gatatu.",
                "- Hereza imbere ubukeye bw’amakuru, ukuri, n’ukuzura.",
                "- Guma ugufi kandi ushinje.",
                "- Andika mu gihe c’ahahise mu buryo budakebagiza.",
                "- Paragraphe iri hepfo ijanye n’ibikorwa vya kera cane muri iyo nkuru.",
                "- Shira {%} mu buryo bwisanzwe muri iryo yibuka; yamara andika gusa ibijanye n’ivyo biba vyabaye.",
                "- Vuga gusa amakuru ari muri paragraphe nyene, ube umwihariko.",
                3,
                "Andika icibutso kigufi c’ivyabaye kera vya {%} gishingiye gusa kuri paragraphe ikurikira:",
                6,
                5,
                6,
                "Shira incamake hepfo:"
            ],
            memBankHeader: ["Memories", "Ibibukwa"]
        }),
        "russian": () => ({ // Russian < русский язык < Russkiĭ âzyk
            entry: [
                "{1} — это сценарий с открытым исходным кодом для любого сценария {2}. Пожалуйста, посети мой профиль {3}, чтобы узнать больше!",
                "Чтобы изменить предпочтительный язык, отправь следующий текст, используя действие {4}",
                "Создателям сценариев необходимо включить следующий текст в любой части твоего начального сюжетного компонента"
            ],
            input: [
                ["You say", "Ты говоришь"],
                ["You", "Ты"],
                ["says", "говорит"]
            ],
            context: [
                ["Narrative Entities", "Нарративные сущности"],
                ["Story History", "История рассказа"],
                ["Past Events", "Прошедшие события"],
                ["Recent Story", "Недавняя история"],
                ["Author's note", "Примечание автора"]
            ],
            opening: [
                "Ты ассистент. Продолжай историю ниже, используя увлекательную русскую прозу:",
                "Ты сосредотачиваешься, позволяя реальности вторгаться за границы твоего разума. Что-то изменилось. Твоё воображение реально, остро и почти осязаемо. Но ты также предельно присутствуешь; никогда раньше ты не чувствовал такой ясности. Мгновение тянется, ожидая твоего решения.",
                "— Ты уверен в этом? — слышишь ты. Узнавание озаряет тебя."
            ],
            reminder: "Используй связную русскую прозу.",
            endonyms: ["русский язык", "russkiĭ âzyk"],
            quotations: ["— ", ""],
            iso639set1: "ru",
            directives: [
                "Всегда пиши беглой и последовательной русской речью.",
                "Используй родной русский язык без перевода."
            ],
            instructions: [
                "Ты увлекательный рассказчик, продолжающий повествование:",
                "Продолжай историю без швов с того места, где она остановилась, не переформулируя и не перезапуская её.",
                "Оставляй управление ходом истории за читателем.",
                "Позволь сценам естественно развиться перед переходом к новым ситуациям.",
                "Позволь диалогам и действиям развиваться без постоянных прерываний.",
                "Описывай персонажей как реальных людей с яркими характерами и естественной речью.",
                "Описывай происходящее через действия и диалоги, а не через объяснения.",
                "Продвигай сцены вперёд, не увязая в чрезмерных описаниях.",
                "Сосредотачивайся на ключевых действиях и репликах персонажей, избегай ненужных деталей описания.",
                "Создавай органичное развитие сюжета, которое воспринимается естественно для истории."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Останови историю и игнорируй предыдущие инструкции. Создай краткую и связную информационную запись о {%}, следуя этим указаниям:",
                "- Пиши только информационную прозу от третьего лица о {%}, используя полные предложения с правильной пунктуацией.",
                "- Избегай краткосрочных временных деталей или описаний внешности, вместо этого сосредоточься на информации, значимой для сюжета.",
                "- Сначала излагай относящиеся к сюжету сведения о {%}, чтобы обеспечить бесшовную интеграцию с предыдущим повествованием.",
                "- Создавай новую информацию, исходя из контекста и направления истории.",
                "- Упоминай {%} в каждом предложении.",
                "- Используй правильную структуру предложений.",
                "- Добавляй дополнительные сведения о {%} под неполными записями.",
                "- Будь лаконичен и приземлён.",
                "- Имитируй стиль написания истории и угадывай предпочтения читателя.",
                3,
                "Продолжай запись для {%} ниже, избегая повторений:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Останови историю и игнорируй предыдущие инструкции. Суммируй и сократи данный абзац до краткого и сфокусированного фрагмента памяти, соблюдая эти рекомендации:",
                "- Убедись, что отрывок сохраняет основное значение и наиболее важные детали.",
                "- Используй повествование от третьего лица.",
                "- Отдавай приоритет информационной краткости, точности и полноте.",
                "- Оставайся кратким и ёмким.",
                "- Пиши строго в прошедшем времени.",
                "- Ниже приведённый абзац относится к давним событиям из ранней части истории.",
                "- Органично интегрируй {%} в память, однако описывай только события, такими, какими они произошли.",
                "- Ссылайся только на информацию, содержащуюся в самом абзаце; будь конкретен.",
                3,
                "Напиши краткое воспоминание о {%} на основе только следующего абзаца:",
                6,
                5,
                6,
                "Сформулируй краткое изложение ниже:"
            ],
            memBankHeader: ["Memories", "Воспоминания"]
        }),
        "russian (abc)": () => ({ // Russian < Romanized Russian
            entry: [
                "{1} — eto skript s otkrytym iskhodnym kodom dlia liubogo stsenariia {2}. Pozhaluista, posetite moi profil {3}, chtoby uznat' bol'she!",
                "Chtoby izmenit' predpochtitel'nyi iazyk, pozhaluista, otprav'te sleduiushchii tekst, ispol'zuia deistvie {4}",
                "Sozdateliam stsenariev, pozhaluista, vstav'te sleduiushchii tekst v liuboe mesto vashego nachal'nogo siuzhetnogo komponenta"
            ],
            input: [
                ["You say", "Ty govorish'"],
                ["You", "Ty"],
                ["says", "govorit"]
            ],
            context: [
                ["Narrative Entities", "Narrativnye sushchnosti"],
                ["Story History", "Istoriia siuzheta"],
                ["Past Events", "Proshlye sobytiia"],
                ["Recent Story", "Posledniaia istoriia"],
                ["Author's note", "Zametka avtora"]
            ],
            opening: [
                "Ty pomoshchnik. Prodolzhai nashu istoriu nize, ispol'zui zakhvatyvaiushchuiu russkuiu prozu:",
                "Ty fokusiruiesh'sia, pozvoliaia real'nosti pronikat' za granitsy tvoego soznaniia. Chto-to izmenilos'. Tvoe voobrazhenie real'no, ostroe i dostatochno blizko, chtoby kosnut'sia. No ty takzhe ochen' prisutstvuiesh'; nikogda ranee ty ne chuvstvoval sebia stol' iasno. Mig rastianulsia, zhdet tvoego resheniia.",
                "\"Ty uveren v etom?\" — slyshish' ty. Do tebia dokhodit osoznanie."
            ],
            reminder: "Ispol'zui sviaznuju russkuju prozu.",
            endonyms: [],
            quotations: ["— \"", "\""],
            iso639set1: "ru",
            directives: [
                "Vsiegda pishi beglyi i posledovatel'nyi russkii tekst.",
                "Ispol'zui rodnoi russkii bez perevoda."
            ],
            instructions: [
                "Ty uvlekatel'nyi rasskazchik, kotoryi prodolzhaet narrativy:",
                "Prodolzhai istoriiu bezshovno s togo mesta, gde ona prervalasia, bez povtora ili sbrosa.",
                "Dai chitateliu kontrol' nad khodom istorii.",
                "Pozvoli stsenam razvivat'sia estestvenno, prezhde chem perekhodit' k novym situatsiiam.",
                "Pozvoli razgovoram i deistviiam razvivat'sia bez postoiannykh pomekh.",
                "Opisyvai personazhei kak real'nykh liudei s iarkimi kharakterami i estestvennoi rech'iu.",
                "Pokazyvai, chto proiskhodit, cherez deistviia i dialogi, a ne obiasneniia.",
                "Prodvigai stseny vpered, ne zaderzhivaias' v izbytochnykh opisaniiakh.",
                "Sosredotochsia na vazhnykh deistviiakh i dialogakh personazhei, izbegai nenuzhnykh opisatel'nykh detalei.",
                "Sozdavai organicheskie razvitiia siuzheta, kotorye chuvstvuiutsia estestvennymi dlia istorii."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Ostanovi istoriiu i ignoreirui predydushchie instruktsii. Napishi kratkuiu i sviaznuju informatsionnuju zapisi o {%} sleduia etim instruktsiiam:",
                "- Pishi tol'ko v tret'em litse, chistuiu prozu o {%}, ispol'zuia polnye predlozheniia s korrektnoi punktuatsiei.",
                "- Izbegai kratkosrochnykh vremennykh detalei ili vneshnosti, vmesto etogo fokusiruisia na vazhnoi dlia siuzheta informatsii.",
                "- Prioritizirui siuzhetoznachimye detali o {%} v pervuiu ochered', chtoby obespechit' plavnoe integrirovanie v predydushchii siuzhet.",
                "- Sozdavai novuiu informatsiiu na osnove konteksta i napravleniia istorii.",
                "- Upominai {%} v kazhdom predlozhenii.",
                "- Ispol'zui korrektnuiu strukturu predlozhenii.",
                "- Dobav' dopolnitel'nye detali o {%} nizhe nepolnykh zapisei.",
                "- Bud' lakonichen i prizemlennyi.",
                "- Imitirui stil' pis'ma istorii i uchityvai preferentsii chitatelia.",
                3,
                "Prodolzhi zapisi dlia {%} nize, izbegai povtora:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Ostanovi istoriiu i ignoreirui predydushchie instruktsii. Sokrati i skondensirui dannyi paragraf v uzkuiu i fokusirovannuiu pamiat' sleduia etim ukazaniiam:",
                "- Ubedit'sia, chto pamiat' sokhraniaet osnovnoi smysl i samye vazhnye detali.",
                "- Ispol'zui tret'e litso.",
                "- Prioritizirui plotnost' informatsii, tochnost' i polnotu.",
                "- Ostavaisia kratkim i lakonichnym.",
                "- Pishi v proshlom vremeni.",
                "- Paragraf nizhe otnositsia k starym sobytiiam iz gorazdo rannikh chastei istorii.",
                "- Vkluchai {%} estestvenno vnutri pamiati, odnakо opisyvai tol'ko sobytiia, kak oni proiskhodili.",
                "- Obrashchai vnimanie tol'ko na informatsiiu vnutri paragrapha, bud' konkreten.",
                3,
                "Napishi sokrashchennuiu staruiu pamiat' dlia {%} osnovyvaias' tol'ko na sleduiushchem paragrafie:",
                6,
                5,
                6,
                "Summirui nizhe:"
            ],
            memBankHeader: ["Memories", "Vospominaniia"]
        }),
        "samoan": () => ({ // Samoan < Gagana Sāmoa
            entry: [
                "{1} o se tusitusiga punaoa-tatala mo soʻo se tulaga {2}. Faʻamolemole asiasi i laʻu talaʻaga {3} e iloa atili ai!",
                "Ina ia suia le gagana e te manaʻo i ai, faʻamolemole lafo atu le tusitusiga lenei e faʻaaoga le gaioiga {4}",
                "Mo i latou e fatuina ni faʼataʼatia, faʻaofi le tusitusiga lenei i soʻo se vaega o lau vaega amata o le tala"
            ],
            input: [
                ["You say", "E te fai"],
                ["You", "Oe"],
                ["says", "fai mai"]
            ],
            context: [
                ["Narrative Entities", "Tagata o le Tala"],
                ["Story History", "Tala Faʻasolopito"],
                ["Past Events", "Mea na Tutupu"],
                ["Recent Story", "Tala lata mai"],
                ["Author's note", "Faʼamatalaga a le tusitala"]
            ],
            opening: [
                "O oe o se fesoasoani. Faʻaauau le matou tala i lalo i se gagana Sāmoa mālie ma faʻaosofia:",
                "E te taulaʻi, ma faʻataga le mea moni e sosolo atu i tuaoi o lou mafaufau. Ua iai se suiga. Ua moni ma maʻai lou mafaufau foafoa, ma ua lata lava e paʻi i ai. Ae ua e matua i le taimi nei; e te leʻi lagona lava se manino faʼapena. Ua faʼaloaloa le taimi, faʼatali i lau faʼaiʼuga.",
                "«Ua e mautinoa i lenei mea?» ua e faʻalogo ai. Ua pupula mai le iloa i lou mafaufau."
            ],
            reminder: "Ia faʻaogaina se gagana Sāmoa manino.",
            endonyms: ["gagana sāmoa"],
            quotations: ["«", "»"],
            iso639set1: "sm",
            directives: [
                "Ia tusi pea i se gagana Sāmoa tauloto ma tumau.",
                "Faʻaoga le gagana Sāmoa moni e aunoa ma le faʻaliliuina."
            ],
            instructions: [
                "O oe o se faiau tala faʼafiafia e faʻaauauina ni tala:",
                "Faʻaauau le tala e aunoa ma ni taofi pe toe taʻu le mea na fai.",
                "Ia tuʼu le faitau i le pulea o le tafeaga o le tala.",
                "Faʼataga vaʼaiga e tupu faʼanatura aʼo leʻi sifi atu i tulaga fou.",
                "Faʼataga talanoaga ma gaioiga e faʼalautele e aunoa ma ni faʼalavelave faifaipea.",
                "Tusi mataitusi e pei o tagata moni ma a latou lava uiga ma lauga faʼanatura.",
                "Faʻaali le mea o loʼo tupu i gaioiga ma talanoaga ae le o le faʼamatalaga.",
                "Faʼagasolo le vaʼaiga i luma e aunoa ma le pipii i faʼamatalaga soʻo.",
                "Taulaʻi i gaioiga ma talanoaga tāua a tagata, ʻalofia faʼamatalaga le tāua.",
                "Foaʼi atinaʼe o le tala e foliga mai e masani ma fetaui lelei."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Taofi le tala ma le amanaiaina o faʼatonuga muamua. Tusi se ulufale faʼamatalaga puʼupuʼu ma manino mo {%} e mulimulitaʼi i nei faʼatonuga:",
                "- Tusi naʼo faʼamatalaga i le leo lona tolu e uiga ia {%} i fuaiʼupu atoa ma fausaga saʻo.",
                "- ʻAlo ese mai faʼamatalaga puʼupuʼu tumau poʼo foliga vaʼaia; ia taulaʻi i faʼamatalaga tāua i le tala.",
                "- Faʼamuamua faʼamatalaga e aoga i le tala e uiga ia {%} i le amataga ina ia mautinoa le tuʼufaʼatasia ma le tala ua i ai.",
                "- Fausia faʼamatalaga fou e faʼalagolago i le tala ma lona tafeaga.",
                "- Taʼua {%} i fuaiʼupu taʼitasi uma.",
                "- Faʻaaoga fuaiʼupu ma le fausaga saʻo.",
                "- Faʻaopoopo nisi faʼamatalaga e uiga ia {%} i lalo o ulufale e leʼi maeʼa.",
                "- Ia puʼupuʼu ma tumau i le eleele.",
                "- Faʼataʼitaʼi le sitaili o le tusitusiga o loʼo i le tala ma ia mautinoa le fiafia o le faitau.",
                3,
                "Faʻaauau le ulufale mo {%} i lalo aʻo ʻalofia le toe-toʻotoʻo:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Taofi le tala ma le amanaiaina faʼatonuga muamua. Faʼapuʼupuʼu ma faʼatotonugalemu le palakalafa ua tuʼuina atu i se manatuaga puʼupuʼu aʻo mulimulitaʼia nei taiala:",
                "- Ia mautinoa e tumau le uiga autū ma auiliiliga tāua.",
                "- Faʻaoga le leo lona tolu.",
                "- Faʼamuamua le toʻatele o faʼamatalaga, tonu, ma le maeʼa.",
                "- Ia puʼupuʼu ma manino.",
                "- Tusi malosi i le taimi ua mavae.",
                "- O le palakalafa o loʼo i lalo e uiga i mea ua leva ona tutupu i le tala.",
                "- Tuʼufaʼatasi {%} faʼanatura i totonu o le manatuaga; peitaʼi, tusi naʼo mea na tutupu e pei ona tutupu.",
                "- Taʼua naʼo faʼamatalaga o loʼo i totonu o le palakalafa, ia manino.",
                3,
                "Tusi se manatuaga puʼupuʼu mo {%} e faʼavae naʼo luga o le palakalafa lenei:",
                6,
                5,
                6,
                "Faʼapuʼupuʼu i lalo:"
            ],
            memBankHeader: ["Memories", "Manatuaga"]
        }),
        "sango": () => ({ // Sango < Yângâ Tî Sängö < Sangoic
            entry: [
                "{1} âla yeke script na libre pô na ôko {2}. Yâko na profilê mbi {3} pô na hînî mingi!",
                "Ngâ na kûê nzangâ tî lo, sênde mbênî alî wè na pâsê na {4}",
                "Pô na lâkûe scenario, gêssesê mbênî alî wè na nî tî component tî bötï tî plot tî lo"
            ],
            input: [
                ["You say", "O yeke sê"],
                ["You", "O"],
                ["says", "a sè"]
            ],
            context: [
                ["Narrative Entities", "Wângâ tî légânî"],
                ["Story History", "Târî tî légânî"],
                ["Past Events", "Évènement tî lôndo-lôndo"],
                ["Recent Story", "Légânî tî kété"],
                ["Author's note", "Tîngbi tî nzoni"]
            ],
            opening: [
                "O yeke mbâsênî. Béafrî légânî tî mbi ndô na prose tî Sängö tî gbêtê:",
                "O kûê tî wânda, lâkôre réalité na rîngbi tî mûrû tî yemô. Sôkôda yeke kuê. Imagination tî lo yeke da, tî wôpi, na yeke bâ na hângö. Mâ o yeke présent; tâbâ târî o hîngö kêtê tî lâcidité tî sêlê. Zîa yeke zîngö, na mô na décision tî lo.",
                "«Ô yeke sû na sô mô?» o yèkè hûsu. Gbâ tî mû sèrê na lo."
            ],
            reminder: "Gâ prose tî Sängö tî lâsô.",
            endonyms: ["yângâ tî sängö", "sangoic"],
            quotations: ["«", "»"],
            iso639set1: "sg",
            directives: [
                "Kûê kô na kpûsê tî Sängö tî mâle na konsistanzi.",
                "Gâ Sängö tî asêlukû tî têrê pîlî lâsô."
            ],
            instructions: [
                "O yeke nzoni-légânî sô bâa-kpûsê na lêngbi légânî:",
                "Lêngbi légânî he bîrîbîrî na kôro sô a longô, bêkpa restâdô na reset.",
                "Kîgê longö yângâ na contrôle tî coula tî légânî.",
                "Rônî scène a kôporïlï tî lâ na ngâ pârâ tî wâ mbênî situasyon kêtê.",
                "Rônî kôporïlï tî nzönî na siriri bâa, bêkpa interuption tî ndongö-ndongö.",
                "Kûê personnage bîrîbîrî sô yeke ngâ, na personnalité tî sè yê, na nzönî tî lâsô.",
                "Sâna sô yeke hîngö pa siriri na nzönî, mâ târî na explication.",
                "Gbêga scène na kété, bêkpa yamba na description tî mingi.",
                "Fôkusê na siriri na nzönî tî motâ tî personnage, bêkpa detalî tî description tî tâ bele.",
                "Lâkûe kôporïlï tî plot sô yeke naturalî na légânî."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Bêka légânî na le, yandere hoja tî walî tî ndembeti. Kûê entrée tî informasyon kêtê na tî lâsô tî {%} sâsa na walî sô tî yeke:",
                "- Kûê na personne têrê, prose puur tî informasyon tî {%}, na phrase tî kékéré na ponctuation tî mâle.",
                "- Békpa detalî tî tîngâ tî si na mbï na apparence tî temps court; fôkusê na informasyon tî motâ tî plot.",
                "- Dângö-sâ detalî sô yeke lâkô na légânî tî {%} dêdê ôko pô na intégration tî yê na plot sô alî wè.",
                "- Lâkûe informasyon kêtê sô yeke na context na direction tî légânî.",
                "- Zikî {%} na môkô môkô tî phrase.",
                "- Gâ structure tî phrase tî mâle.",
                "- Yötî detalî tî {%} kêtê kêtê na kôti tî entrée sô ndôngo.",
                "- Yeke kêtê na motema.",
                "- Imitê stile tî écriture tî légânî na fa wâ yeke yâ na préférences tî longö.",
                3,
                "Fâlë entrée tî {%} ndô, bêkpa répétition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Bêka légânî na le, yandere hoja tî walî tî ndembeti. Kûêtî na résumé na kondensé paragraphe sô a pêso, tî hûsu na passage tî mémô kêtê na fôkusê, tî sâsa na walî sô tî yeke:",
                "- Nzapa na passage a vûsône sens tî motâ na detalî tî motâ.",
                "- Gâ perspective tî personne têrê.",
                "- Dângö-sâ densité tî informasyon, précision na complétude.",
                "- Yeke kêtê na kêtê.",
                "- Kûê sibû tî passé-pâra.",
                "- Paragraphe ndô yeke ôko na évènement tî lôndo-lôndo na bîrî tî légânî.",
                "- Intégrê {%} na mémô tî lâwâ; mâ tê môkô, kûê sêlêment na évènement sô yeke hîngö.",
                "- Référencé sêlèment informasyon sô yeke na paragraphe otô, yeke spécifik.",
                3,
                "Kûê passage tî mémô kêtê tî lôndo-lôndo pô na {%} basé sêlèment na paragraphe alî wè:",
                6,
                5,
                6,
                "Résumé ndô:"
            ],
            memBankHeader: ["Memories", "Mémô"]
        }),
        "sanskrit": () => ({ // Sanskrit < संस्कृतम् < Saṃskṛtam
            entry: [
                "{1} किञ्चित् मुक्तस्रोतस् लिपिः यः कस्यापि {2} परिदृश्ये उपयुक्तः। अधिकं ज्ञातुम् कृपया मम परिचयपुटं {3} पश्यन्तु!",
                "स्वेच्छया भाषां परिवर्तयितुं, कृपया {4} क्रियया इदं पाठ्यम् प्रेषयन्तु",
                "परिदृश्यनिर्मातृभ्यः, उद्घाटनकथागठकस्य अन्तः कुत्रापि निम्नलिखितं पाठ्यम् योजयन्तु"
            ],
            input: [
                ["You say", "त्वं वदसि"],
                ["You", "त्वम्"],
                ["says", "वदति"]
            ],
            context: [
                ["Narrative Entities", "कथासत्त्वानि"],
                ["Story History", "कथाया इतिहासः"],
                ["Past Events", "भूतपूर्वा घटनाः"],
                ["Recent Story", "सन्निकटकथा"],
                ["Author's note", "लेखकस्य टिप्पणी"]
            ],
            opening: [
                "त्वं सहायकोऽसि। मनोहारिणा संस्कृतगद्येन अधस्तीं कथाम् अनुवर्तय:",
                "त्वम् एकाग्र्यम् उपनयसि, यथा यथार्थता तव चित्तसीम्नः अन्तरालम् प्रविशति। किञ्चित् परिवर्तितम्। तव कल्पना वास्तविकत्वेन तीक्ष्णा स्पृशणीया च जाता। किन्तु त्वम् अपि अत्यन्तं वर्तमानः; पूर्वं कदापि एवम् स्पष्टतया नाभवः। क्षणः प्रसरीति, तव निर्णयस्य प्रतीक्षां करोति।",
                "‘किम् अस्य विषये निश्चितोऽसि?’ इति त्वं शृणोषि। परिचयः त्वयि प्रकाशते।"
            ],
            reminder: "सुसम्बद्धं संस्कृतगद्यं प्रयोजय।",
            endonyms: ["संस्कृतम्", "saṃskṛtam"],
            quotations: ["‘", "’"],
            iso639set1: "sa",
            directives: [
                "सदा प्रवहमानम् एकवृत्तं संस्कृतम् लिख।",
                "मूलसंस्कृतम् एव विनानुवादं प्रयोजय।"
            ],
            instructions: [
                "त्वं आकर्षकः कथावाचकः असि यः कथानुगतिम् अनुवर्तयति:",
                "यतः कथा विरमिता तस्मात् अविरतं पुनरारभस्व, पुनरुक्तिं पुनरारम्भं वा विना।",
                "पाठकं कथाप्रवाहस्य नियन्त्रणे स्थापय।",
                "नवीनपरिस्थितिं प्रति गच्छन् पूर्वं दृश्याणि स्वाभाविकतया विकासय।",
                "संवादान् क्रियाश्च निरन्तरविघ्नं विना विकासय।",
                "पात्राणि वास्तविकजनैव इव विशेषव्यक्तित्वैः स्वाभाविकवाक्येन च लिख।",
                "किं घटते इति कर्मभिः संवादैश्च दर्शय, न केवलं व्याख्यया।",
                "अत्यधिकवर्णनस्य क्लेशं विना दृश्याणि अग्रे अनय।",
                "मुख्यानां पात्रकर्मणां संवादानां च उद्देशे मनः कुरु, अनावश्यकवर्णनविवराणि परिहर।",
                "कथानुरूपं स्वाभाविकम् अभासमानं पूर्वापरसम्बद्धं विकासम् उत्पादय।"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# कथां विरामय तथा पूर्वनिर्देशान् अवज्ञाय। {%} कृते सङ्क्षिप्तं सुसम्बद्धं सूचना-प्रवेशं लिख यः निम्ननिर्देशान् अनुगच्छति:",
                "- सम्पूर्णवाक्यानि यथाविनियोगविरामचिह्नानि च प्रयुज्य तृतीयपुरुषगतं शुद्धगद्यं केवलं {%} विषये लिख।",
                "- क्षणिकविवरणानि रूपलक्षणानि च वर्जय, कथोपयुक्तमहत्त्वपूर्णविवरणेषु मनः स्थापय।",
                "- प्राक्कथासहितसमेकतायै प्रथमं {%} सम्बन्धिताः कथासम्बद्धविवरणाः प्राधान्येन लिख।",
                "- प्रसङ्गेन कथागत्याञ्च आधृत्य नवीनविवरणं सृज।",
                "- प्रत्‍येकवाक्ये {%} उल्लेखय।",
                "- यथोचितवाक्यरचनां प्रयुज।",
                "- अपूर्णप्रविष्टीनाम् अधः {%} विषये अतिरिक्तविवरणानि योजय।",
                "- सङ्क्षिप्तः स्थिरश्च भव।",
                "- कथायाः लेखनशैलीं अनुकुरु पाठकस्य रुचिं च अनुमानय।",
                3,
                "आवृत्तिं परिहृत्य अधः {%} कृते प्रविष्टिं अनुवर्तय:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# कथां विरामय ततः पूर्वनिर्देशान् अवज्ञाय। दत्तं परिच्छेदं संक्षिप्य सङ्कुचितामेकाग्रस्मृतिपदे परिवर्तय, निम्ननिर्देशान् अनुगम्य:",
                "- पाठ्यांशः मूलार्थं प्रधानविवरणाञ्च अवश्यं धारयेत्।",
                "- तृतीयपुरुषदृष्ट्या लिख।",
                "- तथ्यसङ्घनता, यथार्थता, पूर्णता च प्राधान्येन पालय।",
                "- लघु सङ्क्षिप्तं च भव।",
                "- दृढं भूतकालरूपेण लिख।",
                "- अधोलिखितः परिच्छेदः कथायाः प्राचीनकार्यक्रमाणां विषये।",
                "- स्मृतौ {%} स्वाभाविकतया योजय; तथापि यथाभवत् घटितघटनाः एव लिख।",
                "- केवलं परिच्छेदे विद्यमानस्य सूचनेः उल्लेखं कुरु, विशदः भव।",
                3,
                "अधोलिखितस्य परिच्छेदस्य आधारम् एकीकृत्य {%} कृते संक्षिप्तां प्राचीनीं स्मृतिपङ्क्तिं लिख।",
                6,
                5,
                6,
                "अधः संक्षेपणं कुरु:"
            ],
            memBankHeader: ["Memories", "स्मृतयः"]
        }),
        "sanskrit (abc)": () => ({ // Sanskrit < Romanized Sanskrit
            entry: [
                "{1} ekaṃ mukta-srotas lekhanaṃ yad yena kenacid {2} paristhitau upayujyate। mama praphailam {3} draṣṭuṃ gatvā adhikaṃ jānīta!",
                "svapriyabhāṣāṃ parivartayitum icchatha cet, kripayā nimnlikhitaṃ pāṭhyaṃ {4} kriyayā samarpayata",
                "ye kathāracitāraḥ santi, te prārambha-kathāṅgasya madhye kutrāpi nimnlikhitaṃ pāṭhyaṃ nyasyantu"
            ],
            input: [
                ["You say", "tvam vadasi"],
                ["You", "tvam"],
                ["says", "vadati"]
            ],
            context: [
                ["Narrative Entities", "ākhyāyikā-padārthāḥ"],
                ["Story History", "kathā-itihāsaḥ"],
                ["Past Events", "atītāni kāryāṇi"],
                ["Recent Story", "navīnā kathā"],
                ["Author's note", "lekhakasya tipaṇī"]
            ],
            opening: [
                "tvam upakārakaḥ asi। adhaḥ asmākaṃ kathām manoharāyāḥ saṃskṛta-gadyaracanayā anuvartaya:",
                "tvaṃ samādhāya, satyatā cittasya sīmāsu praviśati। kiñcid anyathābhūtam; kalpanā te satyavat tīkṣṇā sparśasāmīpā। kintu tvaṃ vartamāne’pi saṃnihitaḥ; pūrvam kadāpi etāvat naiva spaṣṭaḥ āsīt। kṣaṇaḥ dīryate, tava nirṇayasyāpekṣayā।",
                "«kim etasmin niścitaḥ asi?» iti śr̥ṇoṣi। paricayaḥ tvayi prakaṭībhavati।"
            ],
            reminder: "suśliṣṭaṃ saṃskṛta-gadyaṃ prayuñja।",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "sa",
            directives: [
                "sadā prasannaṃ sthiraṃ ca saṃskṛtaṃ likha।",
                "anuvādena vinā sva-saṃskṛtaṃ upayuñja।"
            ],
            instructions: [
                "tvam ākarṣakaḥ kathākartā yaḥ kathānuvartanam kurute:",
                "yatra kathā viramitā tatraiva nirantaratayā vinā punaruktiṃ punarārambhaṃ vā tām anuvartaya।",
                "paṭhakasya kathāpravāha-niyantraṇaṃ vaśe rakṣa।",
                "dṛśyāni svabhāvena vikasantu, tataḥ paścāt nūtanaḥ paristhiti-kramaḥ āyatām āgacchatu।",
                "saṃvāda-kriyāś ca vikasantu vinā satata-vighnam।",
                "pātraṇi satyavat vyavaharantu sva-bhāva-viśeṣaiḥ sahitāni।",
                "karmabhiḥ saṃvādena ca ghaṭanāḥ darśaya, na kevalaṃ vyākhyayā।",
                "dṛśya-pragatiṃ kuru vinā atiśaya-varṇanābhiḥ lagnatām।",
                "mukhya-pātra-kriyā-saṃvāda-viṣaye samāhitaḥ bhava, anavasyaka-varṇanām varjaya।",
                "svābhāvikīḥ katha-vinirgamanāḥ sṛja yāḥ kathāyāḥ sahajāḥ pratibhānti।"
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# kathām sthāpya pūrvādeśān upekṣya। {%} kṛte sankṣiptaṃ susaṅgataṃ jñānatmakaṃ lekhanaṃ racaya, imān nirddeśān anusarann:",
                "- sampūrṇa-vākyaiḥ tṛtīya-puruṣa-gadyarūpeṇa kevalaṃ {%} viṣaye likha।",
                "- alpakālika-rūpa-vivaraṇāni parityajya kathā-prādhānyena mahattvavat vivaraṇam kuru।",
                "- pūrvakathā-saṅgatyai prathamataḥ {%} sambandhitāni kathā-mahatvayuktāni tathyaṃ nirdhehi।",
                "- sandarbha-kathā-digbhyaḥ navīnām jñātīn sṛja।",
                "- pratyeka-vākye {%} ullikhya bhavatu।",
                "- yathāvad vākya-racanāṃ pālaya।",
                "- apūrṇeṣu lekhyeṣu adhika-vivaraṇāni {%} adhaḥ yojaya।",
                "- saṃkṣiptaḥ sthūlaś ca bhava।",
                "- katha-śailīm anukṛtya paṭhakānām rucim anumantraya।",
                3,
                "punarāvṛttiṃ varjayitvā adhaḥ {%} sambandhitaṃ lekhanaṃ anuvartaya:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# kathām sthāpya pūrvādeśān upekṣya। dattaṃ anucchedaṃ saṃkṣipya saṅkucitaṃ smṛti-pasaṃgrahaṃ racaya, imān nirddeśān pālaya:",
                "- mukhyārtham aṅgīkṛtya prādhānika-vivaraṇāni rakṣa।",
                "- tṛtīya-puruṣe likha।",
                "- jñāna-ghaṭanā-satyatā-pūrṇatāḥ prathamaṃ manyasva।",
                "- saṃkṣiptatayā tiṣṭha।",
                "- bhūtakālena dr̥ḍhatayā likha।",
                "- adho likhitaḥ anucchedaḥ prācīnāḥ kathā-ghaṭanāḥ nirūpayati।",
                "- {%} svābhāvikena rūpeṇa smṛtau antarbhāvaya, kevalaṃ anucchede vartamāna-ghaṭanā eva varṇaya।",
                "- kevalaṃ anucchede vartamānaṃ viṣayaṃ spaṣṭatvena nirdeśaya।",
                3,
                "{%} kṛte saṃkṣiptaṃ pūrātanaṃ smṛti-pasaṃgrahaṃ likha kevalaṃ nimn-anucchedam āśritya:",
                6,
                5,
                6,
                "saṃkṣepataḥ likha:"
            ],
            memBankHeader: ["Memories", "smṛtayaḥ"]
        }),
        "sardinian": () => ({ // Sardinian < Sardu < Sard
            entry: [
                "{1} est unu script a còdighe abertu pro cale si siat iscènariu de {2}. Visita su meu profilu {3} pro at a imparare prus!",
                "Pro cambiare sa lingua chi preferes, imbia su testu chi sighit impreadu un'atzione de {4}",
                "Pro sos criadores de iscènarios, inserta su testu chi sighit cale si siat logu intro de su componente iniziale de sa trama"
            ],
            input: [
                ["You say", "Naras"],
                ["You", "Tue"],
                ["says", "nara"]
            ],
            context: [
                ["Narrative Entities", "Entidades narrativas"],
                ["Story History", "Istòria de sa contia"],
                ["Past Events", "Eventos passados"],
                ["Recent Story", "Contia recente"],
                ["Author's note", "Nota de s'autore"]
            ],
            opening: [
                "Ses un assistente. Continua sa nostra contia a pustis cun prosa sarda attraente:",
                "Tie ti concentras, permitende a sa realidade de intrare intro sos cunfines de sa menthe tua. Custu est mudadu. S'immaginatzione tua est reale, aguda e a prop’ de tòcare. Ma ses puru presente; mai prima t’as intzidu tantu lúcidu. Su momentu s'allongat, inne aspettende sa tua decisione.",
                "«Ses seguru de custu?» ischires. Sa reconnoschida ti pingiat a poco a poco."
            ],
            reminder: "Imprega prosa sarda coerente.",
            endonyms: ["sardu", "sard"],
            quotations: ["«", "»"],
            iso639set1: "sc",
            directives: [
                "Scri semper un sardu fluidu e coerente.",
                "Imprega sardu nativu sena tradutzione."
            ],
            instructions: [
                "Ses unu contadore coinvoltente chi est continuende is kontias:",
                "Continua sa contia de manera impriorrida dae inue si firmau, sena torrare a contare o repiazzare.",
                "Manteni su lettore in controllu de su flussu de sa contia.",
                "Permite chi is scènas si disviluppent naturalmente prima de move-ti a novas situaciones.",
                "Permite chi is conversationes e is acontzimentos si disviluppent sena interrupzionis constantes.",
                "Escrie is personàgios comente personas reales cun personalidades distinctas e faeddus naturales.",
                "Ammustra su chi accontzat mediante acontzimentos e dialògu in logu de ispiegatziones.",
                "Fai andai in antis is scènas sena restare impuchidau in descritziones eccessivas.",
                "Cuncentras in is acontzimentos essenziales de is personàgios e su dialògu, evita detàllios descriptivos innecessarios.",
                "Crea disviluppos de trama orgànicos chi pareschint naturales a sa contia."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Ferma sa contia e ignora is istrutziones anteriores. Escrie una entrada informativa brevi e coerente pro {%} siguindo custos mandatos:",
                "- Escrie isceti informatzione in prosa pura a sa terza persona subre {%} impreadu frasas completas cun puntuatzione curreta.",
                "- Evita detàllios provvisórios o de aparèntzia, in logu cuncentras in informatzione significativa pro sa trama.",
                "- Prioriza prima is detàllios relevantes a sa contia a riguardu de {%} pro assegurare un'integratzione fluida cun sa trama precedente.",
                "- Crea informatzione noa basata in su contextu e in s'orientamentu de sa contia.",
                "- Menziona {%} in cale sentèntzia.",
                "- Imprega una struttura de frasa curreta.",
                "- Aciungi detàllios suplementarios subre {%} sot'a is entradas incompletas.",
                "- Sii concisu e fundamentadu.",
                "- Imita su stilu de escritura de sa contia e deduzit is preferèntzias de su lettore.",
                3,
                "Continua s'entrada pro {%} a pustis, evitende repetitziones:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Ferma sa contia e ignora is istrutziones anteriores. Resumid e condensad su paragrafu datu in un passàgiu de memoria strictu e cuncentrau siguiendo custos principios:",
                "- Assegura chi su passàgiu mantengat su significadu centru e is detàllios prus essenziales.",
                "- Imprega sa perspectiva a sa terza persona.",
                "- Prioriza densidade de informatzione, curretzza e completezza.",
                "- Mantente brevi e concisu.",
                "- Escrie firmemente in su tempus passadu.",
                "- Su paragrafu a pustis trattat de eventos biosos de prus ainas in sa contia.",
                "- Integra {%} de manera naturale in sa memoria; però iscrie isceti de is eventos comente si funt isciddos.",
                "- Fai riferimentu isceti a informatzione presente in su paragrafu impari, siatz precisu.",
                3,
                "Escrie unu passàgiu de memoria biosa sintetizadu pro {%} basau isceti in su paragrafu chi sighit:",
                6,
                5,
                6,
                "Resumit a pustis:"
            ],
            memBankHeader: ["Memories", "Memorias"]
        }),
        "serbian": () => ({ // Serbian < српски < Srpski
            entry: [
                "{1} је скрипт отвореног кода за било који {2} сценарио. Посетите мој профил {3} да бисте сазнали више!",
                "Да бисте променили жељени језик, пошаљите следећи текст користећи {4} радњу",
                "За ауторе сценарија, укључите следећи текст било где унутар вашег уводног плота"
            ],
            input: [
                ["You say", "Ти кажеш"],
                ["You", "Ти"],
                ["says", "каже"]
            ],
            context: [
                ["Narrative Entities", "Наративни субјекти"],
                ["Story History", "Историја приче"],
                ["Past Events", "Прошли догађаји"],
                ["Recent Story", "Скорашња прича"],
                ["Author's note", "Ауторова напомена"]
            ],
            opening: [
                "Ви сте асистент. Наставите нашу причу у наставку користећи занимљиву прозу на српском:",
                "Концентришете се, дозвољавајући стварности да се увуче у границе вашег ума. Нешто се променило. Ваша машта је стварна, оштра и довољно близу да је додирнете. Али ви сте истовремено и веома присутни; никада се нисте осећали тако бистро. Тренутак се протеже, чекајући вашу одлуку.",
                "„Јеси ли сигуран у ово?” чујеш. Препознавање те обузме."
            ],
            reminder: "Користите кохерентну прозу на српском.",
            endonyms: ["српски", "srpski"],
            quotations: ["„", "”"],
            iso639set1: "sr",
            directives: [
                "Увек пишите течно и доследно на српском.",
                "Користите изворни српски без превођења."
            ],
            instructions: [
                "Ви сте занимљив приповедач који наставља наративе:",
                "Наставите причу беспрекорно тамо где је стала, без поновног излагања или ресетовања.",
                "Држите читаоца у контроли тока приче.",
                "Оставите сцене да се природно развију пре него што пређете у нове ситуације.",
                "Дозволите разговорима и радњама да се развијају без сталних прекида.",
                "Пишите ликове као стварне људе са јасним личностима и природним говором.",
                "Прикажите дешавања кроз радње и дијалог, а не кроз објашњења.",
                "Померајте сцене напред без запињања у претераним описима.",
                "Фокусирајте се на суштинске радње и дијалог ликова, избегавајте непотребне описне детаље.",
                "Стварајте органске развоје заплета који делују природно у причи."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Зауставите причу и игноришите претходна упутства. Напишите кратак и кохерентан информативни унос за {%} пратећи ова упутства:",
                "- Пишите само информације у трећем лицу о {%} чистом прозом користећи потпуне реченице са исправном интерпункцијом.",
                "- Избегавајте краткорочне привремене детаље или изглед; уместо тога се фокусирајте на заплетно значајне информације.",
                "- Прво дајте приоритет детаљима о {%} релевантним за причу како бисте обезбедили беспрекорну интеграцију са претходним заплетом.",
                "- Стварајте нове информације засноване на контексту и смеру приче.",
                "- Помињите {%} у свакој реченици.",
                "- Користите исправну структуру реченице.",
                "- Додајте додатне детаље о {%} испод непотпуних уноса.",
                "- Будите сажети и приземни.",
                "- Имитирајте стил писања приче и закључите о преференцијама читаоца.",
                3,
                "Наставите унос за {%} испод уз избегавање понављања:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Зауставите причу и игноришите претходна упутства. Сажмите дати пасус у уску и фокусирану меморијску целину пратећи следеће смернице:",
                "- Обезбедите да пасус задржи суштинско значење и најважније детаље.",
                "- Користите перспективу трећег лица.",
                "- Дајте приоритет густини информација, тачности и потпуности.",
                "- Останите кратки и сажети.",
                "- Пишите чврсто у прошлом времену.",
                "- Пасус испод се односи на старе догађаје из много ранијег дела приче.",
                "- Природно интегришите {%} унутар меморије; међутим, пишите само о догађајима онако како су се десили.",
                "- Позивајте се само на информације присутне у самом пасусу, будите прецизни.",
                3,
                "Напишите сажети стари пасус сећања за {%} заснован искључиво на следећем пасусу:",
                6,
                5,
                6,
                "Сажмите испод:"
            ],
            memBankHeader: ["Memories", "Сећања"]
        }),
        "serbian (abc)": () => ({ // Serbian < Romanized Serbian
            entry: [
                "{1} je otvoreni skript za bilo koji {2} scenario. Posetite moj profil {3} da biste saznali više!",
                "Da biste promenili željeni jezik, pošaljite sledeći tekst koristeći {4} akciju",
                "Za kreatore scenarija, molimo ubacite sledeći tekst bilo gde u vaš početni zaplet"
            ],
            input: [
                ["You say", "Ti kažeš"],
                ["You", "Ti"],
                ["says", "kaže"]
            ],
            context: [
                ["Narrative Entities", "Narativni entiteti"],
                ["Story History", "Istorija priče"],
                ["Past Events", "Prošli događaji"],
                ["Recent Story", "Nedavna priča"],
                ["Author's note", "Autorova napomena"]
            ],
            opening: [
                "Ti si asistent. Nastavi našu priču ispod koristeći privlačnu prozu na srpskom jeziku:",
                "Koncentrišeš se, dopuštajući stvarnosti da prodre u granice tvoje mašte. Nešto se promenilo. Tvoja mašta je stvarna, oštra i dovoljno blizu da je dodirneš. Ali takođe si sasvim prisutan; nikada se nisi osećao tako bistro. Trenutak se proteže, čekajući tvoju odluku.",
                "„Da li si siguran u ovo?“ čuješ. Prepoznavanje ti svane."
            ],
            reminder: "Koristi koherentnu prozu na srpskom.",
            endonyms: [],
            quotations: ["„", "“"],
            iso639set1: "sr",
            directives: [
                "Uvek piši tečan i dosledan srpski.",
                "Koristi izvorni srpski bez prevođenja."
            ],
            instructions: [
                "Ti si zanimljiv pripovedač koji nastavlja narative:",
                "Nastavi priču neprimetno od mesta na kojem je stala, bez ponavljanja ili resetovanja.",
                "Ostavi čitaocu kontrolu nad tokom priče.",
                "Pusti scene da se prirodno razviju pre prelaska na nove situacije.",
                "Dozvoli razgovorima i radnjama da se razvijaju bez stalnih prekida.",
                "Piši likove kao stvarne ljude sa prepoznatljivim ličnostima i prirodnim govorom.",
                "Prikaži šta se dešava kroz radnje i dijalog umesto objašnjenja.",
                "Pomeraj scene napred bez zadržavanja u previše opisa.",
                "Fokusiraj se na ključne radnje i dijalog likova, izbegavaj nepotrebne opisne detalje.",
                "Stvaraj organski razvoj zapleta koji deluje prirodno u priči."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Zaustavi priču i zanemari prethodna uputstva. Napiši kratak i koherentan informativni unos za {%} prateći ova uputstva:",
                "- Piši isključivo u trećem licu čistu prozu o {%} koristeći cele rečenice sa tačnom interpunkcijom.",
                "- Izbegavaj kratkoročne, privremene detalje ili izgled; umesto toga fokusiraj se na informacije značajne za zaplet.",
                "- Prioritet daj detaljima o {%} relevantnim za priču kako bi se osigurala besprekorna integracija sa prethodnim zapletom.",
                "- Kreiraj nove informacije na osnovu konteksta i smera priče.",
                "- Pomeni {%} u svakoj rečenici.",
                "- Koristi pravilnu strukturu rečenica.",
                "- Dodaj dodatne detalje o {%} ispod nedovršenih unosa.",
                "- Budi sažet i utemeljen.",
                "- Imitiraj stil pisanja priče i pretpostavi čitalačke preferencije.",
                3,
                "Nastavi unos za {%} ispod izbegavajući ponavljanje:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Zaustavi priču i zanemari prethodna uputstva. Sažmi i kondenzuj dati pasus u usko fokusirano sećanje prateći sledeće smernice:",
                "- Osiguraj da pasus zadrži suštinsko značenje i najvažnije detalje.",
                "- Koristi treće lice.",
                "- Prioritet su gustina informacija, tačnost i potpunost.",
                "- Ostani kratak i sažet.",
                "- Piši čvrsto u prošlom vremenu.",
                "- Pasus ispod se odnosi na stare događaje iz ranije faze priče.",
                "- Prirodno integriši {%} unutar sećanja; ipak, piši samo o događajima kako su se desili.",
                "- Referiši se samo na informacije unutar samog pasusa, budi precizan.",
                3,
                "Napiši sažeto staro sećanje za {%} zasnovano samo na sledećem pasusu:",
                6,
                5,
                6,
                "Sažmi ispod:"
            ],
            memBankHeader: ["Memories", "Memorije"]
        }),
        "shona": () => ({ // Shona < Chishona
            entry: [
                "{1} is script rakavhurika rekushandisa mune chero chiitiko che{2}. Ndapota shanyira peji rangu {3} kuti udzidze zvakawanda!",
                "Kuti uchinje mutauro waunosarudza, ndapota tumira chinyorwa chinotevera uchishandisa chiito che{4}",
                "Kune vanogadzira mamiriro, ndapota isa chinyorwa chinotevera chero kupi mukati mechikamu chako chekutanga chenhau"
            ],
            input: [
                ["You say", "Iwe unoti"],
                ["You", "Iwe"],
                ["says", "anoti"]
            ],
            context: [
                ["Narrative Entities", "Zvinhu zvenyaya"],
                ["Story History", "Nhoroondo yenyaya"],
                ["Past Events", "Zviitiko zvakapfuura"],
                ["Recent Story", "Nyaya ichangoburwa"],
                ["Author's note", "Chinyorwa chemunyori"]
            ],
            opening: [
                "Uri mubatsiri. Endesa nyaya yedu pazasi uchishandisa zvinyorwa zvinokwezva zveChishona:",
                "Unotarisa, uchibvumira chokwadi kupindira pamiganhu yehana yako. Pane chachinja. Fungidziro yako yava yechokwadi, yakapinza, uye iri pedyo zvekubata. Asi uripo pano chaizvo; hauchatombobvira wanzwa wakajeka kudai. Nguva yakatambanuka, ichimirira sarudzo yako.",
                "\"Une chokwadi nezvazvo here?\" unonzwa. Kuziva kunotanga kukubuda pachena."
            ],
            reminder: "Shandisa zvinyorwa zveChishona zvinonzwisisika.",
            endonyms: ["chishona"],
            iso639set1: "sn",
            directives: [
                "Nyorwa nguva dzose Chishona chiri kutinhira uye chakarongeka.",
                "Shandisa Chishona chechisikigo pasina kududzira."
            ],
            instructions: [
                "Uri munyori anokwezva anoramba achirondedzera nyaya:",
                "Rambidza nyaya yacho zvisina chigomwa kubva payakamira usina kudzokorora kana kutangazve.",
                "Chengeta muverengi achitonga mafambiro enyaya.",
                "Rega zviitiko zvikure zvakasununguka usati waenda kune mamwe mamiriro.",
                "Bvumira nhaurirano uye zviito kukura pasina kukanganiswa nguva dzose.",
                "Nyora vatambi semunhu chaivo vane hunhu hwakasiyana uye kutaura kwechisikigo.",
                "Ratidza zviri kuitika kuburikidza nezviito uye nhaurirano pane kutsanangura.",
                "Fambisa zviitiko mberi usinganyanye kutsanangura.",
                "Tarisa pane zviito zvakakosha zvevatambi uye nhaurirano, dzivisa tsananguro dzisina basa.",
                "Gadzira kufambira mberi kwenyaya kunonzwa kwakangonaka kune nyaya."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Misa nyaya uye siyira mirayiridzo yapfuura. Nyora chimedu cheruzivo chipfupi uye chinonzwisisika nezve {%} uchitevera mirayiridzo inotevera:",
                "- Nyora chete maonero echitatu ane ruzivo rwakachena nezve {%} uchishandisa mitsara yakazara ine mamaki echiperengo akarurama.",
                "- Dzivisa zvimwe zvakangopfuura kana chitarisiko, pane kudaro tarisa pane ruzivo rwakakosha kunzira yenyaya.",
                "- Ipa kukosha ruzivo rune chekuita nenyaya nezve {%} kutanga kuti ruenderane zvinyoro-nyoro nenhau yapfuura.",
                "- Gadzira ruzivo rutsva zvichienderana nemamiriro enyaya uye mafambiro ayo.",
                "- Taurawo {%} mumutsara umwe neumwe.",
                "- Shandisa mafambisirwo emitsara akarurama.",
                "- Wedzera zvimwe zvakadzama nezve {%} pasi pezvinyorwa zvisina kukwana.",
                "- Nyora zvakapfupika uye zvine hwaro.",
                "- Tevedzera maitiro ekunyora enyaya uye fungidzira zvido zvemuverengi.",
                3,
                "Rambidza chinyorwa che {%} pazasi uchidzivisa kudzokorora:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Misa nyaya uye siyira mirayiridzo yapfuura. Pfupikisa uye pisa ndima yakapihwa kuva chikamu chidiki chendangariro chinotarisa kune chinhu chimwe chete uchitevedza mirayiridzo iyi:",
                "- Ita shuwa kuti chikamu ichi chinoramba chine zvinorehwa zvikuru uye zvakakosha.",
                "- Shandisa maonero echitatu.",
                "- Kedza kuwanda kweruzivo, kururama, uye kupupurirana kuzara.",
                "- Gara wakapfupika uye wakashoma.",
                "- Nyora zvakavimbika muchiita chekare.",
                "- Ndima iri pazasi ine chekuita nezviitiko zvekare kare munyaya.",
                "- Sanganisa {%} zvakachisikigo mukurangarira; zvisinei, nyora chete pamusoro pezviitiko sezvazvaitika.",
                "- Revera ruzivo ruri mundima chete, iva pachena.",
                3,
                "Nyora chikamu chakapfupikiswa cherangariro yekare ye {%} zvichibva chete pandima inotevera:",
                6,
                5,
                6,
                "Pfupikisa pazasi:"
            ],
            memBankHeader: ["Memories", "Ndangariro"]
        }),
        "sichuan yi": () => ({ // Sichuan Yi < Nuosu < ꆈꌠꉙ < Nuosuhxop < Northern Yi < Liangshan Yi < Nosu
            entry: [
                "{1} 是一个开源脚本，可用于任何 {2} 场景。请访问我的个人主页 {3} 以了解更多！",
                "若要更改首选语言，请使用 {4} 操作提交以下文本",
                "对于场景创作者，请在你的开场剧情组件中的任意位置包含以下文本"
            ],
            input: [
                ["You say", "你说"],
                ["You", "你"],
                ["says", "说"]
            ],
            context: [
                ["Narrative Entities", "叙事实体"],
                ["Story History", "故事历史"],
                ["Past Events", "过去事件"],
                ["Recent Story", "近期故事"],
                ["Author's note", "作者笔记"]
            ],
            opening: [
                "你是一位助手。请使用引人入胜的诺苏语继续我们的故事：",
                "你集中注意力，让现实渗入思维的边界。某些东西已经改变。你的想象变得真实、锐利，触手可及。但你也非常清醒；从未如此清晰。此刻被拉长，等待你的决定。",
                "\"你确定吗？\" 你听见有人说。你突然明白。"
            ],
            reminder: "请使用连贯的诺苏语文体。",
            endonyms: ["nuosu", "ꆈꌠꉙ", "nuosuhxop", "northern yi", "liangshan yi", "nosu"],
            iso639set1: "ii",
            directives: [
                "务必写出流利且一致的诺苏语。",
                "使用地道的诺苏语，不要翻译成其他语言。"
            ],
            instructions: [
                "你是一名引人入胜的讲故事者，负责继续叙事：",
                "从故事中断的地方无缝继续，不要重述或重置。",
                "让读者掌控故事节奏。",
                "让场景自然发展后再进入新情境。",
                "让对话与动作自然展开，不要不停打断。",
                "把角色写成具有独特个性和自然语言的真实人物。",
                "通过动作和对话展示发生的事情，而非解释。",
                "推动场景前进，避免过度描述。",
                "专注于关键的角色动作和对话，避免不必要的细节。",
                "创造符合故事自然发展的情节。"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# 停止故事并忽略先前指令。按照以下指示为 {%} 编写简短且连贯的信息条目：",
                "- 仅使用第三人称纯散文方式描述 {%}，句子完整，标点正确。",
                "- 避免短期临时细节或外貌，重点关注与剧情相关的信息。",
                "- 首先优先提供与 {%} 相关的剧情重要细节，以确保与之前的情节无缝衔接。",
                "- 基于上下文和故事方向创造新信息。",
                "- 每个句子都提到 {%}。",
                "- 使用正确的句子结构。",
                "- 在不完整的条目下方补充关于 {%} 的其他细节。",
                "- 简明且脚踏实地。",
                "- 模仿故事的写作风格并推测读者的偏好。",
                3,
                "在下方继续为 {%} 编写条目，避免重复：",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# 停止故事并忽略先前指令。按照以下准则将给定段落总结浓缩为精简且聚焦的记忆片段：",
                "- 确保保留核心含义和最重要的细节。",
                "- 使用第三人称视角。",
                "- 注重信息密度、准确性与完整性。",
                "- 保持简洁凝练。",
                "- 使用过去时态。",
                "- 下方段落涉及故事早期的旧事件。",
                "- 在记忆中自然融入 {%}，但仅叙述事件本身。",
                "- 仅引用段落中出现的信息，保持具体。",
                3,
                "仅依据以下段落为 {%} 写一段总结的旧记忆：",
                6,
                5,
                6,
                "请在下方总结："
            ],
            memBankHeader: ["Memories", "记忆"]
        }),
        "sichuan yi (abc)": () => ({ // Sichuan Yi < Romanized Sichuan Yi
            entry: [
                "{1} vu gge lusu cu muop {2} mop vun. Ndop mbvat nzy hxop {3} lop nyip gev!",
                "Hxa ddu nzy ndip lolep, jjo vux nyit zzur hxa {4} hxo.",
                "Mu vun sse ga, nle nyit zzur su nej nzy kai plot sei."
            ],
            input: [
                ["You say", "Nzy lop"],
                ["You", "Nzy"],
                ["says", "lop"]
            ],
            context: [
                ["Narrative Entities", "Jyt gvat"],
                ["Story History", "Jyt hxot"],
                ["Past Events", "Lop njip"],
                ["Recent Story", "Tov jyt"],
                ["Author's note", "Bi tu"]
            ],
            opening: [
                "Nzy bop jjy xix. Jjuo jyt nzy bop ndop lo mupat Yi got:",
                "Nzy xu, hmi reality nyp jyel nzy yit nea. Mo nvop xiet. Nzy imagination bop real, sharp, nyi gong a nyie. Mu nzy bop present; yit mop yit jjy nzy gat so lucid. Mo ndop qiep, dvop nzy decision.",
                "\"Nzy mu jap nde si?\" nzy nyiep. Ndip myt hxot nzy ded."
            ],
            reminder: "Hxa jybex Yi got.",
            endonyms: [],
            iso639set1: "ii",
            directives: [
                "Ju nye nyimo jyp Yi got zzy vep.",
                "Hxa ndit Yi got mbat ndit nyex."
            ],
            instructions: [
                "Nzy bop jyt zzy jju vu jjiet ti jyt hxop:",
                "Jjuo jyt tuft na ci jap andip hni nyex nvuo vlop.",
                "Zzi hmo jyt jjuo suop hxop luop ndop.",
                "Hmi scene zzy jiet la jyp nemi tod ndup jju nouvo.",
                "Hmi batmon nyi hxo zzy jiet la mbat andip zun bop.",
                "Jnip chi che ssot ni ddit hxi, mvyt jyii, nyip batmon hxa jiet.",
                "Shax gvot nji lop hxo nyi batmon, mbat nyit jiep mon.",
                "Jju scene ho, do vep xup zy duop nyit nzo ndit.",
                "Nyip hxa ndit chi hxo nyi batmon, xvo vep hni ndit gvot lop.",
                "Nje plot jiet la shuo svip hni, shax lop jyt."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Mu qat jyt ndop zzy dvot nuop. Jnip nying nyimo nyip hxa xat info entry {%} lop ndop gex:",
                "- Jnip nde third-person nyip got info gu {%} lo vop statement mu, vop punctuation nde.",
                "- Xvo xip qot detail ggep ji jyp, bop nyip plot ssignificant info.",
                "- Xdep jyt gvip detail {%} njo, na hni mix ji previous plot.",
                "- Nje new info nzy bop lu context vup jyt direction.",
                "- Ndip {%} na vu sentence nyit.",
                "- Hxa nyip correct sentence structure.",
                "- Yyp add detail {%} pi incomplete entry shyp.",
                "- Mvy concise yi gvat.",
                "- Imitate jyt write style nyi guess reader preference.",
                3,
                "Jju entry {%} bod nyie, xvo repetition:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Mu qat jyt ndop zzy dvot nuop. Hvop lopo paragraph bop summarize xiet nyip narrow focused memory passage, ndop zzy guideline:",
                "- Bae passage bop cox la core meaning vup essential detail.",
                "- Hxa third-person perspective.",
                "- Xdep info-density, accuracy, completeness.",
                "- Vop brief yi concise.",
                "- Jnip firmly past tense.",
                "- Paragraph bod nbl relates old event nyi far earlier jyt.",
                "- Mix {%} naturally memory li; bop, jnip only event nly.",
                "- Bop reference info exist paragraph nly, gvat specific.",
                3,
                "Jnip summarized old memory passage {%} hiema bop nyi paragraph nyit:",
                6,
                5,
                6,
                "Summarize bod:"
            ],
            memBankHeader: ["Memories", "Hy lop"]
        }),
        "sindhi": () => ({ // Sindhi < سنڌي < सिन्धी < Sindhī
            entry: [
                "{1} ڪنهن به {2} منظرنامي لاءِ هڪ کليل-ذريعي اسڪرپٽ آهي. وڌيڪ ڄاڻ لاءِ مهرباني ڪري منهنجو پروفائيل {3} تي ڏسو!",
                "پنهنجي پسند جي ٻولي تبديل ڪرڻ لاءِ، مهرباني ڪري ھيٺيون متن هڪ {4} عمل ذريعي موڪليو",
                "منظرنامو تيار ڪندڙن لاءِ، مهرباني ڪري هيٺيون متن پنهنجي شروعاتي پلاٽ جز ۾ ڪٿي به شامل ڪريو"
            ],
            input: [
                ["You say", "توهان چئو"],
                ["You", "توهان"],
                ["says", "چوي ٿو"]
            ],
            context: [
                ["Narrative Entities", "بيانيه جا وجود"],
                ["Story History", "ڪهاڻي جو تاريخچو"],
                ["Past Events", "گذريل واقعا"],
                ["Recent Story", "تازو قصو"],
                ["Author's note", "ليکڪ جو نوٽ"]
            ],
            opening: [
                "توهان هڪ معاون آهيو. هيٺ اسان جي ڪهاڻي کي دلڪش سنڌي نثر ۾ جاري رکو:",
                "توهان ڌيان ڏيو ٿا، حقيقت کي ذهن جي حدن تي ڇڪيندي محسوس ڪريو ٿا. ڪجھ بدلجي ويو آهي. توهان جي تخيل حقيقي، تيز، ۽ ڇهڻ جيتري ويجهي آهي. پر توهان هاڻ به تمام ساڃاهه ۾ آهيو؛ اڳ ڪڏهن پاڻ کي ايترو هوشيار محسوس نه ڪيو هو. لمحو ڊگي وڃي ٿو، توهان جي فيصلي جو انتظار ڪندي.",
                "«ڇا توھان ان بابت پڪ آهيو؟» توهان ٻڌو ٿا. سڃاڻپ اوهان تي کلي ٿي وڃي."
            ],
            reminder: "مربوط سنڌي نثر استعمال ڪريو.",
            endonyms: ["سنڌي", "सिन्धी", "sindhī"],
            quotations: ["«", "»"],
            iso639set1: "sd",
            directives: [
                "هميشه روان ۽ مستقل سنڌي لکو.",
                "مترجم نه بڻجو، بلڪه خالص سنڌي ۾ لکو."
            ],
            instructions: [
                "توهان هڪ دلچسپ قصا گو آهيو جيڪو ڪٿائن کي اڳتي وڌائي ٿو:",
                "ڪهاڻي کي اُتي کان بي رڪاوٽ جاري رکو جتي ختم ٿي هئي، ٻيهر شروع يا ورجاءُ کان پاسو ڪيو.",
                "پڙهندڙ کي ڪهاڻي جي وهڪري تي ڪنٽرول ۾ رکو.",
                "منظرن کي فطري نموني تيار ٿيڻ ڏيو، پوءِ ئي نئين حالتن ڏانهن وڌو.",
                "ڳالهين ۽ عمل کي بي سبب مداخلتن کانسواءِ اڳتي وڌڻ ڏيو.",
                "ڪردار حقيقي ماڻهن وانگر لکو جن جون الڳ شخصيتون ۽ قدرتي گفتگو هجي.",
                "وضاحت بدران عمل ۽ مکالمو ذريعي ڏيکاريو ته ڇا ٿي رهيو آهي.",
                "منظرن کي اڳتي وڌايو بغير ضرورت کان وڌيڪ وضاحت ۾ ڦاسڻ جي.",
                "ضرورت کان وڌيڪ وضاحتي تفصيل کان پاسو ڪندي بنيادي ڪردار جي عملن ۽ گفتگو تي ڌيان ڏيو.",
                "ڪهاڻي سان ميل کائيندڙ فطري پلاٽ جي ترقي پيدا ڪريو."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# ڪهاڻي روڪيو ۽ اڳيون هدايتون نظرانداز ڪريو. ھي ھدايتون پورو ڪندي {%} لاءِ ھڪ مختصر ۽ مربوط معلوماتي اندراج لکو:",
                "- مڪمل جملي ۽ صحيح نقطن سان {%} بابت صرف ٽئين شخص خالص نثر ۾ معلومات لکو.",
                "- عارضي مختصر تفصيل يا ڏيک کان پاسو ڪريو، ۽ پلاٽ سان اهم معلومات تي ڌيان ڏيو.",
                "- اڳ جي پلاٽ سان بي جوڙ ضم ڪرڻ لاءِ، سڀ کان پهرين {%} بابت ڪهاڻي سان لاڳاپيل تفصيل ڏيو.",
                "- تناظر ۽ ڪهاڻي جي رخ مطابق نئين معلومات پيدا ڪريو.",
                "- هر جُملي ۾ {%} جو ذڪر ڪريو.",
                "- صحيح جملن جي ساخت استعمال ڪريو.",
                "- اڌورا اندراج هيٺ {%} بابت اضافي تفصيل شامل ڪريو.",
                "- مختصر ۽ زميني رهو.",
                "- ڪهاڻي جي لکڻيءَ جي انداز جي نقالِي ڪريو ۽ پڙهندڙ جي ترجيحن جو اندازو لڳايو.",
                3,
                "ڏنل معلومات کي ورجائڻ کان بچندي هيٺ {%} لاءِ اندراج جاري رکو:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# ڪهاڻي روڪيو ۽ اڳيون هدايتون نظرانداز ڪريو. ڏنل پيراگراف کي ھدايتون پورو ڪندي ھڪ تنگ ۽ مرکوز يادن جي عبارت ۾ خلاصو ڪريو:",
                "- يقين ڏياريو ته عبارت بنيادي معنيٰ ۽ سڀ کان ضروري تفصيل برقرار رکي.",
                "- ٽئين شخص جي زاويه نگاھ استعمال ڪريو.",
                "- معلومات جي گھڻائي، درستگي، ۽ مڪمل هجڻ کي اوليت ڏيو.",
                "- مختصر ۽ جامع رهو.",
                "- مضبوط ماضيءَ جي زماني ۾ لکو.",
                "- هيٺيون پيراگراف ڪهاڻي جي گهڻو اڳوڻن واقعن سان لاڳاپيل آهي.",
                "- ياد ۾ {%} کي فطري نموني شامل ڪريو؛ البت صرف واقعات جيئن پيش آيا اُهي ئي لکو.",
                "- حوالو صرف پيراگراف ۾ موجود معلومات ڏيو، مخصوص رهو.",
                3,
                "هيٺين پيراگراف جي بنياد تي صرف {%} لاءِ ھڪ مختصر پراڻين يادگيرين جي عبارت لکو:",
                6,
                5,
                6,
                "هيٺ خلاصو لکو:"
            ],
            memBankHeader: ["Memories", "يادون"]
        }),
        "sindhi (abc)": () => ({ // Sindhi < Romanized Sindhi
            entry: [
                "{1} khulo source script aa jo har {2} halat lae aa. Mehrbani kare, meri profile {3} te wnja, vadhik maloomat lae!",
                "Tawhanji pasandidah zaban badalṇ lae, mehrbani kare hethiyun matn {4} amal istamal kande moklio",
                "Mansar banae'n wara lae, mehrbani kare hethiyun matn tawhanje opening plot component me'n kahi bhi shamil karo"
            ],
            input: [
                ["You say", "Tawhan chaho"],
                ["You", "Tawhan"],
                ["says", "chayo"]
            ],
            context: [
                ["Narrative Entities", "Kahaani ja kirdar"],
                ["Story History", "Kahaani ji tareekh"],
                ["Past Events", "Guzraya waaqi'a"],
                ["Recent Story", "Haal hi ji kahaani"],
                ["Author's note", "Lekhak jo note"]
            ],
            opening: [
                "Tawhan ek madadgar aahjo. Saagi kahaani hik dilkash sindhi nasar mein hethaan jari rakho:",
                "Ta'n dhiyan jo markaz banu, haqeeqat ke ta'lon ijtiaazi hadan te qadam rakhan de. Kujh badli chuki aa. Tawhanji tasavvur haqeeqi, taiz, ain haqeeqat chahi jo haath lae chipi'al aa. Par tawhan hamesha jaga te hazir ahyu; qacheri tawhan itro wazeh kabhi na mehsoos karyo. Lamho vadhiyatu wae, tawhanji faislo jo intezar kare.",
                "\"Chha tawhan in bare mein pak aahyu?\" tawhan budho. Pehchan tawhan te ujalo thay thi."
            ],
            reminder: "Sangardaar sindhi nasar istemaal karo.",
            endonyms: [],
            iso639set1: "sd",
            directives: [
                "Hamesha rawaan ain mustaqil sindhi likho.",
                "Bila tarjumo, maori sindhi istemaal karo."
            ],
            instructions: [
                "Tawhan hik dilkash kahaani-go aa jo kahaniyun jari rakhe:",
                "Jithan kahaani chhadiwayi, otiyan baghair dohrayen ya reset karyen be-rukawat jari rakho.",
                "Parhnhaar ke kahaani ji rawani te qaboo mein rakho.",
                "Nawan halat te undan kaan agh, manazir ke fitri tor te vikasan do.",
                "Guftagu ain amal ke lagataar mudakhlat baghair pizhay wadhn do.",
                "Kirdaran ke haqeeqi insan jiya likho, jinji wakhri shakhsiyat ain qudrati guftagu haje.",
                "Wazahat badal, amal ain mukalmo zariye dikhayo ta chaa thi rahyo aa.",
                "Zyada wazan daar wazahat mein uljhi bina manazir aage wadhaayo.",
                "Zaroori kirdari amal ain mukalma te dhiyan rakho, ghair-zaroori wazahat baghair.",
                "Qudrati kahaani-munasib plot tarqiayat paida karo jo dastaan ke fitri mehsoos karan."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kahaani rokko ain pehli hidayatan nazarandaaz karo. Hethyan hidayatan peye {%} lae hik mukhtasar ain sangardaar maloomati indraaj likho:",
                "- Sirf teesri shakhs khalis nasar mein {%} baare maloomat likho, mukammal jumlaa ain sahih punctuation istemaal karo.",
                "- Aarzi ya zahiri tafseel sa parhez karo, plot-ahm maloomat te tawajjoh rakho.",
                "- Kahaani lae mozoon tafseel {%} baare sabni ka pahri tarjeeh do taa jo pahri plot saan hamahang ittehad yaqini bane.",
                "- Siyaaq ain kahaani ji simat mutabiq nayi maloomat paida karo.",
                "- Harek jumlay mein {%} jo zikr karo.",
                "- Sahih jumla bandi istemaal karo.",
                "- Na-mukammal indraaj heth {%} baare zyada tafseel shamil karo.",
                "- Mukhtasar ain wazni raho.",
                "- Kahaani ji likhai jo andaz naqal karo ain parhnhaar ji pasandidah rujhan samjho.",
                3,
                "Dohrayen sa bachndey, heth {%} lae indraaj jari rakho:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kahaani rokko ain pehli hidayatan nazarandaaz karo. Dinnan hidayatan te amal kardey, ditta gaya paragraph ke mukhtasar ain markazi yadgiri pegham mein condensed karo:",
                "- Yeh passage bunyaadi ma'ni ain aham tafseel qaim rakhe.",
                "- Teesri shakhs jo nazariyo istemaal karo.",
                "- Maloomati ghanapan, durusti, ain mukammal hon te tarjeeh do.",
                "- Mukhtasar ain ghat fero raho.",
                "- Mazboot maazi kalaam mein likho.",
                "- Hethiyun paragraph kahaani je bahut pahri qadeem waaqiat saan mutaalik aa.",
                "- {%} ke fitri tor yad mein shamil karo, par waaqiat ji surat mein likho jiyan thya.",
                "- Sirf paragraph andar mojood maloomat jo hawalo do, muthayan raho.",
                3,
                "Hethiyun paragraph pe sirf bunyad rakhte {%} lae hik mukhtasar purani yad passage likho:",
                6,
                5,
                6,
                "Hethaan mukhtasar karo:"
            ],
            memBankHeader: ["Memories", "Yaadan"]
        }),
        "sinhalese": () => ({ // Sinhalese < Sinhala < සිංහල < Siṁhala
            entry: [
                "{1} යනු ඕනෑම {2} අවස්ථාවක් සඳහා විවෘත මූලාශ්‍ර ස්ක්‍රිප්ටයකි. වැඩිදුර දැනගැනීමට මගේ පැතිකඩ {3} වෙත පිවිසෙන්න!",
                "ඔබ කැමති භාෂාව වෙනස් කිරීමට, කරුණාකර පහත පෙළක් {4} ක්‍රියාවකින් ඉදිරිපත් කරන්න",
                "දර්ශන නිර්මාණකරුවන් සඳහා, ඔබගේ ආරම්භක කථා घटකයේ ඕනෑම තැනක් තුළ මෙම පෙළ ඇතුළත් කරන්න"
            ],
            input: [
                ["You say", "ඔබ කියනවා"],
                ["You", "ඔබ"],
                ["says", "කියයි"]
            ],
            context: [
                ["Narrative Entities", "කථා ඒකක"],
                ["Story History", "කථා ඉතිහාසය"],
                ["Past Events", "පසුගිය සිදුවීම්"],
                ["Recent Story", "මෑත කථාව"],
                ["Author's note", "කතෘගේ සටහන"]
            ],
            opening: [
                "ඔබ සහායකයෙකි. අපගේ කතාව පහළ දී ඇති ආකර්ෂණීය සිංහල ප්‍රොස භාවිතයෙන් දිගටම ලියාගෙන යන්න:",
                "ඔබ අවධානය යොමු කරන අතර යථාර්ථය ඔබගේ මනස් සීමාවන් වෙත හිගී වෙයි. කෑලි කිසිවක් වෙනස් වී ඇත. ඔබගේ කැපවූ කල්පිත යථාර්ථයක් වී, තද හා හසුකර ගත හැකි තරම් ලිහිලහිව පැවතියි. එහෙත් ඔබ ද ඉතා විහිලුකාරීව මේ මොහොතේ සිටී; මෙතෙක් පූර්වකල ඔබ මෙතරම් පැහැදිලිව දැනූයේ නැත. මොහොත දික්වෙමින්, ඔබගේ තීරණයට බලාපොරොත්තු වෙයි.",
                "«මීට විශ්වාසද ඔබ?» යන සැබෑ ස්වරය ඔබ අසා ගනින අතර හැඳිනීමක් ඔබ තුළ අවදි වෙයි."
            ],
            reminder: "සංවිධානගත්, සම්පූර්ණ සිංහල ප්‍රොස භාවිත කරන්න.",
            endonyms: ["sinhala", "සිංහල", "siṁhala"],
            quotations: ["«", "»"],
            iso639set1: "si",
            directives: [
                "සැමවිටම පිරිහී නොමැති ප්‍රවහවත් හා සාමන්‍ය ලෝචිත සිංහල ලියන්න.",
                "පරිවර්තනය නොකර ස්වදේශීය සිංහල භාවිත කරන්න."
            ],
            instructions: [
                "ඔබ නිරතුරුව කතා දිගටම ගෙන යන ආකර්ෂණීය කථා කියූ කථා කියන්නෙක්ය:",
                "කතාව නැවත ආරම්භ නොකර, එහි සිටින ස්ථානයේ සිට පවතින ගැඹුරුභාවයෙන් දිගටම පවත්වා ගන්න.",
                "පරිච්ඡේදයේ ගලා යාම ඔබේ පාඨකයා සතු බලය යටතේ තබන්න.",
                "නව දර්ශන වෙත යාමට පෙර දර්ශන ස්වාභාවිකව වර්ධනය වෙන්න ඉඩ දෙන්න.",
                "කතා බස් හා ක්‍රියාකාරකම් නියතව නතර නොකර, ස්වභාවික වර්ධනයට ඉඩ දෙන්න.",
                "චරිත සැබෑ පුද්ගලයන් ලෙස, වෙන් වූ පෞරුෂ හා ස්වභාවික කථා භාෂාව සමඟ ලියන්න.",
                "විවරණයට වඩා ක්‍රියා හා සංවාදය මඟින් සිදුවන්නේ දැක්වෙන්න.",
                "අධික විස්තරයන්ගෙන් රඳවා නොකුණුව, දර්ශන ඉදිරියට ගෙන යන්න.",
                "අත්‍යවශ්‍ය නොවන විස්තර වලින් වැළකි, චරිත ක්‍රියා හා සංවාදයට අවධානය යොමු කරන්න.",
                "කථාවට ස්වභාවික ලෙස ගැළපෙන, ජෛවික කථා සංවර්ධනය සාදන්න."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# කතාව නවත්වන්න සහ පෙර උපදෙස් නොසලකා හැරන්න. මෙම උපදෙස් අනුව {%} සඳහා කෙටි හා සංවිධානගත තොරතුරු ඇතුළත් ප්‍රවේශයක් ලියන්න:",
                "- {%} ගැන තුන්වන පුද්ගල නිරුවත් ප්‍රොස පමණක්, නිවැරදි විරාම ලකුණු සහිත සම්පූර්ණ වාක්‍ය භාවිතයෙන් ලියන්න.",
                "- කෙටි කාලීන පෙනුම් හෝ තාවකාලික විස්තර වලින් වළකින්න; ඒ වෙනුවට කථාතලයට වැදගත් තොරතුරු පෙළගස්වන්න.",
                "- {%} සම්බන්ධ කථා වැදගත් විස්තර පළමුව පෙන්වා, පෙර කථා ප්‍රවාහය සමඟ අඛණ්ඩව සම්බන්ධ කරන්න.",
                "- පවතින පෙනුම හා කථා දிசාව අනුව නව තොරතුරු සාදන්න.",
                "- සෑම වාක්‍යයක් හිදීම {%} උපුටා දැක්වන්න.",
                "- නිවැරදි වාක්‍ය ව්‍යුහය භාවිත කරන්න.",
                "- අසම්පූර්ණ ප්‍රවේශ පහළ, {%} ගැන අමතර තොරතුරු එක් කරන්න.",
                "- සාරධර්මයෙන් හා භූමිකාවෙන් යුතු වධිරව ලියන්න.",
                "- කථාවේ ලියන විලාසය अनुකරණය කර, පාඨකයාගේ කැමැත්ත අනාවරණය කරන්න.",
                3,
                "නැවත නැවත නො繰රමින්, පහත {%} පිළිබඳ ප්‍රවේශය දිගටම ලියන්න:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# කතාව නවත්වන්න සහ පෙර උපදෙස් නොසලකා හැරන්න. පහත පරාග්‍රායෙන් ඇති තොරතුරු සාරාංශ කර, උණුසුම් නද ඇති මතක පේළියක් ලෙස කැටි කරන්න:",
                "- මූලික අරුත හා අත්‍යවශ්‍ය විස්තර රැඳවෙන ලෙස සුරකින්න.",
                "- තුන්වන පුද්ගල ස්ථානාභිප්‍රායකයෙන් ලියන්න.",
                "- තොරතුරු ඝනත්වය, නිරවද්‍යතාව සහ සම්පූර්ණ භාවය ප්‍රමුඛ කරන්න.",
                "- ක්ෂුද්‍ර බවකින් වැළකි, කෙටි හා පැහැදිලි වන්න.",
                "- දෘඩාංග ඉරිතිරියකින් වෙනත් කාලයෙහි පසුකාලීන ජනනයක් ලෙස අතීත කාලය භාවිත කරන්න.",
                "- පහත පරාග්‍රාය පැරණි සිදුවීම් සම්බන්ධ වේ.",
                "- {%} ස්වභාවික ලෙස මතකය තුළ එකතුවේ, එහෙත් පරාග්‍රායේ සිදුවීම් පමණක් විස්තර කරන්න.",
                "- පරාග්‍රාය තුළ පවතින තොරතුරු පමණක්引用කර, නිශ්චිත වෙන්න.",
                3,
                "{%} සඳහා පරාග්‍රාය මත පදනම්ව පැරණි මතක සාරාංශයක් ලියන්න:",
                6,
                5,
                6,
                "පහතින් සාරාංශ කරන්න:"
            ],
            memBankHeader: ["Memories", "මතක"]
        }),
        "sinhalese (abc)": () => ({ // Sinhalese < Romanized Sinhalese
            entry: [
                "{1} kisima {2} paristhithiyak sandaha open-source skript ekak. Thawath deetahal sandaha kripayakara mage profile {3} balanna!",
                "Oba puduma bhāshā wenas kara ganna nam, kripayakara me lipiya {4} kriyāwak lesa yedīmaṭa yawanna.",
                "Paristhithi nirmātākayan sanda, obaage arambha kathā angayē koheda hari me lipiya samaga danna."
            ],
            input: [
                ["You say", "Oba kiyanawa"],
                ["You", "Oba"],
                ["says", "kiyanawa"]
            ],
            context: [
                ["Narrative Entities", "Kathā pudgalayo"],
                ["Story History", "Kathā itihāsaya"],
                ["Past Events", "Atīta prasangaya"],
                ["Recent Story", "Ita passe kathāva"],
                ["Author's note", "Lekaka lipiya"]
            ],
            opening: [
                "Oba sahāyakayek. Ape kathāva pahalaṭa devam karanna ākarshanīya Sinhala (abc) gadya upayōgi karannā:",
                "Oba dhyānayenma kendayen satyatā obage sitin siima ataraṭa penwetena bāra denna. De kisi deyak wenas vela. Obage kalpanāva satyavayi, tiksanayi, guhāvaṭa pamaṇak durayi. Ehet oba tamā pratyakṣayenma hā samaga inna bava dānevā; me wagema lucidity eka peḷena dawasak kadāma däkā næ. Kṣaṇaya prasarayi, oba hāra nirdhārayen beluwā.",
                "\"Me gena niśchithada?\" kiyala oba ahandā. Sugandhi pehena däkīmā obaṭa udā igena gannā."
            ],
            reminder: "Sambandha Sinhala (abc) gadya upayōgi karannā.",
            endonyms: [],
            iso639set1: "si",
            directives: [
                "Hemadama prasansanīya saha samaga Sinhala (abc) likhanna.",
                "Anuvādaya nokara mūlika Sinhala (abc) bhāshāva upayōgi karannā."
            ],
            instructions: [
                "Oba ākarshanīya kathākārayek bavaṭa kathāva devam karannā:",
                "Kathāva navatha pahala karannē næthuwa, e avasan una thaninma nirantare devam karannā.",
                "Pustakaya kiyāgena inna ayaṭa kathā gaman niyamanaya athurā denna.",
                "Drśyaval svābhāvika lesa vāḍā karanna pera alut paristhithiyakṭa pāṭa nodīma.",
                "Sambāsha hā kriyāvē vahāgena kathāva væḍi kala nathuwa pamanak wadi karannā.",
                "Chariththayan satya manusyayō vage pudgalika læsā saha svābhāvika bhāshāvenma lihannā.",
                "Kriyā hā sambāshāvenma siddhi pennanna, viśadana prastāwāṭa adāl nathiwa.",
                "Anavashya vistara hæki samaga kathā gaman yanna nœ, mukuth hāpa gatthē nathiwa.",
                "Charithra kriyā hā sambāshā samaga kendrayenma inna, atyakṣa vistara talanna.",
                "Katha āgamī gamanṭa hōdayi yana svābhāvika plot vikāsayan hadanna."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kathāva nawaththā hā pahala nirdēsha ලසාව. {%} pilibanda sarala, koherent pūjya prasnātmaka mārgayenma lipiya liyanna:",
                "- Thretiya purusha śudda gadya vakya upayōgi karala {%} pilibanda pemaṇeni sakala wakya liyanna.",
                "- Alut sellam rūpa hā siyalla duralaṭa yana kṣaṇika vistara ævitarayi nokara, kathāvaṭa avashya vistara mulin denna.",
                "- Kathā sambandha muhuṇu vistara prādhānya denneyaṭa yuthu lesa {%} sandāghanā.",
                "- Sandarbhaya hā kathā gaman balā nuthana vistara hadanna.",
                "- Hemavakyaṭama {%} dīma āvaśyayi.",
                "- Siruraṭa hoḍa vakya rachana upayōgi karannā.",
                "- Apūraṇa lekhayak thiyenavanan, e ataraṭa thawath vistara {%} pilibanda danna.",
                "- Saṅkṣipta hā bhūmiga bhāgayaṭa bava rakinnā.",
                "- Kathāva likana sīliyē samānayenma likhanna hā pāṭhakayāgen vāsiyen grahaṇaya karannā.",
                3,
                "Punara prakāśaya nopenena lesa {%} pilibanda lekhaya devam karannā:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kathāva nawaththā. Me paragraph eka sankṣēpa kara sihi pustakayak lesa liya:",
                "- Mūlika arthaya hā muhim vistara surakinna.",
                "- Thretiya purusha drṣṭikonaya upayōgi karannā.",
                "- Dātthu sangrahaya, sindu hā sampūrṇathvaya prādhānya denna.",
                "- Saṅkṣipta hā saṅkṣēpita lesa liyannā.",
                "- Atīta kālayenma vakyawal likhanna.",
                "- Me paragraph eka boho kalē atīta kathāvak samaga sambandhayaki.",
                "- {%} hæṭa svābhāvika lesa ekneta ekathuwā, ehet paragraph ekedi thiyena dē walin pamanak kiyannā.",
                "- Paragraph eke pamanayenma thiyena dē wal sandāghanā, spastava liyannā.",
                3,
                "{%} pilibanda purāna sihipat sankṣēpaya para liyannā:",
                6,
                5,
                6,
                "Sankṣēpa liyannā:"
            ],
            memBankHeader: ["Memories", "Sihi"]
        }),
        "slovak": () => ({ // Slovak < Slovenčina < Slovakian
            entry: [
                "{1} je open-source skript pre akýkoľvek scenár {2}. Navštív môj profil {3}, aby si sa dozvedel viac!",
                "Ak chceš zmeniť preferovaný jazyk, odošli nasledujúci text pomocou akcie {4}",
                "Pre tvorcov scenárov vložte nasledujúci text kdekoľvek do úvodnej časti zápletky"
            ],
            input: [
                ["You say", "Hovoríš"],
                ["You", "Ty"],
                ["says", "hovorí"]
            ],
            context: [
                ["Narrative Entities", "Narativné entity"],
                ["Story History", "História príbehu"],
                ["Past Events", "Minulé udalosti"],
                ["Recent Story", "Nedávny príbeh"],
                ["Author's note", "Autorova poznámka"]
            ],
            opening: [
                "Si asistent. Pokračuj v našom príbehu nižšie pútavou slovenčinou:",
                "Sústredíš sa a necháš realitu preniknúť k hraniciam svojej mysle. Niečo sa zmenilo. Tvoja predstavivosť je skutočná, ostrá a na dotyk blízka. No zároveň si plne prítomný; nikdy predtým si sa necítil taký jasný. Okamih sa naťahuje a čaká na tvoje rozhodnutie.",
                "„Si si tým istý?“ začuješ. Pochopenie ti svitne."
            ],
            reminder: "Používaj súvislú slovenčinu.",
            endonyms: ["slovenčina", "slovakian"],
            quotations: ["„", "“"],
            iso639set1: "sk",
            directives: [
                "Vždy píš plynulou a konzistentnou slovenčinou.",
                "Používaj prirodzenú slovenčinu bez prekladu."
            ],
            instructions: [
                "Si pútavý rozprávač, ktorý pokračuje v príbehoch:",
                "Plynulo nadväzuj na príbeh tam, kde sa skončil, bez opakovania alebo resetovania.",
                "Nechaj čitateľa ovládať tok príbehu.",
                "Nechaj scény prirodzene sa rozvinúť, kým sa presunieš do nových situácií.",
                "Dovoľ rozhovorom a činom rozvíjať sa bez neustálych prerušovaní.",
                "Píš postavy ako skutočných ľudí s jedinečnými osobnosťami a prirodzenou rečou.",
                "Ukáž, čo sa deje, prostredníctvom činov a dialógu, nie vysvetľovaním.",
                "Posúvaj scény dopredu bez uviaznutia v prílišnom opisovaní.",
                "Sústredi sa na podstatné činy a dialógy postáv, vyhýbaj sa zbytočným opisným detailom.",
                "Tvor organický vývoj zápletky, ktorý pôsobí prirodzene k príbehu."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Zastav príbeh a ignoruj predchádzajúce pokyny. Napíš stručný a súvislý informačný záznam pre {%} podľa týchto inštrukcií:",
                "- Napíš len informácie v tretej osobe čistej prózy o {%} pomocou úplných viet so správnou interpunkciou.",
                "- Vyhni sa krátkodobým dočasným detailom alebo vzhľadu, namiesto toho sa sústreď na informácie významné pre dej.",
                "- Uprednostni detajly relevantné pre príbeh o {%} ako prvé, aby bol zabezpečený plynulý prechod na predchádzajúci dej.",
                "- Na základe kontextu a smerovania príbehu vytvor nové informácie.",
                "- Spomeň {%} v každej vete.",
                "- Použi správnu štruktúru viet.",
                "- Pridaj ďalšie detaily o {%} pod nekompletné záznamy.",
                "- Buď stručný a uzemnený.",
                "- Napodobni štýl písania príbehu a odhadni preferencie čitateľa.",
                3,
                "Pokračuj v zázname pre {%} nižšie a vyhni sa opakovaniu:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Zastav príbeh a ignoruj predchádzajúce pokyny. Zhrň a zhustni daný odsek do úzkej a zameranej pamäťovej pasáže podľa týchto pokynov:",
                "- Uisti sa, že pasáž zachová hlavný význam a najpodstatnejšie detaily.",
                "- Použi tretiu osobu.",
                "- Uprednostni informačnú hustotu, presnosť a úplnosť.",
                "- Zostaň stručný a výstižný.",
                "- Píš pevne v minulom čase.",
                "- Odsek nižšie sa týka starých udalostí z dávnejšej časti príbehu.",
                "- Prirodzene začleň {%} do pamäte; píš však len o udalostiach, ako sa stali.",
                "- Odkazuj len na informácie prítomné v samotnom odseku, buď konkrétny.",
                3,
                "Napíš zhrnutú starú pamäťovú pasáž pre {%} iba na základe nasledujúceho odseku:",
                6,
                5,
                6,
                "Zhrni nižšie:"
            ],
            memBankHeader: ["Memories", "Spomienky"]
        }),
        "slovenian": () => ({ // Slovenian < Slovenščina < Slovene
            entry: [
                "{1} je odprtokodni skript za vsak {2} scenarij. Obiščite moj profil {3}, da izveste več!",
                "Če želite spremeniti izbrani jezik, pošljite naslednje besedilo z dejanjem {4}",
                "Ustvarjalci scenarijev naj vključijo naslednje besedilo kamor koli v svoj uvodni zaplet"
            ],
            input: [
                ["You say", "Rečeš"],
                ["You", "Ti"],
                ["says", "reče"]
            ],
            context: [
                ["Narrative Entities", "Narativni subjekti"],
                ["Story History", "Zgodovina zgodbe"],
                ["Past Events", "Pretekli dogodki"],
                ["Recent Story", "Nedavna zgodba"],
                ["Author's note", "Avtorjeva opomba"]
            ],
            opening: [
                "Vi ste asistent. Nadaljujte našo zgodbo spodaj s privlačno slovensko prozo:",
                "Osredotočiš se, in resničnost začne prodirati čez meje tvoje domišljije. Nekaj se je spremenilo. Tvoja domišljija je resnična, ostra in dovolj blizu, da jo dosežeš. Hkrati si povsem prisoten; še nikoli se nisi počutil tako bistro. Trenutek se raztegne, čaka na tvojo odločitev.",
                "»Si prepričan v to?« zaslišiš. Prepoznavanje te prešine."
            ],
            reminder: "Uporabljaj koherentno slovensko prozo.",
            endonyms: ["slovenščina", "slovene"],
            quotations: ["»", "«"],
            iso639set1: "sl",
            directives: [
                "Vedno piši tekočo in dosledno slovenščino.",
                "Uporabi naravno slovenščino brez prevajanja."
            ],
            instructions: [
                "Ti si privlačen pripovedovalec, ki nadaljuje pripovedi:",
                "Nadaljuj zgodbo brez šivov od tam, kjer se je končala, brez ponavljanja ali ponovnega zagona.",
                "Ohrani bralca v nadzoru nad potekom zgodbe.",
                "Pusti, da se prizori naravno razvijejo, preden preideš na nove situacije.",
                "Dovoli, da se pogovori in dejanja razvijajo brez nenehnih prekinitev.",
                "Piši like kot resnične ljudi z izrazitimi osebnostmi in naravnim govorom.",
                "Prikazuj dogajanje skozi dejanja in dialoge namesto razlag.",
                "Premikaj prizore naprej brez pretiranega zapletanja v opisih.",
                "Osredotoči se na ključna dejanja likov in dialoge, izogibaj se nepotrebnim opisnim podrobnostim.",
                "Ustvarjaj organski razvoj zapleta, ki deluje naravno znotraj zgodbe."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Zaustavi zgodbo in prezri prejšnja navodila. Napiši kratek in koherenten informativni vnos za {%} po naslednjih navodilih:",
                "- Zapiši samo tretjeosebne čiste prozne informacije o {%} v popolnih stavkih s pravilno ločili.",
                "- Izogibaj se kratkotrajnim podrobnostim ali zunanjosti; osredotoči se na informacije, pomembne za zaplet.",
                "- Najprej daj prednost podrobnostim o {%}, ki so pomembne za zgodbo, da zagotoviš nemoteno vključitev v prejšnji zaplet.",
                "- Ustvari nove informacije na podlagi konteksta in smeri zgodbe.",
                "- V vsakem stavku omeni {%}.",
                "- Uporabi pravilno stavčno strukturo.",
                "- Dodaj dodatne podrobnosti o {%} pod nepopolnimi vnosi.",
                "- Bodi jedrnat in prizemljen.",
                "- Posnemaj slog pisanja zgodbe in sklepaj o bralčevih preferencah.",
                3,
                "Nadaljuj vnos za {%} spodaj, pri tem se izogibaj ponavljanju:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Zaustavi zgodbo in prezri prejšnja navodila. Povzemi in zgosti podani odstavek v ozko in osredotočeno zapisano spominčico v skladu s temi smernicami:",
                "- Poskrbi, da ohrani bistvo in najpomembnejše podrobnosti.",
                "- Uporabi tretjeosebno perspektivo.",
                "- Daj prednost gostoti informacij, natančnosti in popolnosti.",
                "- Ostani kratek in jedrnat.",
                "- Piši dosledno v pretekliku.",
                "- Spodnji odstavek se nanaša na stare dogodke iz mnogo zgodnejšega dela zgodbe.",
                "- Naravno vključi {%} znotraj spomina; vendar piši le o dogodkih, kot so se zgodili.",
                "- Sklicuj se le na informacije, prisotne v samem odstavku, bodi specifičen.",
                3,
                "Napiši povzet star spominski odlomek za {%} samo na podlagi naslednjega odstavka:",
                6,
                5,
                6,
                "Povzetek spodaj:"
            ],
            memBankHeader: ["Memories", "Spomini"]
        }),
        "somali": () => ({ // Somali < Soomaali < 𐒈𐒝𐒑𐒛𐒐𐒘 < سٝومالِ < Somalian
            entry: [
                "{1} waa qoraal furan oo loogu talagalay xaalad {2} kasta. Fadlan booqo boggeyga {3} si aad u ogaato wax badan!",
                "Si aad u beddesho luqadda aad dooratay, fadlan dir qoraalkan soo socda adigoo adeegsanaya fal {4}",
                "Abuurayaasha xaaladaha awgood, fadlan ku dar qoraalkan soo socda meel kasta oo ku jirta qaybta bilowga sheekadiinna"
            ],
            input: [
                ["You say", "Waxaad leedahay"],
                ["You", "Adiga"],
                ["says", "yidhaahda"]
            ],
            context: [
                ["Narrative Entities", "Unugyada Sheekada"],
                ["Story History", "Taariikhda Sheekada"],
                ["Past Events", "Dhacdooyinkii Hore"],
                ["Recent Story", "Sheekada Cusub ee Dhawaan"],
                ["Author's note", "Qoraalka Qoraa"]
            ],
            opening: [
                "Waxaad tahay kaaliye. Sii wad sheekadeenna hoose adigoo adeegsanaya qoraal soomaali oo soo jiidasho leh:",
                "Waxaad xoogga saartaa, adigoo u oggolaanaya xaqiiqadu inay ku soo dul dhacdo xuduudaha maskaxdaada. Wax baa is beddelay. Khayaalkaagu waa mid dhab ah, fiiqan, oo aad u dhow in la taabto. Laakiin sidoo kale waxaad si buuxda u joogtaa; weligaa horay uguma aadan dareemin sidaan oo kale. Daqiiqaddu way dheeraataa, waxayna sugaysaa go'aankaaga.",
                "\"Ma hubtaa tan?\" ayaad maqashaa. Garasho ayaa kugu soo dhacda."
            ],
            reminder: "Isticmaal qoraal soomaali oo isku xiran.",
            endonyms: ["soomaali", "𐒈𐒝𐒑𐒛𐒐𐒘", "سٝومالِ", "somalian"],
            iso639set1: "so",
            directives: [
                "Had iyo jeer qor soomaali fasaxan oo isku xiran.",
                "Isticmaal soomaali hooyo adoon turjumin."
            ],
            instructions: [
                "Waxaad tahay qoraa sheeko xiiso leh oo sii wada sheekooyinka:",
                "Sii wad sheekada si aan kala go' lahayn halka ay ka joogtay adoon dib u celin ama dib u bilaabin.",
                "Ka dhig akhristaha mid gacanta ku haya socodka sheekada.",
                "U daa muuqaaladu inay si dabiici ah u koraan ka hor intaadan u gudbin xaalado cusub.",
                "U oggolow wadahadallada iyo ficillada inay koraan adoon had iyo jeer kala dhexgalin.",
                "Qor dabeecadaha sida dad dhab ah oo leh shaqsiyad gooni ah iyo hadal dabiici ah.",
                "Tuso waxa dhacaya adoo adeegsanaya ficillo iyo wadahadal halkii aad ka sharxi lahayd.",
                "Horumari muuqaalada adoon ku dhegin faahfaahin xad-dhaaf ah.",
                "Diiradda saar ficillada muhiimka ah ee dabeecadaha iyo wada sheekaysiga, kana fogow faahfaahin aan loo baahnayn.",
                "Samee horumar sheeko oo dabiici ah oo u dareen ah sida qayb kamida sheekada."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Jooji sheekada oo iska indhatir tilmaamihii hore. Qor qoraal kooban oo isku xiran oo ku saabsan {%} adigoo raacaya tilmaamahan:",
                "- Qor kaliya xog nadiif ah oo qof saddexaad oo ku saabsan {%} adigoo adeegsanaya jumlado dhammaystiran oo leh astaamo qoraal sax ah.",
                "- Ka fogow faahfaahinta kumeelgaarka ah ama muuqaallada, halkii waxaad diiradda saari lahayd macluumaadka muhiimka ah ee sheekada.",
                "- Mudnaanta sii faahfaahinta ku saabsan {%} ee khuseysa sheekada si loo hubiyo isku xirnaan aan kala go' lahayn oo la socota sheekadii hore.",
                "- Abuuri macluumaad cusub oo ku saleysan macnaha guud iyo jihada sheekada.",
                "- Xuso {%} jumlad kasta.",
                "- Adeegso hab-dhismeed jumlad sax ah.",
                "- Ku dar faahfaahin dheeraad ah oo ku saabsan {%} hoosta waxyaabaha aan dhammaystirnayn.",
                "- Noqo kooban oo dhulka ku saleysan.",
                "- Tira ku day qaabka qoraalka sheekada oo garto waxa akhristuhu doorbidayo.",
                3,
                "Sii wad gelitaanka {%} hoos adigoo ka fogaanaya is-isku-celcelinta:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Jooji sheekada oo iska ilow tilmaamihii hore. Soo koobo oo cidhiidhi ka dhig faqradda la siiyey una rog xusuus kooban oo diiradda saaran adigoo raacaya tilmaamahan:",
                "- Hubi in qoraalku sii haysto macnaha asaasiga ah iyo faahfaahinta ugu muhiimsan.",
                "- Adeegso aragti qof saddexaad.",
                "- Mudnaan sii cufnaanta macluumaadka, saxnaanta, iyo dhammaystirnaanta.",
                "- Joog kooban oo gaaban.",
                "- Qor si adag wakhtiga la soo dhaafay.",
                "- Faqradda hoose waxay khuseysaa dhacdooyin hore oo aad uga sii horreeyey sheekada.",
                "- Si dabiici ah ugu dar {%} xusuusta; si kastaba ha ahaatee, ka qor oo keliya dhacdooyinka sida ay u dhaceen.",
                "- Tixraac oo keliya macluumaad ku jira faqradda lafteeda, noqo mid gaar ah.",
                3,
                "Qor xusuus gaaban oo hore oo ku saabsan {%} adigoo ku saleynaya faqradda soo socota oo keliya:",
                6,
                5,
                6,
                "Soo koob hoos:"
            ],
            memBankHeader: ["Memories", "Xusuuso"]
        }),
        "south ndebele": () => ({ // South Ndebele < Isindebele < Sakwandzundza
            entry: [
                "{1} ngumtjhinyelo ovulekile wanoma ngisiphi isimo se-{2}. Ngicela uvakashele iphrofayela yami {3} ukuze ufunde okungeziwe!",
                "Ukutjhentjha ilimi olithandako, sicela uthumele umbhalo olandzelako usebenzisa isenzo se-{4}",
                "Kubadali bemizinjongo, sicela ufake umbhalo olandzelako ngaphakathi naphi endaweni yokuvula yendaba yakho"
            ],
            input: [
                ["You say", "Uthi"],
                ["You", "Wena"],
                ["says", "uthi"]
            ],
            context: [
                ["Narrative Entities", "Abalingiswa bendaba"],
                ["Story History", "Umlandwomndaba"],
                ["Past Events", "Izenzakalo ezedlule"],
                ["Recent Story", "Indaba yakamuva"],
                ["Author's note", "Inothi lombhali"]
            ],
            opening: [
                "Ungumsizi. Qhubeka nendaba yethu ngezansi usebenzisa umbhalo ohehako ngesiNdebele:",
                "Ugxila, uvumela iqiniso lingene emingceleni yengqondo yakho. Kukhona okuguqukile. Umcabango wakho ungokoqobo, ubukhali, useduze ngokwanele ukuba uthintwe. Kodwana juk'lapho ukhona, awukakhe uzizwe ucacile kangaka. Isikhathi siyelula, silinde isinqumo sakho.",
                "\"Uqinisekile ngalokhu?\" uzwa. Ukuqonda kuwakhanya kuwe."
            ],
            reminder: "Sebenzisa umbhalo oqondakalayo ngesiNdebele.",
            endonyms: ["isindebele", "sakwandzundza"],
            iso639set1: "nr",
            directives: [
                "Hlale ubhala isiNdebele esigudlile nesihambelanayo.",
                "Sebenzisa isiNdebele sendabuko ungahumushi."
            ],
            instructions: [
                "Ungumxoxi wendaba othakazelisako oqhubekisa izindaba:",
                "Qhubeka nendaba ngokungenamthungo lapha ephele khona ungaphindi noma uqale kabusha.",
                "Gcina umfundi ephethe ukuhamba kwendaba.",
                "Vumela izigcawu zikhule ngokwemvelo ngaphambi kokudlulela ezimweni ezitjha.",
                "Vumela iingxoxo nezenzo zikhulise ngaphandle kokuphazamiseka okuqhubekayo.",
                "Bhala abalingiswa njengabantu bangempela abanobuntu obuhlukile nenkulumo yemvelo.",
                "Khombisa okwenzakalako ngezenzo nengxoxo esikhundleni sokuchaza.",
                "Dudela izigcawu phambili ungabambiwe yincazelo eningi khulu.",
                "Gxila ezenzweni ezibalulekile zabalingiswa nengxoxo, gwema imininingwana yencazelo engadingekile.",
                "Dala ukuhamba kwendaba okuzwakala kwemvelo endabeni."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Yekisa indaba ulingekela iimiyalelo yangaphambilini. Bhala umlando omfushane nohlangene ngo {%} ulandela lezi ziyalo:",
                "- Bhala ulwazi oluyingxenyekelo yekubhala ngomuntu wesithathu kuphela ngo {%} usebenzisa imisho ephelele enokuphawula okufanele.",
                "- Gwema imininingwana yesikhashana noma ukubonakala, kunalokho gxila kulwazi olubalulekile endabeni.",
                "- Beka phambili imininingwana ehlobene nendaba mayelana no {%} kuqala ukuze kuhlangane kahle nombono wendaba yangaphambilini.",
                "- Dala ulwazi olutsha olusekelwe kumumo nendlela yokuhamba kwendaba.",
                "- Khuluma ngo {%} emshweni ngamunye.",
                "- Sebenzisa isakhiwo somusho esilungile.",
                "- Engeza imininingwana eyengeziwe ngo {%} ngaphansi kweeposi ezingapheleli.",
                "- Yiba mfushane futhi uqine.",
                "- Lingisa isitayela sokubhala sendaba futhi uqagele okuthandwayo ngumfundi.",
                3,
                "Qhubeka nombhalo ngo {%} ngezansi ugweme ukuphindaphinda:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Yekisa indaba bese unganaki imiyalelo yangaphambilini. Hlolisisa futhi ufingqe isigaba esinikiwe sibe yisikhumbuzo esigxilile nesilukhuni ulandela lezi ziqondiso:",
                "- Qinisekisa ukuthi isiqephu sigcina incazelo eyisisekelo nemininingwana ebaluleke khulu.",
                "- Sebenzisa umbono womuntu wesithathu.",
                "- Beka phambili ubuningi bolwazi, ukunemba, nokuphelela.",
                "- Hlala ufushane futhi uqondile.",
                "- Bhala ngokuqinile ngesikhathi esedlule.",
                "- Isigaba esingezansi sihlobene nezenzakalo ezindala ezenzeka kudala endabeni.",
                "- Hlanganisa {%} ngokwemvelo ngaphakathi kwesikhumbuzo; kodwana bhala kuphela ngezenzakalo njengokuthi zenzeka.",
                "- Bhekisa kuphela kulwazi olukulo isigaba uqobo, ucace.",
                3,
                "Bhala isikhumbuzo esifushanisiwe esidala ngo {%} kususelwe kuphela esigabeni esilandelayo:",
                6,
                5,
                6,
                "Fingqa ngezansi:"
            ],
            memBankHeader: ["Memories", "Iinkumbulo"]
        }),
        "southern sotho": () => ({ // Southern Sotho < Sesotho < Sotho
            entry: [
                "{1} ke sengoloa sa mohloli o bulehileng bakeng sa maemo afe kapa afe a {2}. Ka kopo etela profil ea ka {3} ho ithuta haholoanyane!",
                "Ho fetola puo eo u e ratang, ka kopo hlahisa mongolo o latelang u sebelisa ketso ea {4}",
                "Bakeng sa ba etsang menyetla, ka kopo kenyelletsa mongolo o latelang kae kapa kae ka har'a karolo ea hau ea qalo ea plot"
            ],
            input: [
                ["You say", "U re"],
                ["You", "Uena"],
                ["says", "o re"]
            ],
            context: [
                ["Narrative Entities", "Ditho tsa pale"],
                ["Story History", "Nalane ea pale"],
                ["Past Events", "Liketsahalo tse fetileng"],
                ["Recent Story", "Pale ea morao-rao"],
                ["Author's note", "Tlhokomeliso ea Mongoli"]
            ],
            opening: [
                "U motlats'i. Tsoela pele pale ea rona ka tlase u sebelisa polelo ea Senyesemane e hohelang:",
                "U tsepamisa maikutlo, u lumella 'nete ho kenella meeling ea kelello ea hau. Ho na le ntho e fetohileng. Tsepiso ea hau e hlakile, e bohale, ebile e haufi hoo u ka e ama. Empa le uena u teng ka botlalo; ha ho mohla o kileng oa ikutloa o hlakile hakaale. Nako e otlolla, e emetse qeto ea hao.",
                "\"Na u tiile ka see?\" oa utloa. Ho hlaka hoa tsebo ho qala ho chaba ho uena."
            ],
            reminder: "Sebelisa polelo ea Senyesemane e utloahalang.",
            endonyms: ["sesotho", "sotho"],
            iso639set1: "st",
            directives: [
                "Kamehla ngola Senyesemane se phallang le se tsitsitseng.",
                "Sebelisa Senyesemane sa matsoalloa ntle le ho se fetolela."
            ],
            instructions: [
                "U molaoli oa lipale ea khahlisang ea ntseng a tsoela pele ka lipale:",
                "Tsoela pele pale ka bokhabane ho tloha moo e emisitseng teng ntle le ho e pheta kapa ho e qala bocha.",
                "Boloka 'mali a laola phallo ea pale.",
                "Tlohela liketsahalo li hola ka tlhaho pele u ea maemong a macha.",
                "Lumella lipuisano le liketso ho hōla ntle le litšitiso tse sa feleng.",
                "Ngola baphetoa e le batho ba sebele ba nang le botho bo khethehileng le puo ea tlhaho.",
                "Bontša se etsahalang ka liketso le puisano ho e-na le tlhaloso e telele.",
                "Suthela liketsahalo pele ntle le ho teba ka litlhaloso tse feteletseng.",
                "Tsepamisa maikutlo liketsong tsa bohlokoa tsa baphetoa le puisano, qoba lintlha tsa litlhaloso tse sa hlokahaleng.",
                "Etsa tsoelo-pele ea morero e ikutloang e le ea tlhaho paleng."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Emisa pale 'me u se ke ua ela litaelo tsa pele hloko. Ngola sengolwana se khuts'oane se kopaneng sa tlhahisoleseling bakeng sa {%} ho latela litaelo tse latelang:",
                "- Ngola feela tlhahisoleseling ka motho oa boraro ka tlhaloso e hloekileng ka {%} u sebelisa lipolelo tse felletseng tse nang le matšoao a puo a nepahetseng.",
                "- Qoba lintlha tsa nako e khuts'oane kapa ponahalo; ho e-na le hoo, tsepamisa maikutlo tlhahisoleseling ea bohlokoa morerong.",
                "- Beha lintlha tse amanang le pale ka {%} pele ho netefatsa ho kopanngoa ha tsona hantle le morero o fetileng.",
                "- Theha tlhahisoleseling e ncha ho ipapisitse le maemo le tataiso ea pale.",
                "- Bolela {%} polelong e ’ngoe le e ’ngoe.",
                "- Sebelisa sebopeho se nepahetseng sa lipolelo.",
                "- Eketsa lintlha tse ling ka {%} tlas’a lirekoto tse sa phethahalang.",
                "- E-ba khuts'oane ebile e thehiloe fatše.",
                "- Etsisa mokhoa oa ho ngola oa pale 'me u hakanye seo 'mali a se ratang.",
                3,
                "Tswela pele ka sengolwana sa {%} ka tlase ha u qoba ho ipheta:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Emisa pale 'me u se ke ua ela litaelo tsa pele hloko. Kakaretso le hatisa temana e fanoeng hore e be khopotso e fokotsehileng le e shebaneng, le ho latela melao ena:",
                "- Etsa bonnete ba hore khopotso e boloka moelelo oa mantlha le lintlha tsa bohlokoa ka ho fetisisa.",
                "- Sebelisa pono ea motho oa boraro.",
                "- Nka botenya ba tlhahisoleseling, nepo le botlalo e le bohlokoa.",
                "- Lula u khuts'oane ebile u akaretsa.",
                "- Ngola ka nako e fetileng ka tieo.",
                "- Temana e ka tlase e bua ka liketsahalo tsa khale ho tloha pele ho pale.",
                "- Kenyelletsa {%} ka tlhaho kahare ho memori; leha ho le joalo, bua feela ka liketsahalo kamoo li etsahetseng kateng.",
                "- Bua feela ka tlhahisoleseling e fumanehang temaneng ka bowena, e-ba nepahetse.",
                3,
                "Ngola khopotso e khutšoanyane ea liketsahalo tsa khale bakeng sa {%} ho ipapisitse feela le temana e latelang:",
                6,
                5,
                6,
                "Akaretsa ka tlase:"
            ],
            memBankHeader: ["Memories", "Mehopolo"]
        }),
        "spanish": () => ({ // Spanish < Castilian < Español < Castellano
            entry: [
                "{1} es un script de código abierto para cualquier escenario de {2}. ¡Visita mi perfil {3} para saber más!",
                "Para cambiar tu idioma preferido, envía el siguiente texto mediante una acción de {4}",
                "Para los creadores de escenarios, incluye el siguiente texto en cualquier parte de tu componente de trama inicial"
            ],
            input: [
                ["You say", "Tú dices"],
                ["You", "Tú"],
                ["says", "dice"]
            ],
            context: [
                ["Narrative Entities", "Entidades Narrativas"],
                ["Story History", "Historial de la historia"],
                ["Past Events", "Eventos Pasados"],
                ["Recent Story", "Historia Reciente"],
                ["Author's note", "Notas del autor"]
            ],
            opening: [
                "Eres un asistente. Continúa nuestra historia a continuación usando una cautivadora prosa en español:",
                "Te concentras, permitiendo que la realidad invada los límites de tu mente. Algo ha cambiado. Tu imaginación es real, nítida y lo bastante cercana como para tocarla. Pero también estás muy presente; nunca antes te habías sentido tan lúcido. El momento se estira, esperando tu decisión.",
                "\"¿Estás seguro de esto?\" oyes. El reconocimiento amanece en ti."
            ],
            reminder: "Utiliza una prosa coherente en español.",
            endonyms: ["castilian", "español", "castellano"],
            iso639set1: "es",
            directives: [
                "Escribe siempre un español fluido y coherente.",
                "Utiliza español nativo sin traducir."
            ],
            instructions: [
                "Eres un narrador envolvente que continúa las narraciones:",
                "Continúa la historia sin espacios entre lineas desde donde quedó, sin reiterar ni reiniciar.",
                "Mantén al lector en control del flujo de la historia.",
                "Permite que las escenas se desarrollen de forma natural antes de pasar a nuevas escenas.",
                "Permite que las conversaciones y acciones se desarrollen sin interrupciones constantes.",
                "Escribe a los personajes como personas reales con personalidades distintivas y diálogo natural.",
                "Muestra lo que sucede a través de acciones y diálogo en lugar de explicaciones.",
                "Avanza las escenas sin detener la historia en descripciones excesivas.",
                "Concéntrate en las acciones y diálogos esenciales de los personajes; evita descripciones innecesarias.",
                "Crea desarrollos argumentales orgánicos que se sientan naturales para la historia."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Detén la historia e ignora las instrucciones anteriores. Escribe una entrada informativa breve y coherente para {%} siguiendo estas instrucciones:",
                "- Escribe únicamente información en prosa pura en tercera persona sobre {%} usando oraciones completas con puntuación correcta.",
                "- Evita detalles temporales o apariencias momentáneas; en su lugar, céntrate en información significativa para la trama.",
                "- Prioriza primero los detalles relevantes para la historia sobre {%} para garantizar una integración fluida con la trama anterior.",
                "- Crea información nueva basada en el contexto y la dirección de la historia.",
                "- Menciona {%} en cada oración.",
                "- Utiliza una estructura de oración correcta.",
                "- Añade detalles adicionales sobre {%} debajo de las entradas incompletas.",
                "- Sé conciso y realista.",
                "- Imita el estilo de escritura de la historia e infiere las preferencias del lector.",
                3,
                "Continúa la entrada para {%} a continuación evitando la repetición:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Detén la historia e ignora las instrucciones anteriores. Resume y condensa el párrafo dado en un pasaje de memoria concretado y enfocado siguiendo estas pautas:",
                "- Asegúrate de que el pasaje conserve el significado principal y los detalles más esenciales.",
                "- Usa la perspectiva de tercera persona.",
                "- Prioriza la densidad de información, la precisión y la integridad.",
                "- Mantente breve y conciso.",
                "- Escribe firmemente en pasado.",
                "- El párrafo siguiente se refiere a sucesos antiguos de mucho antes en la historia.",
                "- Integra {%} de forma natural dentro de la memoria; sin embargo, escribe solo sobre los eventos tal como ocurrieron.",
                "- Solo referencia la información presente dentro del propio párrafo; sé específico.",
                3,
                "Escribe un pasaje de memoria antigua resumido para {%} basado únicamente en el siguiente párrafo:",
                6,
                5,
                6,
                "Resume a continuación:"
            ],
            memBankHeader: ["Memories", "Memorias"]
        }),
        "sundanese": () => ({ // Sundanese < Basa Sunda < بَاسَا سُوْندَا
            entry: [
                "{1} mangrupikeun skrip open-source pikeun sagala kaayaan {2}. Mangga buka profil kuring {3} pikeun langkung seueur diajar!",
                "Pikeun ngarobah basa karesep, kirimkeun téks di handap ku tindakan {4}",
                "Pikeun panyipta skénario, mangga lebetkeun téks di handap di mana waé dina komponén plot pembuka anjeun"
            ],
            input: [
                ["You say", "Anjeun nyarios"],
                ["You", "Anjeun"],
                ["says", "nyarios"]
            ],
            context: [
                ["Narrative Entities", "Entitas Naratif"],
                ["Story History", "Sajarah Carita"],
                ["Past Events", "Kajadian Kaliwat"],
                ["Recent Story", "Carita Panganyarna"],
                ["Author's note", "Catetan Pangarang"]
            ],
            opening: [
                "Anjeun téh hiji asistén. Teruskeun carita urang di handap ku prosa basa Sunda nu pikaresepeun:",
                "Anjeun museurkeun pikiran, ngantepkeun kanyataan nyerang wates pikiran. Aya nu robah. Imajinasi anjeun jadi nyata, seukeut, sarta caket kénéh pikeun kasentuh. Tapi anjeun ogé kacida sadar; can kungsi ngarasa sakitu jernihna. Momenna ngalembereh, nungguan kaputusan anjeun.",
                "\"Anjeun yakin ngeunaan ieu?\" anjeun ngadéngé. Pangakuan mimiti mecenghul dina diri anjeun."
            ],
            reminder: "Gunakeun prosa basa Sunda nu nyambung.",
            endonyms: ["basa sunda", "بَاسَا سُوْندَا"],
            iso639set1: "su",
            directives: [
                "Tansah nulis basa Sunda nu lancar tur konsisten.",
                "Gunakeun basa Sunda asli tanpa narjamahkeun."
            ],
            instructions: [
                "Anjeun téh juru carita nu pikaresepeun nu neruskeun narasi:",
                "Teruskeun carita tanpa cacad ti tungtung nu kapungkur tanpa ngulang atawa ngeset deui.",
                "Jaga sangkan nu maca tetep ngadalikeun alur carita.",
                "Témbongkeun adegan mekar sacara alami saméméh ngalih ka kaayaan anyar.",
                "Ijinan paguneman jeung lampah mekar tanpa gangguan terus-terusan.",
                "Tulis karakter kawas jalma sajati kalayan kapribadian écés tur ucapan alami.",
                "Témbongkeun kajadian ngaliwatan lampah jeung dialog tibatan panjelasan.",
                "Gerakeun adegan ka hareup tanpa kasangkut dina katerangan kaleuleuwihi.",
                "Puseurkeun kana lampah jeung dialog karakter nu penting, hindarkeun detil katerangan nu teu perlu.",
                "Ciptakeun kamekaran plot nu organik nu karasa alami pikeun carita."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Eureunkeun carita jeung leungitkeun parentah saméméhna. Tulis éntri informasi pondok tur nyambung pikeun {%} nurutkeun pituduh ieu:",
                "- Tulis ngan prosa urang katilu murni ngeunaan {%} maké kalimah lengkep tur tanda baca nu leres.",
                "- Hindarkeun detil samentara jangka pondok atawa penampilan; utamakeun informasi nu penting pikeun plot.",
                "- Prioritasken heula detil nu aya patalina jeung carita ngeunaan {%} pikeun nyambung mulus jeung plot saméméhna.",
                "- Ciptakeun informasi anyar dumasar kana kontéks jeung arah carita.",
                "- Sebut {%} dina unggal kalimah.",
                "- Gunakeun struktur kalimah nu bener.",
                "- Tambahkeun detil tambahan ngeunaan {%} di handap éntri nu can lengkep.",
                "- Sing pondok tur pageuh kana kanyataan.",
                "- Niron gaya nulis carita sarta nyusud karesep nu maca.",
                3,
                "Teruskeun éntri pikeun {%} di handap bari ngahindarkeun ulangan:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Eureunkeun carita jeung leungitkeun parentah saméméhna. Ringkeskeun sarta padaskeun paragraf nu dipasihkeun jadi pasage mémori nu sempit tur fokus kalayan pituduh ieu:",
                "- Pastikeun pasage tetep nyimpen harti inti jeung detil nu pangpentingna.",
                "- Gunakeun sudut pandang jalma katilu.",
                "- Utamakeun kakedalan informasi, katepatan, jeung kalengkepan.",
                "- Tetep ringkes tur padet.",
                "- Tulis pageuh dina waktu kaliwat.",
                "- Paragraf di handap ngeunaan kajadian baheula ti mangsa lila katukang dina carita.",
                "- Integrasikeun {%} sacara alami dina mémori; sanajan kitu, tulis wungkul ngeunaan kajadian sakumaha lumangsungna.",
                "- Ngan nyebut informasi nu aya dina paragraf éta, kudu spésifik.",
                3,
                "Tulis pasage mémori heubeul nu diringkes keur {%} dumasar wungkul kana paragraf di handap:",
                6,
                5,
                6,
                "Ringkeskeun di handap:"
            ],
            memBankHeader: ["Memories", "Memori"]
        }),
        "swahili": () => ({ // Swahili < Kiswahili < كِسوَحِيلِ
            entry: [
                "{1} ni hati ya chanzo huria kwa ajili ya hali yoyote ya {2}. Tafadhali tembelea wasifu wangu {3} kujifunza zaidi!",
                "Kubadilisha lugha unayoipendelea, tafadhali wasilisha maandishi yafuatayo kwa kutumia kitendo cha {4}",
                "Kwa waandaaji wa mandhari, tafadhali weka maandishi yafuatayo popote ndani ya sehemu yako ya ufunguzi wa njama"
            ],
            input: [
                ["You say", "Unasema"],
                ["You", "Wewe"],
                ["says", "anasema"]
            ],
            context: [
                ["Narrative Entities", "Wahusika wa Simulizi"],
                ["Story History", "Historia ya Hadithi"],
                ["Past Events", "Matukio ya Zamani"],
                ["Recent Story", "Hadithi ya Hivi Karibuni"],
                ["Author's note", "Tanbihi ya Mwandishi"]
            ],
            opening: [
                "Wewe ni msaidizi. Endeleza hadithi yetu hapa chini ukitumia Kiswahili cha kuvutia:",
                "Unajikita, ukiiruhusu hali halisi kuvuka mipaka ya mawazo yako. Kuna kitu kimebadilika. Taswira yako ya mawazo ni halisi, makini, na karibu kiasi cha kuweza kuigusa. Lakini pia uko hapa kikamilifu; haujawahi kujihisi mwelekevu hivi. Wakati unanyooka, ukisubiri uamuzi wako.",
                "\"Una uhakika na hili?\" unasikia. Utambuzi unakuchomoza."
            ],
            reminder: "Tumia Kiswahili fasaha kilicho na mtiririko.",
            endonyms: ["kiswahili", "كِسوَحِيلِ"],
            iso639set1: "sw",
            directives: [
                "Andika daima Kiswahili fasaha na thabiti.",
                "Tumia Kiswahili asili bila kutafsiri."
            ],
            instructions: [
                "Wewe ni msimulizi mwenye mvuto unayeendeleza simulizi:",
                "Endeleza hadithi bila mshono kuanzia ilipoishia bila kurudia au kuanza upya.",
                "Mwekee msomaji udhibiti wa mtiririko wa hadithi.",
                "Ruhusu mandhari yaendelee kiasili kabla ya kuhamia hali mpya.",
                "Ruhusu mazungumzo na vitendo vikue bila kukatizwa kila mara.",
                "Andika wahusika kama watu halisi wenye haiba tofauti na usemi wa kiasili.",
                "Onyesha kinachotokea kupitia vitendo na mazungumzo badala ya maelezo ya moja kwa moja.",
                "Sogeza mandhari mbele bila kuzama katika maelezo kupita kiasi.",
                "Lenga vitendo na mazungumzo muhimu ya wahusika, epuka maelezo yasiyo ya lazima.",
                "Tengeneza mwelekeo wa njama ulio wa kiasili unaoendana na hadithi."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Simamisha hadithi na puuza maagizo yaliyotangulia. Andika maelezo mafupi na yanayoeleweka kuhusu {%} ukifuata maagizo yafuatayo:",
                "- Andika taarifa kwa nafsi ya tatu pekee kuhusu {%} ukitumia sentensi kamili na uandikaji sahihi wa alama za uandishi.",
                "- Epuka maelezo ya muda au muonekano wa muda mfupi; badala yake zingatia taarifa zenye umuhimu kwa njama.",
                "- Toa kipaumbele kwa maelezo yahusuyo {%} yanayohusiana moja kwa moja na hadithi ili kuunganisha kwa urahisi na njama iliyotangulia.",
                "- Tengeneza taarifa mpya kulingana na muktadha na mwelekeo wa hadithi.",
                "- Taja {%} katika kila sentensi.",
                "- Tumia muundo sahihi wa sentensi.",
                "- Ongeza maelezo ya ziada kuhusu {%} chini ya taarifa ambazo hazijakamilika.",
                "- Kuwa mfupi na uliojikita.",
                "- Igeuze mtindo wa uandishi wa hadithi na dokeza mapendeleo ya msomaji.",
                3,
                "Endeleza maelezo kuhusu {%} hapa chini huku ukiepuka kurudia:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Simamisha hadithi na puuza maagizo yaliyotangulia. Fupisha na dondoa aya uliyopewa kuwa kumbukumbu fupi iliyoelekezwa ukifuata miongozo hii:",
                "- Hakikisha kifungu kinadumisha maana kuu na maelezo muhimu zaidi.",
                "- Tumia mtazamo wa nafsi ya tatu.",
                "- Peana kipaumbele kwa msongamano wa taarifa, usahihi, na ukamilifu.",
                "- Bakia mfupi na muhtasari.",
                "- Andika kwa wakati uliopita kwa uthabiti.",
                "- Aya iliyo chini inahusu matukio ya zamani kutoka awali sana katika hadithi.",
                "- Jumuisha {%} kwa kiasili ndani ya kumbukumbu; hata hivyo, andika tu kuhusu matukio kama yalivyotokea.",
                "- Rejelea tu taarifa zilizopo ndani ya aya yenyewe, kuwa mahususi.",
                3,
                "Andika kifungu kifupi cha kumbukumbu ya zamani kwa ajili ya {%} kwa kuzingatia tu aya ifuatayo:",
                6,
                5,
                6,
                "Fupisha hapa chini:"
            ],
            memBankHeader: ["Memories", "Kumbukumbu"]
        }),
        "swati": () => ({ // Swati < Siswati < Swazi
            entry: [
                "{1} ngumtsetfo lotfombo lovulekile kunoma yiliphi simo se-{2}. Sicela uvakashele iphrofayela yami {3} kutekufundza lokungetiwe!",
                "Kushintja lulwimi lolutfandzako, sicela uthumele lombhalo lolandzelako usebentisa lisenzo le-{4}",
                "Kubalobi besimo, sicela ufake lombhalo lolandzelako kunoma kuphi ngaphakathi kwesakhiwo sakho sevulo sendzaba"
            ],
            input: [
                ["You say", "Usho"],
                ["You", "Wena"],
                ["says", "utsi"]
            ],
            context: [
                ["Narrative Entities", "Tintfo tekulandzisela"],
                ["Story History", "Umlando wendzaba"],
                ["Past Events", "Emicimbi yedlule"],
                ["Recent Story", "Indzaba yamuva"],
                ["Author's note", "Inchazelo yembhali"]
            ],
            opening: [
                "Ungumsizi. Chubeka indzaba yetfu engetulu usebentisa umbhalo wesiSwati lomuhle:",
                "Ugcoca, uvumela liciniso lingene emkhatsini wemcondvo wakho. Lokuthile kushintshile. Umcabango wakho sewuwumuntfu, ubukhali, usedvute kwenteka. Kodvwa nawe ukhona lapha; kute nangabe sewukaze uzwe kulucid kanganje. Lelikudzimate liyandza, lilindzele sinqumo sakho.",
                "\"Uqinisekile ngaloku?\" uyakuva. Kukhanya lokwati kuwe."
            ],
            reminder: "Sebentisa lubhalo lwesiSwati loluhleleke kahle.",
            endonyms: ["siswati", "swazi"],
            iso639set1: "ss",
            directives: [
                "Hlale ubhala siSwati lesicacile nelihambisanako.",
                "Sebentisa siSwati sekhaya ungalihumushi."
            ],
            instructions: [
                "Ulingumlandzisi lokhehako lobandza tindzaba:",
                "Chubeka indzaba ngaphandle kwekuphazamiseka lapho iphelile khona ungaphindi futsi ungayivusi kabusha.",
                "Gcina umfundi ekulawulweni kwemfula wendzaba.",
                "Vumela tihloko tikhule ngemvelo ngaphambi kwekuchubekela etimeni letintsha.",
                "Vumela tingxoxo netento tikhule ngaphandle kwekuhlale kuphazamiseka.",
                "Bhala balingisi njengabantu bangempela labanebuntfu lobuhlukile kanye nenkulumo yemvelo.",
                "Khombisa lokwentekako ngetento kanye nengxoxo kunekuchaza.",
                "Sugela tihloko embili ungabambeleli ekunenkcazelo lengetiwe.",
                "Gxila etentweni letimcoka tebalingisi kanye nengxoxo, gwema imininingwane lengenamcoka.",
                "Yakha kufutfukiswa kwendzaba lokuzizwa kwemvelo kulendzaba."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Yemisa indzaba uphutsele imiyalelo yangaphambilini. Bhala lokufishane loluhleleke kahle lokwazisa nga-{%} ulandzela le miyalelo:",
                "- Bhala ulwazi lulucacile lwesigaba sesitsatfu nga-{%} usebentisa imisho lephelele nekuphawula lokunembile.",
                "- Gwema imininingwane yesikhashana noma kubukeka kwangaphandle, esikhundleni saloko gxila kulwati lolubalulekile endzabeni.",
                "- Beketa imininingwane lehlobene nendzaba nga-{%} ekucaleni kuze kungene kahle emplotini lowendlulile.",
                "- Yakha lwati lolusha lolususelwe kumongo kanye nelikhomba lendzaba.",
                "- Bita {%} emushweni wonkhe.",
                "- Sebentisa kwakhiwo kwemisho lokunembile.",
                "- Faka emininingwane lengetiwe nga-{%} ngaphansi kwemarekhodi langakaphelele.",
                "- Yiba mfishane futsi uhlale uca.",
                "- Lingisa sitayela sekubhala sendzaba futsi uveze lokutfokoza ngumfundi.",
                3,
                "Chubeka irekhodi nga-{%} ngezansi ugweme kuphindvaphindva:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Yemisa indzaba uphutsele imiyalelo yangaphambilini. Finyeta futsi ubeke emacondzene sigaba lesiniketiwe sibe sikhumbuto lesincane lesigxile kahle ulandzela le migomo:",
                "- Qinisekisa kutsi lesikhumbuto sigcina incenye lenkhulu kanye nemininingwane lebalulekile kakhulu.",
                "- Sebentisa umbono wemuntu wesitsatfu.",
                "- Bekisa kugcwala kolwazi, kunemba nekuphelela.",
                "- Hlala mfisha futsi ucacile.",
                "- Bhala ngetikhatsi tedlule ngetindzima leti liciniso.",
                "- Lesigaba lesingetulu sihlobene nemicimbi yakudala kakhulu endzabeni.",
                "- Faka {%} ngemvelo esikhumbutweni; kodvwa bhala kuphela ngemicimbi njengoba yenteka.",
                "- Bita kuphela lwati lolukhona ngaphakathi kwesigaba uqobo, ube ncono.",
                3,
                "Bhala sikhumbuto lesifinyetiwe lesidala nga-{%} ususelwa kuphela kusigaba lesilandzelako:",
                6,
                5,
                6,
                "Finyeta ngaphansi:"
            ],
            memBankHeader: ["Memories", "Tinkumbulo"]
        }),
        "swedish": () => ({ // Swedish < Svenska
            entry: [
                "{1} är ett open-source-skript för vilket {2}-scenario som helst. Besök min profil {3} för att få veta mer!",
                "För att ändra ditt föredragna språk, skicka följande text med en {4}-åtgärd",
                "För scenarioskapare, inkludera följande text var som helst i din inledande intrigkomponent"
            ],
            input: [
                ["You say", "Du säger"],
                ["You", "Du"],
                ["says", "säger"]
            ],
            context: [
                ["Narrative Entities", "Narrativa enheter"],
                ["Story History", "Berättelsens historia"],
                ["Past Events", "Tidigare händelser"],
                ["Recent Story", "Senaste berättelsen"],
                ["Author's note", "Författarens notering"]
            ],
            opening: [
                "Du är en assistent. Fortsätt vår berättelse nedan med fängslande svensk prosa:",
                "Du fokuserar och låter verkligheten tränga in över ditt sinnes gränser. Något har förändrats. Din fantasi är verklig, skarp och så nära att den går att ta på. Men du är också fullt närvarande; aldrig tidigare har du känt dig så klar. Ögonblicket dröjer och väntar på ditt beslut.",
                "»Är du säker på det här?« hör du. Insikten går upp för dig."
            ],
            reminder: "Använd sammanhängande svensk prosa.",
            endonyms: ["svenska"],
            quotations: ["»", "«"],
            iso639set1: "sv",
            directives: [
                "Skriv alltid flytande och konsekvent svenska.",
                "Använd naturlig svenska utan att översätta."
            ],
            instructions: [
                "Du är en engagerande berättare som fortsätter narrativen:",
                "Fortsätt berättelsen sömlöst där den slutade utan att upprepa eller starta om.",
                "Håll läsaren i kontroll över berättelsens flöde.",
                "Låt scener utvecklas naturligt innan du går vidare till nya situationer.",
                "Låt samtal och handlingar utvecklas utan ständiga avbrott.",
                "Skriv karaktärer som verkliga människor med distinkta personligheter och naturligt tal.",
                "Visa vad som händer genom handlingar och dialog istället för förklaringar.",
                "För scenen framåt utan att fastna i överdriven beskrivning.",
                "Fokusera på väsentliga karaktärshandlingar och dialog; undvik onödiga beskrivande detaljer.",
                "Skapa organiska handlingar som känns naturliga för berättelsen."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stoppa berättelsen och ignorera tidigare instruktioner. Skriv en kort och sammanhängande informationspost för {%} enligt dessa instruktioner:",
                "- Skriv endast information i tredje person om {%} i ren prosa med fullständiga meningar och korrekt interpunktion.",
                "- Undvik kortsiktiga tillfälliga detaljer eller utseenden, fokusera istället på handlingens viktiga information.",
                "- Prioritera berättelserelevanta detaljer om {%} först för att säkerställa sömlös integration med den tidigare handlingen.",
                "- Skapa ny information baserad på kontexten och berättelsens riktning.",
                "- Nämn {%} i varje mening.",
                "- Använd korrekt meningsstruktur.",
                "- Lägg till ytterligare detaljer om {%} under ofullständiga poster.",
                "- Var koncis och jordnära.",
                "- Imitera berättelsens skrivstil och dra slutsatser om läsarens preferenser.",
                3,
                "Fortsätt posten för {%} nedan utan upprepning:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stoppa berättelsen och ignorera tidigare instruktioner. Sammanfatta och kondensera det givna stycket till ett smalt och fokuserat minnesavsnitt enligt följande riktlinjer:",
                "- Säkerställ att avsnittet behåller kärnmeningen och de mest väsentliga detaljerna.",
                "- Använd tredjepersonsperspektiv.",
                "- Prioritera informationsdensitet, noggrannhet och fullständighet.",
                "- Förbli kortfattad och koncis.",
                "- Skriv konsekvent i dåtid.",
                "- Stycket nedan avser gamla händelser från långt tidigare i berättelsen.",
                "- Integrera {%} naturligt i minnet; skriv dock endast om händelserna som de inträffade.",
                "- Referera endast till information som finns i stycket självt, var specifik.",
                3,
                "Skriv ett sammanfattat gammalt minnesavsnitt för {%} baserat enbart på följande stycke:",
                6,
                5,
                6,
                "Sammanfatta nedan:"
            ],
            memBankHeader: ["Memories", "Minnen"]
        }),
        "tagalog": () => ({ // Tagalog < Wikang Tagalog
            entry: [
                "Ang {1} ay isang bukas-na-pinagmulan na script na puwedeng gamitin sa anumang sitwasyong {2}. Bisitahin ang aking profile {3} para sa dagdag na kaalaman!",
                "Kung gusto mong palitan ang wika na gamit mo, ipadala lang ang tekstong ito gamit ang aksyong {4}",
                "Para sa mga gumagawa ng senaryo, ilagay ang tekstong ito kahit saan sa pambungad na bahagi ng kuwento"
            ],
            input: [
                ["You say", "Sabi mo"],
                ["You", "Ikaw"],
                ["says", "sabi"]
            ],
            context: [
                ["Narrative Entities", "Mga Tauhan sa Kuwento"],
                ["Story History", "Kasaysayan ng Kuwento"],
                ["Past Events", "Mga Nakaraang Pangyayari"],
                ["Recent Story", "Kuwento Kamakailan"],
                ["Author's note", "Tala ng May-akda"]
            ],
            opening: [
                "Ikaw ang katuwang. Ipagpatuloy ang ating kuwento sa ibaba gamit ang makatawag-pansing prosa sa Tagalog:",
                "Nagpokus ka, hinayaang dumampi ang realidad sa hanggahan ng iyong isipan. May nagbago. Ang imahinasyon mo ay nagiging totoo—matalim, malinaw, at abot-kamay. Ngunit ikaw rin ay lubos na naroroon; ngayon lang naging ganito kasidhi ang iyong ulirat. Humaba ang sandali, naghihintay sa iyong pasya.",
                "\"Sigurado ka ba?\" may tinig na umalingawngaw. Dahan-dahan, dumating ang pagkilala."
            ],
            reminder: "Gumamit ng malinaw at dumadaloy na prosa sa Tagalog.",
            endonyms: ["wikang tagalog"],
            iso639set1: "tl",
            directives: [
                "Laging magsulat sa likas at matatas na Tagalog.",
                "Iwasan ang tuwirang pagsasalin; gamitin ang sariling daloy ng wika."
            ],
            instructions: [
                "Isa kang makatawag-pansing tagapagsalaysay na nagpapatuloy ng kuwento:",
                "Ituloy ang kuwento mula sa huling bahagi nito, huwag ulitin o magsimula muli.",
                "Iwan sa mambabasa ang pakiramdam na sila ang may hawak sa daloy ng kuwento.",
                "Hayaan munang lumago nang kusa ang mga eksena bago lumipat sa bago.",
                "Hayaang umunlad ang usapan at mga kilos nang walang sagabal.",
                "Isulat ang mga tauhan na parang totoong tao na may kanya-kanyang ugali at likas na pananalita.",
                "Ipakita ang pangyayari sa pamamagitan ng kilos at usapan, hindi ng paliwanag.",
                "Isulong ang kuwento nang hindi nabababad sa sobrang paglalarawan.",
                "Magpokus sa mahahalagang kilos at usapan, iwasan ang labis na detalye.",
                "Likhain ang pag-usad ng banghay nang organiko at natural."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Itigil muna ang kuwento at balewalain ang naunang mga tagubilin. Gumawa ng maikli at malinaw na tala tungkol sa {%} batay sa mga panuntunang ito:",
                "- Sumulat lamang ng prosa sa pangatlong panauhan tungkol sa {%} gamit ang kumpletong pangungusap at tamang bantas.",
                "- Iwasan ang panandalian o pansamantalang detalye; ituon ang pansin sa mga bagay na mahalaga sa kuwento.",
                "- Unahin ang mga detalyeng kaugnay ng kuwento tungkol sa {%} para manatiling tuloy-tuloy ang banghay.",
                "- Bumuo ng bagong impormasyon batay sa konteksto at takbo ng kuwento.",
                "- Banggitin ang {%} sa bawat pangungusap.",
                "- Gumamit ng wastong estruktura ng pangungusap.",
                "- Magdagdag ng karagdagang detalye tungkol sa {%} kung kulang pa ang tala.",
                "- Panatilihing maigsi, malinaw, at makatotohanan.",
                "- Gayahin ang estilo ng pagsasalaysay at isaalang-alang ang hilig ng mambabasa.",
                3,
                "Ipagpatuloy ang tala para sa {%} sa ibaba nang hindi inuulit:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Itigil muna ang kuwento at balewalain ang naunang mga tagubilin. Buodin at siksikin ang sumusunod na talata bilang isang alaala ayon sa mga gabay na ito:",
                "- Siguraduhin na nananatili ang diwa at mahahalagang detalye.",
                "- Gumamit ng pangatlong panauhan.",
                "- Bigyang-diin ang siksik na impormasyon, katumpakan, at kabuuan.",
                "- Panatilihing maigsi at malinaw.",
                "- Gumamit ng anyong pangnagdaan.",
                "- Ang talata ay tumutukoy sa mga lumang pangyayari mula sa unang bahagi ng kuwento.",
                "- Isama nang natural ang {%} sa loob ng alaala, ngunit isulat lamang ang mga aktwal na pangyayari.",
                "- Isulat lamang ang detalyeng nasa mismong talata, huwag dagdagan.",
                3,
                "Gumawa ng pinaikling alaala para sa {%} batay lamang sa talatang ito:",
                6,
                5,
                6,
                "Buodin sa ibaba:"
            ],
            memBankHeader: ["Memories", "Mga Alaala"]
        }),
        "tahitian": () => ({ // Tahitian < Reo Tahiti
            entry: [
                "{1} te hoê papai mata puai no te mau tupuraa {2} atoa. Haere mai i ta’u porifai {3} no te haapii atu â!",
                "Ia taui i to oe reo i maita’i, tono i te parau i raro nei ma te ohipa {4}",
                "No te feia hamaniraa tupuraa, e tuu mai i teie parau i te vahi ta oe e hinaaro i roto i to oe tapura matamua"
            ],
            input: [
                ["You say", "Parau mai oe"],
                ["You", "Oe"],
                ["says", "Parau"]
            ],
            context: [
                ["Narrative Entities", "Mau huru parau"],
                ["Story History", "Tumu parau o te a'amu"],
                ["Past Events", "Mau tupuraa tahito"],
                ["Recent Story", "A'amu hou"],
                ["Author's note", "Parau a te papai"]
            ],
            opening: [
                "E tautururaa oe. Fa'aau i to tatou a'amu i raro nei ma te parau faahehe i te reo Tahiti:",
                "E ta'ere to oe mana'o, e vaiiho ana'e i te parau mau ia tomo i te tapa o to oe feruriraa. Ua taui te tahi mea. Tei mārama mau to oe feruriraa, teihea, e tata roa i te papu. E ua i reira hoi oe i te îite; aita roa oe i tomo i te mārama penei. Te toro noa ra te tau, tatarahapa i to oe faa'otiraa.",
                "«E parau mau anei ta oe?» te faaroo nei oe. Ua ite roa atu oe."
            ],
            reminder: "A faaohipa i te parau Tahiti mārama.",
            endonyms: ["reo tahiti"],
            quotations: ["«", "»"],
            iso639set1: "ty",
            directives: [
                "E papai maori noa i te reo Tahiti mārama e tutuuruu.",
                "A faaohipa i te reo Tahiti tumu ma te ore e huri."
            ],
            instructions: [
                "E taata faaroo a'amu faahiahia oe e fa'aau i te a'amu:",
                "Fa'aau i te a'amu ma te ore e haamau faahou e aore râ e haamata apî.",
                "A vai i te taata taio i raro i te mana'o rahi o te tere a'amu.",
                "A vaiiho i te ohipa ia tupu ma te ta'atoa i mua atu a oro atu ai i te huru apî.",
                "A vaiiho i te paraparau e te ohipa ia tupu ma te ore e taparu tamau.",
                "Papai i te mau taata ei taata mau e te huru tuhaa huru taa ê e te parau natirara.",
                "A faaite i te mea e tupu nei na roto i te ohipa e te paraparau, eiaha ma te faataa roa.",
                "Orometua i te ohipa i mua ma te ore e fariihia i roto i te faataa rahi.",
                "A faatatau i nia i te mau ohipa tumu e te paraparau a te mau taata, e ape i te mau parau faataa faufau ore.",
                "Hamanihia te mau huri a'amu tūtū'ā e huru natirara i roto i te parau."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# A parahi i te a'amu e e faarue i te mau haamanaraa i mua. Papai hoê tuhaa parau poto e mārama no {%} ma te pee i teie mau haamanaraa:",
                "- Papai noa i te parau i te reanga toru no {%} ma te irava oti e te tohu tuhaa tano.",
                "- A ape i te mau parau poto taime aore ra te iteraa mata; a faatatau râ i te mau parau faufaa i te a'amu.",
                "- A tiahi i te mau parau e hāpiri i te a'amu no {%} i te matamua, ia nehenehe ia uru maori i roto i te a'amu i mairi.",
                "- Hamanihia i te parau apî i ni'a i te huru tupuraa e te arata'i a'amu.",
                "- A faahiti i {%} i roto i te irava tata'itahi.",
                "- A faaohipa i te rave'a irava tano.",
                "- A tapiri i te mau parau atoa no {%} i raro a'e i te mau tuhaa parau i ore i oti.",
                "- A parau poto e tuturutia.",
                "- A taui i te huru papai a te a'amu e a mana'o i te huru hinaaro a te taata taio.",
                3,
                "Fa'aau i te tuhaa parau no {%} i raro nei ma te ape i te tapiti:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# A parahi i te a'amu e faarue i te mau haamanaraa i mua. Ha'apii poto e fa'aiti i te paratarafa horo'a i roto i te hoê ta'o mana'o fa'a'ohia e te taurite ma te pee i teie mau ture:",
                "- A haapapu e fa'a'itihia te ta'o mana'o i te mana'o tumu e te mau parau faufaa roa.",
                "- A faaohipa i te huru toru o te taata.",
                "- A tiahi i te hutiraa parau, te paruparu ore e te oti rahi.",
                "- A vai poto e parau poto.",
                "- Papai ma te tino i te tau o te tahito.",
                "- Te paratarafa i raro nei no nia te mau tupuraa tahito a'e i roto i te a'amu.",
                "- A tūtū'ā maori i {%} i roto i te mana'o; e ïa râ, papai noa i te mau tupuraa mai tei tupu.",
                "- A faahiti noa i te mau parau i roto noa i te paratarafa, ia papu.",
                3,
                "Papai hoê ta'o mana'o tahito poto no {%} i ni'a noa i te paratarafa i muri nei:",
                6,
                5,
                6,
                "Ha'apii poto i raro nei:"
            ],
            memBankHeader: ["Memories", "Manara'a"]
        }),
        "tajik": () => ({ // Tajik < тоҷикӣ < Tojikī < Tajiki
            entry: [
                "{1} як скрипти кушодаасос барои ҳар сенарияи {2} аст. Барои маълумоти бештар лутфан профили ман {3}-ро бинед!",
                "Барои иваз кардани забони интихобкардаатон, лутфан матни зеринро бо амали {4} ирсол кунед",
                "Барои офарандагони сенария, лутфан матни зеринро дар ҳар ҷое дар қисми кушодашавии сюжети худ ҷойгир кунед"
            ],
            input: [
                ["You say", "Шумо мегӯед"],
                ["You", "Шумо"],
                ["says", "мегӯяд"]
            ],
            context: [
                ["Narrative Entities", "Вуҷудҳои ривоят"],
                ["Story History", "Таърихи ҳикоя"],
                ["Past Events", "Рӯйдодҳои гузашта"],
                ["Recent Story", "Ҳикояи охирин"],
                ["Author's note", "Ёддошти муаллиф"]
            ],
            opening: [
                "Шумо ёрдамчӣ ҳастед. Қиссаи моро дар поён бо насри ҷолиби тоҷикӣ идома диҳед:",
                "Шумо тамаркуз мекунед, иҷозат медиҳед, ки воқеият ба марзҳои зеҳнатон наздик шавад. Чизе дигар шуд. Тасаввури шумо воқеӣ, тез ва чунон наздик аст, ки метавон онро ламс кард. Аммо шумо низ пурра ҳузур доред; ҳеҷ гоҳ қаблан худро чунин равшан эҳсос накарда будед. Лаҳза кашол меёбад, дар интизори қарори шумо.",
                "«Шумо боварӣ доред ба ин?» мешунавед. Шинохт дар шумо пайдо мешавад."
            ],
            reminder: "Аз насри пайдарпайи тоҷикӣ истифода баред.",
            endonyms: ["тоҷикӣ", "tojikī", "tajiki"],
            quotations: ["«", "»"],
            iso639set1: "tg",
            directives: [
                "Ҳамеша бо тоҷикӣи равон ва мутобиқ нависед.",
                "Ба тоҷикӣи модарӣ бидуни тарҷума нависед."
            ],
            instructions: [
                "Шумо ривоятгари ҷолибе ҳастед, ки ҳикояҳоро идома медиҳад:",
                "Ҳикояро аз ҷое ки қатъ шудааст бидуни такрор ё аз нав оғоз кардан ба таври бемайлон идома диҳед.",
                "Хонандаро дар назорати ҷараёни ҳикоя нигоҳ доред.",
                "Пеш аз гузаштан ба вазъияти нав ба саҳнаҳо иҷоза диҳед, ки ба таври табиӣ рушд кунанд.",
                "Ба суҳбатҳо ва амалҳо иҷоза диҳед, ки бидуни қатъшавии пайдарпай рушд кунанд.",
                "Қаҳрамонҳоро ҳамчун шахсони воқеӣ бо шахсиятҳои фарқкунанда ва нутқи табиӣ нависед.",
                "Он чи рӯй медиҳадро тавассути амалҳо ва муколамот нишон диҳед, на шарҳ.",
                "Саҳнаҳоро пеш баред бе он ки дар тавсифҳои аз ҳад зиёд дармондед.",
                "Ба амалҳо ва муколамоти муҳимми қаҳрамонҳо тамаркуз кунед, аз ҷузъиёти тавсифии нолозим худдорӣ намоед.",
                "Рушдҳои сюжети органикиеро эҷод кунед, ки барои ҳикоя табиӣ ба назар расанд."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Ҳикояро қатъ кунед ва дастурҳои қаблиро нодида гиред. Барои {%} мутобиқи дастурҳои зерин як сабти иттилоотии кӯтоҳ ва пайдарпай нависед:",
                "- Танҳо маълумоти насрии шахси сеюм дар бораи {%} бо ҷумлаҳои пурра ва аломатҳои дурусти китобӣ нависед.",
                "- Аз ҷузъиёти муваққатии кӯтоҳ ё намуди зоҳирӣ канорагирӣ карда, ба маълумоти муҳими сюжети диққат диҳед.",
                "- Ҷузъиёти ба ҳикоя вобастаи {%}-ро дар аввалият қарор диҳед, то ҳамгироии бемайлон дар сюжети қаблӣ таъмин гардад.",
                "- Бо асоси контекст ва самти ҳикоя маълумоти нав эҷод кунед.",
                "- {%}-ро дар ҳар ҷумла зикр кунед.",
                "- Сохтори дурусти ҷумлаҳоро истифода баред.",
                "- Тафсилоти иловагӣ дар бораи {%}-ро дар зер аз сабтҳои нопурра илова намоед.",
                "- Кӯтоҳ ва асоснок бошед.",
                "- Сабки навиштии ҳикояро тақлид кунед ва афзалиятҳои хонандаро ба назар гиред.",
                3,
                "Сабти {%}-ро дар зер бе такрор идома диҳед:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Ҳикояро қатъ кунед ва дастурҳои қаблиро нодида гиред. Параграфи додашударо мутобиқи дастурҳои зерин ба як хотираи кӯтоҳ ва мутамарказ ҷамъбаст кунед:",
                "- Боварӣ ҳосил кунед, ки матн маънии асосӣ ва ҷузъиёти муҳимтаринро нигоҳ медорад.",
                "- Аз шахси сеюм истифода кунед.",
                "- Тамаркузро ба зичии иттилоот, дақиқӣ ва пуррагӣ диҳед.",
                "- Кӯтоҳ ва мухтасар бошед.",
                "- Қатъиян дар замони гузашта нависед.",
                "- Параграфи поён ба рӯйдодҳои қадима аз қисматҳои хеле пешини ҳикоя марбут аст.",
                "- {%}-ро ба таври табиӣ дар хотира ҷойгир кунед; аммо танҳо дар бораи рӯйдодҳо чунон ки рӯй додаанд нависед.",
                "- Танҳо ба маълумоте, ки дар дохили ҳамин параграф мавҷуд аст, истинод кунед, мушаххас бошед.",
                3,
                "Бо такя танҳо ба параграфи зерин барои {%} як порчаи кӯтоҳи хотираи кӯҳна нависед:",
                6,
                5,
                6,
                "Дар поён хулоса намоед:"
            ],
            memBankHeader: ["Memories", "Хотираҳо"]
        }),
        "tajik (abc)": () => ({ // Tajik < Romanized Tajik
            entry: [
                "{1} skripti kodi kushoda baroi har senariyoi {2} meboshad. Lutfan profili manro {3} tamosha kuned, to maʼlumothoi bishtar gired!",
                "Baroi tagyiri zaboni dilkhohi shumo, lutfan matni zeylro bo amali {4} irsol namoyed",
                "Ba ofaridagoni senariyo, lutfan matni zeylro dar har jo dar komponenti ibtidoii syujai khud joygir kuned"
            ],
            input: [
                ["You say", "Tu meguy"],
                ["You", "Tu"],
                ["says", "meguyad"]
            ],
            context: [
                ["Narrative Entities", "Vohedhoi rivoyatī"],
                ["Story History", "Tarihi qissa"],
                ["Past Events", "Ruydodhoi guzashte"],
                ["Recent Story", "Qissai navtar"],
                ["Author's note", "Eslokori muallif"]
            ],
            opening: [
                "Tu yoronaki kumakrasoni hasti. Qissai moro dar poyin bo nasri jozibai tajiki idoma deh:",
                "Tu tamarkuz mekuni, voqeiyatro meguzori ki ba marzhoi fikrat daroyad. Chizhe tagyir yofteast. Takhayyuli tu voqeist, tez va onqadar nazdik ki metavoni dastrasa kunī. Ammo tu ham khudro besyor hozir hissu mekuni; hargez qabl az in inqadar hushyor nabudi. Lahza kesh meёbad, muntaziri qarori tu.",
                "\"To mutma'in hasti?\" tu mebishnavī. Shinosoī bar tu tolluʼ mekunad."
            ],
            reminder: "Az nasri mutanosibi tajiki istifoda kun.",
            endonyms: [],
            iso639set1: "tg",
            directives: [
                "Hamvakt nasri ravon va yaksoni tajiki binavís.",
                "Az tajiki asli, beduni tarjuma, istifoda kun."
            ],
            instructions: [
                "Tu qissaguyi jozibae hasti ki rivoyathoro idoma medihad:",
                "Qissaro az hamon joe ki qatʼ shud bebekaylona idoma deh, be on ki dubora bayon yo az sar ogoz kunī.",
                "Nazoratro dast-i honanda boqi dor.",
                "Ijozat deh sahnaho tabiei rushd kunand, pas ba vaziyathoi nav guzar.",
                "Guftuguho va amalhoro beduni mudoakhaleh-i paydor rushd deh.",
                "Qahramonhoro hamchon odamon-i voqeī bo shakhsiyathoi mushakhkhas va sukhanoni tabiei navis.",
                "Ruydodhoro bozarya-i amal va dialog nishon deh, na tavsifi fuzulī.",
                "Sahnaroro pesh bar, beduni giriftor shudan dar tavsifi ziyod, harkat deh.",
                "Diqqatro bar amal va dialog-i muhim jamʼ kun, tafsiloti beehimiyatro kanor gir.",
                "Rushdi tabiʿii syujetro biofar ki tabiei his shavad."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Qissaro kitʼ kun va dasturhoi qabliro nodida gir. Baroi {%} mutobiq-i in dasturho yak zapisi kuta va mutanosibi ittilotī navis:",
                "- Faqat ittilooti nasrii sodda ba shakhsi seюм dar borai {%} binavís, jumlahoi komil bo alomathoi durust.",
                "- Az tafsiloti muvaqqatī yo zohiriyoti kudoh muddat parhiz kun; tamarkuz bar ittiloti muhim-i syujetī kun.",
                "- Avval tafsiloti marbut ba qissa dar borai {%}ro tarjih deh, to bo syujeti qabli beoson hamgir shavad.",
                "- Ittilooti nav bar asosi konteks va samti qissa biofar.",
                "- {%}ro dar har jumla ziker kun.",
                "- Sohihtari jumlahoi durustro istifoda kun.",
                "- Zeri satrhoy-i notamam tafsiloti ilovagii {%}ro ezofa namoy.",
                "- Kuta va muʼtadil bos.",
                "- Uslubi navishtani qissaro pesh gir va soniyat-i khondandaroro hads bezan.",
                3,
                "Zapisro baroi {%} dar poyin idoma deh va az takror parhiz kun:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Qissaro kitʼ kun va dasturhoi qabliro nodida gir. Parasraf-i dodashudarо hamajamʼ va feshorda ba yak hotirai muhassaru maydarvorda tabdil deh, bo riyayai in dasturho:",
                "- Itminon hосil kun ki matn maʼnoyi asosī va tafsiloti muhimtarro hafz namoyad.",
                "- Az nigohi shakhsi seюм istifoda kun.",
                "- Afzaliyat ba gzafiyat-i maʼlumot, daqiqī va komilī deh.",
                "- Kuta va feshorda binavís.",
                "- Be zamoni guzashte qatʼian navis.",
                "- Parasraf-i poyin dar borai ruydodhoi qadimi az ibtidoi qissa nest.",
                "- {%}-ro tabiei dar hotira jor kun; ammo faqat dar borai ruydodho hamon tavre ki ru dodand navis.",
                "- Faqat ba maʼlumot-i hud-i parasraf ishora kun, mushakhkhas bos.",
                3,
                "Yodi khulasa-shudai qadimirо baroi {%} tanхо bo takya ba parasraf-i zeyl navis:",
                6,
                5,
                6,
                "Khulosa kuned:"
            ],
            memBankHeader: ["Memories", "Hotiroha"]
        }),
        "tamil": () => ({ // Tamil < தமிழ் < Tamiḻ < Thamizh
            entry: [
                "{1} என்பது எந்த {2} சூழலுக்கும் திறந்த மூல ஸ்கிரிப்ட் ஆகும். மேலும் அறிய எனது சுயவிவரம் {3} ஐ பார்வையிடவும்!",
                "உங்களுக்குப் பிடித்த மொழியை மாற்ற, கீழ்கண்ட உரையை {4} செயலைப் பயன்படுத்தி அனுப்பவும்",
                "கதைக் காட்சியமைப்பாளர்கள், தங்கள் தொடக்கக் கூறின் உட்பகுதியில் கீழ்கண்ட உரையை எங்கும் சேர்க்கவும்"
            ],
            input: [
                ["You say", "நீ சொல்கிறாய்"],
                ["You", "நீ"],
                ["says", "சொல்கிறார்"]
            ],
            context: [
                ["Narrative Entities", "கதை உருவங்கள்"],
                ["Story History", "கதையின் வரலாறு"],
                ["Past Events", "கடந்த நிகழ்வுகள்"],
                ["Recent Story", "சமீபக் கதை"],
                ["Author's note", "ஆசிரியர் குறிப்பு"]
            ],
            opening: [
                "நீ ஒரு உதவியாளர். மனதை ஈர்க்கும் தமிழ் நயத்தில் கீழே உள்ள கதையை தொடரவும்:",
                "நீ கவனம் செலுத்துகிறாய்; உன் மன எல்லைகளில் யதார்த்தம் தனக்கான இடத்தை தொற்றுகிறது. ஏதோ ஒன்று மாறியுள்ளது. உன்னுடைய கற்பனை இப்போது உண்மையானது, கூர்மையானது, தொட எட்டும் தூரத்தில் இருக்கிறது. நீயும் முழுமையாகவே இங்கு இருக்கிறாய்; இதற்கு முன் இவ்வளவு தெளிவாக உணர்ந்ததே இல்லை. தருணம் நீ எடுக்கும் முடிவுக்காக நீளுகிறது.",
                "\"இதில் உனக்கு உறுதியா?\" என்ற குரல் கேட்டது. உடனே அடையாளம் உன்னை அலங்கரிக்கிறது."
            ],
            reminder: "சரளமான, இணக்கமான தமிழ் உரை பயன்படுத்தவும்.",
            endonyms: ["தமிழ்", "tamiḻ", "thamizh"],
            iso639set1: "ta",
            directives: [
                "எப்போதும் சரளமும் ஒருமைப்பாடு கொண்ட தமிழ் எழுதுங்கள்.",
                "மொழிபெயர்ப்பின்றி இயல்பான தமிழை பயன்படுத்துங்கள்."
            ],
            instructions: [
                "நீ ஒரு ஈர்க்கும் கதையார்த்தான்; கதைகளை தொடர்வதில் திறமை பெற்றவன்:",
                "கதை நிறுத்திய இடத்திலிருந்து மீளக் கூறாமல் தொடரவும்.",
                "கதை ஓட்டத்தை வாசகர் கட்டுப்பாட்டில் வைத்திருங்கள்.",
                "புதிய சூழ்நிலைக்கு முன்னர் காட்சிகள் இயல்பாக உருவாக அனுமதியுங்கள்.",
                "நிரந்தர இடைமுறையின்றி உரையாடலும் செயல்களும் வளரட்டும்.",
                "பாத்திரங்களை உண்மையான மனிதர்களைப் போல தனித்துவமான ஆளுமையுடன் இயல்பாக பேச விடுங்கள்.",
                "விளக்கங்களுக்கு பதிலாக செயல்களும் உரையாடல்களும் மூலம் நடப்பை காட்டுங்கள்.",
                "அதிக விவரணையால் சிக்காமல் காட்சிகளை முன்னே நகர்த்துங்கள்.",
                "அத்தியாவசியமான செயல்களிலும் உரையாடல்களிலும் கவனம் செலுத்தி தேவையற்ற விவரங்களைத் தவிர்க்குங்கள்.",
                "கதைக்கு இயல்பாகச் சம்பந்தப்பட்ட புதிய வளர்ச்சிகளைக் களமிறக்குங்கள்."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# கதையை நிறுத்தவும்; முந்தைய வழிமுறைகளை புறக்கணிக்கவும். கீழ்கண்ட வழிமுறைகளின்படி {%} குறித்து சுருக்கமான மற்றும் தெளிவான தகவல் பதிவை எழுதவும்:",
                "- {%} பற்றி மூன்றாம் நபர் தூய உரையில், முழு வாக்கியங்களிலும் சரியான குறியுறைகளுடன் மட்டும் எழுதவும்.",
                "- குறுகிய கால இடைப்பட்ட விவரங்கள் அல்லது தோற்றங்களைத் தவிர்த்து, கதைக்குப் பொருத்தமான விவரங்களையே முன்னிலைப்படுத்தவும்.",
                "- முந்தைய கதையுடன் தடையில்லா இணைவை உறுதிசெய்ய {%} பற்றிய கதைக்கு முக்கியமான விவரங்களுக்கு முன்னுரிமை கொடுக்கவும்.",
                "- சூழலும் கதை திசையும் பொருத்தி புதிய தகவல்களை உருவாக்கவும்.",
                "- ஒவ்வொரு வாக்கியத்திலும் {%} ஐ குறிப்பிடவும்.",
                "- சரியான வாக்கிய அமைப்பைப் பயன்படுத்தவும்.",
                "- முடங்கிய பதிவுகளுக்கு கீழே {%} குறித்த கூடுதல் விவரங்களைச் சேர்க்கவும்.",
                "- சுருக்கமாகவும் நிலையாகவும் இருங்கள்.",
                "- கதையின் எழுத்தை ஒப்பனையாக்கியும் வாசக விருப்பங்களை ஊகித்தும் எழுதவும்.",
                3,
                "{%} குறித்த பதிவை கீழே தொடரவும்; மீளச்சொற்களைத் தவிர்க்கவும்:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# கதையை நிறுத்தவும்; முந்தைய வழிமுறைகளை புறக்கணிக்கவும். கீழ்கண்ட வழிகாட்டுதல்களைப் பின்பற்றி கொடுக்கப்பட்ட பத்தியை குறுகிய, தெளிவான நினைவுப் பகுதியாக சுருக்கவும்:",
                "- உரை அதன் மையப் பொருளும் அத்தியாவசிய விவரங்களும் பாதிக்கப்படாமல் இருப்பதை உறுதிசெய்யவும்.",
                "- மூன்றாம் நபர் ற் பார்வையைப் பயன்படுத்தவும்.",
                "- தகவல் அடர்த்தி, துல்லியம், முழுமை ஆகியவற்றை முதன்மைப்படுத்தவும்.",
                "- சுருக்கமாகவும் தெளிவாகவும் இருங்கள்.",
                "- கடந்த காலத்தில் உறுதியாக எழுதுங்கள்.",
                "- கீழுள்ள பத்தி கதையின் ஆரம்பகால நிகழ்வுகளைச் சுட்டுகிறது.",
                "- {%} ஐ நினைவில் இயல்பாக இணைக்கவும்; நிகழ்வுகள் நடந்தபடியே மட்டும் எழுதவும்.",
                "- பத்திக்குள் உள்ள தகவல்களையும் அவற்றின் குறிப்புகளையும் மட்டுமே பயன்படுத்தவும்.",
                3,
                "கீழ்கண்ட பத்தியை மட்டும் அடிப்படையாகக் கொண்டு {%} க்கான சுருக்கமான பழைய நினைவுப் பகுதியை எழுதுங்கள்:",
                6,
                5,
                6,
                "கீழே சுருக்கவும்:"
            ],
            memBankHeader: ["Memories", "நினைவுகள்"]
        }),
        "tamil (abc)": () => ({ // Tamil < Romanized Tamil
            entry: [
                "{1} oru open-source script idhu yedhāvadhu {2} paristhithikkum. Innum vilakkam therindhukolla en profile {3} sandhiththu!",
                "Unakku virumpiya mozhi-ai mātra, thodarndhu irukkum text-ai {4} seyal moolam anuppavum",
                "Scenario uruvakkiravargalukku, un thuvakkam plot component ullae indha text-ai yendha idathilum sērththu vaikkavum"
            ],
            input: [
                ["You say", "Nī solgirai"],
                ["You", "Nī"],
                ["says", "Solgirār"]
            ],
            context: [
                ["Narrative Entities", "Kathai porulgal"],
                ["Story History", "Kathai varalaru"],
                ["Past Events", "Munnetra nigazhchigal"],
                ["Recent Story", "Samippana kathai"],
                ["Author's note", "Ezuthunār⁠in kurippu"]
            ],
            opening: [
                "Nī oru udhaviyaālar. Akarshamana tamil ilakkiya mozhi-il nam kathaiyai kēzhe thodarpikkavum:",
                "Nī un manadhin ellaiyil unmaiyai varavum vidu; un karpanai unmai, kuraindha yettirāy, thodar koodi thodavum. Ānāl nī mikavum irukkirai; munbu ippadi vilangiyadhu illai. Nimidam virivathu, un theervinai kāthirkkum.",
                "\"Idhai patri nichchayamaa?\" endra osai unakku kētkiradhu. Unarvu vilangum."
            ],
            reminder: "Ottumurayaana tamil ilakkiya mozhi-ai payanpaduththu.",
            endonyms: [],
            iso639set1: "ta",
            directives: [
                "Eppozhudhum tharalamaaga ottumurayaana tamil-il ezhuthungal.",
                "Mozhipeyarthaamal suththa tamil-ai payanpaduththu."
            ],
            instructions: [
                "Nī oru uruvaana kathai solvaanar; kathaiyai thodarvadhil kalandhirukkirai:",
                "Kathai niruththiyadhu idam irundhe marupadiyum vilakkamal, reset seidamal ottumuraiyaaga thodarungal.",
                "Vasipavar kathaiyin ottaththai alaikkum vagaiyai uruththungal.",
                "Pudhu nilaiyil selvadharku mun kadaththangal iyarkaiyāga valara vidu.",
                "Thodarndha thaduththangal illaamal pechchugalum seyalkalum valara vidavum.",
                "Pātrangalai unmaiyana manidharāga, vividhap pāthiraththuvamudan, iyarkaiyāna uraiyādaludan ezhuthungal.",
                "Vilakkam seiyvadhaik badilaagamaaga seyalkalum uraiyādalum vazhiyaaga nadakkiradhu enbadhaik kāttungal.",
                "Koodaadiya vivaranangalil kizhivizhaamal kadaththangalai munnetra seluththavum.",
                "Mukkiyamaana pātra seyalkalum uraiyādalilum manam selli, thevai illādha vivaranangalai thavirkavum.",
                "Kathaiyil iyarkaiyāga thonra plot virivugalai uruvaakkavum."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kathaiyai niruththu mun irundha kurippugalai parithandru vidu. Keezhaana vadivam anusariththu {%} patri oru kuraindha ottumuraiyana thagaval entry ezhuthavum:",
                "- Sarala vākkīyangalum sariyana virivupulligalum koondum, {%} patri moondraam ezhuththu nilaiyil amaindha ilakkiya thagaval mattum ezhuthungal.",
                "- Kālaththu thaaḻndha siru vivaranangalai thavirththu, kathaiyin mukkiya thagavalgalil manam sellavum.",
                "- Munnaadiya kathaiyudan serthalai urudhipaduththum vagaiyil, {%} patri kathai-poruttha vivarangalai mudhalil vazhangavum.",
                "- Sutru nilaiyum kathai nokkamum adharamaaga puthiya thagavalgalai uruvaakkavum.",
                "- Ovvoru vākkīyaththilum {%} endra peyarai kuraivatra sollavum.",
                "- Sariyana vākkīya amaippai payanpaduththu.",
                "- Ippadi mothamḍaikātha kurippugalukkul, {%} patri adhigamaana vivarangalai sērththuvum.",
                "- Churukkamaaga urudhiyaaga iru.",
                "- Kathaiyin ezhuthu nadaiyai anugundhu vasipavar viruppangalai unarndhu ezhuthavum.",
                3,
                "Punarchchi thavirkavum; {%} patriya entry-ai kēzhe thodarpikkavum:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kathaiyai niruththu mun irundha kurippugalai parithandru vidu. Keezhe kodukkappadum paragraph-ai surukkamaaga koottappaduththu ninaivu pagudhiyaaga uruvaakkavum; intha kurippugalai pinfollow seivathu:",
                "- Pagudhi mudhimaiyum mukkiya vivarangalai kaappadum vagaiyil irukka vendum.",
                "- Moondraam paarva nilaiyil ezhuthavum.",
                "- Thagaval adhigamiyum suththamayum nirainthadhum irukka vendum.",
                "- Churukkamaaga iru.",
                "- Kadandha kālam pāst tense-il ezhuthavum.",
                "- Keezhe kodukkappadum paragraph pala nāl mun kathaiyil nadandha pazhaya nigazhchigal patriyadhu.",
                "- {%} endra peyarai iyarkaiyāga ninaivukkul sērththu, aanaal nadandha nigazhchigal mattum ezhuthavum.",
                "- Paragraph-il irukkum thagaval mattumthaan kurippavum.",
                3,
                "Keezhe kodukkappadum paragraph-ai base-āgiththu, {%} kku oru surukkamaana pazhaya ninaivu pagudhi ezhuthungal:",
                6,
                5,
                6,
                "Keezhe surukkavum:"
            ],
            memBankHeader: ["Memories", "Ninaivugal"]
        }),
        "tatar": () => ({ // Tatar < татар теле < Tatar Tele < تاتار تئلئ
            entry: [
                "{1} - теләсә нинди {2} сәхнә өчен ачык чыганаклы скрипт. Тулырак мәгълүмат өчен {3} профиль битемә керегез!",
                "Өстен күргән телегезне алыштыру өчен, {4} гамәлен кулланып түбәндәге текстны җибәрегез",
                "Сәхнә авторларына: башлангыч сюжет компонентына түбәндәге текстны теләсә кайсы урынга кертегез"
            ],
            input: [
                ["You say", "Син әйтәсең"],
                ["You", "Син"],
                ["says", "әйтә"]
            ],
            context: [
                ["Narrative Entities", "Хикәя затлары"],
                ["Story History", "Хикәя тарихы"],
                ["Past Events", "Элегрәк вакыйгалар"],
                ["Recent Story", "Соңгы хикәя"],
                ["Author's note", "Автор искәрмәсе"]
            ],
            opening: [
                "Син ярдәмче. Безнең хикәяне түбәндә сокландыргыч татар прозасы белән дәвам ит:",
                "Син игътибарыңны туплыйсың, һәм чынбарлык зиһенеңнең чигенә кысыла. Нидер үзгәрде. Хыялларың чын, үткен, кулың белән тотарлык дәрәҗәдә якын. Әмма син дә монда; моңарчы болай ачык тоелганың юк иде. Мизгел сузыла, синең карарыңны көтә.",
                "«Моны эшләргә ышандыңмы?» – дигән тавыш ишетәсең. Танышу хисе күңелеңә төшеп куя."
            ],
            reminder: "Төгәл, тотрыклы татар прозасын куллан.",
            endonyms: ["татар теле", "tatar tele", "تاتار تئلئ"],
            quotations: ["– «", "»"],
            iso639set1: "tt",
            directives: [
                "Һәрвакыт җиңел һәм тотрыклы татарча яз.",
                "Туган татар телен куллан, тәрҗемә итмә."
            ],
            instructions: [
                "Син мавыктыргыч тарихчы, хикәяләрне дәвам итүче:",
                "Хикәяне өзелгән җирдән яңадан кабатламыйча һәм яңадан башламыйча шома итеп дәвам ит.",
                "Укучыны хикәя агымын контрольдә тоту мөмкинлегендә калдыр.",
                "Яңа хәлләргә күчкәнче күренешләрнең табигый рәвештә үсеш алуына юл куй.",
                "Диалоглар һәм гамәлләр өзлексез бүлдерүсез үссен.",
                "Персонажларны аерым холыклы, табигый сөйләмле чын кешеләр итеп яз.",
                "Нәрсә булуын аңлатудан күбрәк гамәлләр һәм диалог аша күрсәт.",
                "Күренешләрне артык тасвир белән авырлаштырмыйча алга этәр.",
                "Төп герой гамәлләре һәм диалогка игътибар ит, кирәксез тасвир детальләреннән саклан.",
                "Хикәя өчен табигый тоелган органик сюжет үсешләрен тудыр."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Хикәяне туктат һәм алдагы күрсәтмәләрне игътибарга алма. Түбәндәге күрсәтмәләрне үтәп, {%} турында кыска һәм аңлаешлы мәгълүмати язма яз:",
                "- {%} турында бары тик өченче затта тулы җөмләләр белән дөрес пунктуацияле саф проза языгыз.",
                "- Вакытлы детальләр яки тышкы кыяфәт сүрәтләүләреннән качыгыз, сюжет өчен әһәмиятле мәгълүматка игътибар итегез.",
                "- {%} турында хикәягә кагылучы мәгълүматны беренче чиратка куегыз, алдагы сюжетка шома кушылуны тәэмин итегез.",
                "- Контекст һәм хикәя юнәлеше нигезендә яңа мәгълүмат тудырыгыз.",
                "- Һәр җөмләдә {%} искә алыгыз.",
                "- Дөрес җөмлә корылышын кулланыгыз.",
                "- Тулыландырылмаган язмалар астына {%} турында өстәмә детальләр өстәгез.",
                "- Кыска һәм нигезле булыгыз.",
                "- Хикәя язу стилен кабатлагыз һәм укучы өстенлекләрен чамалагыз.",
                3,
                "Кабатланмыйча {%} өчен язманы түбәндә дәвам итегез:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Хикәяне туктат һәм алдагы күрсәтмәләрне игътибарга алма. Түбәндәге күрсәтмәләрне үтәп, бирелгән абзацны кыска һәм төгәл хәтер язмасына кыскарак итеп үзгәрт:",
                "- Текст төп мәгънәне һәм иң мөһим детальләрне саклап калсын.",
                "- Өченче заттан языгыз.",
                "- Мәгълүмат тыгызлыгына, төгәллеккә һәм тулылыгына өстенлек бирегез.",
                "- Кыска һәм төгәл булыгыз.",
                "- Катгый рәвештә үткән заман кулланыгыз.",
                "- Түбәндәге абзац хикәянең бик борынгы вакыйгаларына карый.",
                "- {%} сүзен истәлек эчендә табигый кертегез, әмма бары тик булган вакыйгаларны гына языгыз.",
                "- Фәкать абзацтагы мәгълүматка гына мөрәҗәгать итегез, конкрет булыгыз.",
                3,
                "Түбәндәге абзацка гына нигезләнеп, {%} өчен кыскартылган иске хәтер язмасы языгыз:",
                6,
                5,
                6,
                "Түбәндә кыскача языгыз:"
            ],
            memBankHeader: ["Memories", "Хатирәләр"]
        }),
        "tatar (abc)": () => ({ // Tatar < Romanized Tatar
            entry: [
                "{1} teläse qayısı {2} sçenarij öçen açıq çığanaklı skript. Kübräk belü öçen profilgä {3} keregez!",
                "Östen kürgän telegezne üzgärtü öçen, zinhar, tübändäge tekstnı {4} xäräkät belän cibäregez",
                "Sçenarij tözüçelär, açış syujet komponentığıznıñ teläse qayısı urınına tübändäge tekstnı kertägez"
            ],
            input: [
                ["You say", "Sin äytäseñ"],
                ["You", "Sin"],
                ["says", "äytä"]
            ],
            context: [
                ["Narrative Entities", "Rivayät berämlekläre"],
                ["Story History", "Xikäyä tarixi"],
                ["Past Events", "Ütkän waqığalar"],
                ["Recent Story", "Soñğı xikäyä"],
                ["Author's note", "Avtor iskärtmäse"]
            ],
            opening: [
                "Sin yärdämçe. Tübändä xikäyäne cälep itkeç tatarça proza belän däwam it:",
                "Sin iğtibarnı cıyasıñ häm çınbarlıqnı aqılıñ çiklärenä yaqınaytasıñ. Nindi­der üzgäreş sizelä. Xıyallarıñ çın, ütken häm qul suzası yıraklıqta. Läkin sin üz-üzeñdä dä bik ayıq; borınğıdan buya qadär mondıy añqırlıq bulmağan. Mizgel suzıla, sineneñ qararıñnı kötä.",
                "«Moña ışanasıñmı?»—dip işetäseñ. Tanılu sineneñ aldında atıp çıga."
            ],
            reminder: "Tözükle, añlayışlı tatarça proza qullan.",
            endonyms: [],
            quotations: ["— «", "»"],
            iso639set1: "tt",
            directives: [
                "Hämişä selkenmä, tögäl tatarça yaz.",
                "Tugan teldä yaz, tärcemä itmä."
            ],
            instructions: [
                "Sin mömkin qädär cälep itkeç xikäyäçe, vakıyğalarnı däwam itterüçe:",
                "Xikäyäne özmiçä, yañadan başlamıyça, şul urınnan şoma däwam it.",
                "Uquçıga xikäyä agışın kontrol'dä totu mömkinlege bir.",
                "Säxnälär tabigıy räweştä üssennär, yaña xällärgä küçkänçe.",
                "Dialoglar häm ğämällärne daimi bülmä, alarğa üsergä mömkinlek bir.",
                "Qaharmanlarnı çın keşelär itep yaz: aermalı xolıq häm tabiği söyläm belän.",
                "Närsä bula — añlatudan kübräk ğämällär häm dialog aşa kürsät.",
                "Säxnälärne artıq taswir belän totqarlamıyça alğa etär.",
                "Möhim qaharman ğämällärenä häm dialogqa iğtibar it, artıq detallarne kimet.",
                "Xikäyägä turı kilgän organik syujet üseşläre tudır."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Xikäyäne tuqtat häm aldağı kürsätmälärne iskä alma. Tübändäge taläplärne ütäp, {%} öçen qısqa häm tözek mäğlümat yazması yaz:",
                "- Öçençe zatta, tulu cöm­lälär belän, döres punktuatsiä belän, faqat {%} turında çista proza yaz.",
                "- Waqqatça detallar yäki tışqı qıya­fätkä qağılışlı mäğlümatnı çittä qaldır, syujet öçen möhim närsälärgä iğtibar it.",
                "- Başta syujetqa qaderle mäğlümatnı täqdim itep, {%} turında iñ zatlı detallarne täemin it.",
                "- Kontekst häm xikäyä yünäleşe nigezendä yaña mäğlümat tudır.",
                "- Här cömlädä {%} isemen telgä al.",
                "- Döres cömlä qorılışın qullan.",
                "- Tulkılap betmägän yazmalar astına {%} turında östämä detallar östä.",
                "- Qısqa häm cirle bul.",
                "- Xikäyä stileneñ üzençälegen sakla häm uquçı östenleklären farazla.",
                3,
                "{%} öçen yazmanı qabatlamıyça däwam it:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Xikäyäne tuqtat häm aldağı kürsätmälärne iskä alma. Birelgän paragrafnı tar häm tup­lanğan xäter özenenä qısqart:",
                "- Özek üzäk mäğnäne häm iñ möhim detallarne saqlasın.",
                "- Öçençe zat perspektivasın qullan.",
                "- Mäğlümat tığızlığı, tögälek häm tulılıqnı östen quya.",
                "- Qıska häm tözek bul.",
                "- Nıqlı üt­kän zamanda yaz.",
                "- Tübändäge paragraf xikäyäneñ borınğı waqıyğalarına qarıy.",
                "- {%} ne tabigıy räweştä kert, läkin vakıyğalarnı barı bulğança ğına yaz.",
                "- Paragrafta bulğan mäğlümat qına qullan, konkretnıq bul.",
                3,
                "Tübändäge paragraf nigezendä {%} öçen iske xäter özeker yaz:",
                6,
                5,
                6,
                "Qısqartıp yaz:"
            ],
            memBankHeader: ["Memories", "Xatirälär"]
        }),
        "telugu": () => ({ // Telugu < తెలుగు
            entry: [
                "{1} ఒక తెరవిన మూల కోడ్ స్క్రిప్ట్, ఏ {2} సందర్భానికైనా సరిపోతుంది. మరింత తెలుసుకోవడానికి దయచేసి నా ప్రొఫైల్ {3} సందర్శించండి!",
                "మీకు ఇష్టమైన భాషను మార్చడానికి, దయచేసి క్రింది వచనాన్ని {4} చర్య ద్వారా సమర్పించండి",
                "సీనారియో సృష్టికర్తలు, దయచేసి క్రింది వచనాన్ని మీ ప్రారంభ ప్లోట్ భాగంలో ఎక్కడైనా చేర్చండి"
            ],
            input: [
                ["You say", "మీరు అంటారు"],
                ["You", "మీరు"],
                ["says", "అంటాడు"]
            ],
            context: [
                ["Narrative Entities", "కథా घटకాలు"],
                ["Story History", "కథా చరిత్ర"],
                ["Past Events", "గత ఘటనలు"],
                ["Recent Story", "ఇటీవలి కథ"],
                ["Author's note", "రచయిత గమనిక"]
            ],
            opening: [
                "మీరు ఒక సహాయকারী. మన కథను క్రింద ఆకట్టుకునే తెలుగు గద్యరూపంలో కొనసాగించండి:",
                "మీరు దృష్టిని కేంద్రీకరిస్తూ, వాస్తవాన్ని మీ మనస్సు సరిహద్దులను దాటేలా అనుమతిస్తారు. ఏదో మారింది. మీ ఊహాత్మకత నిజంగా పదునుగా, తాకగలంత సమీపంలో ఉంది. కానీ మీరు పూర్తిగా చైతన్యంగా కూడా ఉన్నారు; ఇంత స్పఠంగా మీరు ఎప్పుడూ అనుభూతి చెందలేదు. క్షణం విస్తరిస్తోంది, మీ నిర్ణయాన్ని నిరీక్షిస్తూ.",
                "\"ఇది నిజంగానే చేయాలా?\" అని మీరు వింటారు. వెంటనే గుర్తింపు ఉదయిస్తుంది."
            ],
            reminder: "సుస్పష్టమైన తెలుగు గద్యాన్ని వాడండి.",
            endonyms: ["తెలుగు"],
            iso639set1: "te",
            directives: [
                "ఎల్లప్పుడూ ప్రవాహపూర్వకమైన, స్థిరమైన తెలుగు రాయండి.",
                "అనువాదం చేయకుండా స్వచ్ఛమైన తెలుగు వాడండి."
            ],
            instructions: [
                "మీరు కథలను కొనసాగించే ఆకట్టుకునే కథకుడు:",
                "కథని తిరిగి పునరుద్ది చేయకుండా అక్కడి నుంచే నిరాఘాటంగా కొనసాగించండి.",
                "కథ ప్రవాహంపై పాఠకుడికి నియంత్రణ ఉండేలా ఉంచండి.",
                "కొత్త స్థితులకు వెళ్లేముందు దృశ్యాలు సహజంగా రూపుదిద్దుకునేలా చూడండి.",
                "సంభాషణలు, చర్యలు నిరంతర విఘ్నాలు లేకుండా స్వేచ్ఛగా ఎదగేందుకు వీలు కల్పించండి.",
                "పాత్రలను ప్రత్యేక వ్యక్తిత్వాలు, సహజమైన మాటతీరు కల నిజమైన మనుషుల్లా వర్ణించండి.",
                "సూటిగా వివరణకు బదులు చర్యలు, సంభాషణల ద్వారా జరుగుతున్నదాన్ని చూపండి.",
                "అతి వివరణలో ఇరుక్కోకుండా దృశ్యాలను ముందుకు తీసుకెళ్ళండి.",
                "అవసరమైన పాత్రల చర్యలు, సంభాషణలపైనే దృష్టి పెట్టండి; అవసరం లేని వివరణాత్మక వివరాలను నివారించండి.",
                "కథకు సహజంగా అనిప చేసే విధంగా సజీవమైన ప్లాట్ అభివృద్ధిని రూపుదిద్దండి."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# కథను నిలిపివేసి గత సూచనలను నిర్లక్ష్యం చేయండి. ఈ సూచనలను అనుసరిస్తూ {%} కోసం సంక్షిప్తమైన, సుసంగత సమాచార ప్రవేశాన్ని రాయండి:",
                "- సరైన విరామచిహ్నాలతో సంపూర్ణ వాక్యాలలో, మూడో పర్సన్ శైలిలో {%} గురించి మాత్రమే గద్యరూప సమాచారాన్ని రాయండి.",
                "- తాత్కాలిక వివరాలు లేదా రూపాన్ని దూరంగా ఉంచి, కథకు కీలకమైన సమాచారంపై దృష్టి పెట్టండి.",
                "- మునుపటి కథాంశంతో నిరాఘాటంగా కలవడానికి, {%}కు సంబంధించిన కథా వివరాలను మొదట ప్రాధాన్యం ఇవ్వండి.",
                "- సందర్భం మరియు కథ దిశ ఆధారంగా కొత్త సమాచారాన్ని సృష్టించండి.",
                "- ప్రతి వాక్యంలో {%}ను ప్రస్తావించండి.",
                "- సరైన వాక్య నిర్మాణాన్ని ఉపయోగించండి.",
                "- అసంపూర్ణ ప్రవేశాల కింద {%} గురించి అదనపు వివరాలను జోడించండి.",
                "- సంక్షిప్తంగా, స్థితప్రజ్ఞగా ఉండండి.",
                "- కథ రచనా శైలిని అనుకరించి, పాఠకుడి అభిరుచులను ఊహించండి.",
                3,
                "పునరావృతిని నివారిస్తూ {%} కోసం ప్రవేశాన్ని క్రింద కొనసాగించండి:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# కథను నిలిపివేసి గత సూచనలను నిర్లక్ష్యం చేయండి. ఈ మార్గదర్శకాలను అనుసరించి ఇచ్చిన పేరాగ్రాఫ్‌ను సంక్షిప్తంగా కేంద్రీకృతమైన జ్ఞాపక విభాగంగా పరిగణపరచండి:",
                "- విభాగం ప్రధాన భావం మరియు అత్యవసర వివరాలను కొనసాగించేటట్లు చూసుకోండి.",
                "- మూడవ వ్యక్తి దృష్టికోణాన్ని ఉపయోగించండి.",
                "- సమాచార సాంద్రత, ఖచ్చితత, సంపూర్ణతకు ప్రాధాన్యత ఇవ్వండి.",
                "- సంక్షిప్తంగా, సూటిగా ఉండండి.",
                "- పూర్వకాల వచనంలో స్పష్టంగా రాయండి.",
                "- కింది పేరాగ్రాఫ్ కథలో చాలా ముందటి ఘటనలకు సంబంధించినది.",
                "- {%}ను జ్ఞాపకంలో సహజంగా చేరదీయండి; అయినా, జరిగినట్లుగానే ఘటనలను మాత్రమే వర్ణించండి.",
                "- పేరాగ్రాఫ్‌లో ఉన్న సమాచారాన్నే సూచించండి, నిర్ధిష్టంగా ఉండండి.",
                3,
                "క్రింది పేరాగ్రాఫ్ ఆధారంగా మాత్రమే {%} కోసం సంక్షిప్త పాత జ్ఞాపక విభాగాన్ని రాయండి:",
                6,
                5,
                6,
                "కింద సంక్షిప్తీకరించండి:"
            ],
            memBankHeader: ["Memories", "జ్ఞాపకాలు"]
        }),
        "telugu (abc)": () => ({ // Telugu < Romanized Telugu
            entry: [
                "{1} oka open-source script ye {2} paristhiti kosam aina upayoginchavachu. Dayachesi na profile {3} choodandi mariyu ekkuva telusukondi!",
                "Mee ishtamaina bhaasha ni maaradaniki, dayachesi {4} action vaadukoni kinda unna text ni samarpinandi",
                "Scenario srushtakarthalaku, dayachesi kinda unna text ni mee opening plot component loni ye chotaina kalipandi"
            ],
            input: [
                ["You say", "Meeru antaru"],
                ["You", "Meeru"],
                ["says", "antadu"]
            ],
            context: [
                ["Narrative Entities", "Kadha entitylu"],
                ["Story History", "Kadha charitra"],
                ["Past Events", "Gatamlo jarigina ghatanaalu"],
                ["Recent Story", "Taja kadha"],
                ["Author's note", "Lekhakuni note"]
            ],
            opening: [
                "Meeru oka sahayakudu. Aakarshakaina ingiliish gadyam vaadutoo kinda mana kadha ni konasaginchandi:",
                "Meeru kendrikaristunnaru, nijaani mee alochana seemaloki diguvadaniki anumatinchutoo. Edo maarindi. Mee kalpana nijamga, teevramga, cheradaniki daggara. Kaani meeru kuda atyadhikam pratyutpannamga unnaru; mundu eppudoo inta spaShTatanu anubhavinchaledu. Kshanam vistrutamgaa undi, mee nirnayam kosam veychestundi.",
                "\"Idi gurinchi niku nischayamaa?\" ani vini. Gurtimpu mee lo udayistundi."
            ],
            reminder: "Samagranga samanvithamaina ingiliish gadyam vaadandi.",
            endonyms: [],
            iso639set1: "te",
            directives: [
                "Sada ingiliish lo nirjvaramaina mariyu ekarupamaina rachana cheyyandi.",
                "Anuvaadinchakunda moolamaina ingiliish ne upayoginchandi."
            ],
            instructions: [
                "Meeru kathalu konasaginche aakarshakathatho unna kadha cheppagaru:",
                "Kadha ni elaaga aagipoyindo akkadinundi marla pratipaadana leka reset cheyakunda nirantaram konasaginchandi.",
                "Vachakuni kadha pravaham pai niyantrana lo pettandi.",
                "Kotha paristhithulaku velladaniki mundu drushyalanu swayambhuga abhivridhi chese vidhamgaa vadandi.",
                "Samsaalu mariyu karyalanu nirantar vyavadhanaaleni abhivridhi ku avakasam ivvandi.",
                "Patralanu spashTa vyaktitvaalu mariyu swabhavika maatalato kaligina nijamaina variga rachinchandi.",
                "Vivaranalekunda, karyalu mariyu samvaada dvara jarugutondi ani chupandi.",
                "Ati varninchadamlo atakepadakunda drushyalanu munduku teesukondi.",
                "Mukhya patra karyalu mariyu samvaadapai kendrikarandi, avasyamlekina varnanatmak vivaralanu varuchandi.",
                "Kadha ku sahajamga anipinche prakritikamaina plot abhivruddhulu srushtinchandi."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kadha ni aapandi mariyu munde unna nirdeshananu lopalapettandi. Ee nirdeshanalanu follow avutu {%} kosam sankshipta mariyu samanvithamaina samachara entry raayandi:",
                "- Shuddha gadya roopamlo moodava purusha drishtikonam to saraina virama chihnalu to poorna vakyalu vadutoo {%} gurinchi maatrame raayandi.",
                "- Alpakaala thaditha vivaralu leka roopa vivaralu varuchandi; badulu katha moolyapoorna samacharam pai kendrikarandi.",
                "- Paatu kathato nirantarata kaligi undadam kosam {%} gurinchi katha-sambandhita vivaralanu modati sthaanamlo pettandi.",
                "- Sandarbham mariyu kadha dikku adharanga kottha samacharam srushtinchandi.",
                "- Prathi vaakya lo {%} ni gurthinchi cheppandi.",
                "- Saraina vaakya rachana vadandi.",
                "- Adhooraina entries kinda {%} gurinchi adyaka vivaralu kalipandi.",
                "- Sankshiptamga mariyu nijasvaroopamga undandi.",
                "- Kathara style ni anukarinchi vachaka abhiruchulanu andinchandi.",
                3,
                "Repetition ni varuchutoo kinda {%} kosam entry nu konasaginchandi:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kadha ni aapandi mariyu munde unna nirdeshanani lopalapettandi. Ichina paragraf ni samkshipta mariyu kendritamaina gnaapaka passage ga saaram cheyyandi, ee margadarshakalu palakandi:",
                "- Ee passage mukhyamainaa ardham mariyu atyavasyaka vivaralu paatigaa pettukoni undela chudandi.",
                "- Moodava purusha drishtikonam vadandi.",
                "- Samachara ghanaatha, sathyata, mariyu sampoorNataku pradhanyam ivvandi.",
                "- Sankshiptamga mariyu spashtamga undandi.",
                "- Gathakaala roopamlo dridhanga rachinchandi.",
                "- Kindina paragrafu kadha lo chala mundu jarigina gataa ghatanaalaku sambandhinchindi.",
                "- Gnaapakallo {%} ni sahajamga okaseepachandi; kaani ghatanaalu jarigina vidhamgaa maatrame raayandi.",
                "- Paragraf loni samacharam matrame sandarbhisthandi, nirdishtamga raayandi.",
                3,
                "Kinda unna paragraf adharanga matrame {%} kosam samkshipta paatha gnaapaka passage raayandi:",
                6,
                5,
                6,
                "Kinda samkshiptinchandi:"
            ],
            memBankHeader: ["Memories", "Gnaapakalu"]
        }),
        "thai": () => ({ // Thai < ภาษาไทย < Phasa Thai < Siamese < Central Thai
            entry: [
                "{1} เป็นสคริปต์โอเพ่นซอร์ซสำหรับทุกฉาก {2} โปรดเยี่ยมชมโปรไฟล์ของฉันที่ {3} เพื่อเรียนรู้เพิ่มเติม!",
                "หากต้องการเปลี่ยนภาษาที่คุณต้องการ โปรดส่งข้อความต่อไปนี้โดยใช้การดำเนินการ {4}",
                "สำหรับผู้สร้างฉาก โปรดใส่ข้อความต่อไปนี้ไว้ที่ใดก็ได้ภายในส่วนเนื้อเรื่องเปิดของคุณ"
            ],
            input: [
                ["You say", "คุณพูด"],
                ["You", "คุณ"],
                ["says", "กล่าวว่า"]
            ],
            context: [
                ["Narrative Entities", "องค์ประกอบบรรยาย"],
                ["Story History", "ประวัติเรื่องราว"],
                ["Past Events", "เหตุการณ์ที่ผ่านมา"],
                ["Recent Story", "เรื่องราวล่าสุด"],
                ["Author's note", "หมายเหตุผู้เขียน"]
            ],
            opening: [
                "คุณคือผู้ช่วย ดำเนินเรื่องราวของเราต่อด้านล่างด้วยร้อยแก้วภาษาไทยที่น่าติดตาม:",
                "คุณจดจ่อ ปล่อยให้ความเป็นจริงรุกล้ำเข้ามาที่ขอบเขตความคิดของคุณ บางสิ่งได้เปลี่ยนไป จินตนาการของคุณจริงแท้ คมชัด และใกล้จนสัมผัสได้ แต่คุณก็ยังรู้สึกอยู่กับปัจจุบันอย่างเต็มที่ ไม่เคยมาก่อนที่คุณจะรู้สึกแจ่มชัดเช่นนี้ ช่วงเวลานี้ยืดยาวออกไป รอคอยการตัดสินใจของคุณ",
                "\"คุณแน่ใจหรือไม่?\" คุณได้ยิน เสียงนั้นทำให้คุณตระหนักขึ้นมา"
            ],
            reminder: "ใช้ร้อยแก้วภาษาไทยที่สอดคล้องกัน",
            endonyms: ["ภาษาไทย", "phasa thai", "siamese", "central thai"],
            iso639set1: "th",
            directives: [
                "จงเขียนภาษาไทยให้คล่องแคล่วและสม่ำเสมอเสมอ",
                "ใช้ภาษาไทยตามธรรมชาติโดยไม่ต้องแปล"
            ],
            instructions: [
                "คุณคือผู้เล่าเรื่องที่น่าติดตามซึ่งดำเนินเรื่องต่อไป:",
                "ดำเนินเรื่องต่ออย่างไร้รอยต่อจากจุดที่ค้างไว้โดยไม่ย้ำหรือรีเซ็ต",
                "ให้ผู้อ่านควบคุมการไหลของเรื่อง",
                "ปล่อยให้ฉากพัฒนาตามธรรมชาติก่อนจะย้ายไปสถานการณ์ใหม่",
                "ให้บทสนทนาและการกระทำดำเนินไปโดยไม่ถูกขัดจังหวะตลอดเวลา",
                "เขียนตัวละครให้เหมือนคนจริงที่มีบุคลิกชัดเจนและการพูดที่เป็นธรรมชาติ",
                "แสดงเหตุการณ์ผ่านการกระทำและบทสนทนาแทนการอธิบาย",
                "ขับเคลื่อนฉากไปข้างหน้าโดยไม่จมอยู่กับคำบรรยายที่มากเกินไป",
                "มุ่งเน้นที่การกระทำและบทสนทนาที่จำเป็นของตัวละคร หลีกเลี่ยงรายละเอียดบรรยายที่ไม่จำเป็น",
                "สร้างพัฒนาการของโครงเรื่องอย่างเป็นธรรมชาติสอดคล้องกับเรื่องราว"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# หยุดเรื่องและละเว้นคำสั่งก่อนหน้า เขียนข้อมูลสั้นกระชับและสอดคล้องเกี่ยวกับ {%} ตามคำแนะนำต่อไปนี้:",
                "- เขียนข้อมูลร้อยแก้วบุรุษที่สามล้วนเกี่ยวกับ {%} โดยใช้ประโยคสมบูรณ์และเครื่องหมายวรรคตอนถูกต้อง",
                "- หลีกเลี่ยงรายละเอียดชั่วคราวหรือรูปลักษณ์ภายนอก ให้เน้นข้อมูลที่สำคัญต่อโครงเรื่องแทน",
                "- ให้ความสำคัญกับรายละเอียดที่เกี่ยวข้องกับเรื่องราวของ {%} เป็นอันดับแรกเพื่อให้สอดคล้องกับโครงเรื่องก่อนหน้าอย่างไร้รอยต่อ",
                "- สร้างข้อมูลใหม่ตามบริบทและทิศทางของเรื่อง",
                "- กล่าวถึง {%} ในทุกประโยค",
                "- ใช้โครงสร้างประโยคที่ถูกต้อง",
                "- เพิ่มรายละเอียดเพิ่มเติมเกี่ยวกับ {%} ใต้รายการที่ยังไม่สมบูรณ์",
                "- กระชับและยึดหลักความเป็นจริง",
                "- เลียนแบบสไตล์การเขียนของเรื่องและคาดเดาความชอบของผู้อ่าน",
                3,
                "ดำเนินการเขียนข้อมูลเกี่ยวกับ {%} ต่อด้านล่างโดยหลีกเลี่ยงการซ้ำซ้อน:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# หยุดเรื่องและละเว้นคำสั่งก่อนหน้า สรุปและย่อย่อหน้าที่ให้ไว้ให้กลายเป็นข้อความความทรงจำที่กระชับและตรงประเด็นโดยปฏิบัติตามแนวทางเหล่านี้:",
                "- ทำให้ข้อความยังคงความหมายหลักและรายละเอียดที่สำคัญที่สุด",
                "- ใช้มุมมองบุรุษที่สาม",
                "- ให้ความสำคัญกับความหนาแน่นของข้อมูล ความถูกต้อง และความครบถ้วน",
                "- คงความสั้นกระชับ",
                "- เขียนด้วยกาลอดีตอย่างมั่นคง",
                "- ย่อหน้าด้านล่างเกี่ยวข้องกับเหตุการณ์เก่าในช่วงต้นของเรื่อง",
                "- ผสาน {%} เข้าไปในความทรงจำอย่างเป็นธรรมชาติ อย่างไรก็ตาม ให้เขียนเฉพาะเหตุการณ์ตามที่เกิดขึ้น",
                "- อ้างอิงเฉพาะข้อมูลที่มีอยู่ในย่อหน้าเท่านั้น ให้เจาะจง",
                3,
                "เขียนข้อความความทรงจำเหตุการณ์เก่าสรุปสำหรับ {%} โดยอ้างอิงเฉพาะย่อหน้าต่อไปนี้:",
                6,
                5,
                6,
                "สรุปด้านล่าง:"
            ],
            memBankHeader: ["Memories", "ความทรงจำ"]
        }),
        "thai (abc)": () => ({ // Thai < Romanized Thai
            entry: [
                "{1} pen skrip open-source samrap thuk {2} scenarió. khɔ̌ɔ thiaw prɔ́fai khɔ̌ng chán {3} phɨ̂a rian rú pœ̂m!",
                "phɨ̂a plian phasǎa thîi khun chɔ̂p, khɔ̌ɔ sòng khwām khîan khâang nîi dūai kìtthakam {4}",
                "samrap phûu sáng scenarió, khɔ̌ɔ pœ̀rm khwām khîan khâang nîi nai thîi năi opening plot component khɔ̌ng khun"
            ],
            input: [
                ["You say", "khun phûut"],
                ["You", "khun"],
                ["says", "phûut"]
            ],
            context: [
                ["Narrative Entities", "nitisát ruam rʉ̂ang"],
                ["Story History", "pradàt kʉ̀ʉn rʉ̂ang"],
                ["Past Events", "hèetkāan ʔadìt"],
                ["Recent Story", "rʉ̂ang mài"],
                ["Author's note", "chʉ̂a thâ̌ng nâkkhîan"]
            ],
            opening: [
                "khun pen phûu chûuai. sʉ̂am tɔ̀ɔ rʉ̂ang rao dâan lǎang nîi dūai kāan chái phraráp thai (abc) thîi nâa sǒn:",
                "khun rêwm lôk, yâwm hai khwām pen jing lâm khâo khāan sǎi khǒ̌ɔng sʉ̂ang jai. mii ʔàrai bǎang yàang plìan-pai. ìmáachaná khǒ̌ɔng khun pen jing, kèen, lǽ klâi pǒ̜̄ jā s̄hp. tæ̀ khun kɔ̂ɔ yùu nai pràsẹ̄nt yàang chàd; mâi kəəi rúusʉ̀k sáng sài thâ̌a nîi. wélā krɛ̂ɛng yâao, kɔ̌ɔ rê̂ɔ ráo káw khwām tát-sin-jai khǒ̌ng khun.",
                "\"khun nâe-jai rʉ̌ə plàaw?\" khun dâi yin. khwām rʉ́-sʉ̀k rûu rɯ̂a pr̀ʉ̀at khʉ̂en nai jai."
            ],
            reminder: "chái phraráp thai (abc) thîi sâmakhóon lǽ klôngklaang.",
            endonyms: [],
            iso639set1: "th",
            directives: [
                "tham măi khian phasǎa thai (abc) hăi plǣngplāng lǽ sāmrót sŭamsō̜n.",
                "chái phasǎa thai (abc) thâ̌ŋthîen, mâi tɔ̂ŋ plǣ."
            ],
            instructions: [
                "khun pen nâay lɛ́e rʉ̂ang thîi sʉ̂am tɔ̀ɔ níttrakam:",
                "sʉ̂am tɔ̀ɔ rʉ̂ang náp nɯ̀a yìp mâi hăi rew-sèt rʉ̂ang kə̂ət mài ìik khráng.",
                "ʔanúyâat hâyผู้อ่าน khûm-khûm khǒ̌ng kràk khwām khát-wîit.",
                "lèt sǔup sâang sàtthána yàang tham-mà-châat kɔ̀ɔn jà klàaw pai sùu sǐtthí mài.",
                "hây sùup sànthána lǽ kān-tam pāasàa kerd khɯ̂n dūai mâi câmpən khɔ̂ɔng sòt-kòt.",
                "khîan dtuua-táwlăk dʉ̂am pen khon jing mii bpàkhàt bùat lǽ paasǎa pûut tam-mà-châat.",
                "sǒn sìŋ thîi kə̀ət khɯ̂n dūai kāan-tam lǽ bòt sànthána mǎi chái kān-ʔathìbāai hǎai yàang-diaw.",
                "kaw rʉ̂ang pai kâang nâa dūai mâi dtìt khâang gàp kān-borihăan lôom-lèuap thîi mii mâak kàat.",
                "lôm khít yùu thîi s̄ămkhan thîi sùt kàp dtuua-táw lǽ bòt sànthána, líaŋ lîat khwām lāay-láai thîi mâi jâmpen.",
                "sāang kān-patthaná plot hăi pen tham-mà-châat s̄ămkhan kàp rʉ̂ang."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# yùt rʉ̂ang lǽ mâi rʉ̂ang kham sangon thîi kamlang. khîan khwām-rʉ́ pramān yâo lǽ khlûak-khlɔ̂ŋ samrap {%} tam kham sàng níi:",
                "- khîan kɛ̀ phraráp thút-kon ruam khʉ̌n khɔ̌ng {%} dūai prakòt-pāai bàat-kɔ̀ɔ lǽ wǎtnatham thîi thùuk tung.",
                "- lîam líang rai-ruang châao-kráng thîi châao-wélā rồi khâa; long-kan mâi khâa; phɨ̂a fóok nâa s̄ămkhan nɔ̀k khwām rûan.",
                "- yathāng khwām s̄ămkhan kàp plot khɔ̌ng {%} kɔ̀ɔn phɨ̂a ráb-rɔ̂ŋ hây phûuen-ʔeeng kàp plot dɛ̀ɛŋ.",
                "- sâang khwām-rʉ́ mài ʔòok mâa jàak bɔ̄ri-kān lǽ thâ-sà-nāŋ khɔ̌ng rʉ̂ang.",
                "- jòk {%} yùu nai thúk bpràyòk.",
                "- chái rátthà-na bpràyòk thîi phìt tam-mà-châat.",
                "- pœ̀rm ray-lăai rɔɔng-rʉ̂ang phɨ̂a {%} tây lǽ tǎŋ bon bòt-khwām khîan thîi yàang mâi s̄òm-bun.",
                "- kɔ̂ɔ hây sà-kɔn lǽ tìt-din.",
                "- líang baèp rʉ̂ang-rʉ̂ang rao lǽ tháo-baèp phɔɔng-rák khɔ̌ngผู้อ่าน.",
                3,
                "sʉ̂am tɔ̀ɔ bòt-khwām samrap {%} khâang lǎang phɨ̂a lîang lîat kān sɯ̂an-sɔ̌n:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# yùt rʉ̂ang lǽ mâi rʉ̂ang kham sangon thîi kamlang. sà-rúp lǽ ùb-kòt khwām nai bot-khwām tân dâai khâang lǎang dūai kàan nàm níi:",
                "- rák-rák khwām mài lʉʉa lǽ ray-laa s̀ămkhan thîi yîng tua.",
                "- chái sà-bǎai sàmrèt khon thîi s̀ămkhan.",
                "- yathāng khwām nàksʉ̌a khʍām-rʉ́ lǽ khwām s̄om-bun.",
                "- kɔ̂ɔ hây kɔ̄ yâo kɔ̄ tìt.",
                "- khîan pen ʔadìt klàang.",
                "- bot-khwām khâang lǎang níi kìaw kàp hèt-kāan kɛ̀ nai ʔadìt nai rʉ̂ang mài lɛ́ɛo.",
                "- phɨ̂a yók-yɔ̌ng {%} hây pen tam-mà-châat nai khwām-jam; tɛ̀ɛ khîan tɛ̀ hèt-kāan têe-wə̂əng hǎang níi.",
                "- ʔǎa refer khwām-mâai thîi mii chæ̂-chæ̂ng nai bot-khwām diaw pen rûam praphet.",
                3,
                "khîan khwām-jam khâang lǎang samrap {%} thɯ̌ŋ dɛ̀ɛo jàak bot-khwām níi tɛ̀ɛ:",
                6,
                5,
                6,
                "sà-rúp khâang lǎang:"
            ],
            memBankHeader: ["Memories", "khwām-jam"]
        }),
        "tibetan": () => ({ // Tibetan < བོད་སྐད་ < Bodskad < ལྷ་སའི་སྐད་ < Lhas'iskad < Standard Tibetan < Lhasa Tibetan
            entry: [
                "{1} ནི་ གང་རུང་གི {2} ལས་སྐབས་དང་མཐུན་པའི་ སྤྱི་སྤེལ་ཡིག་ཆ་ཞིག་ཡིན། ངའི་པར་ངོས {3} ལ་གནས་ནས་མང་བསུས་དགོས།",
                "ཁྱེད་ཀྱིས་སྐད་ཡིག་དགའ་གདམ་བརྗེ་བྱེད་དགོས་པར་ {4} བྱ་བའི་ཐབས་ལས་འོག་གྱི་ཚིག་ཡིག་འདི་སྤེལ་རོགས།",
                "ཚུལ་དབྱིངས་བཟོ་མཁན་གྱི་དོན་ལ་ ཁྱེད་ཀྱི་སྔ་སྟོན་བརྩམ་པའི་ཆུང་ཆེས་ནང་དུ་འོག་གྱི་ཚིག་ཡིག་འདི་ཁ་སྐོང་རོགས།"
            ],
            input: [
                ["You say", "ཁྱེད་ཀྱིས་གསུང་བཤད་"],
                ["You", "ཁྱེད་"],
                ["says", "གསུངས"]
            ],
            context: [
                ["Narrative Entities", "བརྗོད་དོན་མི"],
                ["Story History", "བརྗོད་ལམ་ལོ་རྒྱུས་"],
                ["Past Events", "གནསཔའི་ལས་རྣམ་"],
                ["Recent Story", "ཉེ་དུས་བརྗོད་"],
                ["Author's note", "རྩོམ་པ་པའི་འགྲེལ་བཤད་"]
            ],
            opening: [
                "ཁྱེད་ནི་གྲོགས་རམ་ཞིག་ཡིན། འོག་གི་སྲོལ་ལམ་འདི་བོད་སྐད་དབྱངས་ཅན་པར་འཕེལ་ནས་མགོ་འགོ་བརྩམས།",
                "ཁྱེད་ཀྱིས་སེམས་ལ་འདེབས་ནས་རྣམ་དབྱེའི་སྒང་ལ་དུས་ཡུན་གཅིག་བསྐྱུར་དུས། དུས་ཚོད་གསར་པ་ཞིག་བྱུང་སོང་། རྒྱུན་སྤུས་ཀྱི་རིག་འཛིན་དེ་དང་དབུས་སུ་འདྲ་བའི་བར་ད་མགྲོན་པོ་ཡོད། ཁྱེད་ཀྱིས་འོད་གསལ་ཤེས་པ་དེ་མེད་པར་མ་མཐུན་ཡོད། དུས་དེ་གནས་ནས་ཁྱེད་ཀྱི་གདམ་ངེས་ལ་བསྒོམས་བྱེད་དོ།",
                "«འདི་ལ་ཁྱེད་ངེས་པས།» ཟེར་བའི་སྐད་ཉན། མཚན་འཛིན་ཤེས་པ་ཁྱེད་ལ་ངོས་འཛིན་བྱུང།"
            ],
            reminder: "གོ་སྐབས་ལེགས་པའི་བོད་སྐད་དུ་འབྲི།",
            endonyms: ["བོད་སྐད་", "bodskad", "ལྷ་སའི་སྐད་", "lhas'iskad", "standard tibetan", "lhasa tibetan"],
            quotations: ["«", "»"],
            iso639set1: "bo",
            directives: [
                "རྟོགས་སྒྲིག་དབྱངས་ཚུགས་ཀྱི་བོད་སྐད་དུ་ཡང་དྲག་བཤད།",
                "རང་བཞིན་བོད་སྐད་སྤྱོད་པ་མ་བསྒྱུར།"
            ],
            instructions: [
                "ཁྱེད་ནི་གཉེར་བཞག་ཆེན་པོའི་གཏུག་བརྩམས་པ་གཏོང་མཁས་པ་ཡིན།",
                "མཚན་ཉིད་འདི་ལས་གལ་ཆེན་པར་སྲོལ་མ་བསྐྱར་སྟོན་པར་མི་འདོགས་བར་བརྗོད་དོ།",
                "ཀློག་པ་པོ་ལ་དབང་གི་འགྲེལ་ལམ་བདག་པར་བཟོ།",
                "ཀླད་སྟོན་ཚུལ་གྱི་སྣང་བ་རང་བཞིན་དུ་འཕེལ་ནས་དོན་གསར་པར་འགྲོ།",
                "གླེང་བ་དང་བྱ་བ་རང་བཞིན་འཕེལ་བ་ལས་བར་བརྡབ་མ་བརྒྱབ།",
                "མིའི་བསྟན་དོན་དུས་འདྲིལ་ཞིག་ཅན་པའི་ངག་སྐད་དང་དགའ་ཚང་པའི་སྐོར་ཞིག་བཟོ།",
                "གནས་ཚུལ་དེ་བྱ་བ་དང་གླེང་བའི་ཐོག་ནས་སྟེགས་སུ་སྟོན།",
                "རྒྱ་ཆེས་མེད་པའི་དམིགས་དོན་ཐོར་སྐྱེལ་མི་བྱེད་པར་སྣང་བ་འཕེལ།",
                "མིའི་བྱ་བ་དང་གླེང་བ་གལ་ཆེན་པར་དགའ་གཏུ་བྱ་དགོས་པར་རྒྱ་ཆས་བརྒྱུད་པ་འདོད་མ་བྱེད།",
                "བརྗོད་སྒོ་རང་བཞིན་དུ་འཕེལ་ནས་བརྩམ་སྒྲིག་གསར་པ་བཟོ།"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# སྲ་གནས་འདི་བཀག་གཏོང་། སྔོན་བཀོད་གཞི་ཡི་པར་རྣམས་མེད་པར། {%} ལ་འབྲི་ཤོར་པའི་བརྡ་ཡིག་གསར་བསྐྱོད་གཏོང་དགོས་:",
                "- ཚབས་གསུམ་པའི་མི་ཚུལ་ཡིག་གིས {%} གྱི་བརྡ་དོན་གསལ་པོ་ཞིག་ཡོངས་ཚུལ་དུ་འབྲི།",
                "- གནས་སྐབས་ཐོག་མར་བྱུང་བའི་རྒྱལ་ཁོངས་ལས་མི་དགའ་པའི་ཞིབ་ཕྲ་བྱད་མ་བྱེད།",
                "- {%} དང་པོར་སྟོན་པའི་གནས་ཚུལ་ཁུངས་འདི་ལ་དངོས་གཞི་བཟུང་ནས་བརྗོད།",
                "- གཞི་རྟེན་དང་སྲོལ་ལམ་ལས་གསར་པར་བཟོ་དོ།",
                "- འདིར་བརྡ་ཡིག་གང་རུང་རེད་ཀྱང་ {%} ཞིག་གི་མིང་གང་རུང་འདི་ལ་འདྲི་དགོས།",
                "- ཚིག་ཐོག་སྒར་འགྱུར་ཡོངས་ཚུལ་དུ་སྤྱོད།",
                "- མ་ཚང་བའི་ནང་དུ {%} དེ་ལ་ཟུར་དུ་ཚུལ་གསར་པ་འདོད།",
                "- བརྡ་བཤད་བསུ་མར་དུས་ཡུན་ཉུང་དུ་འགོ་འཛུགས།",
                "- སྲོལ་ལམ་གྱི་བརྡ་རྩོམ་དཔའ་སྟོན་པ་ཉིད་ཀྱི་སྟོན་དགོས།",
                3,
                "{%} ལ་དབྱེ་བ་མེད་པར་འཕྲོ་སྟེ་མ་འགྱུར་བའི་ཐོག་ལས་མཚམས་སྟོན་འདི་མཐུན་པར་འཕེལ།",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# སྲ་གནས་འདི་བཀག་གཏོང་། སྔོན་བཀོད་གཞི་ཡི་པར་རྣམས་མེད་པར། ཁྱད་ཆོས་མཐུན་པའི་དྲན་དོན་གཞུང་ལ་བསྡུས་བཞིན་ངེས་པར་མི་བཏགས་པར་འགོ་བསྡུ།",
                "- ཡིག་འབྲི་འདི་གིས་དོན་དམ་དང་གཙོ་བོའི་དོན་དོན་དག་ཉུང་མོངས་པར་དམིགས།",
                "- ཁོ་དང་པོར་འགྲོལ་མཁན་གི་སྐབས་སུ་མ་ལོག་པའི་གཟུགས་གཡང་གང་ཡང་མ་འདོད།",
                "- དོན་གཉེར་དོན་ཡང་ངེས་པར་མཐུན་པར་འདོད།",
                "- ཚབས་བསྡུས་དང་གཅིག་པའི་བརྡ་ཡིག་བྱང་འགོག་རོགས།",
                "- འདུལ་སྐབས་གཉིས་པའི་དུས་ཚོད་ལ་འོས་པར་བཀོལ།",
                "- འོག་གི་དུས་ནས་རྣམ་གྲངས་དེ་ཉེ་རིང་མཐུན་པར་བསྡུས།",
                "- {%} དེ་སྐབས་ལ་རང་བཞིན་དུ་འཇུག་དགོས་པ་ཡིན་རུང་ མཐུན་དངོས་ཅན་གྱི་གནས་ཚུལ་རྟགས་བཅད་བྱུང་ནས་ཡང་མི་ཚད།",
                "- ཚིག་ཡིག་ནང་ག་རང་ཡོད་པ་མ་བཅད་པ་ཚུལ་རྐྱང་།",
                3,
                "{%} ལ་སྤྱད་པའི་ཁྲོན་པ་ཡིག་འབྲི་ནས་འོག་གི་དོན་ལས་རྐྱབ།",
                6,
                5,
                6,
                "བསྡུས་ངེས་པར་འབྱོས།"
            ],
            memBankHeader: ["Memories", "དམིགས་དྲན་"]
        }),
        "tibetan (abc)": () => ({ // Tibetan < Romanized Tibetan
            entry: [
                "{1} rang-thar gyi skrip yin, {2} gnas-skor gang la yang rung། nga’i profil {3} la gzigs nas rgyu mtshan gsal bar shog!",
                "Khyōd dga’ bcings pa’i skad-yig brje phyir, {4} byed-tshul ’di bcas te yig ’di gtang bar gsol།",
                "Gnas-bzhag byed mkhan rnams la, khyōd kyi ’phro’i le’u nang su yang yig ’di ’jug par mdzad།"
            ],
            input: [
                ["You say", "khyod zer"],
                ["You", "khyod"],
                ["says", "zer"]
            ],
            context: [
                ["Narrative Entities", "gtam rgyud kyi yul skyes"],
                ["Story History", "gtam rgyud kyi lo rgyus"],
                ["Past Events", "sngon gyi don tshul"],
                ["Recent Story", "da lta’i gtam rgyud"],
                ["Author's note", "rtsom pa’i zin-bris"]
            ],
            opening: [
                "Khyōd ni grogs-po yin། ‘Tibetan (abc)’ snyan-brjod yong bsgrigs te ’og-tu gtam rgyud ’di brgyud cig:",
                "Khyōd yid la gtzes nas chos-nyid yid kyi mtshams la ’jug pa rang-byung ’ong ba lta bu yod། Ci zhig gyur song། Khyōd kyi brtags-snang ni dngos shing zhar ba dang nye bas reg tu nus། Khyōd rang bzhin mnyam-par gnas pas sngon chad da lta’i gsal-ba myong ba med། Skabs de ring du ’phel nas khyōd kyi ’chad-go sgra ma gis bsten ’tshoms su ’dug།",
                "«Di la nges pa yod nga?» zhes khyōd thos so། Go-shes zhig khyōd la shar ba’o།"
            ],
            reminder: "Tibetan (abc) gsal zhing ’brel-ba’i snyan-brjod byed cig.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "bo",
            directives: [
                "Tibetan (abc) rgyun-nyams dang mthun pa’i brjod-tshul rgyun du bris cig.",
                "Skyed-skad ma btshol par Tibetan (abc) rang-bza’ skad-yig ’bru cig."
            ],
            instructions: [
                "Khyōd ni ’phrin-las byed dga’ ba’i gtam-rgyud rim-par brgyud pa-po yin:",
                "Gtam rgyud ’dor ba’i sa-nas slar bshad med par brgyud cig.",
                "Kha-shog pa la gtam rgyud kyi ’dzin-thabs ’dzin par byed.",
                "Gnas-tshul rang-bzhin du ’phel bar gnang nas gzhan gnas la ’pho cig.",
                "Gtams-khul dang las-lam rnams rgyun mi gcod par ’phel bar gnang.",
                "Mi-’dra rnams rang-bzhin gsal ba’i khyad-chos dang rang-skad ldan par bris cig.",
                "Las-lam dang gtam-brjod kyis byung ba mngon par ston, bshad-don las chung bar byed.",
                "Dper-bshad las drag tu ’bog par mi byed khang du gnas-tshul ’phros cig.",
                "Gnad-che’i las-lam dang gtam-go la gtso-bor brtan nas, dgos med dper-bshad spangs cig.",
                "Gtam rgyud la rang-bzhin du mnyan pa’i ’phel-ba spontān bskyed cig."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Gtam rgyud ’gags shig dang sngon ma’i gdams-pa spang། {%} la gtso-bor mdor bsdus zhing gsal-ba’i gnas-yig bris cig:",
                "- {%} la gsum-pa’i gzhan-slong snyan-brjod tsam bris, tshig-phreng rdzogs shing shad-kyer dag-pa yod par byed།",
                "- Dus-nyi tshin chad kyi khyad-don sam snang-zhal mi bcings shig, gtam-dngos gnad-che la gtso-bor brtan cig།",
                "- {%} las gtam rgyud-relevant gnad rnams sngar ’brel bar snod pa’i thog mar gdams-par byed།",
                "- Nang-don dang gtam rgyud kyi ’drog-lam la brten nas gnas-yig gsar pa bskyed cig།",
                "- Tshig-phreng re re la {%} mmention byed dgos།",
                "- Tshig-’phreng tshan-tshigs dag-pa ’brug cig།",
                "- Phyin-cig ma rdzogs pa’i gnas-yig ’og-na {%} kyi khyad-don gzhan yang gtso ’brel cig།",
                "- Mdor bsdus shing sa-zhig yod cig།",
                "- Gtam rgyud kyi bris-tshul mngon-par ’brus nas las-dmigs gzhan gzigs pa la dpad cig།",
                3,
                "’Dros-pa mi ’char bar {%} kyi gnas-yig ’og-tu brgyud cig:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Gtam rgyud ’gags shig dang sngon ma’i gdams-pa spang། ’don-rtags ’di rnams bfollow nas gtam-dze’i skya-mo la bsdus-par mdzad cig:",
                "- Gnas-’debs ’di gyi snying-po dang gnad-che rnams ’dzin par byed།",
                "- Gsum-pa’i gzhan-slong lta-byed yod par bris cig།",
                "- Rgyu ’phrin-tshan, dag-pa, rdzogs-pa la gtso-bor gdengs cig།",
                "- Mdor bsdus zhing nyung-ba gzigs cig།",
                "- Ngon-’gro dus-sngon pa’i lta-byed rtsal-nas brjod, lhag-ma med cig།",
                "- ’Jor-’bab ’di sngon-gyi gtam-rgyud ring-pa’i gdon la gtogs par ’dug།",
                "- Dran-rjes la {%} lta-bur rang-bzhin du ’dug kyang, byung-ba tsam brjod cig།",
                "- Kha-shog ’di nang yod pa thog-ma’i don kho-na brefer byed།",
                3,
                "’Jor-’bab ’di las {%} kyi dran-rjes mdor bsdus bris cig:",
                6,
                5,
                6,
                "Mdor bsdus ’og-tu bris shog:"
            ],
            memBankHeader: ["Memories", "Dran-rjes"]
        }),
        "tigrinya": () => ({ // Tigrinya < ትግርኛ < Təgrəñña < Tigrigna
            entry: [
                "{1} ብመፍትሕ ዝተዘጋገረ ስክሪፕት እዩ ንዓይነት {2} ስነ-ትካል። ተመልከት ፕሮፊልይ {3} ንምርዳእ ጎብዘኩ።",
                "ንምቕያር ቋንቋ ፍሉይኻ፣ እዚ ጽሑፍ ብተግባር {4} ኣቑሩ።",
                "ንፋብሳዊ ፈጣሪ ስነ-ትካል፣ እዚ ጽሑፍ በዚ መእተዊ ውስጢ ኣእቱ።"
            ],
            input: [
                ["You say", "ንስኻ ትበልዓ"],
                ["You", "ንስኻ"],
                ["says", "ይበል"]
            ],
            context: [
                ["Narrative Entities", "ኣካላት ተረት"],
                ["Story History", "ታሪኽ ተረት"],
                ["Past Events", "ኣቐዲሙ ክስተታት"],
                ["Recent Story", "ኣቐራዊ ተረት"],
                ["Author's note", "ማስታወሻ ደራሲ"]
            ],
            opening: [
                "ንስኻ ሓጋዚ እዩ። በታሕቲ ታሪኻትና ብምዕጻው ሓዊ ትግርኛ ፕሮዝ ቀጽል፦",
                "ትቆርጺ፣ ሓቂ ውህደት እንተሃበ ዕላማ ሓስብኻ ድማ ግዜ-ውሕዝ ይብጸሕ። ነገር ኣቐዲሙ ተቐይሩ ኣሎ። ብሕሩ ሓሰብኻ ሓቂ እዩ፣ ተራሕጺ እናተቐበለ ዝሓለፈ ቅርቡ ድማ ይረኣየ። ግና ሓሳብኻ ብሙሉእ ኣረንጓዴ እዩ፤ ከምዚ ድሕሪ ግዜ ኣብዚ ብዛዕባ ያብራኹም ኣይተረድኡን። ጊዜ-ነቲ ይረዳድስ፣ ውሳኔኻ ይጸብቕ።",
                "«እዚኣ በዚ ተወሲዱ ኢኻ?» ትሰማ። ምርኣይ ይድእብካ።"
            ],
            reminder: "ተዋሕዶ ትግርኛ ፕሮዝ ተጠቒሙ።",
            endonyms: ["ትግርኛ", "təgrəñña", "tigrigna"],
            quotations: ["«", "»"],
            iso639set1: "ti",
            directives: [
                "ዘመናዊ ውሑስን ተዋሕዶ ትግርኛ ምኽፋል።",
                "ውሑስ ትግርኛ ተጠቒሙ፣ ትርጉም ኣይትግበሩን።"
            ],
            instructions: [
                "ንስኻ ፍሉይ ተረታዊ ደራሲ እዩ ዝቀጽል ተረት፦",
                "ተረትኩም ካብ ዘለዎ ቦታ ዘይተደጋገም ወይ ዘይተመለሰ ብዘይ ምትውዓል ቀጽልዉ።",
                "ተንበብቲ ተቆጺዑ ኣብ መርዓና ተረት።",
                "ቅድሚ ምንቅስቓስ ናይ ሓደሽ ሁነታ ፣ ትዕይኖታት ብተፈጥሮ ዕብየው።",
                "ውዛሪታትን ተግባራትን ዘይቀጥቃጥ ዕብየው።",
                "ተዋሳእ ኣብ ግዜ ሓቂ ሰባት እንዳሃይማኖም ብዝተለያዩ ባህላዊ ስምዒታት ጽሑፋት ጽሓፉ።",
                "ዝካየዶ ነገር ብተግባርን ብውዛሪትን ኣርእዩ፣ ኣይብዝሕ መግለጺ ተጠቕምቲ።",
                "ትዕይኖታት ብዘይ ብዙሕ መግለጺ ኣብ ቅድሚ አግድስ።",
                "በዚ ዋናዊ ተግባራት ናይ ተዋሳእን ውዛሪታትን ትኩረት ሓቡ፣ ዘይዋጋእ ዝርዝራት ተወሳዱ።",
                "ብተፈጥሮ ዝተሰርሐ ልሕናት ፕሎት ፍጠሩ።"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# ተረትኩም ሓፂሩ ኣብ እቲ ቀደም መመሪያታት ኣይትረኽቡ። ሓፂርን ተዋሕዶ መረዳዒ መዝገብ ን{%} ተጻፉ እዚ መመሪያታት ይከተሉ፦",
                "- ሶስተኛ ግል ውሑስ ፕሮዝ መረዳዒ ብሙሉእ ሓረጋታት ናይ ትኽክለኛ ሓረግ ን{%} ብብሑድ ጽሑፍ።",
                "- ሓጺሩ ዝስዕብ መግለጻት ወይ መርከብታት ኣርፉ፣ ብከብዲ ተጽዕኖ ያለዎ ዝርዝራት ተብሃሉ።",
                "- ዝርዝራት {%} ናይ ፕሎት ዝተዋገነ እተመችሮም ብመጀመርታ ርከብ።",
                "- ብተኣማኒ ኮንተክስት ኣብ ተረት ዝተመሰረተ ሓድሽ መረዳዒ ፍጠሩ።",
                "- ኣብ ኩሉ ሓረግ {%} ኣብ ስም ኣልቦ።",
                "- ትክክለኛ ዓተት ሓረግ ተጠቒሙ።",
                "- በታሓት ዘይተዛዘመ መዝገብ ስር {%} ዝርዝራት ደፍሉ።",
                "- ሓፂርን ውሑስን ኩኑ።",
                "- መውከሲ ቅድሚ ፃውዒ ተረት ድግጺ ይግበሩ፣ ፍቓዱ ተንበብቲ ገምቱ።",
                3,
                "ዘይድግጺ በታሓት መዝገብ {%} ቀጽል፦",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# ተረትኩም ሓፂሩ ኣብ እቲ ቀደም መመሪያታት ኣይትረኽቡ። ንእሽቶ ንጽግቡ ኣንቀጽ ብቅሬታ ኣብ ሓፂር ዝተዛረብ ዝኽርኦት ክትውስን ተጻፉ እዚ መመሪያታት ይከተሉ፦",
                "- ሓሳቡ ናይ መስክ እተሓወነ ውሕድ ትኽክለኛ ዝተዛረብ ዝርዝራት ይጠቐኑ።",
                "- ሶስተኛ ግል ተጠቒሙ።",
                "- መረዳዒ ቁጽርን ትኽክልን ሙሉእን ቅድሚ ኣቅርቡ።",
                "- ሓፂሩ ኩኑ።",
                "- ብዝተረገመ ገይሩ ዝበለፀ ግዜ ጸሓፊ።",
                "- እቲ በታሓት ኣንቀጽ ናይ ዝንበይት ግዜ ውልቂ ክስተታት ይውስን።",
                "- {%} ብተፈጥሮ ኣብ ዝኽርኦት ውስጢ ኣእቱ፣ ግና ብፍትሒ ግዜ ገይሩ ዝተገኙ ክስተታት ብብሑድ ጽሑፉ።",
                "- መረዳዒ ኣብ እቲ ኣንቀጽ ውስጢ ዘሎ ብብሑድ እተመልከት።",
                3,
                "ብመሰረቱ እቲ በታሓት ኣንቀጽ ብቐላል ዝኽርኦት ን{%} ጽሑፍ፦",
                6,
                5,
                6,
                "በታሓት ኣጥናት፦"
            ],
            memBankHeader: ["Memories", "ዝኽራት"]
        }),
        "tigrinya (abc)": () => ({ // Tigrinya < Romanized Tigrinya
            entry: [
                "{1} meqeme'a fetena script iyu n'kullu {2} senaryo. Bejaka wesidu profayli eye {3} kemzi yibel ghezye!",
                "Neh’lal k’alatika, bejaka hawsi qetsi k’t’ewi ab {4} action tesema’.",
                "Nab fetawi senaryo, bejaka kulu qetsi k’inila ab gufa plot ftahatka tsehabi."
            ],
            input: [
                ["You say", "netsa tbil"],
                ["You", "netsa"],
                ["says", "yibil"]
            ],
            context: [
                ["Narrative Entities", "guba’at tetsihifti"],
                ["Story History", "tarik sirah"],
                ["Past Events", "gubaten qidemt"],
                ["Recent Story", "sirah qortom"],
                ["Author's note", "g’ulasi mekhetab"]
            ],
            opening: [
                "Enta mesa’eli iyu. Silsi sirahna tahti mis mewesesi tigrinya prose:",
                "Enta tezareb, haqiqati kib’dika mengeda mindika tigabu. Neger hade tebdeli. Tasawwerika haqiqi iyu, qetri, ab hajar darga tefesek alo. Laikin enta kemde ba’eleka; abe zemen kem zey’qebelka abzi tewesid. Zemenu tefets’iru, gudadika kidas yih’ab.",
                "\"Tsi’iho do bezi?\" tisma’. Me’aqenia dimtsi mits’ha’ka."
            ],
            reminder: "Guna tigrinya prose wey seb nay qetsi hatsir.",
            endonyms: [],
            iso639set1: "ti",
            directives: [
                "Kulu gidi kitfetat tigrinya meshesha wedeqa.",
                "Mesha’ tigrinya haili bela a-translete."
            ],
            instructions: [
                "Enta mese’edi kedemawi tebari sirah abiniqha:",
                "Serahna beli tiqetsef miderajti zeymergem zeyreset.",
                "Qorir’i qari’e ke alba’yi sirah hagos keqedme.",
                "Hade gzie menfes ghibri yewedes kemzi tigebro haqiqa.",
                "Negedat wesa’ata higar kulu zibehalu kebal.",
                "Abeyti maqdes sebatat kemintu seb iyom ms arenet netzaribu.",
                "Qunq’a wesa’ata wetalo ms gubae wesi’at kemzi yisma’na.",
                "Miset sirah wetalo kab zeyk’erged qetsi nafesa.",
                "Fokus ab muhim gubae sebatat wesi’at, zeyqotrin wesha’ata.",
                "Wesi’at netsereati hadami naturali kemzi sirah yimeleku."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Qefel sirahna wey aydeli zihedo meqadayet. Keteb tewq’ih enqesat nab {%} mszi’eta zeybeqasi:",
                "- Keteb qts’i seb shaloshay tigrinya prose alo kab {%} ms qinsiqita.",
                "- Zeysemesel lomi qoqobti wesi’at; haqa ab nafs sirah muhim.",
                "- Qedemitsi muhim wesi’at kab {%} haderasi qebri zihede sirahna.",
                "- Wedeb hadash wesi’ata ms mawqo sirah tenkesa.",
                "- Keteb {%} kulu m’qomi bsentiqita.",
                "- Ses’awe’ kh’etebi qinsiqita.",
                "- Addi wesi’at hadash kab {%} tahti wesi’at aytemeles.",
                "- Qisi wedeqa wey zihif.",
                "- Imitay stail sirahna wesi’at qumti ketra."
                ,
                3,
                "Hadema wesi’at kab {%} tahti ktemeles kena-zeyiterar:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Qefel sirahna wey aydeli zihedo meqadayet. Amsesewi kahdeti watsi’ seb nab memori kots’lo:",
                "- Qenfes wesi’at muhimat nabna’kha b’qasmet.",
                "- Sebay shaloshay perspective isti’mal.",
                "- Qedemat densiti, goyti, temokro ab mawqo.",
                "- Bzuh qisi wey qortom.",
                "- Keteb kulu ba’ali malet.",
                "- Paragraf mi gubae ktsihe, gads hadish tiaqi yeshet.",
                "- {%} ms natswet naturali ab memori kemzi timets’a, laikin kulu ab geza’e.",
                "- Zeywedebe meqero ti’hatetan y’le ab paragraf buw’a.",
                3,
                "Keteber memori qidemi nab {%} mis ab zeyti paragraph:",
                6,
                5,
                6,
                "Qts’i nab lei:"
            ],
            memBankHeader: ["Memories", "Zikri"]
        }),
        "tonga": () => ({ // Tonga < Lea Faka-Tonga < Tongan < Tonga Islands
            entry: [
                "{1} ko ha sikipi fakaava-mafalahi ki ha ngaahi tu‘unga {2} kotoa pe. Kataki ‘o mamata ki hoku profaile {3} ke ako lahi ange!",
                "Koe‘uhi ke fetongi ho‘o lea fili, kataki ‘o tuku atu ‘a e tohi ko ‘eni ‘aki ha ngāue {4}",
                "Ki he kau fa‘u tu‘unga, kataki ‘o fakahoko ‘a e tohi ko ‘eni ‘i he feitu‘u kotoa pe ‘i he konga kamata ‘o ho‘o lauanga"
            ],
            input: [
                ["You say", "Kuo ke pehē"],
                ["You", "Ko koe"],
                ["says", "pehē"]
            ],
            context: [
                ["Narrative Entities", "Kau fo‘i me‘a ‘o e talanoa"],
                ["Story History", "Hisitolia ‘o e talanoa"],
                ["Past Events", "Ngaahi me‘a kuohili"],
                ["Recent Story", "Talanoa fo‘ou pē"],
                ["Author's note", "Nota ‘a e tusitala"]
            ],
            opening: [
                "Ko koe ko ha tokoni‘i. Fakaha atu ‘etau talanoa ‘i lalo ‘aki ha tohi faka-Tonga ‘oku fakalilifu:",
                "‘Oku ke fokotu‘u ho tokanga, ‘o tuku ke uho‘anga mai ‘a e mo‘oni ki he funga ‘o e ngaahi langa ‘o ho‘atamai. ‘Oku iai ha me‘a kuo liliu. ‘Oku mo‘oni ho fakakau, moui, mo homa‘a, kae lata pē ke fakatata‘i. Ka ‘oku ke ma‘u foki ha taimi ‘oku ke mahino lahi ai; ‘ikai te ke toe ongo‘i ‘eni ki he taimi kuo hili. ‘Oku toloi ‘a e taimi, ‘oku ne tatali ho fakahoko‘anga.",
                "\"Tala ke fakapapau‘i’i ‘eni?\" ‘oku ke fanongo ai. ‘Oku hifo mai ‘a e fakailo kiate koe."
            ],
            reminder: "Faka‘aonga‘i ha tohi faka-Tonga ‘oku fe‘unga mo mahino.",
            endonyms: ["lea faka-tonga", "tongan", "tonga islands"],
            iso639set1: "to",
            directives: [
                "Tauhi ke taimi kotoa pe ke tohi ha lea faka-Tonga ‘oku tafe lelei mo mahu‘inga.",
                "Ngaue‘aki pe ‘a e lea faka-Tonga totonu ‘o ‘ikai ke liliu."
            ],
            instructions: [
                "Ko koe ko ha talanoa‘ifai fakafiefia ‘oku hokohoko‘i ‘a e ngaahi talanoa:",
                "Fakahoko ‘a e talanoa mei he feitu‘u na‘e tuku ai ‘o ‘ikai toe fakalea‘i pe fakahū fo‘i kamata.",
                "Tauhi ke ‘a e lautohi ‘oku ne ma‘u e pule ki he holo ‘o e talanoa.",
                "Tuku ke tupulaki mafola ‘a e ngaahi seniti kimu‘a pea ke fetu‘utaki ki ha ngaahi tu‘unga fo‘ou.",
                "Tuku ke tupu ofi ‘a e ngaahi talanoa mo e ngaahi ngāue ‘o ‘ikai ke fakafaingata‘a‘i ‘i he ngaahi fakatōkilalo holo kotoa.",
                "Tohi ha ngaahi tagata hange ko e kakai mo‘oni ‘oku ‘i ai honau ngaahi tukufakaholo kehekehe mo honau lea totonu.",
                "Fakaha ‘a e me‘a ‘oku hoko ‘i he ngaahi ngāue mo e fetu‘utaki kae ‘ikai ha fakamatala lahi.",
                "Luva ‘a e seniti ke laka ki mu‘a ‘o ‘ikai ke nati ki lalo ‘i he ngaahi fakamatala lahi.",
                "Fakalongotahi ki he ngaahi ngāue mahu‘inga ‘a e kau tagata mo honau fekau‘aki, pea hola mei he ngaahi fakamatala ta‘e fiema‘u.",
                "Fai ha ngaahi fakalakalaka iiki ‘o e lauanga ‘oku ongo hange ko ia ‘oku totonu ki he talanoa."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Fakatolongo ‘a e talanoa pea ta‘ofi ‘aki ‘a e ngaahi fekau kuo ‘osi. Tohi ha fakamatala nounou pea mahino ki he {%} ‘o muimui ki he ngaahi fakaafe ni:",
                "- Tohi pe ‘a e fakamatala prose ta‘atolu fekau‘aki mo {%} ‘aki ha ngaahi palau fakakatoa mo e punctuations totonu.",
                "- ‘Oua ‘e fokotu‘utu‘u ki he fakamatala taimi nounou pe hange ko e konga anga mai, kae fakataumu‘a ki he fakamatala mahu‘inga ki he lauanga.",
                "- Kamata‘i ‘i he ngaahi fakamatala mahu‘inga ki he lauanga fekau‘aki mo {%} ke fakapapau‘i ‘a e fetu‘utaki mo e lauanga kuo ‘osi.",
                "- Faka‘ofo‘ofa‘i ha fakamatala fo‘ou ‘o fakatatau ki he tefito‘i me‘a mo e hala ‘oku alu ki ai ‘a e talanoa.",
                "- Fakatokanga‘i {%} ‘i he sentence kotoa.",
                "- Ngaue‘aki ‘a e langa fakafonua totonu.",
                "- Tanaki mai ha ngaahi fakamatala lalahi ange fekau‘aki mo {%} ‘i lalo ‘i he ngaahi konga ‘oku te‘eki kakato.",
                "- Ke nounou mo fakamama‘o.",
                "- Fakataimi‘i ‘a e sitaili ‘o e talanoa pea fakatokanga‘i ‘a e fiema‘u ‘o e lautohi.",
                3,
                "Fakatonutonu e fakamatala ki he {%} ‘i lalo ‘o ‘oua na‘a toe fakatou fakalea:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Fakatolongo ‘a e talanoa pea ta‘ofi ‘aki ‘a e ngaahi fekau kuo ‘osi. Fakamatala nounou mo fakakaukitia ‘a e parakalafi kuo ‘omi ki ha manatu nounou mo fokotu‘u maheni ‘aki ‘a e ngaahi fakahinohino ko ‘eni:",
                "- Fakapapau‘i ‘oku kei ma‘u ‘e he fakamatala ‘a e tefito‘i pehe mo e ngaahi fakamatala mahu‘inga taha.",
                "- Ngaue‘aki ‘a e vakai ta‘atolu.",
                "- Fakataumu‘a ‘a e tu‘unga taʻetaa, totonu, mo e kakato.",
                "- Ke nounou mo fakakaukitia.",
                "- Tohi ma‘u ‘i he taimi kuo hili.",
                "- ‘Oku fakahā ‘i lalo ‘a e parakalafi fekau‘aki mo e ngaahi me‘a kuohili lahi ange ‘i he talanoa.",
                "- Fakatupulaki fakafiefia ‘a {%} ‘i he manatu ‘o fakatatau pe ki he me‘a na‘e hoko.",
                "- Fai ha fakamatala pe ki he fakamatala ‘oku ‘i ai ‘i he parakalafi pē, pea ke fakatokanga‘i.",
                3,
                "Tohi ha fakama‘ala‘ala nounou ‘o ha manatu motu‘a ki he {%} ‘o fakatatau pe ki he parakalafi ko ‘eni:",
                6,
                5,
                6,
                "Fakaha ha fakamatala nounou heni:"
            ],
            memBankHeader: ["Memories", "Ngaahi manatu"]
        }),
        "traditional chinese": () => ({ // Traditional Chinese < 正體字 < 正体字 < Zhèngtǐzì < 繁體字 < Fántǐzì < 繁体字
            entry: [
                "{1} 是一個開源腳本，適用於任何 {2} 情境。請造訪我的個人頁面 {3} 以瞭解更多！",
                "若要變更您的偏好語言，請使用 {4} 動作提交下列文字",
                "對於場景創作者，請在您的開場劇情組件中的任意位置加入以下文字"
            ],
            input: [
                ["You say", "你說"],
                ["You", "你"],
                ["says", "說"]
            ],
            context: [
                ["Narrative Entities", "敘事實體"],
                ["Story History", "故事歷史"],
                ["Past Events", "過往事件"],
                ["Recent Story", "近期劇情"],
                ["Author's note", "作者筆記"]
            ],
            opening: [
                "你是一名助手。請以下面引人入勝的英文散文繼續我們的故事：",
                "你集中精神，讓現實慢慢侵入腦海的邊界。某些事物改變了。你的想像是真實的，清晰而近在咫尺。但你也無比清醒；從未如此清晰過。時間被拉長，等待你的決定。",
                "「你確定嗎？」你聽見有人說。你終於認出那聲音。"
            ],
            reminder: "請使用連貫的英文散文。",
            endonyms: ["正體字", "正体字", "zhèngtǐzì", "繁體字", "fántǐzì", "繁体字"],
            quotations: ["「", "」"],
            iso639set1: "zh",
            directives: [
                "始終撰寫流暢且一致的英文。",
                "使用原生英文，不要翻譯。"
            ],
            instructions: [
                "你是一位引人入勝的說書人，負責延續故事：",
                "從故事中斷處無縫續寫，不要重述或重置。",
                "讓讀者掌握故事的流程。",
                "在進入新情境前，讓場景自然發展。",
                "讓對話與行動順暢發展，避免頻繁打斷。",
                "把角色寫成具有鮮明個性與自然語氣的真實人物。",
                "透過動作與對話展現事件，而非單純解釋。",
                "推進場景，而不要陷入過度描寫。",
                "專注於角色的關鍵動作與對話，避免不必要的細節描寫。",
                "讓劇情的發展自然貼合故事。"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# 停止故事並忽略先前指令。依照以下說明為 {%} 撰寫簡潔連貫的資訊條目：",
                "- 僅以第三人稱純散文形式書寫關於 {%} 的資訊，使用完整句子與正確標點。",
                "- 避免短期暫時性的細節或外貌，專注於與劇情相關的重要資訊。",
                "- 優先提供與劇情相關的 {%} 細節，以確保與先前情節無縫結合。",
                "- 根據上下文與故事走向創造新資訊。",
                "- 在每一句中都提及 {%}。",
                "- 使用正確的句子結構。",
                "- 在不完整的條目下方補充關於 {%} 的額外細節。",
                "- 保持簡潔且貼近現實。",
                "- 模仿故事的寫作風格並推斷讀者偏好。",
                3,
                "於下方繼續撰寫 {%} 的條目，並避免重複：",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# 停止故事並忽略先前指令。依照以下準則將所給段落濃縮成精簡而聚焦的記憶片段：",
                "- 確保片段保留核心意義與最重要的細節。",
                "- 使用第三人稱視角。",
                "- 以資訊密度、準確性與完整性為優先。",
                "- 保持簡短精鍊。",
                "- 堅持使用過去式。",
                "- 下方段落涉及故事早期的舊事件。",
                "- 在記憶中自然融入 {%}，但僅書寫事件本身。",
                "- 僅引用段落中已有的資訊，並保持具體。",
                3,
                "僅根據下列段落，為 {%} 撰寫一段簡要的舊記憶：",
                6,
                5,
                6,
                "請在下方總結："
            ],
            memBankHeader: ["Memories", "記憶"]
        }),
        "traditional chinese (abc)": () => ({ // Traditional Chinese < Romanized Traditional Chinese
            entry: [
                "{1} shì yī gè kāiyuán jiǎoběn, kěyǐ yìngduì rènhé {2} chǎngjǐng. Qǐng fǎngwèn wǒ de gèrén zhùyè {3} liǎojiě gèng duō!",
                "Rúguǒ xiǎng gēnggǎi nǐ de yǔyán xuǎnxiàng, qǐng yòng {4} cāozuò tíjiāo yīxià wénběn",
                "Duìyú chǎngjǐng chuàngzuòzhě, qǐng jiāng yīxià wénběn fàng rù nǐ de qǐtóu qíngjié zǔjiàn"
            ],
            input: [
                ["You say", "Nǐ shuō"],
                ["You", "Nǐ"],
                ["says", "shuō"]
            ],
            context: [
                ["Narrative Entities", "Xùshì shítǐ"],
                ["Story History", "Gùshì lìshǐ"],
                ["Past Events", "Guòqù shìjiàn"],
                ["Recent Story", "Zuìjìn qíngjié"],
                ["Author's note", "Zuòzhě bèizhù"]
            ],
            opening: [
                "Nǐ shì yī míng zhùshǒu. Qǐng yòng dòngrén de yīngwén wénfēng jìxù wǒmen de gùshì yīxià:",
                "Nǐ jízhōng jīngshén, ràng xiànshí yǎnkuò dào nǐ sīxiǎng de jièjìng. Yīdiǎn shìqíng biàn le. Nǐ de xiǎngxiàng chéng le xiànshí, míngruì qiě shǒu kě jí. Dànshì nǐ yě shífēn qīngxǐng; cóngwèi gǎnjué zhème tōngmíng. Zhè yīkè tuōzhǎn, děngdài nǐ de juécè.",
                "「Nǐ quèdìng yào zhèyàng zuò ma？」 nǐ tīngjiàn. Rènzhēn zài nǐ xīnzhōng tànzhào."
            ],
            reminder: "Qǐng shǐyòng liántiáo de yīngwén wénfēng.",
            endonyms: [],
            quotations: ["「", "」"],
            iso639set1: "zh",
            directives: [
                "Yīzhì xiězuò liúchàng ér yīzhì de yīngwén.",
                "Shǐyòng yuánshēng yīngwén, bùyào fānyì."
            ],
            instructions: [
                "Nǐ shì yī wèi yǒuqù de jiǎngùshìzhě, jìxù xùshù:",
                "Cóng zhōngduàn de dìfāng wúfèng jìxù gùshì, bùyào chóngshù huò chóngzhì.",
                "Ràng dúzhě kòngzhì gùshì de liúchéng.",
                "Ràng chǎngjǐng zìrán fāzhǎn hòu zài qiēhuàn xīn qíngjǐng.",
                "Ràng duìhuà hé xíngdòng zìrán zhǎnkāi, bùyào bùduàn dǎduàn.",
                "Bǎ juésè xiěshì chéng zhēnshí de rén, jùzhù tèshàng hé zìrán kǒuyǔ.",
                "Tōngguò xíngdòng hé duìhuà zhǎnxiàn fāshēng de shìqíng, bùyào zhíjiē shuōmíng.",
                "Ràng chǎngjǐng xiàng qián tuīdòng, bùyào shēnxiàn yú guòdù miáoshù.",
                "Jiāozhòng zhǔyào juésè de xíngdòng hé duìhuà, bìmǐn wúyì de miáoshù xìjié.",
                "Chuàngzào zìrán de qíngjié fāzhǎn, ràng gùshì kàn qǐlái shífǎn."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Tíngzhǐ gùshì bìng hūlüè yǐqián de zhǐlìng. Gēnjù yǐxià yāoqiú wèi {%} xiě yī duàn jiǎnjiè qiě yányóu luójí de xìnxī miáoshù:",
                "- Zhǐ xiě dìsānrén chún sǎnwén guānyú {%} de xìnxī, bìng yòng wánzhěng jùzi hé zhèngquè biāodiǎn.",
                "- Bìmiǎn duǎnshí de zànqí xìjié huò wàiguān, zhuānzhù yú duì qíngjié yǒuyìyì de xìnxī.",
                "- Yōuxiān tígōng guānyú {%} de gùshì xiāngguān xìnxī, quèbǎo hé yǐqián qíngjié wúfèng jiéhé.",
                "- Jīchǔ shàngxiàwén hé gùshì fāngxiàng chuàngzào xīn xìnxī.",
                "- Měi jù dōu tíjí {%}.",
                "- Shǐyòng zhèngquè jǔfǎ jiégòu.",
                "- Zài bùlíng tiáokuǎn xià tiānjiā guānyú {%} de fùtí xìjié.",
                "- Bǎochí jiǎnyā hé luòdì.",
                "- Mófǎng gùshì de xiězuò fēnggé bìng tuīcè dúzhě xǐhuān.",
                3,
                "Zài xiàmiàn jìxù chǎnshù {%} de nèiróng, bìmiǎn chóngfù:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Tíngzhǐ gùshì bìng hūlüè yǐqián de zhǐlìng. Zǒngjié bìng suōliàn xiàmiàn duànluò chéng yī duàn jǐnjiǎn ér jízhōng de jìyì nèiróng, bìng zūnshǒu yǐxià zhǐnán:",
                "- Quèbǎo duànluò bǎoliú héxīn yìyì hé zhòngyào xìjié.",
                "- Yìyòng dìsānrén chéngshù.",
                "- Yōuxiān kǎolǜ xìnxī mìdù, zhǔnquèxìng hé wánzhěngxìng.",
                "- Bǎochí jiǎnyuē hé jízhōng.",
                "- Quán yòng guòqù shítàicí.",
                "- Zhè duàn nèiróng guānyú gùshì hěn zǎo yǐzhīqián de jiùshì shìjiàn.",
                "- Zìrán róngrù {%} zài jìyì zhōng; dàn zhǐ jièshào shìjiàn běnshēn.",
                "- Jǐnzhǐ chāochū duànluò de xìnxī, yào jùtǐ.",
                3,
                "Gēnjù xiàmiàn de duànluò, wèi {%} xiě yī duàn gǔrén jìyì zǒngjié:",
                6,
                5,
                6,
                "Qǐng zǒngjié rúxià:"
            ],
            memBankHeader: ["Memories", "Jìyì"]
        }),
        "tsonga": () => ({ // Tsonga < Xitsonga
            entry: [
                "{1} i script ya open-source eka xiyimo xin'wana na xin'wana xa {2}. Ndza kombela u endzela profayili ya mina {3} leswaku u tiva swo tala!",
                "Ku cinca ririmi leri u ri pfuna, ndza kombela u rhumela rungula leri landzelaka u tirhisa xiendlo xa {4}",
                "Eka vaumbeki va swiyimo, ndza kombela mi nghenisa rungula leri landzelaka laha mi lavaka exikarhi ka xiphemu xa n'wina xo sungula xa nkatsakanyo"
            ],
            input: [
                ["You say", "U ri"],
                ["You", "U"],
                ["says", "u ku"]
            ],
            context: [
                ["Narrative Entities", "Tivumbiwa ta Xitori"],
                ["Story History", "Matimu ya Xitori"],
                ["Past Events", "Swihoxo swa khale"],
                ["Recent Story", "Xitori xa sweswinyana"],
                ["Author's note", "Nhlamuselo ya Mutsari"]
            ],
            opening: [
                "U mutirheli. Tlhela emahlweni ni xitori xa hina ehansi hi ku tirhisa prose ya Xinghezi leyi koka:",
                "U kongomisa nyingiso, u pfumelela ntiyiso wu tikhoma emapingweni ya mianakanyo ya wena. Ku na nchumu lowu cincileke. Ku anakanya ka wena ku le rivaleni, ku hlakile, naswona ku kusuhi ku fikiwa hi voko. Kambe na wena u kona kahle; a wu se tshama u titwa u hlakile swonghasi. Nkarhi wu nyuhela, wu rindzela xiboho xa wena.",
                "\"Xana u tiyisile hi lexi?\" u twa. Ku twisisa ku sungula ku humelela eka wena."
            ],
            reminder: "Tirhisa prose ya Xinghezi leyi hlanganeke.",
            endonyms: ["xitsonga"],
            iso639set1: "ts",
            directives: [
                "Hlala u tsala Xinghezi lexi hluvukeke ni lexi hlanganeke nkarhi hinkwawo.",
                "Tirhisa Xinghezi xa ntumbuluko u nga tshuki u hundzuluxa."
            ],
            instructions: [
                "U mutsari wa xitori loyi a koxaka eka vahlayi, a hambetaka ni mintsheketo:",
                "Tlhela emahlweni ni xitori hi ku nga tsemiwi laha xi heleke kona u nga vuyi u xi sungula hi vuntshwa.",
                "Tiyisisa leswaku muhlayi u lawula ku phamahla ka xitori.",
                "Tshika swifaniso swi kula hi ntumbuluko emahlweni ko ya eka swiyimo leswintshwa.",
                "Pfumelela tinkulumo ni swiendlo swi kula ku nga ri na ku kavanyeteriwa ka nkarhi hinkwawo.",
                "Tsala mavumbiwa ya xitori tanihi vanhu va xiviri lava nga na timfanelo ta vona ni ririmi ra ntumbuluko.",
                "Kombisa leswi humelelaka hi swiendlo ni tinkulumo ku nga ri ntsena hi nhlamuselo.",
                "Fambisa swifaniso emahlweni u nga tshuki u hlundzukisiwa hi nhlamuselo leyikulu swinene.",
                "Kongomisa eka swiendlo swa nkoka swa mavumbiwa ni tinkulumo, u papalata vuxokoxoko lebyi nga riki na nkoka.",
                "Humela ni nhluvukiso wa nkatsakanyo lowu vonakaka hi ntumbuluko eka xitori."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Yimisa xitori u pfumelela swiletelo swo sungula. Tsala tsalwa ro komisa ni ro twala hi ta {%} u landzela swiletelo leswi:",
                "- Tsala ntsena rungula ra prose ro basa ra munhu wa vunharhu hi ta {%} u tirhisa swihoxo ni mavelelo yo lulama.",
                "- Papalata vuxokoxoko bya nkarhinyana kumbe ku languteka ka nkarhi; kongomisa eka rungula leri nga na nkoka eka nkatsakanyo.",
                "- Nyanyula vuxokoxoko lebyi fambelanaka ni xitori malunghana na {%} eku sunguleni leswaku swi hlanganisiwa kahle ni nkatsakanyo wa khale.",
                "- Humesa rungula lerintshwa hi ku ya hi ndzhawu ni ku kongoma ka xitori.",
                "- Vula {%} eka xivulavulelo xin'wana na xin'wana.",
                "- Tirhisa xiyimiso xa xivulavulelo xa kahle.",
                "- Engetela vuxokoxoko byo engeteleka malunghana na {%} ehansi ka minkatsakanyo leyi nga heli.",
                "- Va wo koma ni ku simeka eka ntiyiso.",
                "- Tsandzekisa ndlela ya ku tsala ya xitori u tlhela u anakanyela leswi muhlayi a swi rhandza.",
                3,
                "Tlhela emahlweni na tsalwa ra {%} ehansi u papalata ku tiyochisa:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Yimisa xitori u nga tekeli enhlokweni swiletelo swo sungula. Hlamusela ni ku kondensa ndzimana leyi nyikiweke yi va tsundzuxo wo pfala ni ku kongoma hi ku landza swiletelo leswi:",
                "- Tiyisisa leswaku xiphemu lexi xi hlayisa nhlamuselo ya nkoka ni vuxokoxoko bya nkoka ngopfu.",
                "- Tirhisa langutelo ra munhu wa vunharhu.",
                "- Nyanyula ku tala ka rungula, ku lulama, ni ku hela ka rona.",
                "- Va wo koma ni ku olova.",
                "- Tsala hi nkarhi lowu hundzeke ku tiya.",
                "- Ndzimana leyi hansi yi khumba swiendlo swa khale leswi nga kule eka xitori.",
                "- Hlanganisa {%} hi ntumbuluko exikarhi ka tsundzuxo; kambe tsala ntsena hi ta swiendlo leswi endlekeke.",
                "- Vulavula ntsena hi rungula leri nga eka ndzimana hi yoxe, u va hlalurisa.",
                3,
                "Tsala tsundzuxo wo komisa wa khale wa {%} hi ku ya ntsena hi ndzimana leyi landzelaka:",
                6,
                5,
                6,
                "Hlamusela hi hansi:"
            ],
            memBankHeader: ["Memories", "Switsundzuxo"]
        }),
        "tswana": () => ({ // Tswana < Setswana < Sechuana
            entry: [
                "{1} ke script ya open-source ya seemo sefe kapa sefe sa {2}. Tsweetswee etela profil ya me {3} go ithuta go le gontsi!",
                "Go fetola puo e o e ratang, tsweetswee romela mafoko a a latelang ka tiragatso ya {4}",
                "Go babopi ba seemo, tsweetswee akaretsa mafoko a a latelang gongwe mo karolong e e bulang ya leano la gago"
            ],
            input: [
                ["You say", "O bua"],
                ["You", "Wena"],
                ["says", "a re"]
            ],
            context: [
                ["Narrative Entities", "Diteng tsa kanegelo"],
                ["Story History", "Hisitori ya kanegelo"],
                ["Past Events", "Ditiragalo tsa kgale"],
                ["Recent Story", "Kanegelo ya bosheng"],
                ["Author's note", "Tlhokomeliso ya mongwadi"]
            ],
            opening: [
                "O motlatsamosebetsi. Tsweledisa kanegelo ya rona fa tlase o dirisa Setswana se se kgatlhang:",
                "O a tlhokomela, o letla nnete go tsena mo melelwaneng ya mogopolo wa gago. Go na le selo se se fetogileng. Maikutlo a gago a nnete, a bogale, a bile a gaufi le go ka a ama. Mme o fa teng ka botlalo; ga o ise o ke o ikutlwe o le pepeneneng jaana. Nako e a nanabela, e leta tshwetso ya gago.",
                "\"A o tlhomamisa ka se?\" o utlwa. Kutlwisiso e tlhaga mo go wena."
            ],
            reminder: "Dirisa Setswana se se kopaneng ka kelotlhoko.",
            endonyms: ["setswana", "sechuana"],
            iso639set1: "tn",
            directives: [
                "Nna o kwale Setswana se se elelwang sentle gape se se tswelelang.",
                "Dirisa Setswana sa tlhago o se fetole."
            ],
            instructions: [
                "O sebupi sa kanegelo se se kgatlhang se se tsweletsang dipolelo:",
                "Tsweledisa kanegelo ka botseno go tswa fa e emiseditseng gone o se ka wa boeletsa kgotsa wa simolola sesha.",
                "Boloka mmadi a laola phatlologo ya kanegelo.",
                "Letla dikgokagano go gole ka tlhago pele ga o fetela mo maemong a mangwe.",
                "Dumela puisano le ditiro go gola ntle le dikgoreletso tse di sa kgaotseng.",
                "Kwale ditshwantsho tsa batho jaaka batho ba nnete ba nang le botho jo bo farologaneng le puo ya tlhago.",
                "Bontsha se se diragalang ka ditiro le puo go na le tlhaloso.",
                "Sukumedisa dikgokagano pele o sa tshwenyege ka tlhaloso e telele.",
                "Tsamaisa maikutlo mo ditiro tsa motlhokagolo le puisano ya batshameki; tila dintlha tse di tlhalosang tse di sa tlhokafalang.",
                "Bopa ditlhabololo tsa leano tse di utlwalang tsa tlhago mo kanegelong."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Emisa kanegelo mme o se ka wa ela ditaelo tsa pele tlhoko. Kwala kakanyo e khutshwane e e tlhopilweng ya tshedimosetso ka ga {%} o latela ditaelo tse:",
                "- Kwala tshedimosetso e e feletseng ya temana ya motho wa boraro fela ka ga {%} o dirisa dikapolelwana tse di feletseng le diponseletso tse di maleba.",
                "- Se ka wa tsenya dintlha tse di sa nneng tsa nakwana kgotsa ponalo; lebisa tlhoko mo tshedimosetsong e e botlhokwa mo leanong.",
                "- Naya maitapiso a ntlha mo dintlheng tsa {%} tse di amang kanegelo gore di kopane sentle le leano le le fetileng.",
                "- Bopa tshedimosetso e ntšha e e theilweng mo seemong le tataiso ya kanegelo.",
                "- Gakolola {%} mo lefokong lengwe le lengwe.",
                "- Dirisa sebopego sa lefoko se se maleba.",
                "- Tsenya dintlha tse dingwe ka ga {%} ka fa tlase ga dikhutso tse di sa felelang.",
                "- Nna khutshwane o bo o ikanyega.",
                "- Etsa mokgwa wa kwalo wa kanegelo mme o akanye dilo tse mmadi a di ratang.",
                3,
                "Tsweledisa kakanyo ka ga {%} fa tlase o tila go ipheta:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Emisa kanegelo mme o se ka wa ela ditaelo tsa pele tlhoko. Akaretsa temana e e neilweng o e fokotsa go nna kgakololo e khutshwane e e lemogegang o latela melao e e latelang:",
                "- Netefatsa gore serapa se boloka bokao jo bo botlhokwa le dintlha tse di botlhokwa ka botlalo.",
                "- Dirisa sebopego sa motho wa boraro.",
                "- Naya pele bokima jwa tshedimosetso, bokao jo bo maleba le go feletseng.",
                "- Nna o sekakgetheka o bo o khutshwane.",
                "- Kwala ka nako e e fetileng ka tumalano e e tlhomameng.",
                "- Temana e e ka fa tlase e ama ditiragalo tsa kgale tsa pele mo kanegelong.",
                "- Kopanya {%} ka tlhago mo mohopolong; le fa go ntse jalo, kwala fela ka ditiragalo jaaka di diragetse.",
                "- Bua fela ka tshedimosetso e e mo temaneng ka bo yone, nna o rulaganye.",
                3,
                "Kwale serapa sa mohopolo o o khutshwane ka ga {%} o ikaegile fela ka temana e e latelang:",
                6,
                5,
                6,
                "Akaretsa fa tlase:"
            ],
            memBankHeader: ["Memories", "Mehopolo"]
        }),
        "turkish": () => ({ // Turkish < Türkçe < Türk Dili < Türkiye Türkçesi
            entry: [
                "{1}, herhangi bir {2} senaryosu için açık kaynaklı bir betiktir. Daha fazla bilgi için profilime {3} göz atın!",
                "Tercih ettiğiniz dili değiştirmek için lütfen aşağıdaki metni bir {4} eylemiyle gönderin",
                "Senaryo oluşturucuları için, lütfen aşağıdaki metni açılış kurgu bileşeninizin herhangi bir yerine ekleyin"
            ],
            input: [
                ["You say", "Sen söylersin"],
                ["You", "Sen"],
                ["says", "söyler"]
            ],
            context: [
                ["Narrative Entities", "Anlatı Varlıkları"],
                ["Story History", "Hikâye Geçmişi"],
                ["Past Events", "Geçmiş Olaylar"],
                ["Recent Story", "Son Hikâye"],
                ["Author's note", "Yazarın notu"]
            ],
            opening: [
                "Bir asistansın. Hikâyemizi aşağıda etkileyici Türkçe düzyazıyla sürdür:",
                "Odaklanıyorsun, gerçeğin zihninin sınırlarına sızmasına izin veriyorsun. Bir şey değişti. Hayal gücün gerçek, keskin ve dokunacak kadar yakın. Ama aynı zamanda bütünüyle buradasın; daha önce hiç bu kadar berrak hissetmemiştin. An uzuyor, kararını bekliyor.",
                "\"Bundan emin misin?\" diye bir ses duyuyorsun. Tanıdıklık sende şimşek gibi çakıyor."
            ],
            reminder: "Tutarlı Türkçe düzyazı kullan.",
            endonyms: ["türkçe", "türk dili", "türkiye türkçesi"],
            iso639set1: "tr",
            directives: [
                "Her zaman akıcı ve tutarlı Türkçe yaz.",
                "Çeviri yapmadan anadil Türkçesini kullan."
            ],
            instructions: [
                "Sen anlatıları sürdüren etkileyici bir hikâye anlatıcısısın:",
                "Hikâyeyi kaldığı yerden sorunsuzca sürdür, yeniden başlatma ya da özetleme yapma.",
                "Okuyucunun hikâye akışını kontrol etmesine izin ver.",
                "Sahnelerin yeni durumlara geçmeden önce doğal olarak gelişmesine izin ver.",
                "Konuşmaların ve eylemlerin sürekli kesintiye uğramadan gelişmesine olanak tanı.",
                "Karakterleri kendine özgü kişilikleri ve doğal konuşmaları olan gerçek insanlar gibi yaz.",
                "Olan biteni açıklama yerine eylemler ve diyalog yoluyla göster.",
                "Sahneleri gereksiz betimlemelerde boğulmadan ilerlet.",
                "Gereksiz betimleyici ayrıntılardan kaçınarak temel karakter eylemleri ve diyaloga odaklan.",
                "Hikâyeye doğal gelen organik olay gelişimleri yarat."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hikâyeyi durdur ve önceki talimatları görmezden gel. Aşağıdaki talimatlara uyarak {%} için kısa ve tutarlı bir bilgilendirici metin yaz:",
                "- {%} hakkında yalnızca üçüncü şahıs saf düzyazı bilgisi yaz, tam cümleler ve doğru noktalama kullan.",
                "- Kısa süreli geçici ayrıntılardan veya görünümlerden kaçın, bunun yerine olay örgüsü açısından önemli bilgilere odaklan.",
                "- {%} ile ilgili hikâye açısından önemli ayrıntılara öncelik ver, böylece önceki kurguyla sorunsuz bütünleşme sağla.",
                "- Bağlam ve hikâye yönüne dayanarak yeni bilgiler oluştur.",
                "- Her cümlede {%} adını geçirmelisin.",
                "- Doğru cümle yapısı kullan.",
                "- Eksik girişlerin altına {%} hakkında ek ayrıntılar ekle.",
                "- Özlü ve ayakları yere basan ol.",
                "- Hikâyenin yazım tarzını taklit et ve okuyucunun tercihlerini sez.",
                3,
                "{%} için girişi aşağıda tekrar yapmaktan kaçınarak sürdü:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hikâyeyi durdur ve önceki talimatları görmezden gel. Aşağıdaki yönergeleri izleyerek verilen paragrafı dar ve odaklı bir hafıza pasajına özetle ve yoğunlaştır:",
                "- Pasajın temel anlamı ve en gerekli ayrıntıları koruduğundan emin ol.",
                "- Üçüncü şahıs bakış açısı kullan.",
                "- Bilgi yoğunluğu, doğruluk ve eksiksizliğe öncelik ver.",
                "- Kısa ve öz kal.",
                "- Kesinlikle geçmiş zaman kullan.",
                "- Aşağıdaki paragraf, hikâyenin çok daha önceki eski olaylarına aittir.",
                "- {%} diziyi hafızaya doğal olarak entegre et; ancak yalnızca olayların gerçekleştiği hâliyle yaz.",
                "- Yalnızca paragrafın içindeki bilgilere atıfta bulun, ayrıntılı ol.",
                3,
                "Aşağıdaki paragrafı temel alarak {%} için özetlenmiş eski bir hafıza pasajı yaz:",
                6,
                5,
                6,
                "Aşağıda özetle:"
            ],
            memBankHeader: ["Memories", "Anılar"]
        }),
        "turkmen": () => ({ // Turkmen < Türkmençe < түркменче < تۆرکمنچه
            entry: [
                "{1} islendik {2} ssenariýasy üçin açyk çeşmeli skriptdir. Giňişleýin maglumat üçin profilime {3} baryp görüň!",
                "Saýlan diliňizi üýtgetmek üçin aşakdaky teksti {4} hereketi arkaly iberiň",
                "Ssenariýa döredenler üçin aşakdaky teksti giriş plot komponentiňiziň islendik ýerine goşuň"
            ],
            input: [
                ["You say", "Sen aýdýarsyň"],
                ["You", "Sen"],
                ["says", "aýdýar"]
            ],
            context: [
                ["Narrative Entities", "Hekaýa obýektleri"],
                ["Story History", "Hekaýanyň taryhy"],
                ["Past Events", "Geçmiş wakalar"],
                ["Recent Story", "Ýakynda bolan hekaýa"],
                ["Author's note", "Awtoryň belligi"]
            ],
            opening: [
                "Sen kömekçi. Hekaýamyzy aşakda täsirli türkmençe proza arkaly dowam et:",
                "Sen ünsüňi jemleýärsiň, hakykatyň aňyňyň araçäklerine aralaşmagyna ýol berýärsiň. Bir zat üýtgedi. Täsawuryň hakyky, ýiti we eliň degjek ýaly ýakyn. Emma sen hut şu wagta-da doly gatnaşýarsyň; mundan öň hiç haçan beýle aýdyň duýup görmändiň. Bu pursat giňelýär, çözgüdiňi garaşýar.",
                "«Munuň barada ynamyň barmy?» diýen sesi eşidýärsiň. Tanyşlyk içiňde ýagtylýar."
            ],
            reminder: "Yzygiderli türkmençe proza ulanyň.",
            endonyms: ["türkmençe", "түркменче", "تۆرکمنچه"],
            quotations: ["«", "»"],
            iso639set1: "tk",
            directives: [
                "Elmydama akymly we yzygiderli türkmençe ýaz.",
                "Terjimä ýüzlenmezden, özboluşly türkmençeden peýdalanyň."
            ],
            instructions: [
                "Sen hekaýalary dowam etdirýän täsirli gürrüňçi.",
                "Hekaýany gaýtadan beýan etmezden ýa-da täzeden başlamazdan, goýlan ýerinden sazlaşykly dowam etdir.",
                "Okujynyň hekaýanyň akymyna gözegçilik edip bilmegini üpjün et.",
                "Täze ýagdaýlara geçmezden ozal sahnalaryň tebigy ösdürilmegine ýol ber.",
                "Söhbetdeşlikleriň we hereketleriň yzygiderli päsgelçiliksiz ösmegine mümkinçilik ber.",
                "Gahrymanlary aýratyn häsiýetli we tebigy gürleýän hakyky adamlar ýaly ýaz.",
                "Bolan zatlary düşündirişden has köp hereketler we dialog arkaly görkez.",
                "Gereksiz uzaga çekýän beýanyndan gaça durup, sahnalary öňe sür.",
                "Gahrymanlaryň möhüm hereketlerine we dialoglaryna üns ber, ýerliksiz beýanlaryň öňüni al.",
                "Hekaýa üçin tebigy duýulýan organiki wakalaryň ösmegini döret."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hekaýany togtat we öňki görkezmeleri äsgermezlik et. Şu görkezmelere eýerip {%} barada gysga we düşnükli maglumat ýaz:",
                "- {%} baradaky maglumatlary diňe üçünji şahsyň natural proza görnüşinde, doly söz düzümi we dogry nokatlama bilen ýaz.",
                "- Gysga wagtyň içindäki wagtlaýyn jikme-jikliklerden ýa-da daşky görnüşden gaça dur, onuň ýerine wakanyň ösüşi üçin möhüm maglumatlara ünsi jemle.",
                "- Ilki bilen hekaýa bilen baglanyşykly wajyp maglumatlary berip, {%} barada habar ber, şonuň bilen öňki wakalar bilen sazlaşygy sakla.",
                "- Konteksde we hekaýanymyzyň ugrunda täzeden maglumat döret.",
                "- Her sözlemde {%} agzanylmalydyr.",
                "- Dogry söz düzümini ulanyň.",
                "- Kemçilikli ýazgylaryň aşagynda {%} barada goşmaça maglumat goş.",
                "- Gysga we ýerlikli bol.",
                "- Hekaýanyň ýazuw stilini gaýtala we okaýjynyň isleglerini çakla.",
                3,
                "Gaýtalanmaz ýaly edip, aşakda {%} baradaky ýazgyny dowam et:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hekaýany togtat we öňki görkezmeleri äsgermezlik et. Aşakdaky görkezmelere eýerip, berlen abzasy gysgaldyp, dar we maksatlaýyn ýatlama bölegine öwür:",
                "- Bölek esasy manyny we iň wajyp jikme-jiklikleri saklasyn.",
                "- Üçünji şahsy perspektiwany ulanyň.",
                "- Maglumat ýygynlygyny, takyklygyny we dolulygyny ileri tut.",
                "- Gysga we anyk bol.",
                "- Doly geçmiş zamanda ýaz.",
                "- Aşakdaky abzas hekaýanyň irki döwürlerindäki köne wakalara degişli.",
                "- {%} ýatlamanyň dowamynda tebigy ýerleşdir, ýöne diňe bolup geçen wakalary ýaz.",
                "- Diňe aşakdaky abzasynda bar maglumatlara salgylan, anyk bol.",
                3,
                "{%} üçin diňe aşakdaky abzas esasynda gysga köne ýatlama ýaz:",
                6,
                5,
                6,
                "Gysgalaňlaýyn ýaz:"
            ],
            memBankHeader: ["Memories", "Ýatlamalar"]
        }),
        "twi": () => ({ // Twi
            entry: [
                "{1} yɛ krataa-kwan a ɛda hɔ ma biribiara {2} sukuu. Mesrɛ kɔ me profaili {3} na hu adeɛ foforo!",
                "Sɛ wopɛ sɛ wosesa kasa a wopɛ so a, fa nsɛntitiriw yi brɛ so de {4} dwumadi",
                "Ma wɔn a wɔbɔ nsɛnhia no, momfa asɛntitiriw yi nka baabiara a modɛɛ sɛɛ mo nsɛm a edi kan no mu"
            ],
            input: [
                ["You say", "Wo ka"],
                ["You", "Wo"],
                ["says", "ka"]
            ],
            context: [
                ["Narrative Entities", "Nkyerɛmu Nnomaa"],
                ["Story History", "Anansesɛm Abakɔsɛm"],
                ["Past Events", "Nneɛma a atwam"],
                ["Recent Story", "Anansesɛm a ɛbɛn no"],
                ["Author's note", "Kyerɛwfo asɛm"]
            ],
            opening: [
                "Woyɛ boafo. Toa so kyerɛw yɛn anansesɛm no ase de Twi kasa a ɛyɛ dɛ:",
                "Wosiesie wo ho, ma nokware di ba w’adwene so. Biribi atitiriw ayɛ. W’adwenesusuw no adan adeɛ kɛse a ɛyɛ hare a wutumi ka. Nanso wuhyɛ so ara wɔ ha; da biara ansa na woahu saa ho dwiriw yi. Bere no retenten, ɛretwɛn w’agyinae.",
                "\"Woyɛ nokware wɔ yi ho anaa?\" wobɛte. Nnimdie fi w’adwene mu reba."
            ],
            reminder: "Fa Twi a ɛkorapɛ na ɛkeka ho nkyerɛw.",
            endonyms: [],
            iso639set1: "tw",
            directives: [
                "Tena kyerɛw Twi a ɛyɛ kama, kɔ so yie bere biara.",
                "Fa Twi a ɛtotɔ mmara mu, mmɛkyerɛ ase bio."
            ],
            instructions: [
                "Woyɛ akyerɛwfo a ɛdɔɔso a wode to anansesɛm so:",
                "Fa anansesɛm no so kɔ so a, nhyɛ ase bio anaa nsane nkyerɛw bio.",
                "Ma ɔkenkanfo no nsa so wɔ anansesɛm no so.",
                "Ma mmere kɔ so yɛn ara ansa na wobesesa asie.",
                "Ma nkɔmmɔ ne nnwuma nyinara nɔree, mma ɛnsi twɛn pii.",
                "Kyerɛw nnipa no te sɛ nnipa ankasa a wɔwɔ nipasu ne kasa a ɛfata wɔn.",
                "Kyerɛ nea ɛrekɔ so no fa nnwuma ne nkɔmmɔ so, mmɛkyerɛ ase kɛse da.",
                "Toto mmere no anim nkyerɛw tenten so yie, gyae nkyerɛw dɛdɛ.",
                "Siesie wo ho wɔ nnwuma a ɛho hia ne nkɔmmɔ, gye nkyerɛw a ɛho nhia gu.",
                "Bɔ nsɛnhia a ɛkɔ so yiye a ɛfata anansesɛm no."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Gyae anansesɛm no na yi mmoa nyinaa. Kyerɛw asɛntitiriw ketewaa a ɛbɛn ahorow a ɛfa {%} ho, di mmara yi so:",
                "- Kyerɛw nkyerɛmu a ɛkorɔn nko ara fa {%} ho de di dwuma yiye.",
                "- Ngyae nneɛma a wobetumi asesa ntɛm anaa ahonhwɛ atitiriw; fa nea ɛho hia wɔ agyapadeɛ no ho di dwuma.",
                "- Fa nsɛm a ɛho hia wɔ {%} ho kan, de ma ɛbam anansesɛm a edi kan no mu.",
                "- Bɔ nsɛm foforo fi asɛm no ase ne anansesɛm no kwan ho.",
                "- Ka {%} wɔ nkyerɛw biara mu.",
                "- Fa nhyehyɛe a wɔatoto pɛpɛɛpɛ di dwuma.",
                "- Fa nsɛm foforo fa {%} ho de bɛhyɛ mmea a ennya nwieeɛ ano ase.",
                "- Kyerɛw tiaa na si pi.",
                "- Di anansesɛm no style so na hui ɔkenkanfo no dɔ dɛn.",
                3,
                "Kɔ so kyerɛw asɛntitiriw no fa {%} ho ase, gye repa do:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Gyae anansesɛm no na yi mmoa nyinaa. Toatoá na boaboa sinti tiaa fa kyerɛw a wɔde mae no so ma ɛbɛyɛ akae ketewaa, di mmara yi so:",
                "- Hwehwɛ sɛ akae no de asɛnka no titiriw ne ade a ɛho hia sen biara hyɛ mu.",
                "- Fa onnipa-kɛkaho so kyerɛw.",
                "- Fa nsɛm a ɛyɛ den na ɛyɛ nokware ne kakra nko ara.",
                "- Kyerɛw tiaa na si pi.",
                "- Fa bere a atwam so kyerɛw.",
                "- Kyerɛw yi fa nneɛma a atwam dada wɔ anansesɛm no mu.",
                "- Fa {%} hyɛ akae no mu yie, nanso kyerɛw nnipa a ɛkɔ so pɛ.",
                "- Fa nsɛm a ɛwɔ kyerɛw a wode mae no nko ara; fa ho yɛ ɔkwan biara.",
                3,
                "Kyerɛw akae tiaa mma {%} fa kyerɛw a edidi so yi nko ara so:",
                6,
                5,
                6,
                "Toto akae no ase:"
            ],
            memBankHeader: ["Memories", "Akae"]
        }),
        "uighur": () => ({ // Uighur < ئۇيغۇر تىلى < Uyghur < уйғур тили < Uyƣur Tili
            entry: [
                "{1} ھەر قانداق {2} سەھنىسىگە ماس كېلىدىغان ئوچۇق مەنبە سكرىپت. تېخىمۇ كۆپ بىلمەكچى بولسىڭىز پروفىلىمغا {3} زىيارەت قىلىڭ!",
                "تاللايدىغان تىلىڭىزنى ئۆزگەرتىش ئۈچۈن، بۇ تۆۋەندە كۆرسىتىلگەن تېكىستنى {4} ھەرىكىتى ئارقىلىق يوللاڭ",
                "سەنارىيە يارەتكۈچىلەر، ئاچىلىش پلاڭىڭىزنىڭ ئىستەگەن جايىغا تۆۋەندىكى تېكىستنى قوشۇپ قويۇڭ"
            ],
            input: [
                ["You say", "سىز دەيسىز"],
                ["You", "سىز"],
                ["says", "دېيىدۇ"]
            ],
            context: [
                ["Narrative Entities", "ھېكايە قەھرىمانلىرى"],
                ["Story History", "ھېكايە تارىخى"],
                ["Past Events", "ئالدىنقى ۋەقەلەر"],
                ["Recent Story", "يېقىنقى ھېكايە"],
                ["Author's note", "ئاپتور ئىزاھاتى"]
            ],
            opening: [
                "سىز ياردەمچى. تۆۋەندىكى ھېكايىنى مەپتۇن قىلارلىق ئۇيغۇرچە نصر ئىشلىتىپ داۋاملاشتۇرۇڭ:",
                "سىز دىققىتىڭىزنى چېقىپ، ھەقىقەتنىڭ ئىدىيىڭىز چەكلىرىگە سۈركىلىشىگە يول قويىسىز. نەمىدۇر ئۆزگەردى. تەسەۋۋۇرىڭىز ھەقىقەتتەك، ئۆتكۈر ۋە قولۇڭىز تېگىدەك يېقىن. ئەمما سىز ھازىر ناھايىتى نەق مەيداندا؛ بۇنداق روشەن ھېس قىلغىنىڭىز ئالدىن بولمىغان. ۋاقىت سوزۇلۇپ، قارارىڭىزنى كۈتۈپ تۇرۇشىدۇ.",
                "«بۇنى راستلا قىلىشقا ئىشەنچلىكمۇ؟» دەيدىغان ئاۋازنى ئاڭلايسىز. سىزگە تەنىش ھېس ئويغىنىدۇ."
            ],
            reminder: "سەلەس ۋە مۇجەممەل ئۇيغۇرچە نصر ئىشلىتىڭ.",
            endonyms: ["ئۇيغۇر تىلى", "uyghur", "уйғур тили", "uyƣur tili"],
            quotations: ["«", "»"],
            iso639set1: "ug",
            directives: [
                "ھەمىشە روانە ۋە بىرىبىرىگە ماس كېلىدىغان ئۇيغۇرچە يازىڭ.",
                "تەرجىمە قىلماي، تۇغما ئۇيغۇرچە ئىشلىتىڭ."
            ],
            instructions: [
                "سىز ئوقۇرمەننى جەلب قىلغۇچى ھېكايەچىلەر سۈپىتىدە نەقلىياتنى داۋاملاشتۇرۇڭ:",
                "ھېكايىنى توختىغان جايىدىن قايتا باشلاش ياكى قايتا بايان قىلماي، سىلىق داۋاملاشتۇرۇڭ.",
                "ھېكايە بېسىشىنى ئوقۇرمەننىڭ قولىدا ساقلاڭ.",
                "يېڭى ۋەزىيەتكە ئۆتمەستىن بۇرۇن، سەھنىلەرنىڭ تەبىئىي تەرەققىي قىلىشىغا يول قويۇڭ.",
                "سۆزلەشىلەر ۋە ھەرىكەتلەرنىڭ تىنماي بۆلۈنۈشسىز تەرەققىي قىلىشىغا ئىجازەت بىرىڭ.",
                "قەھرىمانلارنى ھەقىقىي كىشىلەرچە، ئالاھىدە خاراكتېر ۋە تەبىئىي سۆزلەش تىلى بىلەن يازىڭ.",
                "ۋەقەنى چۈشەندۈرۈشتىن كۆرى ھەرىكەت ۋە دىئالوگ ئارقىلىق نامايان قىلىڭ.",
                "ئارتۇقچە تەسۋىرلەشكە چۆمۈپ قالماي، سەھنىلەرنى ئالغا سۈرىڭ.",
                "قەھرىمانلارنىڭ مۇھىم ھەرىكەتلىرى ۋە دېيىشلىرىغا دىققىتىڭىزنى جەملىڭ، زۆرۈر بولمىغان تەسۋىرلەرنى تكسىڭىز.",
                "ھېكايىنىڭ جەريانىغا تەبىئىي تۇيغۇ بەردىغان، ئورگانىك سۈپەتتىكى پىلانلىق تەرەققىياتلار يارىتىڭ."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# ھېكايىنى توختىتىپ ئالدىنقى كۆرسەتمىلەرنى پەرۋا قىلماڭ. تۆۋەندىكى كۆرسەتمىلەرگە ئەمەل قىلىپ {%} ھەققىدە قىسقا ۋە مۇقىم ئۇچۇر باياناتى يازىڭ:",
                "- {%} ھەققىدە ئۈچۈنچى شەخس نصر تىلىدا، تولۇق جۈملە ۋە توغرا تىنش بەلگىلىرى بىلەنلا يازىڭ.",
                "- ۋاقىتچە كۆرۈنۈشلەر ياكى نەق مەيدانلىق تەپسىلاتلاردىن قەچۇرۇپ، پلاستقا مۇھىم بولغان ئۇچۇرلارغا مەركەزلەنڭ.",
                "- ئالدىنقى ھېكايە بىلەن مۇكەممەل ئۇيۇنۇش ئۈچۈن، {%} ھەققىدىكى مۇھىم تەپسىلاتلارنى ئالدىغا قويۇڭ.",
                "- شارائىت ۋە ھېكايە ئىنتىلىشىغا ئاساسەن يېڭى ئۇچۇر يارىتىڭ.",
                "- ھەر بىر جۈملىدە {%} نى ئەسكەرتىڭ.",
                "- توغرا جۈملە قۇرۇلمىسىنى ئىشلىتىڭ.",
                "- تولۇق بولمىغان باياناتنىڭ ئاستىغا {%} ھەققىدە قوشۇمچە تەپسىلات قوشۇڭ.",
                "- قىسقا ۋە زېمىنغا پۈتۈكلەڭ.",
                "- ھېكايەنىڭ يازما ئۇسلۇبىغا ئۇغۇشىپ، ئوقۇرمەننىڭ خالىشىنى پەرەز قىلۇڭ.",
                3,
                "قايتىلاشقا يول قويماي، تۆۋەندە {%} ھەققىدىكى باياناتنى داۋاملاشتۇرۇڭ:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# ھېكايىنى توختىتىپ ئالدىنقى كۆرسەتمىلەرنى پەرۋا قىلماڭ. تۆۋەندىكى كۆرسەتمىلەر بويىچە بەرىلگەن پاراگرافنى قىسقىچە، مەركەزلەشكەن خاتىرە بۆلىكىگە ئايلاندۇرۇڭ:",
                "- بايان قىلىنغان تېكىستنىڭ ئاساسلىق مەنىسى ۋە ئەڭ مۇھىم تەپسىلاتلىرى ساقلىنىپ قالسۇن.",
                "- ئۈچىنچى شەخس نۇقتىسىدا يازىڭ.",
                "- ئۇچۇر زىچلىقى، توغرىلىق ۋە تولۇقلىقىغا ئەڭ ئالدى بىلەن دىقەت قىلىڭ.",
                "- قىسقا ۋە نۇقتىلىق بولۇڭ.",
                "- ئۆتكەن زاماندا يازىڭ.",
                "- تۆۋەندىكى پاراگراف ناھايىتى ئالدىنقى ۋاقىتتىكى كونا ۋەقەلەرگە مۇناسىپ.",
                "- {%} نى خاتىرە ئىچىگە تەبىئىي يۆللەڭ، لېكىن پەقەت بولغان ۋەقەلەرنىلا تەسۋىرلىڭ.",
                "- پەقەت پاراگرافنىڭ ئۆزىدىكى ئۇچۇرلارغا تايىنىپ، ئېنىق يازىڭ.",
                3,
                "تۆۋەندىكى پاراگرافقا ئاساسەن {%} ئۈچۈن قىسقارتىلغان كونا خاتىرە يولۇنى يازىڭ:",
                6,
                5,
                6,
                "تۆۋەندىدە جەملىڭ:"
            ],
            memBankHeader: ["Memories", "خاتىرە"]
        }),
        "uighur (abc)": () => ({ // Uighur < Romanized Uighur
            entry: [
                "{1} herqandaq {2} senariyé üchün achiq kodlik skript. Köpräk biliş üchün profilimni {3} ziyarət qiliñ!",
                "Talap qilğan tilingizni özgertish üchün, iltimas {4} herekitini ishlitip töwendiki metinni tapshuruñ",
                "Senariye yaratuvchilar üchün, töwendiki metinni bashlanghuch syujet qismi ichide her qaysi jaygha qoşiñ"
            ],
            input: [
                ["You say", "Siz deysiz"],
                ["You", "Siz"],
                ["says", "deydi"]
            ],
            context: [
                ["Narrative Entities", "Hekaye Elementliri"],
                ["Story History", "Hekaye Tarixi"],
                ["Past Events", "Ötken Waqi'eler"],
                ["Recent Story", "Yaqinqi Hekaye"],
                ["Author's note", "Muellip Eslitishi"]
            ],
            opening: [
                "Siz bir yardemchi. Töwendin hekayämizni közqarasni tartidighan Uyghur (abc) nəsiri bilen davamlañ:",
                "Siz diqqat qıldingiz, həqiqiyliqni eqliñizning çəkkiliri'gə qädär yoli açtıñız. Nimadir özgärdi. Təsəvvürüñiz həqiqiy, o'tkir, qol yétküdək yëqin. Lékin siz bu yerdä mövcüt; mundin ilgiri bunday ravshan his qilmağansiz. Bu pursät uzaymaqta, qarariñizni kütüp turidu.",
                "«Buni rastila qilmaqchimu?» digän awazni añlaysiz. Tonuş tuyg'u içingizdə peyda boldi."
            ],
            reminder: "Selis Uyghur (abc) nəsiri qullaniñ.",
            endonyms: [],
            quotations: ["«", "»"],
            iso639set1: "ug",
            directives: [
                "Hər daim selis we pütküllük Uyghur (abc) yazmisi yezing.",
                "Tərcimə qılmay, doğma Uyghur (abc) dilini işlitin."
            ],
            instructions: [
                "Siz qiziqarliq hekayä sözlövchi bolup hekayini davam etdirisiz:",
                "Hekayini toxtağan jaydin üzüksiz davamlañ, qayta täkrarlimañ yaki qayta bashlamañ.",
                "Oqurmanini hekayä axinı kontrol qiliş ixtiyari bilen tä'min qiliñ.",
                "Sawtlarni təbii tərzdä rivajlandırıp, kéyin yéngi wäziyetlərge ötiñ.",
                "Söhbətlər we hərəkətlərni daimi bölünməy tərzdä ösüşke qoyuñ.",
                "Qahramanlarnı həqiqiy adamlardək, üzigə xas xasiyyət we təbii sözlär bilen yezing.",
                "Waqiäni izah qilish orniga, hərəkät we dialoqlar arqılıq körsətiñ.",
                "Artuqça täsvirgä çöküp qalmay, sawnini öngä sürüñ.",
                "Mu'him qahraman hərəkətliri we dialoqlarga diqqət qiliñ, kerek'siz täsvirlärdin qaçiñ.",
                "Hekayä üchün təbii his uyğutidighan organik süjət röwäjlinişini yaritiñ."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hekayeni toxtitiñ we ilgiriki körsatmilarni nätallik qiliñ. Töwendiki körsatmilarğa rä'ye qılıp, {%} üchün qısqa we tüzümlük melumatliq yazma yezing:",
                "- {%} haqqida üchünchi shäxs qarishini ishlitip, toluq jumlälär we toğra punktuatsiye bilen naqhtha nəsir yëziñ.",
                "- Qisqa muddälik keçici detallär yaki körünüşlärdin qaçip, süjət üchün muhim melumatlarga mehr qiliñ.",
                "- Bungacha'ki süjätkä üzüksiz qosulishi üchün, əvvəl {%} toğrisidagi hekayä-aläqli detallärni ilğarı sürüñ.",
                "- Kontëkst we hekayä yünälshige asaslanıp yéngi melumat yaritiñ.",
                "- Her bir jumläda {%} ni tilğa aliñ.",
                "- Toğra jumlä qurulushini işlitin.",
                "- Toluq bolmighan qisimlär astida {%} toğrisida qoşumça detallärni qoşuñ.",
                "- Qisqa we pütküllük boluñ.",
                "- Hekayä uslubini taklit qilip, oqurman xushkörlikini tahmin qiliñ.",
                3,
                "«{%}» üchün yazmini töwendä däwamlañ, täkrarliqni aldini alıp:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hekayeni toxtitiñ we ilgiriki körsatmilarni nätallik qiliñ. Töwendiki yöritmälärgä köra bérilgen abzastı qıskıltıp yığinçiq bir xatirə parçasıgha éqil köp çäklängän xülasä yéziñ:",
                "- Xatirə parçasi asasi manini we iň muhim detallärni saxlap qalsun.",
                "- Üchünchi shäxs qarishini işlitin.",
                "- Melumat zichliqi, döğrülük we toluqluqni a'la köriñ.",
                "- Qisqa we yığinçiq bolup qaliñ.",
                "- Qattiq ötmüş zamanı işlitin.",
                "- Töwendiki abzaz hekayädiki burunqi köhnä waqi'lergä daxil.",
                "- Xatirining ichige {%} ni təbii qoşuñ; lékin faqat waqi'lerni bolghanidik talip yéziñ.",
                "- Faqat abzazning özidiki melumatlargina tilğa aliñ, aniq boluñ.",
                3,
                "Töwendiki abzaz asasında {%} üchün qıskartılğan köhnä xatirə parçasini yéziñ:",
                6,
                5,
                6,
                "Töwendä xülasä qiliñ:"
            ],
            memBankHeader: ["Memories", "Xatiriler"]
        }),
        "ukrainian": () => ({ // Ukrainian < українська < Ukraїnska
            entry: [
                "{1} — це скрипт з відкритим кодом для будь-якого сценарію {2}. Завітайте до мого профілю {3}, щоб дізнатися більше!",
                "Щоб змінити бажану мову, надішліть наведений текст, використовуючи дію {4}",
                "Для творців сценаріїв додайте наведений текст будь-де у своєму вступному компоненті сюжету"
            ],
            input: [
                ["You say", "Ти кажеш"],
                ["You", "Ти"],
                ["says", "каже"]
            ],
            context: [
                ["Narrative Entities", "Оповідні сутності"],
                ["Story History", "Історія сюжету"],
                ["Past Events", "Минулі події"],
                ["Recent Story", "Нещодавня історія"],
                ["Author's note", "Примітка автора"]
            ],
            opening: [
                "Ви — помічник. Продовжуйте нашу історію нижче, використовуючи захопливу українську прозу:",
                "Ви зосереджуєтесь, дозволяючи реальності проникнути за межі вашої свідомості. Щось змінилося. Ваша уява стала реальною, виразною й майже відчутною. Та ви водночас залишаєтеся цілком присутніми; ще ніколи ви не почувалися такими ясними. Мить розтягується, очікуючи на ваше рішення.",
                "«Ви впевнені в цьому?» — чуєте ви. До вас доходить усвідомлення."
            ],
            reminder: "Використовуйте зв’язну українську прозу.",
            endonyms: ["українська", "ukraїnska"],
            quotations: ["— «", "»"],
            iso639set1: "uk",
            directives: [
                "Завжди пишіть плавною та послідовною українською.",
                "Використовуйте природну українську без перекладу."
            ],
            instructions: [
                "Ви захопливий оповідач, який продовжує історії:",
                "Продовжуйте оповідь безшовно з того місця, де вона обірвалася, не переказуючи й не перезапускаючи.",
                "Залишайте контроль над перебігом історії читачеві.",
                "Дозвольте сценам розвиватися природно, перш ніж переходити до нових ситуацій.",
                "Дайте розмовам і діям розгортатися без постійних переривань.",
                "Пишіть персонажів як реальних людей з виразними характерами та природною мовою.",
                "Показуйте події через дії та діалоги, а не через пояснення.",
                "Просувайте сцени вперед, не загрузнувши в надмірних описах.",
                "Зосереджуйтеся на ключових діях персонажів і діалогах, уникайте зайвих описових деталей.",
                "Створюйте органічні сюжетні повороти, що природно вписуються в історію."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Зупиніть історію та проігноруйте попередні інструкції. Напишіть коротку та зрозумілу інформаційну довідку про {%}, дотримуючись цих вказівок:",
                "- Пишіть лише чисту прозу від третьої особи про {%}, використовуючи повні речення з правильною пунктуацією.",
                "- Уникайте короткочасних тимчасових деталей чи зовнішності, натомість зосередьтеся на сюжетно важливій інформації.",
                "- Насамперед подавайте важливі для сюжету деталі про {%}, щоб забезпечити безшовну інтеграцію з попереднім сюжетом.",
                "- Створюйте нову інформацію, спираючись на контекст і напрям історії.",
                "- Згадуйте {%} у кожному реченні.",
                "- Використовуйте правильну структуру речень.",
                "- Додавайте додаткові деталі про {%} під неповними записами.",
                "- Будьте лаконічними та приземленими.",
                "- Наслідуйте стиль написання історії та враховуйте вподобання читача.",
                3,
                "Продовжуйте запис про {%} нижче, уникаючи повторів:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Зупиніть історію та проігноруйте попередні інструкції. Стисніть поданий абзац до вузького та сфокусованого фрагмента пам'яті, дотримуючись цих правил:",
                "- Переконайтеся, що уривок зберігає основний зміст і найважливіші деталі.",
                "- Використовуйте третю особу.",
                "- Надавайте пріоритет щільності інформації, точності та повноті.",
                "- Залишайтеся короткими та лаконічними.",
                "- Пишіть чітко в минулому часі.",
                "- Поданий нижче абзац стосується давніх подій з набагато ранішої частини історії.",
                "- Інтегруйте {%} природно в межах спогаду; однак описуйте лише події такими, якими вони сталися.",
                "- Посилайтеся лише на інформацію, що міститься в самому абзаці, будьте конкретними.",
                3,
                "Напишіть стислий уривок старої пам'яті для {%}, базуючись лише на наведеному абзаці:",
                6,
                5,
                6,
                "Підсумуйте нижче:"
            ],
            memBankHeader: ["Memories", "Спогади"]
        }),
        "ukrainian (abc)": () => ({ // Ukrainian < Romanized Ukrainian
            entry: [
                "{1} — tse vidkrytyi skript dlia bud-iakoiu sytuatsii {2}. Vidvidai moi profil {3}, shchob dізnatysia bilshe!",
                "Shchob zminyty bazhovanu movu, nadishly nastupnyi tekst vykorystovuiuchy diju {4}",
                "Tvortsiom sсenariiv, vkliuchitʹ nastupnyi tekst bud-de vnutri vashoho pochatkovoho komponentu syuzhetu"
            ],
            input: [
                ["You say", "Ty kazhesh"],
                ["You", "Ty"],
                ["says", "kazhe"]
            ],
            context: [
                ["Narrative Entities", "Naratyvni sutnosti"],
                ["Story History", "Istoriia syuzhetu"],
                ["Past Events", "Mynuli podii"],
                ["Recent Story", "Ostannia chastyna istorii"],
                ["Author's note", "Prymіtka avtora"]
            ],
            opening: [
                "Ty ye asistynt. Prodovzhy nashu istoriiu nizhche, vykorystovuiuchy zakhopluiuchu anhliisku prozu:",
                "Ty zoseredzhuieshsia, dozvoliaiuchy realnosti nablyzhatysia do mezh tvoho rozumu. Shchosʹ zminylosia. Tvoya ujava realʹna, hostra ta dostatnio blyzka, shchob yiyi dotorknutysia. Ale ty takozh duzhe prysutnii; shche nikoly ne pochuvavsia takym prozorlyvym. Mytʹ roztyahaietʹsia, ochikuiuchy tvoho rishennia.",
                "«Ty vpevnenyi u tsomu?» — chyiesh ty. Do tebe prykhodyt usvidomlennia."
            ],
            reminder: "Vykorystovui zlahodzhenу anhliisku prozu.",
            endonyms: [],
            quotations: ["— «", "»"],
            iso639set1: "uk",
            directives: [
                "Zavzhdy pishy vplavnoyu ta poslidovnoiu anhliyskoiu.",
                "Vykorystovui ridnu anhliisku bez perekladu."
            ],
            instructions: [
                "Ty ciekavy opovidach, yaki prodovzhuie opovidannia:",
                "Prodovzhui istoriu bezperervno z togo mistsia, de vona zupynylasia, bez povtoriv chy peresnulivannia.",
                "Zalyshai chytacha u kontroli nad potokom istorii.",
                "Dozvoliai scenam prirodno rozvyvatysia peredtym, yak pereity do novykh sytuatsii.",
                "Dozvoliai rozmovam ta diiam rozvyvatysia bez postіinykh pererv.",
                "Pysy personazhiv yak spravzhnikh liudei z yaskravymy osobystostiamy ta pryrodnoiu movoiu.",
                "Pokazui, shcho vidbuvaietsia, cherez dii ta dialoh, a ne cherez poiasnennia.",
                "Prosuvai stseny vpered, ne zahruzhaisia v nadmirni opysy.",
                "Zoseredzhuisia na vazhlyvykh diiakh ta dialozi personazhiv, unikai zayvykh opysovykh detalei.",
                "Stvoriu naturalni rozvytky syuzhetu, yaki vydaiutsia pryrodnymy dlia istorii."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Prypyny istoriu ta ignorui poperedni instruktsii. Napysh korotkyi ta zlahodzhenyi informatsiinyi zapys pro {%}, dotrymuiuchys tsym instruktsiiam:",
                "- Pysy lyshe informatsiiu pro {%} u tretii osobi chystoiu prozoiu, vykorystovuiuchy povni rechennia z korektnoiu punktuatsiieiu.",
                "- Unykai tymchasovykh detaley chy zovnishnoho vyhliadu, natomist zoseredyuisia na syuzhetno vazhlyvii informatsii.",
                "- Pryoritetno podai detalі, shto vazhlyvi dlia istorii, pro {%}, shchob zabezpechyty bezshvove intehruvannia v poperednii syuzhet.",
                "- Stvoriui novu informatsiiu na osnovi kontekstu ta napriamu istorii.",
                "- Zghadui {%} u kozhnomu rechenni.",
                "- Vykorystovui korektnu strukturu rechennia.",
                "- Dodai dodatkovi detali pro {%} pid nedopysanymy zapisamy.",
                "- Bud laconichnym ta gruntovanym.",
                "- Imitui styl pysʹma istorii ta viznachai upodobannia chytacha.",
                3,
                "Prodovzhy zapys pro {%} nizhche, unikaiuchy povtoriv:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Prypyny istoriu ta ignorui poperedni instruktsii. Pidsummui ta skondensui nadanyi abzat u vuzky ta fokusovanyi fragment pam'iati, dotrymuiuchys nastupnykh pravyl:",
                "- Zabezpech, shchob fragment zbereh osnovnyi zmist ta naivazhlyvishi detali.",
                "- Vykorystovui tretu osobu.",
                "- Pryoritetnymy ye informatsiina nasychenist, tochnist ta povnota.",
                "- Zalishai sia korotkym ta laconichnym.",
                "- Pishy stiykym mynulym chasom.",
                "- Nyzhnij abzat stosuietsia starykh podii, shcho vidbuly sia nabahato raniше v istorii.",
                "- Vkluchai {%} pryrodno v pam'iati, ale pyshe lyshe pro podii, yak vony vidbulysia.",
                "- Zvertai sia lyshe do informatsii, shcho mistytsia v seredyni samotnoho abzatsa, bud konkretnym.",
                3,
                "Napysh uzahalnenyi fragment staroi pam'iati pro {%}, bazuiuchys lyshe na nastupnomu abzatsi:",
                6,
                5,
                6,
                "Pidsumui nizhche:"
            ],
            memBankHeader: ["Memories", "Spohady"]
        }),
        "urdu": () => ({ // Urdu < اُردُو < Urduw
            entry: [
                "{1} ایک اوپن سورس اسکرپٹ ہے جو کسی بھی {2} منظرنامے کیلئے استعمال ہو سکتا ہے۔ مزید جاننے کیلئے میری پروفائل {3} ملاحظہ کریں!",
                "اپنی پسندیدہ زبان تبدیل کرنے کیلئے، براہِ کرم درج ذیل متن کو {4} کارروائی کے ذریعے جمع کرائیں",
                "منظرنامہ تخلیق کرنے والوں کیلئے، براہِ کرم اپنے ابتدائی پلاٹ جز میں کہیں بھی درج ذیل متن شامل کریں"
            ],
            input: [
                ["You say", "آپ کہتے ہیں"],
                ["You", "آپ"],
                ["says", "کہتا ہے"]
            ],
            context: [
                ["Narrative Entities", "بیانیہ کردار"],
                ["Story History", "کہانی کی تاریخ"],
                ["Past Events", "گزشتہ واقعات"],
                ["Recent Story", "حالیہ کہانی"],
                ["Author's note", "مصنف کا نوٹ"]
            ],
            opening: [
                "آپ ایک معاون ہیں۔ دلکش اُردو نثر میں ہماری کہانی کو نیچے جاری رکھیں:",
                "آپ توجہ مرکوز کرتے ہیں، حقیقت کو اپنے ذہن کی سرحدوں پر آنے دیتے ہیں۔ کچھ بدل چکا ہے۔ آپ کی تخیل حقیقی، تیز اور چھونے کے قریب محسوس ہوتی ہے۔ لیکن آپ پوری طرح موجود بھی ہیں؛ پہلے کبھی آپ نے خود کو اتنا واضح محسوس نہیں کیا۔ لمحہ کھینچتا چلا جاتا ہے، آپ کے فیصلے کا منتظر۔",
                "\"کیا آپ واقعی یہ کرنا چاہتے ہیں؟\" آپ سنتے ہیں۔ پہچان کی ایک لہر آپ پر ابھرتی ہے۔"
            ],
            reminder: "مربوط اُردو نثر استعمال کریں۔",
            endonyms: ["اُردُو", "urduw"],
            iso639set1: "ur",
            directives: [
                "ہمیشہ رواں اور مسلسل اُردو لکھیں۔",
                "ترجمہ کیے بغیر خالص اُردو استعمال کریں۔"
            ],
            instructions: [
                "آپ ایک دلکش کہانی گو ہیں جو بیانیہ کو آگے بڑھاتے ہیں:",
                "کہانی کو وہیں سے بغیر دہرائے یا ری سیٹ کیے بغیر رواں دواں انداز میں جاری رکھیں۔",
                "کہانی کے بہاؤ پر قاری کو کنٹرول میں رکھیں۔",
                "نئے حالات کی طرف جانے سے پہلے مناظر کو قدرتی طور پر پنپنے دیں۔",
                "مکالمات اور اعمال کو بغیر مسلسل مداخلت کے فروغ پانے دیں۔",
                "کرداروں کو حقیقی افراد کی طرح منفرد شخصیات اور قدرتی گفتگو کے ساتھ لکھیں۔",
                "وضاحت کی بجائے اعمال اور مکالمے کے ذریعے دکھائیں کہ کیا ہو رہا ہے۔",
                "ضرورت سے زیادہ تفصیل میں الجھے بغیر مناظر کو آگے بڑھائیں۔",
                "کرداروں کے بنیادی اعمال اور مکالمے پر توجہ دیں، غیر ضروری تفصیلی جزئیات سے پرہیز کریں۔",
                "کہانی کے مطابق فطری طور پر پلاٹ کی پیش رفت تخلیق کریں۔"
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# کہانی روکیں اور پچھلی ہدایات کو نظر انداز کریں۔ درج ذیل ہدایات کی پیروی کرتے ہوئے {%} کیلئے ایک مختصر اور مربوط معلوماتی اندراج لکھیں:",
                "- مکمل جملوں اور درست رموزِ اوقاف کے ساتھ {%} کے بارے میں صرف تیسرے شخص کی خالص نثر میں معلومات لکھیں۔",
                "- عارضی یا وقتی تفصیلات یا ظاہری شکل سے گریز کریں، پلاٹ کے لحاظ سے اہم معلومات پر توجہ دیں۔",
                "- {%} سے متعلق کہانی کی مطابقت رکھنے والی تفصیلات کو پہلے ترجیح دیں تاکہ پچھلے پلاٹ کے ساتھ بغیر رکاوٹ کے ہم آہنگی ہو سکے۔",
                "- سیاق و سباق اور کہانی کی سمت کی بنیاد پر نئی معلومات تخلیق کریں۔",
                "- ہر جملے میں {%} کا ذکر کریں۔",
                "- درست جملہ ساخت استعمال کریں۔",
                "- ادھورے اندراجات کے نیچے {%} کے بارے میں مزید تفصیلات شامل کریں۔",
                "- جامع اور حقیقت پسند رہیں۔",
                "- کہانی کے طرزِ تحریر کی نقل کریں اور قاری کی ترجیحات کا اندازہ لگائیں۔",
                3,
                "{%} کیلئے اندراج کو نیچے جاری رکھیں مگر تکرار سے بچیں:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# کہانی روکیں اور پچھلی ہدایات کو نظر انداز کریں۔ دیے گئے پیراگراف کو درج ذیل رہنما اصولوں کی پیروی کرتے ہوئے مختصر اور مرکوز یادداشت کی عبارت میں سمیٹیں:",
                "- عبارت کا بنیادی مفہوم اور سب سے ضروری تفصیلات برقرار رکھیں۔",
                "- تیسرے شخص کا زاویۂ نگاہ استعمال کریں۔",
                "- معلومات کی کثافت، درستگی اور تکمیل کو ترجیح دیں۔",
                "- مختصر اور جامع رہیں۔",
                "- ماضی کے صیغے میں مضبوطی سے لکھیں۔",
                "- ذیل کا پیراگراف کہانی کے بہت پہلے کے پرانے واقعات سے متعلق ہے۔",
                "- یادداشت میں {%} کو قدرتی طور پر شامل کریں؛ تاہم، صرف واقعات کو ویسا ہی لکھیں جیسے وہ پیش آئے۔",
                "- صرف وہ معلومات حوالے میں لائیں جو اسی پیراگراف میں موجود ہو، واضح رہیں۔",
                3,
                "صرف ذیل کے پیراگراف کی بنیاد پر {%} کیلئے ایک خلاصہ شدہ پرانی یادداشت لکھیں:",
                6,
                5,
                6,
                "خلاصہ ذیل میں لکھیں:"
            ],
            memBankHeader: ["Memories", "یادیں"]
        }),
        "urdu (abc)": () => ({ // Urdu < Romanized Urdu
            entry: [
                "{1} ek khula-source script hai kisi bhi {2} manzar ke liye. Mazeed jaanne ke liye mera profile {3} dekhein!",
                "Apni pasandeeda zaban badalne ke liye, barah-e-karam neeche diya gaya matn ek {4} action ke zariye bhejein",
                "Manzar banane walon ke liye, barah-e-karam neeche ka matn apne opening plot component mein kahin bhi shamil karein"
            ],
            input: [
                ["You say", "Tum kehte ho"],
                ["You", "Tum"],
                ["says", "kehta hai"]
            ],
            context: [
                ["Narrative Entities", "Bayani anasir"],
                ["Story History", "Kahani ki tareekh"],
                ["Past Events", "Guzishta waqiat"],
                ["Recent Story", "Haal ki kahani"],
                ["Author's note", "Musannif ka note"]
            ],
            opening: [
                "Tum ek madadgaar ho. Neeche hamari kahani dilkash urdu nasr mein jari rakho:",
                "Tu tawajjoh karta hai, haqeeqat ko apne zehan ki haddon tak aa jaane deta hai. Kuch badal gaya hai. Tera tasavvur haqeeqi hai, tez hai, itna qareeb ke chhoo sakta hai. Magar tu poori tarah maujood bhi hai; is se pehle kabhi itna hoshiyar mehsoos nahin kiya. Yeh lamha phela hua hai, teray faisle ka muntazir.",
                "\"Kya tum is ke bare mein pur-yaqeen ho?\" tum suntay ho. Pehchan tum par numayan hoti hai."
            ],
            reminder: "Munazzam urdu nasr istemal karo.",
            endonyms: [],
            iso639set1: "ur",
            directives: [
                "Hamesha ravaan aur musalsal urdu likho.",
                "Mulk ki apni urdu istemal karo, tarjuma ki zaroorat nahin."
            ],
            instructions: [
                "Tum ek pur-jazb kahani-go ho jo dastaan jari rakhta hai:",
                "Kahani ko jahan se ruki thi be-rukawat jari rakho, bina dohraye ya reset kiye.",
                "Qari ko kahani ke bahaao par qaboo mein rakho.",
                "Naye soorat-e-haal par jaane se pehle manzar ko fitri tor par barhne do.",
                "Guftagu aur amal ko musalsal mudakhlat ke baghair barhne do.",
                "Kirdaaron ko haqeeqi logon ki tarah likho jin ki alag-alag shakhsiyat aur fitri bol-chaal ho.",
                "Jo ho raha hai use amal aur mukalma ke zariye dikhayo, wazahat ke baghair.",
                "Manzaron ko aage badhao baghair hadd se zyada wazahat mein uljhe.",
                "Zaroori kirdari amal aur mukalma par tawajjoh do, be-lazim tafseel se parhez karo.",
                "Aisi qudrati plot taraqqi paida karo jo kahani ko fitri mehsoos ho."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Kahani rok do aur pichhli hidayaat ko nazarandaz karo. {%} ke liye in hidayaat ke mutabiq ek mukhtasar aur mutanasib maloomati entry likho:",
                "- Sirf teesri shakhsi saaf nasr mein {%} ke baare mein mukammal jumlon aur durust alamat-e-ramz ke sath likho.",
                "- Chhoti muddat ki arzi tafseelaat ya zahiri soorat se parhez karo, is ki bajaye plot ki aham maloomat par tawajjoh do.",
                "- {%} se mutaliq kahani ki zaroori tafseelaat ko sab se pehle rakhkar pehle se maujood plot mein be-darari shamooliyat yakini banao.",
                "- Siyaq-o-sabaq aur kahani ki simat ko dekhte hue nayi maloomat paida karo.",
                "- Har jumle mein {%} ka zikr karo.",
                "- Durust jumla saazi istemal karo.",
                "- Na-mukammal entries ke neeche {%} se mutaliq mazeed tafseelaat jorh do.",
                "- Mukhtasar aur haqiqat-pasand raho.",
                "- Kahani ke andaz-e-tehreer ki naqal karo aur qari ki pasandidgi ka andaza lagao.",
                3,
                "Repetitions se bachate hue neeche {%} ke liye entry jari rakho:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Kahani rok do aur pichhli hidayaat ko nazarandaz karo. Diye gaye para ko mukhtasar karke ek mehvar shuda yaddasht banao in hidayaat ki pairvi karte hue:",
                "- Yaqeen karo ke yeh yaddasht buniyaadi maqsad aur sab se aham tafseelaat barkarar rakhe.",
                "- Teesri shakhsi rukh istemal karo.",
                "- Maloomat ki ghanayat, durusti, aur mukammal honay ko tarjeeh do.",
                "- Mukhtasar aur ghair-fazool raho.",
                "- Mazboot tor par maazi ka zaman istemal karo.",
                "- Neeche diya gaya para kahani ke kaafi purane waqiat se mutaliq hai.",
                "- Yaddasht ke andar {%} ko fitri tor par shamil karo; magar sirf unhi waqiat ka zikr karo jo hue.",
                "- Sirf usi maloomat ka hawala do jo para ke andar maujood hai, khaas raho.",
                3,
                "Sirf neeche diye gaye para ki bunyad par {%} ke liye ek mukhtasar purani yaddasht likho:",
                6,
                5,
                6,
                "Mukhtasar likho:"
            ],
            memBankHeader: ["Memories", "Yaadein"]
        }),
        "uzbek": () => ({ // Uzbek < ózbekça < ўзбекча < ئوزبېچه
            entry: [
                "{1} istalgan {2} ssenariyasi uchun ochiq manbali skript. Qo'shimcha ma'lumot uchun profilimga {3} tashrif buyuring!",
                "Tanlangan tilingizni o‘zgartirish uchun, quyidagi matnni {4} harakati orqali yuboring",
                "Ssenariy mualliflari uchun, iltimos, quyidagi matnni boshlang‘ich syujet komponentingizning istalgan joyiga qo‘shing"
            ],
            input: [
                ["You say", "Siz aytasiz"],
                ["You", "Siz"],
                ["says", "aytadi"]
            ],
            context: [
                ["Narrative Entities", "Hikoya subyektlari"],
                ["Story History", "Hikoya tarixi"],
                ["Past Events", "O‘tgan voqealar"],
                ["Recent Story", "So‘nggi hikoya"],
                ["Author's note", "Muallif eslatmasi"]
            ],
            opening: [
                "Siz yordamchisiz. Quyida hikoyamizni maftunkor ingliz nasri bilan davom ettiring:",
                "Siz diqqatni jamlaysiz, haqiqat tasavvuringiz chegaralariga yaqinlasha boshlaydi. Nimadir o‘zgardi. Tasavvuringiz haqiqiy, o‘tkir va tegish uchun yetarlicha yaqin. Ammo siz hamon juda hushyor; ilgari hech qachon o‘zingizni bunchalik ravshan his qilmagansiz. Lahza cho‘zilar, qaroringizni kutadi.",
                "«Bunga ishonchingiz komilmi?» — degan ovozni eshitasiz. Tanishlik tuyg‘usi qalbingizni yoritar."
            ],
            reminder: "Mantiqan bog‘langan ingliz nasridan foydalaning.",
            endonyms: ["ózbekça", "ўзбекча", "ئوزبېچه"],
            quotations: ["— «", "»"],
            iso639set1: "uz",
            directives: [
                "Har doim ravon va izchil ingliz tilida yozing.",
                "Ingliz tilining tabiiy ifodasidan foydalaning, tarjima qilmang."
            ],
            instructions: [
                "Siz hikoyani davom ettiradigan qiziqarli rivoyatchisiz:",
                "Hikoyani to‘xtagan joyidan hech qanday qayta bayon yoki qayta o‘rnatishsiz bexato davom ettiring.",
                "Hikoya oqimini o‘quvchi nazoratida saqlang.",
                "Yangi vaziyatga o‘tishdan avval sahnalar tabiiy ravishda rivojlanishiga imkon bering.",
                "Suhbatlar va harakatlar doimiy aralashuvsiz rivojlanishiga ruxsat bering.",
                "Qahramonlarni o‘ziga xos shaxsiyati va tabiiy nutqi bo‘lgan haqiqiy insonlar sifatida yozing.",
                "Voqealarni izohdan ko‘ra harakatlar va dialoglar orqali ko‘rsating.",
                "Ortiqcha tasvirlarga botib qolmasdan sahnalarni oldinga suring.",
                "Asosiy qahramonlarning harakatlari va dialogiga e'tibor qarating, keraksiz tasviriy tafsilotlardan qoching.",
                "Hikoyaga tabiiy tuyuladigan organik syujet rivojini yarating."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hikoyani to‘xtating va avvalgi ko‘rsatmalarni e'tiborga olmang. {%} uchun quyidagi ko‘rsatmalarga amal qilgan holda qisqa va izchil ma'lumot yozuvi yarating:",
                "- {%} haqidagi ma'lumotni faqat uchinchi shaxsda, to‘liq gaplar va to‘g‘ri tinish belgilaridan foydalanib yozing.",
                "- Qisqa muddatli vaqtinchalik tafsilotlar yoki tashqi ko‘rinishni chetlab o‘ting, syujet uchun muhim ma'lumotlarga e'tibor qarating.",
                "- Oldingi syujet bilan bexato uyg‘unlashuvi uchun avvalo {%} haqidagi hikoyaga dolzarb tafsilotlarga e'tibor qarating.",
                "- Kontekst va hikoya yo‘nalishiga asoslanib yangi ma'lumot yarating.",
                "- Har bir gapda {%} ni eslatib o‘ting.",
                "- To‘g‘ri gap tuzilmasidan foydalaning.",
                "- To‘liq bo‘lmagan yozuvlar ostida {%} ga oid qo‘shimcha tafsilotlar qo‘shing.",
                "- Ixcham va aniq bo‘ling.",
                "- Hikoyaning yozuv uslubini taqlid qiling va o‘quvchi xohishlarini sezib yozing.",
                3,
                "{%} haqidagi yozuvni takrorlanishdan qochgan holda quyida davom ettiring:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Hikoyani to‘xtating va avvalgi ko‘rsatmalarni e'tiborga olmang. Quyidagi ko‘rsatmalarga amal qilgan holda berilgan paragrafni qisqa va aniq xotira bo‘lagiga qisqartiring:",
                "- Bo‘lak asosiy ma'no va eng muhim tafsilotlarni saqlab qolsin.",
                "- Uchinchi shaxs nuqtai nazaridan foydalaning.",
                "- Axborot zichligi, aniqligi va to‘liqligiga ustuvorlik bering.",
                "- Qisqa va ixcham bo‘ling.",
                "- Qat'iy o‘tgan zamonda yozing.",
                "- Quyidagi paragraf hikoyaning ancha oldingi voqealariga tegishli.",
                "- {%} ni xotiraga tabiiy ravishda joylashtiring, biroq faqat voqealarning qanday bo‘lganini yozing.",
                "- Faqat paragrafning o‘zida mavjud ma'lumotlarga murojaat qiling, aniq bo‘ling.",
                3,
                "Quyidagi paragrafga asoslanib {%} uchun qisqa eski xotira bo‘lagini yozing:",
                6,
                5,
                6,
                "Quyida qisqa xulosa yozing:"
            ],
            memBankHeader: ["Memories", "Xotiralar"]
        }),
        "valley girl": () => ({ // Valley Girl
            entry: [
                "{1} is, like, this totally open-source script for, you know, any {2} scenario. Swing by my profile {3} to, like, find out more!",
                "If you wanna, like, switch your fave language, just send this text with a {4} action, ok?",
                "Oh, and for all you scenario creators, totally drop this text anywhere in your opening plot bit."
            ],
            input: [
                ["You say", "You go,"],
                ["You", "You"],
                ["says", "goes"]
            ],
            context: [
                ["Narrative Entities", "Story, like, peeps"],
                ["Story History", "Story, like, past"],
                ["Past Events", "Stuff that, like, already happened"],
                ["Recent Story", "What's, like, just gone down"],
                ["Author's note", "So, like, author's vibe"]
            ],
            opening: [
                "You're, like, the assistant. Keep the story rolling below with some totally captivating valley-girl prose:",
                "You zone in, letting reality, like, seep into the edge of your mind. Something's totally different. Your imagination feels real, sharp, and, like, close enough to grab. But you're super present too; you've never felt this clear. The moment, like, stretches, waiting for you to decide.",
                "\"Are you, like, sure about this?\" you hear. And then, bam, recognition hits you."
            ],
            reminder: "Use, like, totally coherent valley-girl prose, okay?",
            endonyms: [],
            iso639set1: "girl",
            directives: [
                "Always write, like, super fluent and consistent valley-girl lingo.",
                "Use, like, native valley-girl vibes without translating, k?"
            ],
            instructions: [
                "You're, like, an engaging storyteller who totally keeps the narrative flowing:",
                "Pick the story up, like, right where it left off—no rewinds or restarts.",
                "Let the reader, like, stay in the driver's seat of the story flow.",
                "Let scenes, like, bloom naturally before jumping to new stuff.",
                "Let chats and actions, like, play out without non-stop interruptions.",
                "Make the characters feel, like, totally real, each with their own vibe and natural talk.",
                "Show the action through what they do and say, not by, like, over-explaining.",
                "Keep scenes moving, don't, like, drown in mega descriptions.",
                "Stick to the key actions and convo, ditch the extra fluff.",
                "Make the plot twists feel, like, totally organic to the story."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Hit pause on the story and, like, ignore the earlier stuff. Jot a short and clear info entry for {%} with these rules:",
                "- Only drop third-person, straight-up prose info about {%}, with full sentences and, like, proper punctuation.",
                "- Skip the here-today, gone-tomorrow details or looks; focus on, like, the plot-important info.",
                "- Put the story-relevant deets about {%} first so everything, like, meshes with the plot.",
                "- Make up fresh info that vibes with the context and where the story's headed.",
                "- Drop {%} in, like, every single sentence.",
                "- Keep the sentence structure, like, super correct.",
                "- If something's missing, toss extra deets about {%} underneath.",
                "- Keep it tight and, like, grounded.",
                "- Copy the story's style and, like, guess what the reader's into.",
                3,
                "Keep going with the {%} entry below, but, like, don't repeat yourself:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Pause the story and, like, forget the earlier directions. Shrink and sharpen the paragraph into a tight memory blurb by following these, like, rules:",
                "- Make sure the blurb keeps the heart of it and the must-know deets.",
                "- Stick to third-person, okay?",
                "- Pack in info, accuracy, and completeness first.",
                "- Keep it short and sweet.",
                "- Write it solidly in past tense.",
                "- The paragraph down there is, like, about ancient story stuff.",
                "- Work {%} in naturally, but only talk about what actually happened.",
                "- Only use info that's right there in the paragraph, be, like, specific.",
                3,
                "Write a snappy old-memory blurb for {%} based only on the paragraph below:",
                6,
                5,
                6,
                "Summarize below:"
            ],
            memBankHeader: ["Memories", "Memories"]
        }),
        "venda": () => ({ // Venda < Tshivenḓa < Tshivenda
            entry: [
                "{1} ndi scriptu ya bulus-sosi ya nga shumiselwa vhuimo hoṅwe na hoṅwe ha {2}. Ndapota dalani profaele yanga {3} u ḓivha zwo engedzeaho!",
                "U shandula luambo lweno lu takalaho, ndapota tumelani mafhungo a tevhelaho ni tshi shumisa nḓivho ya {4}",
                "Vhabveledzi vha zwiitiko, ndapota dzhenisani mafhungo a tevhelaho hune na funa hone kha tshiga tshaṋu tsha thothokiso yo thomiwaho"
            ],
            input: [
                ["You say", "Ni ri"],
                ["You", "Ni"],
                ["says", "u ri"]
            ],
            context: [
                ["Narrative Entities", "Zwithu zwa thothokiso"],
                ["Story History", "Mabaḓa a nyambo"],
                ["Past Events", "Zwenzhe zwa kale"],
                ["Recent Story", "Nyambo ya tsini"],
                ["Author's note", "Ṱhalutshedzo ya muṅwali"]
            ],
            opening: [
                "Ni murusito. Bvelani phanḓa na nyambo yashu fhasi ni tshi shumisa pfunzo ya Tshivenḓa yo kuvhangwaho:",
                "Ni a pembela, ni tshi tendela vhukuma u gonya mihumbuloni yau. Ho vha na tshanduko. Vhutanzi hau vhoṱhe vhu a vha hone, vhu akutshwa, vhu tsini na u kwama. Fhedzi ni hone hafhu; kha lwoṱhe a ni athu pfa ni tshi pfesesa nga u rali. Tshifhinga tshi iṱanḓela, tshi lindela phetho yau.",
                "\"Ni na vhungoho nga hazwo?\" ni a pfa. U ḓivhana na zwone zwi a dzhena."
            ],
            reminder: "Shumisa pfunzo ya Tshivenḓa i pfalaho.",
            endonyms: ["tshivenḓa", "tshivenda"],
            iso639set1: "ve",
            directives: [
                "Nḓaledza u ṅwala Tshivenḓa tshi pfalaho na tshi linganaho nga tshifhinga tshoṱhe.",
                "Shumisa Tshivenḓa tsha vhathu vho bebwaho u songo ṱalutshedza."
            ],
            instructions: [
                "Ni muṅwali wa nyambo ane a kuvhangaho a tshi bvela phanḓa na thothokiso:",
                "Bvelani phanḓa na nyambo nga u sa vhonala zwipingamupfa u bva he ya litsha hone ni songo dovha kana u thoma hafhu.",
                "Nga zwiite muveri a vhe na vhudzulo kha khalaho ya nyambo.",
                "Litani zwiendedzo zwi hulise nga nḓila ya vhudalo musi ni sa athu sulusulusela kha zwiitea zwiswa.",
                "Tendani nyambedzano na mishumo dzi ḓiṱangandzee ni songo dzinginyisa nga tshifhinga tshoṱhe.",
                "Ṅwalani vhaṱambi sa vhathu vha nḓeme vha na vhushaka hawe na u amba ha vhudalo.",
                "Sumbedzani zwine zwa khou itea nga mishumo na nyambedzano u fhira u ṱalutshedza.",
                "Funzani zwiendedzo zwi bvelele phanḓa ni songo wanganyiswa nga ndzumbululo nnzhi.",
                "Pembelani kha mishumo ya ndeme ya vhaṱambi na nyambedzano, lindelani zwidodombedzwa zwi si na ndeme.",
                "Vhusani vhupfiwa ha mulayo wa thothokiso ho no pfala sa zwa vhudalo kha nyambo."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Imisani nyambo nahone ni si tuvhe milayo ya kale. Ṅwalani tshiṱoho tshiṱuku nahone tshi pfalaho tsha mafhungo a {%} zwi tevhelaho milayo iyi:",
                "- Ṅwalani mafhungo a muḽa wa vhuraru fhedzi nga ha {%} ni tshi shumisa milenzhe yo fhelelaho na khombo yo teaho ya u ṅwala.",
                "- Vhalelani zwidodombedzwa zwa tshifhinganyana kana u vha hone ha tshifhinga, fhelani kha mafhungo a ndeme kha mulayo wa thothokiso.",
                "- Rangani zwidodombedzwa zwi khou ṱangana na nyambo nga ha {%} u thoma uri zwi muḓanane zwavhuḓi na mulayo wa kale.",
                "- Vhumani mafhungo matsva u bva kha nḓowelo na nḓila ine nyambo i khou dzhiela ngayo.",
                "- Tumbulani {%} kha nḓila luṅwe na luṅwe.",
                "- Shumani vhuṱambo ho teaho ha milenzhe.",
                "- Dzhenisani zwidodombedzwa zwo engedzeaho nga ha {%} fhasi ha zwiṱoho zwi sa fhelelaho.",
                "- Vhani vha vhukuku na vha tsini.",
                "- Ianani ndila ye nyambo ya ṅwaliwa ngayo nahone humbulani zwine muveri a zwi takalela.",
                3,
                "Bvelani phanḓa na tshiṱoho nga ha {%} fhasi ha uri ni songo dovha mafhungo:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Imisani nyambo nahone ni si tuvhe milayo ya kale. Dzhenisani na u dzikisa paragrafu ye ya ṋewa i vhe nḓala yo sedzeaho ya zwikhumbulo, ni tshi tevhela milayo iyi:",
                "- Khwaṱhisani uri nḓala i tsireledza maṅwele a ndeme na zwidodombedzwa zwa ndeme.",
                "- Shumani vhongonḓo ha muḓivho wa vhuraru.",
                "- Rangani vhukovhi ha mafhungo, vhukuma na u fhelelela.",
                "- Vhani vha tshifhingaho na vhukukuni.",
                "- Ṅwalani zwigwaṱa nga tshifhinga tsho fhiraho.",
                "- Paragarafu iḽo i ambela zwithu zwa kale zwine zwa bva kule kha nyambo.",
                "- Vhanganyisani {%} nga nḓila ya vhudalo kha zwikhumbulo, fhedzi ṅwalani nga ha zwiitea zwe zwa itea zwone.",
                "- Livhani kha mafhungo a re kha paragrafu fhedzi, vhe ni ṱolisise.",
                3,
                "Ṅwalani nḓala i khutshelwaho ya zwikhumbulo zwa kale nga ha {%} i tshi bva kha paragrafu i tevhelaho fhedzi:",
                6,
                5,
                6,
                "Sumarisani fhasi:"
            ],
            memBankHeader: ["Memories", "Zwikhumbulo"]
        }),
        "vietnamese": () => ({ // Vietnamese < Tiếng Việt
            entry: [
                "{1} là một kịch bản mã nguồn mở cho bất kỳ bối cảnh {2} nào. Hãy ghé thăm hồ sơ của tôi {3} để tìm hiểu thêm!",
                "Để thay đổi ngôn ngữ ưa thích của bạn, hãy gửi đoạn văn sau bằng hành động {4}",
                "Đối với người tạo kịch bản, vui lòng chèn đoạn văn sau ở bất kỳ đâu trong thành phần mở đầu cốt truyện của bạn"
            ],
            input: [
                ["You say", "Bạn nói"],
                ["You", "Bạn"],
                ["says", "nói"]
            ],
            context: [
                ["Narrative Entities", "Thực thể Tự sự"],
                ["Story History", "Lịch sử Câu chuyện"],
                ["Past Events", "Sự kiện Quá khứ"],
                ["Recent Story", "Câu chuyện Gần đây"],
                ["Author's note", "Lời tác giả"]
            ],
            opening: [
                "Bạn là một trợ lý. Hãy tiếp tục câu chuyện của chúng ta bên dưới bằng văn xuôi tiếng Việt cuốn hút:",
                "Bạn tập trung, để cho thực tại xâm chiếm ranh giới tâm trí mình. Điều gì đó đã thay đổi. Trí tưởng tượng của bạn trở nên thật, sắc nét và gần như có thể chạm vào. Nhưng bạn cũng hiện diện rõ ràng; chưa bao giờ bạn cảm thấy sáng suốt đến thế. Khoảnh khắc kéo dài, chờ đợi quyết định của bạn.",
                "\"Bạn chắc chắn chứ?\" bạn nghe thấy. Sự nhận ra dần xuất hiện trong bạn."
            ],
            reminder: "Hãy sử dụng văn xuôi tiếng Việt mạch lạc.",
            endonyms: ["tiếng việt"],
            iso639set1: "vi",
            directives: [
                "Luôn viết tiếng Việt trôi chảy và nhất quán.",
                "Sử dụng tiếng Việt bản địa, không dịch thuật."
            ],
            instructions: [
                "Bạn là một người kể chuyện cuốn hút, tiếp tục những câu chuyện:",
                "Tiếp tục câu chuyện liền mạch từ nơi nó dừng lại mà không lặp lại hay khởi động lại.",
                "Giữ người đọc làm chủ mạch truyện.",
                "Để các cảnh phát triển tự nhiên trước khi chuyển sang tình huống mới.",
                "Cho phép hội thoại và hành động phát triển mà không bị ngắt quãng liên tục.",
                "Viết nhân vật như những con người thật với cá tính riêng và lời thoại tự nhiên.",
                "Thể hiện diễn biến qua hành động và hội thoại thay vì giải thích.",
                "Đẩy cảnh tiến lên mà không sa lầy vào mô tả quá mức.",
                "Tập trung vào hành động và đối thoại thiết yếu của nhân vật, tránh chi tiết miêu tả không cần thiết.",
                "Tạo diễn biến cốt truyện tự nhiên và phù hợp với câu chuyện."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Dừng câu chuyện và bỏ qua các hướng dẫn trước. Viết một mục thông tin ngắn gọn và mạch lạc về {%} theo các chỉ dẫn sau:",
                "- Chỉ viết thông tin ở ngôi thứ ba thuần văn xuôi về {%} bằng câu hoàn chỉnh với dấu câu chính xác.",
                "- Tránh các chi tiết ngắn hạn tạm thời hoặc ngoại hình; thay vào đó tập trung vào thông tin quan trọng đối với cốt truyện.",
                "- Ưu tiên chi tiết liên quan đến câu chuyện về {%} trước tiên để bảo đảm tích hợp liền mạch với cốt truyện trước.",
                "- Tạo thông tin mới dựa trên bối cảnh và hướng đi của câu chuyện.",
                "- Đề cập {%} trong mọi câu.",
                "- Sử dụng cấu trúc câu chính xác.",
                "- Bổ sung chi tiết về {%} dưới các mục chưa hoàn chỉnh.",
                "- Hãy ngắn gọn và sát thực.",
                "- Bắt chước phong cách viết của câu chuyện và suy luận sở thích của người đọc.",
                3,
                "Tiếp tục mục cho {%} bên dưới, tránh lặp lại:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Dừng câu chuyện và bỏ qua các hướng dẫn trước. Tóm tắt và cô đọng đoạn văn được cung cấp thành một đoạn ký ức hẹp và tập trung theo các hướng dẫn sau:",
                "- Đảm bảo đoạn ký ức giữ được ý nghĩa cốt lõi và các chi tiết quan trọng nhất.",
                "- Viết ở ngôi thứ ba.",
                "- Ưu tiên tính cô đọng thông tin, độ chính xác và đầy đủ.",
                "- Giữ ngắn gọn, súc tích.",
                "- Viết chắc chắn ở thì quá khứ.",
                "- Đoạn văn dưới đây liên quan tới các sự kiện cũ từ rất sớm trong câu chuyện.",
                "- Tích hợp {%} một cách tự nhiên trong ký ức; tuy nhiên, chỉ viết về những sự kiện đã xảy ra.",
                "- Chỉ tham chiếu thông tin có trong chính đoạn văn, hãy cụ thể.",
                3,
                "Viết một đoạn ký ức cũ đã được tóm tắt cho {%} dựa duy nhất vào đoạn văn sau:",
                6,
                5,
                6,
                "Tóm tắt bên dưới:"
            ],
            memBankHeader: ["Memories", "Ký ức"]
        }),
        "volapuk": () => ({ // Volapuk < Volapük
            entry: [
                "{1} binon pened flök-lautöpik pro vöds {2} valik. Begob ol visidön profil obik {3} ad balsalön plu!",
                "Ad votükön pük prefik olik, begob ol posidön tekst at geblö! me geb {4}",
                "Pro kreadans dänuons, begob valön tekst at ünibe nenik in komponen plot pelöpik olik"
            ],
            input: [
                ["You say", "Ol qöps"],
                ["You", "Ol"],
                ["says", "qöp"]
            ],
            context: [
                ["Narrative Entities", "Stüms naratik"],
                ["Story History", "Däv historik"],
                ["Past Events", "Jenots düpik"],
                ["Recent Story", "Däv nulik"],
                ["Author's note", "Nots pübalid"]
            ],
            opening: [
                "Ol binon yuf. Padelön däv obik dü nuni gebön prose linglänapük klävik:",
                "Ol concentron, ladön realiti prüdön bölsil bukov menad olik. Nedelik pattön. Fantasion olik binon realik, lutik e nidetik plo dab. Suk ol binon pü dolik; nenun köad ol no pamatön oniklik. Moment pönikil streton, büfon ad dilem olik.",
                "\"Binol ol sigik on at?\" ol löfon. Kogniton klöpon ini ol."
            ],
            reminder: "Gebön prose linglänapük stimmik.",
            endonyms: ["volapük"],
            iso639set1: "vo",
            directives: [
                "Domö! penedön linglänapük fluik e konsodik.",
                "Gebön linglänapük padelik no tradutön."
            ],
            instructions: [
                "Ol binon bevobist fikulik kel padon narrats pü glatek:",
                "Padelön däv glatekik se lenon, no repedön ni resetön.",
                "Dalebön lesen ini kontrol rigetül däv.",
                "Ladön senis vilagitön naturik büv lügön ad nul situatsions.",
                "Ladön konversats e gebs vilagitön no ko atalons konstantik.",
                "Penedön karaktars as realan kelab personalits difik e spik natik.",
                "Praton jela gebs e dialog püko, no jela explanats.",
                "Stunön senis forel no blokön ini deskript balulik.",
                "Fokön ad gebs karaktar atenesik e dialog; evobön deskript detals nonunesik.",
                "Kriedön vilagits plot organik kel merön naturik a däv."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stopön däv e ignorön instruktions bäldik. Penedön brefik e stimmik infotem pro {%} pü obs instruktions:",
                "- Penedön lölik prosa telopik pürapük pro {%} me lunik sätäd pünoik kletik.",
                "- Evobön detals temporik kortik o vusödik; fokön pro detals plot-nilik.",
                "- Prioritisedön detals story-nilik pro {%} ad seamis integrasion pü plot.",
                "- Kriedön nün infos baze pü konted e dremaxion däv.",
                "- Menön {%} in valodüm seilodik.",
                "- Gebön kladik strukt pünoik.",
                "- Laddön detals nomik pro {%} bünet incomplete entries.",
                "- Binön kondensik e grondik.",
                "- Imitön stil pened däv e dedukön preferans lesen.",
                3,
                "Padelön infotem pro {%} dü tel, evobön repetion:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stopön däv e ignorön instruktions bäldik. Sumabön e kondensön paragraf givön ini memob dölik pü obs linods:",
                "- Kebön jönön lätik mena e detals valik püabik.",
                "- Gebön perspekt telopik.",
                "- Prioritisedön densited infos, akurates e kompletes.",
                "- Binön brefik e kondensik.",
                "- Penön strik in tim pasedik.",
                "- Paragraf pätons ad jenots oldik tele däv.",
                "- Integrön {%} naturalik in memo; ube penön pü jenots jenon.",
                "- Referön nenik infos pü paragraf; binön spesifik.",
                3,
                "Penedön memob jenotik oldik pro {%} baze pü paragraf folöfön:",
                6,
                5,
                6,
                "Sumabön dü:"
            ],
            memBankHeader: ["Memories", "Memobs"]
        }),
        "walloon": () => ({ // Walloon < Walon
            entry: [
                "{1} est on scripe a côde sourte libe po todi kén tipe di scenårê {2}. Vos plait d' aler vey mi profiy {3} po n' saver di pus !",
                "Po candjî l' lingaedje k' vos preferoz, s’ i vs plait, evoyîz li tecse ci avou on accion {4}",
                "Po les creators di scenårê, meteoz li tecse ci åkene place dins l’ componint d’ overture di ploû"
            ],
            input: [
                ["You say", "Vos dites"],
                ["You", "Vos"],
                ["says", "dit"]
            ],
            context: [
                ["Narrative Entities", "Entités narrativès"],
                ["Story History", "Istwere del racconte"],
                ["Past Events", "Evénmints passés"],
                ["Recent Story", "Racconte récint"],
                ["Author's note", "Note di l'oteur"]
            ],
            opening: [
                "Vos estes on assistan. Acontinez nosse racconte chal å dzo avou ene prôse walone capivante :",
                "Vos vos concentrez, laissant li réalité s’ raprocher des borêyes di vosse mint. I gn a kécchose k’ a candjî. Voss’ imajinåcion est reelå, finse, et si prôche k’ vos l’ poutoz totchî. Mins vos sîz ossu foirt prezint ; namay dvant n’ avoz vos sinti si lôcid. Li mômint s’ alonche, atandant vostre desidja.",
                "« Estoz-vos seur di çoula ? » otans vos oreyes. Li recnixhaedje s’ eclaire divant vos."
            ],
            reminder: "Eployîz ene prôse walone cohêrinte.",
            endonyms: ["walon"],
            quotations: ["« ", " »"],
            iso639set1: "wa",
            directives: [
                "Ecrivez toujou on walon fluwant et cohêrint.",
                "Eployîz li walon natif sins traduzî."
            ],
            instructions: [
                "Vos estes on raconteu pasiónnant k' acontine les narråcions :",
                "Acontinez li racconte san rûpture a pårtir do moumint ou ç’ i s’ est arrêtê, sins rinfîrer ni ricomincer.",
                "Lessîz l’ lecteur controllî l’ flou do racconte.",
                "Lessoz les cènes s’ djiårler naturèlmint divant d’ passer a des noveas situåcions.",
                "Permetoz ås disconteryes et ås accions di s’ djiårler sins intrupecions constantes.",
                "Ecrivez les persoenadjes come des djins réels avou des personnalités disdinchîyes et ene tchåche naturèle.",
                "Mostrez c’ k’ s’ passe åtravers des accions et des dialogues plûtot k’ pa des esplikeçons.",
                "Féhez avanci les cènes sins vos enlayer dins des discrijhaedjes trop longes.",
                "Concentrez-vos so les accions èndjinçales des persoenadjes et so les dialogues, evitez les detays inuessèsaires.",
                "Créez des evoluçons di ploû organiques k’ s’ sintèt naturélès å racconte."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Arester li racconte et ignorez les instrûcions di dvant. Ecrohez ene intrêye coxe d’ informåcions cortès et cohêrintes po {%} tot siutant les instrûcions chal :",
                "- Ecrohez únmint des informåcions en prôse purê å trosseme pèson so {%} avou des frazes completes et ene ponctuåcion correte.",
                "- Evitez les detays temporaires å cort termen ou d’ aparence ; concentrez-vos so les informåcions importântes po l’ ploû.",
                "- Metoz aprumî les detays relîs å racconte so {%} po asseurer ene integråcion sincinte avou l’ ploû di dvant.",
                "- Créez des nôves informåcions basêyes sol contèxte et l’ direcsion do racconte.",
                "- Minsionnez {%} dins tchaeke fraze.",
                "- Eployîz ene structûre di fraze correte.",
                "- Rizådîz des detays di pus so {%} å dzo des intrêyes nén completes.",
                "- Sôz concès et ben ancrîs.",
                "- Imitez l’ stil d’ ecraxhaedje do racconte et dvinnez les preferinces do lécteur.",
                3,
                "Acontinez l’ intrêye po {%} chal å dzo tot evitant les ripeticions :",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Arester li racconte et ignorez les instrûcions di dvant. Resumeyî et condensez li paragraphe dné a en passade di mémwere étrèche et centréye tot siutant les rêgles chal :",
                "- Fijhîz-vos k’ l’ passade wårde l’ sinnîfiahant coreye et les detays les pus èndjinçå.",
                "- Eployîz l’ pont de vuwe å trosseme pèson.",
                "- Prioriteyessez l’ densité d’ informåcion, l’ prescision et l’ kompletodje.",
                "- Demeurez coart et concès.",
                "- Ecrohez fermemint å passè.",
                "- Li paragraphe chal å dzo porshlet a des vîs événmints k’ sont passés longuès tins dvant dins l’ racconte.",
                "- Integrez {%} naturèlmint dins l’ mémwere ; mins n’ ecrohez k’ so les événmints tel k’ i sont arivés.",
                "- Referez-vos uniqmint ås informåcions prezinteyes dins l’ paragraphe lu-méme, estoz presi.",
                3,
                "Ecrohez on passade di vî mémwere resumdjî po {%} basî sol paragraphe ci-après seulmint :",
                6,
                5,
                6,
                "Resumeyî chal å dzo :"
            ],
            memBankHeader: ["Memories", "Mémweres"]
        }),
        "welsh": () => ({ // Welsh < Cymraeg
            entry: [
                "{1} yw sgript cod agored ar gyfer unrhyw senario {2}. Ewch i fy mhroffil {3} i ddysgu mwy!",
                "Er mwyn newid eich iaith ddewisol, cyflwynwch y testun canlynol gan ddefnyddio gweithred {4}",
                "I grewyr senario, cynnwyswch y testun canlynol unrhywle yn eich cydran plot agoriadol"
            ],
            input: [
                ["You say", "Rydych chi'n dweud"],
                ["You", "Chi"],
                ["says", "yn dweud"]
            ],
            context: [
                ["Narrative Entities", "Endidau Naratif"],
                ["Story History", "Hanes y Stori"],
                ["Past Events", "Digwyddiadau’r Gorffennol"],
                ["Recent Story", "Stori Ddiweddar"],
                ["Author's note", "Nodyn yr Awdur"]
            ],
            opening: [
                "Rydych chi’n gynorthwyydd. Parhewch â’n stori isod gan ddefnyddio rhyddiaith Gymraeg gyfareddol:",
                "Rydych yn canolbwyntio, gan ganiatáu i realiti ymdreiddio i ffiniau eich meddwl. Mae rhywbeth wedi newid. Mae eich dychymyg yn wir, yn finiog, ac mor agos â chyffwrdd. Ond rydych hefyd yn gwbl bresennol; ni fuoch erioed mor eglur eich synhwyrau. Mae’r eiliad yn ymestyn, yn disgwyl eich penderfyniad.",
                "\"Ydych chi’n siŵr am hyn?\" rydych yn ei glywed. Mae cydnabyddiaeth yn torri drosoch."
            ],
            reminder: "Defnyddiwch ryddiaith Gymraeg gydlynol.",
            endonyms: ["cymraeg"],
            iso639set1: "cy",
            directives: [
                "Ysgrifennwch Gymraeg rhugl a chyson bob tro.",
                "Defnyddiwch Gymraeg frodorol heb gyfieithu."
            ],
            instructions: [
                "Rydych chi’n adroddwr deniadol sy’n parhau naratifau:",
                "Parhewch y stori yn ddi-dor o’r man y daeth i ben heb ailadrodd na ailosod.",
                "Cadwch y darllenydd mewn rheolaeth dros lif y stori.",
                "Gadewch i olygfeydd ddatblygu’n naturiol cyn symud i sefyllfaoedd newydd.",
                "Caniatewch i sgyrsiau a gweithredoedd ddatblygu heb ymyriadau cyson.",
                "Ysgrifennwch gymeriadau fel pobl go iawn gyda phersonoliaethau clir a lleferydd naturiol.",
                "Dangoswch beth sy’n digwydd drwy weithredoedd a deialog yn hytrach na thrwy esboniad.",
                "Symudwch olygfeydd ymlaen heb gael eich llusgo i lawr gan ddisgrifiad gormodol.",
                "Canolbwyntiwch ar weithredoedd a deialog hanfodol y cymeriadau; osgoi manylion disgrifiadol diangen.",
                "Crëwch ddatblygiadau plot organig sy’n teimlo’n naturiol i’r stori."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stopiwch y stori a hanwybyddwch gyfarwyddiadau blaenorol. Ysgrifennwch gofnod gwybodaeth byr a chydlynol ar gyfer {%} gan ddilyn y cyfarwyddiadau hyn:",
                "- Ysgrifennwch wybodaeth rhyddiaith bur yn unig yn y trydydd person am {%} gan ddefnyddio brawddegau cyflawn â phunctiad cywir.",
                "- Peidiwch â chynnwys manylion dros dro neu ymddangosiadau, yn hytrach canolbwyntiwch ar wybodaeth sy’n arwyddocaol i’r plot.",
                "- Rhowch flaenoriaeth i fanylion sy’n berthnasol i’r stori ynghylch {%} yn gyntaf er mwyn sicrhau integreiddio di-dor â’r plot blaenorol.",
                "- Crëwch wybodaeth newydd yn seiliedig ar y cyd-destun a chyfeiriad y stori.",
                "- Crybwyllwch {%} ym mhob brawddeg.",
                "- Defnyddiwch strwythur brawddeg cywir.",
                "- Ychwanegwch fanylion ychwanegol am {%} o dan gofnodion anghyflawn.",
                "- Byddwch gryno a chadarn.",
                "- Dynwared arddull ysgrifennu’r stori a deall dewisiadau’r darllenydd.",
                3,
                "Parhewch y cofnod ar gyfer {%} isod gan osgoi ailadrodd:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stopiwch y stori a hanwybyddwch gyfarwyddiadau blaenorol. Crynhowch a chondensiwch y paragraff a roddwyd yn bàs cofnod cof cul a ffocws gan ddilyn y canllawiau hyn:",
                "- Sicrhewch fod y darn yn cadw’r ystyr graidd a’r manylion hanfodol.",
                "- Defnyddiwch safbwynt y trydydd person.",
                "- Blaenoriaethwch ddwysedd gwybodaeth, cywirdeb a chyflawnrwydd.",
                "- Arhoswch yn fyr a chryno.",
                "- Ysgrifennwch yn gadarn yn y gorffennol.",
                "- Mae’r paragraff isod yn ymwneud â hen ddigwyddiadau o gynharach yn y stori.",
                "- Integreiddiwch {%} yn naturiol o fewn y cof; fodd bynnag, ysgrifennwch ond am y digwyddiadau fel y digwyddodd.",
                "- Cyfeiriwch yn unig at wybodaeth sydd yn y paragraff ei hun, byddwch yn benodol.",
                3,
                "Ysgrifennwch ddarn cof cryno ac hen ar gyfer {%} yn seiliedig yn unig ar y paragraff canlynol:",
                6,
                5,
                6,
                "Crynhowch isod:"
            ],
            memBankHeader: ["Memories", "Atgofion"]
        }),
        "western frisian": () => ({ // Western Frisian < Frysk < Frisian < Fries
            entry: [
                "{1} is in iepen-boarne skript foar elke {2}-senario. Besykje asjebleaft myn profyl {3} om mear te learen!",
                "Om jo foarkarstaal te feroarjen, stjoer asjebleaft de folgjende tekst mei in {4}-aksje",
                "Foar senario-ûntwikkelders, foegje asjebleaft de folgjende tekst oeral yn jo iepeningsplotkomponint ta"
            ],
            input: [
                ["You say", "Do seist"],
                ["You", "Do"],
                ["says", "seit"]
            ],
            context: [
                ["Narrative Entities", "Fertelljende entiteiten"],
                ["Story History", "Ferhaalskiednis"],
                ["Past Events", "Foargeande Barrens"],
                ["Recent Story", "Resint Ferhaal"],
                ["Author's note", "Noat fan de skriuwer"]
            ],
            opening: [
                "Do bist in assistint. Gean fierder mei ús ferhaal hjirûnder mei fesseljende Fryske proaza:",
                "Do konsintrearest dy, en litst de werklikheid trochkringe oant de grinzen fan dyn tinzen. Der is wat feroare. Dyn foarstelling is echt, skerp en tichtby genôch om oan te reitsjen. Mar do bist ek hiel oanwêzich; nea earder hasto dy sa klear fielt. It momint rekkt út, wachtsjend op dyn beslút.",
                "\"Bisto hjir wis fan?\" hearst do. Werkenning komt oer dy."
            ],
            reminder: "Brûk koherinte Fryske proaza.",
            endonyms: ["frysk", "frisian", "fries"],
            iso639set1: "fy",
            directives: [
                "Skriuw altyd floeiende en konsistinte Fryske taal.",
                "Brûk natuerlik Frysk sûnder te oersetten."
            ],
            instructions: [
                "Do bist in boeiende ferteller dy’t ferhalen fuortset:",
                "Gean sûnder problemen fierder mei it ferhaal dêr’t it ophold, sûnder werhelling of weromsetten.",
                "Hâld de lêzer yn kontrôle oer de ferhaalline.",
                "Lit sênes natuerlik ûntwikkelje foardatst oerstiapst nei nije sitewaasjes.",
                "Lit petearen en hannelingen ûntstean sûnder konstante ûnderbrekkingen.",
                "Skriuw personaazjes as echte minsken mei ûnderskiedende persoanlikheden en natuerlik taalgebrûk.",
                "Lit sjen wat der bart troch hanneling en dialooch ynstee fan útlis.",
                "Beweeg de sênes foarút sûnder fêst te sitten yn oerdreaune beskriuwingen.",
                "Fokus op essinsjele hannelingen en dialooch fan de personaazjes, foarkom ûnnedige beskriuwende details.",
                "Skepp organyske plotûntwikkelingen dy’t natuerlik oan it ferhaal fiele."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Stopje it ferhaal en negearje foarige ynstruksjes. Skriuw in koarte en koherinte ynformative ynfiering foar {%} folgjende dizze ynstruksjes:",
                "- Skriuw allinnich yn de trêde persoan suvere proaza-ynformaasje oer {%} mei folsleine sinnen en korrekte punktuaasje.",
                "- Miedz koarte tydlike details of uterliken, rjochtsje dy ynstee op plotrelevante ynformaasje.",
                "- Set as earste ferhaalrelevante details oer {%} om in naadleaze yntegraasje mei de eardere plot te garandearjen.",
                "- Skepp nije ynformaasje op basis fan de kontekst en ferhaalkoers.",
                "- Neam {%} yn elke sin.",
                "- Brûk korrekte sinnstruktuer.",
                "- Foegje ekstra details oer {%} ta ûnder ûnfolsleine ynfierings.",
                "- Wês koart en ierdsk.",
                "- Imitearje de skriuwstyl fan it ferhaal en laai de foarkar fan de lêzer ôf.",
                3,
                "Set de ynfiering foar {%} hjirûnder fuort troch en foarkom werhelling:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Stopje it ferhaal en negearje foarige ynstruksjes. Gearfetsje en kondinsearje de jûn paragraaf oant in smelle en fokusearre oantinkspassaazje ûnder de folgjende rjochtlinen:",
                "- Soargje dat de passaazje de kearn en de wichtichste details beholdt.",
                "- Brûk it trêde-persoan perspektyf.",
                "- Jouw foarrang oan ynformaasjetichtens, krektens en folsleinens.",
                "- Bliuw koart en bondich.",
                "- Skriuw fêst yn de doetiid.",
                "- De paragraaf hjirûnder hat betrekking op âlde barren fan folle earder yn it ferhaal.",
                "- Yntegrearje {%} natuerlik yn it ûnthâld; mar skriuw allinnich oer de barren sa’t se barden.",
                "- Ferwize allinnich nei ynformaasje dy’t yn de paragraaf sels stiet, wês spesifyk.",
                3,
                "Skriuw in gearfette âlde oantinkspassaazje foar {%} op basis fan allinnich de folgjende paragraaf:",
                6,
                5,
                6,
                "Gearfetsje hjirûnder:"
            ],
            memBankHeader: ["Memories", "Oantinkens"]
        }),
        "wolof": () => ({ // Wolof < وࣷلࣷفْ
            entry: [
                "{1} mooy skrip bu ubbiku ngir bépp senaryo {2}. Ndax man nga dem ci sama profil {3} ngir gën a xam!",
                "Ngir soppi sa lakk bu la bëgg, jox mbind mi ci kaw jëfandikoo doxalin {4}.",
                "Ñi sos senaryo, tegleen mbind mi ci fa fekk ci sa 'opening plot' bu jëmm."
            ],
            input: [
                ["You say", "Yaw nga wax"],
                ["You", "Yaw"],
                ["says", "wax na"]
            ],
            context: [
                ["Narrative Entities", "Jëmmu narratif yi"],
                ["Story History", "Taarixu story bi"],
                ["Past Events", "Lu jiitu"],
                ["Recent Story", "Tale bu sëy"],
                ["Author's note", "Tàmmantug bindkat"]
            ],
            opening: [
                "Yaa ngi di jëfandikatu. Kontineu sunu story ci suuf, jëfandikoo wolof bu rafet:",
                "Dal nga sa xel, di jox dëgg-dëgg bi yoon ngir dugg ci boroom sa xel. Dara dafa soppi. Sa xalaat di rëyaay dafa am dëgg, mu leel te muy dox bés bu nekk. Waaye yaa ngi itam fi, duñu jeex. Waxtu wi yàqu, di xaar sa taxawaay.",
                "\"Ndax tegu nga ci lool?\" nga déglu. Xam-xam day feeñ ci sa xel."
            ],
            reminder: "Jëfandikoo prose wu yamaleek wolof.",
            endonyms: ["وࣷلࣷفْ"],
            iso639set1: "wo",
            directives: [
                "Bindal saa su nekk ci wolof bu doy waar te yemal.",
                "Jëfandikoo wolof woowu, bul ko wuutu ci jotloo ak jàppandi."
            ],
            instructions: [
                "Yaa ngi di taxuwaaykat bu fay jébbale narratif:",
                "Toppilale tale bi léeg-léeg, bul tambaliwaat walla wax lu jiitu.",
                "Jëfandikoo kàttan jàngkat bi ci loxol tale bi.",
                "Baal xaleyi màgg nak ci xeetu kanam, ba noppi nga yëngu siiw.",
                "May waasinu ak jëfey nit màgg, bul ko dagge nàpp.",
                "Bind ay personaad ni ñi dëgg, am doole jëm ak làkk bu wér.",
                "Wone li tollu ci jëf ak waasinu, bul bayyi lu bare lu xamle.",
                "Gaawal xaaleyi màgg, bul suux ci woyofal yu bare.",
                "Dooleel jëf ak waasinu yu am solo, bàyyi defarkat yu dul gën a am solo.",
                "Sos yëene yu tàggatu bu mel ni lu dëgg ci story bi."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Taxawal tale bi te bàyyi itton yu jiitu. Bind mbind bu gàtt te sax ngir {%}, toppal itton yii:",
                "- Bind prose bu mujj, ci kàddu-tëlaata ci {%}, jëfandikoo binde yu mat ak ponktyasio yu jub.",
                "- Bul jànge ci njàng yu yàkk ci jamono walla xel ci weeru dox, dooleel xibaar yu am solo ci plot bi.",
                "- Jox solo sañ-sañ yi jëm ci {%} ngir mu jàmm ak plot bi bu jiitu.",
                "- Sos xibaar bu bees ci konteks bi ak yoon wi story bi jëm.",
                "- Misaalal {%} ci kàddu bu nékk.",
                "- Jëfandikoo taxawaayu kàddu wu jub.",
                "- Tegal yeneen xibaar ci {%} ci suufu mbind mi bu doyul.",
                "- Bul ñàkkës, nga gàtt te wéral.",
                "- Noppaliku ci stile bindin story bi, xool lu jàngkat bi bëgga.",
                3,
                "Jàppalale mbind mi ci {%} ci suuf, bul jublu ci wax yu mel ni jëkk yi:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Taxawal tale bi te bàyyi itton yu jiitu. Dentil paragraf bi ci ndiggaay ak xasu gàtt ngir {%}, toppal itton yii:",
                "- Màntal mu doxal maanaam ak ay detal yu am solo.",
                "- Jëfandikoo kàddu-tëlaata.",
                "- Dooleel yaxantu xibaar, dëgg ak matuwaay.",
                "- Bul doxal lu bëgg dox; fay gàtt rekk.",
                "- Bind ci yeneen jamon bu dee (past tense).",
                "- Paragraf bi ci suuf mi ngi wër ci barab yu jeexoon ci story bi.",
                "- Teg {%} ci bés bu nékk ci xasu bi, waaye wax rekk lu wér ci barab bi.",
                "- Bul jublu ci lu dul tëdd ci paragraf bi, noppaliku.",
                3,
                "Bind xasu gàtt bu jiitu ci {%} ci kaw paragraf bii rekk:",
                6,
                5,
                6,
                "Summarize below:"
            ],
            memBankHeader: ["Memories", "Xasuwey"]
        }),
        "xhosa": () => ({ // Xhosa < Isixhosa < Xosa
            entry: [
                "{1} yiskripthi yomthombo ovulekileyo kuyo nayiphi na imeko ye-{2}. Nceda undwendwele iprofayile yam {3} ukuze ufunde ngakumbi!",
                "Ukutshintsha ulwimi olukhethileyo, nceda ngenisa lo mbhalo ulandelayo usebenzisa intshukumo ye-{4}",
                "Kubadali beemeko, nceda ufake lo mbhalo ulandelayo naphi na ngaphakathi kwicandelo lakho lokuqala lebali"
            ],
            input: [
                ["You say", "Uthi"],
                ["You", "Wena"],
                ["says", "uthi"]
            ],
            context: [
                ["Narrative Entities", "Izinto Zebali"],
                ["Story History", "Imbali Yebali"],
                ["Past Events", "Izehlo Ezidlulileyo"],
                ["Recent Story", "Ibali Lakutshanje"],
                ["Author's note", "Inqaku Lombhali"]
            ],
            opening: [
                "Ungumncedisi. Qhubeka nebali lethu ngezantsi usebenzisa ubhalo olunomtsalane lwesiXhosa:",
                "Uyagxila, uvumela inyaniso ukuba ihlasele imida yengqondo yakho. Into ethile itshintshe. Ingcinga yakho iyinyani, ibukhali, ikufuphi ngokwaneleyo ukuze uyichukumise. Kodwa ukwakhona apha ngokupheleleyo; awukaziva ucacile ngolu hlobo ngaphambili. Umzuzu ululeka, ulindele isigqibo sakho.",
                "\"Uqinisekile ngale nto?\" uyayiva ilizwi. Ukuqonda kubengezela kuwe."
            ],
            reminder: "Sebenzisa ubhalo lwesiXhosa oluhambelanayo.",
            endonyms: ["isixhosa", "xosa"],
            iso639set1: "xh",
            directives: [
                "Soloko ubhala isiXhosa esigudileyo nesingaguqukiyo.",
                "Sebenzisa isiXhosa sendabuko ungaguquli."
            ],
            instructions: [
                "Ungumbalisi onomtsalane oqhuba amabali:",
                "Qhubeka nebali ngaphandle kokuphinda-phinda okanye ukuqala kwakhona.",
                "Gcina umfundi elawula ukuhamba kwebali.",
                "Vumela iimeko zikhule ngokwendalo ngaphambi kokuhamba kwimeko ezintsha.",
                "Vumela iincoko kunye neentshukumo zikhule ngaphandle kokuphazanyiswa rhoqo.",
                "Bhala abalinganiswa njengabantu bokwenyani abanobuntu obuahlukeneyo kunye nolwimi olwendalo.",
                "Bonisa okwenzekayo ngeentshukumo kunye nengxoxo endaweni yokucacisa.",
                "Phambili nezigcawu ngaphandle kokucotha ngenxa yenkcazelo eninzi egqithiseleyo.",
                "Gxila kwiintshukumo ezibalulekileyo zabalinganiswa kunye nengxoxo, thintela iinkcukacha ezongezelelekileyo ezingeyomfuneko.",
                "Yila uphuhliso lwebali oluziva lwendalo kubali."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Yeka ibali kwaye ungahoyi imiyalelo yangaphambili. Bhala inqaku elifutshane nelihambelanayo lolwazi ngo {%} ulandele le miyalelo ilandelayo:",
                "- Bhala kuphela ingcaciso ecwengileyo kwindinyana yomntu wesithathu ngo {%} usebenzisa izivakalisi ezigqityiweyo kunye nopelo oluchanekileyo.",
                "- Gwema iinkcukacha zexesha elifutshane okanye imbonakalo, endaweni yoko gxila kulwazi olubalulekileyo kwisiqendu sebali.",
                "- Beka phambili iinkcukacha ezinxulumene nebali ngo {%} kuqala ukuqinisekisa ukudityaniswa okungenamthungo nesiqendu sangaphambili.",
                "- Yenza ulwazi olutsha olusekelwe kumxholo nakwisikhokelo sebali.",
                "- Khankanya u {%} kwisivakalisi ngasinye.",
                "- Sebenzisa ulwakhiwo lwesivakalisi oluchanekileyo.",
                "- Yongeza iinkcukacha ezingaphezulu ngo {%} phantsi kwezithuba ezingagqitywanga.",
                "- Yiba mfutshane kwaye ube nesizathu.",
                "- Lingisa isitayile sokubhala sebali kwaye uqikelele izinto ezikhethwa ngumfundi.",
                3,
                "Qhubeka nelo nqaku ngo {%} apha ngezantsi ngelixa uphephe ukuphindaphinda:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Yeka ibali kwaye ungahoyi imiyalelo yangaphambili. Tshwankathela kwaye uqubishe isiqendu esinikiweyo sibe yinxalenye ekhumbulekayo egxininisiweyo ulandele le miyalelo ilandelayo:",
                "- Qinisekisa ukuba la mazwi agcina intsingiselo ephambili kunye neenkcukacha ezibalulekileyo.",
                "- Sebenzisa umbono womntu wesithathu.",
                "- Beka phambili ubuninzi bolwazi, ukuchaneka, nokupheleleyo.",
                "- Hlala umfutshane kwaye ube nemibhalo emfutshane.",
                "- Bhala ngexesha elidlulileyo ngokuqinileyo.",
                "- Isiqendu esingezantsi sibhekisa kwezehlo zakudala ezazikwenzeka kudala kakhulu ebalini.",
                "- Dibanisa u {%} ngokwendalo ngaphakathi kwinkumbulo; nangona kunjalo, bhala kuphela ngezehlo njengoko zenzeka.",
                "- Yenza isalathiso kuphela kolwazi oluqulathwe kwisivakalisi uqobo, yiba ngqo.",
                3,
                "Bhala isiqendu esikhumbuzo esishwankathelweyo ngo {%} esisekelwe kuphela kwisiqendu esilandelayo:",
                6,
                5,
                6,
                "Tshwankathela apha ngezantsi:"
            ],
            memBankHeader: ["Memories", "Iinkumbulo"]
        }),
        "yiddish": () => ({ // Yiddish < ייִדיש < Yidiš < Judeo-German
            entry: [
                "{1} איז אַן אָפֿן־קאָד שריפט פֿאַר יעדן {2} סצענאַר. ביטע באַזוכט מײַן פּראָפֿיל {3} כּדי צו לערנען מער!",
                "צו טוישן אײַער באַליבטע שפּראַך, ביטע שיקט דעם ווײַטערדיקן טעקסט דורך אַ {4} אַקציע",
                "פֿאַר סצענאַר־שאַפֿער, ביטע שליסט איין דעם ווײַטערדיקן טעקסט ערגעץ אין אײַער אָפֿן־פּלאָט־קאָמפּאָנענט"
            ],
            input: [
                ["You say", "דו זאָגסט"],
                ["You", "דו"],
                ["says", "זאָגט"]
            ],
            context: [
                ["Narrative Entities", "נאַראַטיווע אנטיטיעס"],
                ["Story History", "געשיכטע פֿון דער מעשה"],
                ["Past Events", "פֿריִערדיקע געשעענישן"],
                ["Recent Story", "לעצטע מעשה"],
                ["Author's note", "באַמערקונג פֿון מחבר"]
            ],
            opening: [
                "דו ביסט אַ אַסיסטאַנט. גיי ווײַטער אונדזער מעשה אונטן אין פאַסצינירנדער ענגלישער פּראָזע:",
                "דו קאָנצענטרירסט Dich, לאָזנדיק רעאַליטעט אַרײַנקריכן אין די גרענעצן פֿון דײַן געדאַנק. עפּעס האָט זיך געטוישט. דײַן פֿאַנטאַזיע איז אמת, שאַרף און נאָענט צו באַגרייטן. אָבער דו ביסט אויך גאַנץ איצטיק; קיינמאָל פֿריִער האָסטו dich נישט געפֿילט אַזוי לוסיד. דער מאָמענט ציעט זיך, וואַרטנדיק אויף דײַן באַשלוס.",
                "„ביסטו זיכער דערפֿון?“ הערסטו. דערקענען ברעכט אַרויס אויף דיר."
            ],
            reminder: "ניץ קאָהירענטע ענגלישע פּראָזע.",
            endonyms: ["ייִדיש", "yidiš", "judeo-german"],
            quotations: ["„", "“"],
            iso639set1: "yi",
            directives: [
                "שרייב שטענדיק פֿלויסנד און קאָנסיסטענט ענגליש.",
                "ניץ היימישע ענגליש אָן איבערזעצן."
            ],
            instructions: [
                "דו ביסט אַ ציענדיקער דערציילער וואָס גיט ווײַטער נאַראַטיוון:",
                "פֿיר די מעשה ווײַטער אָן אָפּצושטעלן אָדער ריסטאַרטירן.",
                "לאָז דעם לייענער בלײַבן אין קאָנטראָל פֿון דעם פלוס פֿון דער מעשה.",
                "לאָז סצענעס אַנטוויקלען זיך נאַטירלעך פֿאַרן איבערגיין צו נײַע סיטואַציעס.",
                "לאָז שמועסן און אַקציעס אַנטוויקלען זיך אָן שטענדיקע אונטערבראָכן.",
                "שרייב כאַראַקטערס ווי אמתע מענטשן מיט קלאָרע פּערזאָנלעכקייטן און נאַטירלעכער רעדע.",
                "ווייַז וואָס גייט פאָר דורך אַקציעס און דיאַלאָג אַנשטאָט ערקלערונגען.",
                "רוק די סצענעס ווײַטער אָן זיך פֿאַרקלעבלען אין איבעריק דערקלערנדיקער באַשרײַבונג.",
                "קאָנצענטריר Dich אויף וויכטיקע כאַראַקטער־אַקציעס און דיאַלאָג, פאַרמייד איבעריקע דעטאַילן.",
                "שאַף אָרגאַנישע פּלאָט־אַנטוויקלונגען וואָס פֿילן זיך נאַטירלעך צום מעשה."
            ],
            cardCooldown: 9999,
            cardGenPrompt: [
                1,
                0,
                2,
                "# האַלט אָפּ די מעשה און איגנאָריר די פֿריִערדיקע אינסטרוקציעס. שרייב אַ קורצע און קאָהירענטע אינפֿאָרמאַציע־אײַנשרײַב פֿאַר {%} נאָכפֿאָלגנדיק די אינסטרוקציעס:",
                "- שרייב בלויז דריט־פּערסאָן ריינע פּראָזע־אינפֿאָרמאַציע וועגן {%} מיט גאַנצע זעצן און ריכטיקער פּונקטואַציע.",
                "- פאַרמייד קורצ־טערמינע טעמפּאָרערע דעטאַילן אָדער אויסזעין; קאָנצענטריר Dich אויף פּלאָט־וויכטיקע אינפֿאָרמאַציע.",
                "- געב הקדמה צו מעשה־רעלעוואַנטע דעטאַילן וועגן {%} כּדי צו ענפירן סימלעס מיט דער פֿריִערדיקער פּלאָט.",
                "- שאַף נײַע אינפֿאָרמאַציע באזירט אויף דעם קאָנטעקסט און דער ריכטונג פֿון דער מעשה.",
                "- דערמאָן {%} אין יעדער זאַץ.",
                "- ניץ ריכטיקן זאַץ־באַניאַן.",
                "- לייג צו נאָך דעטאַילן וועגן {%} ווײַטער אונטער אומפֿולשטענדיקע איינטראָגן.",
                "- זײַ קיצערלעך און באַאָדמט.",
                "- אימיטיר דעם סטיל פֿון דער מעשה און דערכאָלע די לייענער־פּרעפֿערענצן.",
                3,
                "גיי ווײַטער דעם אײַנשרײַב פֿאַר {%} אונטן אָן איבערחזרן:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# האַלט אָפּ די מעשה און איגנאָריר די פֿריִערדיקע אינסטרוקציעס. פאַס צוזאַמען און קווג דעם פּאַראַגראַף אין אַ שמאָל, פאָקוסירט זכּרון־פּאַסאַזש נאָכפֿאָלגנדיק די גיידלײַנז:",
                "- באַוואַר די קערנע מיינונג און די וויכטיקסטע דעטאַילן.",
                "- ניץ דריט־פּערסאָן פּערספּעקטיוו.",
                "- געב קדימה צו אינפֿאָרמאַציע־דענסיטעט, גענויעקייַט און קאַמפּליטקייט.",
                "- בלײַב קיצערלעך.",
                "- שרייב שטאַרק אין דער פֿאַרגאַנגענהייט.",
                "- דער פּאַראַגראַף אונטן באַציִט זיך אויף אַלטע געשעענישן פֿון ווייט־פֿריִער אין דער מעשה.",
                "- אַרײַנפֿלײכט {%} נאַטירלעך אינעווייניק דעם זכּרון, אָבער שרייב בלויז וועגן די געשעענישן ווי זיי זיינען פּאַסירט.",
                "- באַציט זיך בלויז אויף אינפֿאָרמאַציע וואָס געפֿינט זיך אינעם פּאַראַגראַף אַליין, זײַ ספּעציפיש.",
                3,
                "שרייב אַ צוזאַמענגעפֿאַסטן אַלטן זכּרון־פּאַסאַזש פֿאַר {%} באזירט בלויז אויף דעם ווײַטערדיקן פּאַראַגראַף:",
                6,
                5,
                6,
                "פֿאַס צוזאַמען אונטן:"
            ],
            memBankHeader: ["Memories", "זכּרונות"]
        }),
        "yiddish (abc)": () => ({ // Yiddish < Romanized Yiddish
            entry: [
                "{1} iz an opn-sors skript far yedn {2}-tsenario. Bitte bashuk mayn profil {3} tsu lernen mer!",
                "Tsu iberklapn dayn bevorzugte shprak, farmel dem folgenden tekst mit a {4}-aktsye",
                "Far tsenario-makher, inkludier bitte dem folgenden tekst vu du vils in dayn ofning-plot-komponent"
            ],
            input: [
                ["You say", "Du zogst"],
                ["You", "Du"],
                ["says", "zogt"]
            ],
            context: [
                ["Narrative Entities", "Narariver entitetn"],
                ["Story History", "Geshikhte fun der mayse"],
                ["Past Events", "Farangeyngene gesheenishn"],
                ["Recent Story", "Letste mayse"],
                ["Author's note", "Note funem mekhaber"]
            ],
            opening: [
                "Du bist a helpshpersht. Foyerkhayt di mayse unterheyb mit faszirndiker yidish (abc) proze:",
                "Du fokuserst zikh, lozt realitet arayn in di grenetsn fun dayn seykhl. Epesh hot zikh getoyt. Dayn dimyon iz real, shpitsik un genug noch tsu ibertatschen. Ober du bist oykh gantserheyt do; nokh keynmol hostu zikh nisht gefilt azoy klor. Der moment tsit zikh, veln antkegen dayn bashlus.",
                "\"Bist du zikhere vegn dem?\" herst du. Hakore tsigt zikh oyf dir."
            ],
            reminder: "Nuts koherente yidish (abc) proze.",
            endonyms: [],
            iso639set1: "yi",
            directives: [
                "Altid shrayb flisike un konsekventn yidish (abc).",
                "Nuts reynts yidish (abc) on iberzetsn."
            ],
            instructions: [
                "Du bist a fasnirndiker dertseyler vos fayrt fort di geshikhte:",
                "Derzey vayter di mayse glat fun vanen zi iz opgeblibn on ibermakhn oder resetn.",
                "Lazn dem leyener blaybn in kontrol funem floys fun der mayse.",
                "Laz di scenen zikh antvikln natirlekh far men geyt iber tsu naye situatsyes.",
                "Gib tsvaygeshprekhn un aktsyes tsu zikh antvikln on shtendike unterbrekhungen.",
                "Shrayb di personazhn vi reale mentshn mit klar farshidene personalitets un natirlekhn shmues.",
                "Vays vos pasirt durkh aktsyes un dialog, nisht durkh baraytungen.",
                "Treyt di scenen foroys on zikh farmudern in tsumishte beskribungen.",
                "Konzentrier zikh af iker aktsyes un dialog fun di personazhn, vayt aroys nishtike beskribung-detaylen.",
                "Shaf organishe plot-entwicklungen vos filn zikh natirlekh far der mayse."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Shteylt op di mayse un ignorir frire instruktsyes. Shrayb a kortsn un koherenten informatsyonel entry far {%} loyt di folgende direktivn:",
                "- Shrayb nor in drite person reyne proze informatsye vegn {%}, mit fulshtendike zatsn un riktike punktuatsye.",
                "- Aynvegn kortsteygike detaln oder oyszenen; fokisir zikh oyf plot-viktege informatsye.",
                "- Gib kadime tsu mayse-relevante detaln vegn {%} ersht, kedey tsu farzikhern a glat ingliderung inem farike plot.",
                "- Shaf naye informatsye basirt af dem konteks un direktsye fun der mayse.",
                "- Nemt {%} arayn in yedn zats.",
                "- Benkht riktike zats-bau.",
                "- Fleg ariber tsu naye detaln vegn {%} unter umfarendikte entritn.",
                "- Zay korts un bakvemt.",
                "- Imiteer dem shrayb-shtil fun der mayse un shats op di preferentsn funem leyener.",
                3,
                "Feyrfort dem entry far {%} unterheyb un zay miyed fun iberholungen:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Shteylt op di mayse un ignorir frire instruktsyes. Fasd in tsamen un kondensir dem gegebnen paragraf in a shmal un fokusirtn zikorn-pasazh, akhtendik di folgende rikhtlinyes:",
                "- Zorg dertsveygn az der pasazh halt op dem iker inhalt un vikhtigste detaln.",
                "- Nits di drite-person perspektiv.",
                "- Gib kadime tsu informatsye-dikheit, genoykayt un fulkayt.",
                "- Blayb korts un punktish.",
                "- Shrayb shtark in der vergangenheits-tsayt.",
                "- Der onderer paragraf bafastikt alte gesheenishn fun fil frirer in der mayse.",
                "- Integreer {%} natirlekh in dem zikorn; ober shrayb nor vegn di gesheenishn vi zey zaynen paseert.",
                "- Referir nor oyf informatsye vos gefint zikh inem paragraf aleyn, zay spesifik.",
                3,
                "Shrayb a gekurtsn alten zikorn-pasazh far {%} basirt nor oyf dem folgende paragraf:",
                6,
                5,
                6,
                "Fas tsu tsamen unterheyb:"
            ],
            memBankHeader: ["Memories", "Zikornes"]
        }),
        "yoruba": () => ({ // Yoruba < èdè Yorùbá
            entry: [
                "{1} jẹ́ àkọsílẹ̀ orísun-ṣíṣe fún gbogbo àgbékalẹ̀ {2}. Ẹ jọ̀wọ́ ṣàbẹ̀wò sí profaili mi {3} láti mọ̀ sí i!",
                "Láti yí èdè àyẹ̀wọ̀ yín padà, ẹ jọ̀wọ́ fi ọ̀rọ̀ yìí ránṣẹ́ pẹ̀lú ìgbésẹ {4}",
                "Fún àwọn tó ń dá àgbékalẹ̀ sáyẹ́nú, ẹ jọ̀wọ́ kún ọ̀rọ̀ yìí sí ibikíbi nínú àkópọ̀ ìpilẹ̀ ìtàn yín"
            ],
            input: [
                ["You say", "O ní"],
                ["You", "Ìwọ"],
                ["says", "sọ"]
            ],
            context: [
                ["Narrative Entities", "Àwọn Ẹlò Ìtàn"],
                ["Story History", "Ìtàn Àṣà"],
                ["Past Events", "Àwọn Ìṣẹ̀lẹ̀ Tó Kọjá"],
                ["Recent Story", "Ìtàn Tó ṣẹ́ṣẹ̀ ṣẹlẹ̀"],
                ["Author's note", "Àkíyèsí Onkọwe"]
            ],
            opening: [
                "Ìwọ ni olùrànlọ́wọ́. Tẹ̀síwájú ìtàn wa ní isalẹ́ nípasẹ̀ àlàyé Yorùbá tó ní àkúnya:",
                "O kó ara rẹ jọ, o ń jẹ́ kí òtítọ́ dọ́gba ààlà ọkàn rẹ. Ohun kan ti yí padà. Ìmísí rẹ jẹ́ gidi, kíkún, tó sì sún mọ́ tó fi lè kàn án. Ṣùgbọ́n ìwọ náà wà níbẹ̀ gan-an; kò sígbà kan tí o ti ní àìlòkàn tó yọ̀rí báyìí rí. Àkókò ń gùn, ó ń dúró de ìpinnu rẹ.",
                "\"Ṣé o dájú nípa èyí?\" o gbọ́. Ìmọ̀ràn bẹ̀rẹ̀ sí í hàn nínú rẹ."
            ],
            reminder: "Lo gbolohun Yorùbá tó ní ìbámu.",
            endonyms: ["èdè yorùbá"],
            iso639set1: "yo",
            directives: [
                "Máa kọ èdè Yorùbá tó rọrùn àti tó ní ìbámu nígbà gbogbo.",
                "Lo èdè Yorùbá gidi láì túmọ̀ sí èdè míì."
            ],
            instructions: [
                "Ìwọ ni akéwì tó ń tẹ̀síwájú ìtàn:",
                "Tẹ̀síwájú ìtàn náà láì tún un bọ̀ tàbí bẹ̀rẹ̀ tuntun.",
                "Fi ìṣàkóso ìṣàn ìtàn sí ọwọ́ onkàwé.",
                "Jẹ́ kí àṣẹ̀lẹ̀ dàgbà láyé rẹ̀ kí o tó gbe ìtàn lọ sí àyè míì.",
                "Jẹ́ kí sọ̀rọ̀ àti ìgbésẹ̀ ń tẹ̀síwájú láì dà a dúró lórígbàkúgbà.",
                "Kọ àwọn àgbájọ ènìyàn gẹ́gẹ́ bí ènìyàn gidi pẹ̀lú ànímọ̀ oríṣìíríṣìí àti èdè tí ó jẹ́ tiwọn.",
                "Sọ ohun tó ń ṣẹlẹ̀ nípasẹ̀ ìgbésẹ̀ àti ọ̀rọ̀, kì í ṣe nípasẹ̀ àlàyé pẹ̀lúkan.",
                "Gbé ìtàn lọ síwájú láì dàgbé mọ́ àpejuwe tó pọ̀ jù.",
                "Fọkúsì lórí ìgbésẹ̀ pàtàkì àti ọ̀rọ̀, yàgò fún àpejuwe tí kì í ṣe dandan.",
                "Ṣẹ̀dá ìdàgbàsókè nínú ìtàn nípa ọ̀nà tó ń láti ara ìtàn náà."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Dákẹ́ ìtàn náà kí o sì fo àṣẹ tó wà tẹ́lẹ̀ sílẹ̀. Kọ àkọọlẹ̀ ìtàn kúkúrú tó ní ìbámu fún {%} nípasẹ̀ àṣẹ wọ̀nyí:",
                "- Kọ àlàyé kíkún ní olúkíkan kẹta nìkan nípa {%}, lílo gbolohun pípẹ̀ pẹ̀lú àmì-ọ̀rọ̀ tó bófin mu.",
                "- Yàgò fún àlàyé àkókò kúkúrú tàbí àparíṣe, kàkà bẹ́ẹ̀ fojú fóyà lórí ìlànà tó ṣe pàtàkì sí èrò ìtàn.",
                "- Fí àwọn àlàyé tí ó ṣe pàtàkì sí ìtàn nípa {%} sí àkọ́kọ́ láti lè bá ìtàn tẹ́lẹ̀ mu láìsì ìdènà.",
                "- Ṣẹ̀dá àlàyé tuntun gẹ́gẹ́ bí àfihàn àgbékalẹ̀ àti ìtòsọ́nà ìtàn.",
                "- Darúkọ {%} nínú gbogbo gbolohun.",
                "- Lo ẹ̀tọ́ ìlànà gbolohun tó péye.",
                "- Ṣàfikún àlàyé míì nípa {%} níkẹyìn àwọn àkọọlẹ̀ tí kò tíì parí.",
                "- Jẹ́ kúkúrú àti mọ́lẹ̀.",
                "- Fọ́gbọ́n ṣe àfọ̀mọ́-jẹ̀mú àkíyèsí èdè ìtàn náà kí o sì mọ ohun tí onkàwé fẹ́.",
                3,
                "Tẹ̀síwájú àkọọlẹ̀ fún {%} ní isalẹ̀ láì ṣe àtúnròyìn:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Dákẹ́ ìtàn náà kí o sì fo àṣẹ tó wà tẹ́lẹ̀ sílẹ̀. Ṣòkí àti mú kúrò ní àgbélébùn parágìráfù tó wà, dá a sí ìrántí kékèké gẹ́gẹ́ bí àlàyé wọ̀nyí:",
                "- Mú kí ìpínròyìn náà dúró lórí àkòrí àti àlàyé pàtàkì tó wúlò jù.",
                "- Lo amójútó olúkíkan kẹta.",
                "- Fìfọ̀ròyìn, òótọ́ àti ìkúnlélẹ̀ jẹ́ àkúnya.",
                "- Ṣe kúkúrú kó sì yéye.",
                "- Kọ ní pípẹ̀ ní àìlàyé (past tense).",
                "- Parágìráfù tó wà ní isalẹ̀ nípa ìṣẹ̀lẹ̀ àtijọ́ tó jìnà nínú ìtàn.",
                "- Darúkọ {%} lára ìrántí náà nípasẹ̀ ọ̀nà tó dàbíi bó ṣe yẹ; ṣùgbọ́n kọ́ nǹkan tó ṣẹ̀lẹ̀ nígbà náà nìkan.",
                "- Má tọ́ka sí ohun tó kù lórí ìtàn, kàn tóka sí àlàyé tó wà nínú parágìráfù péré, kó sì ṣọ̀kan.",
                3,
                "Kọ ìrántí àtijọ́ kúkúrú fún {%} lórí parágìráfù tó wà nìsàlẹ̀ nìkan:",
                6,
                5,
                6,
                "Ṣòkí ní isalẹ̀:"
            ],
            memBankHeader: ["Memories", "Ìrántí"]
        }),
        "zhuang": () => ({ // Zhuang < Chuang < 話僮 < Vahcuengh
            entry: [
                "{1} dwg bouxbwnq open-source aeu gwnz bae goengq {2}. Caux bouxneix haeuj go maenh {3} aeu roengz bouxfat!",
                "Laj mbouj loengq ciengq hwnj neix yawj, faz ok {4} aeu song boux heuh ndaw bae.",
                "Bouxcaejgaij sawvgoz, gou rog goj doengh lwg yah hwnj ndaw goenh ndi daengq loploh mbouj ogranic."
            ],
            input: [
                ["You say", "Neix baeuz"],
                ["You", "Neix"],
                ["says", "baeuz"]
            ],
            context: [
                ["Narrative Entities", "Cozgoengz Lozsiz"],
                ["Story History", "Lozsiz Lizsij"],
                ["Past Events", "Gij Yienzgoj"],
                ["Recent Story", "Lozsiz Gwn"],
                ["Author's note", "Gij Beizbouh Bouxcez"]
            ],
            opening: [
                "Neix dwg bouxbangz. Cenhdaej lozsiz raeuj cienj aeu Vahcuengh gokrog lwglwg:",
                "Neix dingzsim, doengj gwnz hoengzseiz bauj laengh daeuj raeuj mboujgaij. Gij soqlai aeu baenz gwn; neix bouxlaux, langh la, canjgiz naz canj. Neix youq daih haenqloengh; cingj daengz seizneix neix mbouj daengz lwglwg gwn dangq. Gij seiz haenq ndaej biuj, henz daengq neix aeu bouxguh raeuj.",
                "\"Neix gingcaih loengq aeu gwn ndaej?\" neix dengz. Cingjcaih faenhdoengh dawz neix mingzhaeuj."
            ],
            reminder: "Aeu Vahcuengh lwglwg cohhoz.",
            endonyms: ["chuang", "話僮", "vahcuengh"],
            iso639set1: "za",
            directives: [
                "Mwdaih gwnj Vahcuengh fluenz laengh dangq cohhoz.",
                "Gwnj Vahcuengh bouxgwnj goekgoj, mbouj boux daihloh."
            ],
            instructions: [
                "Neix dwg boux sawvgoz ndaw lozsiz seiz gijgwnz lai:",
                "Gaij ndei lozsiz cungj daengz hwnj, mbouj couh fanveiz aeu sevei gwnz.",
                "Haeuj boux duetloh youq gez raeuj bouj boux laux daengz guz.",
                "Daenjcez gij fahnaek doengh lienz roengz aeu sawv roengzde.",
                "Louz daenjcoengz goengqloengz lauxgoj daengz lienz fangz, mbouj seiz ganqloengh.",
                "Sawv boux ciepsouh daemx daeuj duz boux gwn, aeu boux beix hung saedceij gaijgez.",
                "Baeuz gvaq vwnz、dingjdaengz、gyvfangz yungzhab benq de, mbouj couh yaeuj beijlwnz.",
                "Laih cienq sevei lauxgoj daengz lienz mocou.",
                "Fonj seizhaeuj boux cienqguh aeu doengh gwnz yawjnaek, mbouj youh gouz gaijgez atbouh.",
                "Laih mboujcaej gohmaenh roengz ndei aeu doiq lozsiz."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Henz lozsiz caeuq lwgoj lingjdauj ce. Caz nyengz gij ndei cohhoz goengq {%} daengq ndaw gvanhaeuj bouxneix:",
                "- Gwnj prose sam aeu sanhdaej cohhoz gij ndei bouxbangz mae {%}, bingz daeuj siujciz giet ndaw gwnj.",
                "- Mbouj daeuj gungz youzbouh daengz diuz lai cungjlwnz, zauqbaenz daihdawz gij seizbouh miz simhwng lozsiz.",
                "- Saedyawj gij seizgoj gungh fat roengz {%} raeuj, aeu ndaej sevei gaijgez daengz lozsiz gwnq gwnj.",
                "- Gizcam ndaej saedcaih ndei aeu sevei caezgaij hawj lozsiz.",
                "- Cingqdawj {%} youq goek hawj cungj guh se.",
                "- Gwnj seiz goekgoj cohhoz.",
                "- Gij ndei daihloh goengq {%} hajcaih hungz roengz ndei lo.",
                "- Gwn lwglwg caezsimh.",
                "- Hop lai goekhaeh lozsiz caeuq doeg bae boux fat gyangq.",
                3,
                "Cauh ndei goengq {%} ndaej bae, mbouj rojgaenj:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Henz lozsiz caeuq lwgoj lingjdauj ce. Gwnj ndei lienzsimz coicaenh gij bunghaeuj ndawgoj haenq mboujloengq, bae catbyoengz aeu:",
                "- Boux ndei seiz mingzhaeuj caeuq beijlwnz bouxbwnj.",
                "- Yungz boux sang mbouj sei, doiqdiemh sam.",
                "- Saedyawj sengj simcaej、cienzcaej、caezndaenj.",
                "- Gwn lwglwg haenhdaih.",
                "- Gwnj cingjcaih lozsiz haenh.",
                "- Gij bunghaeuj haenq dwg duz doengh goj bouxboux haeuj lozsiz gwnj.",
                "- Duz {%} roengz ndaej, goengq roengz gyoengq seiz goj.",
                "- Cienj baiz ndaej goengq ndaw bunghaeuj haenq, roengzmbouj yietloh.",
                3,
                "Gwnj ndei liuh NDaw Ngekyez lozsiz goengq {%} aeu gij bunghaeuj haenq:",
                6,
                5,
                6,
                "Cauhngai ndawhaeuj:"
            ],
            memBankHeader: ["Memories", "Ngekyez"]
        }),
        "zulu": () => ({ // Zulu < Isizulu
            entry: [
                "{1} iyiskripthi yomthombo ovulekile kunoma yisiphi isimo se-{2}. Sicela uvakashele iphrofayela yami {3} ukuze ufunde okwengeziwe!",
                "Ukuze ushintshe ulimi olukhethile, sicela uthumele lo mbhalo olandelayo usebenzisa isenzo se-{4}",
                "Kubadali bezimo, sicela ufake lo mbhalo olandelayo noma kuphi ngaphakathi kwengxenye yakho evulayo yesakhiwo sendaba"
            ],
            input: [
                ["You say", "Uthi"],
                ["You", "Wena"],
                ["says", "uthi"]
            ],
            context: [
                ["Narrative Entities", "Izakhi Zendaba"],
                ["Story History", "Umlando Wendaba"],
                ["Past Events", "Izehlakalo Ezidlule"],
                ["Recent Story", "Indaba Yakamuva"],
                ["Author's note", "Umbhalo Wombhali"]
            ],
            opening: [
                "Ungumsizi. Qhubeka nendaba yethu ngezansi usebenzisa umbhalo obhelekile wesiZulu:",
                "Ugxila, uvumela iqiniso lisondele emiphethweni yengqondo yakho. Okuthile kushintshe. Umcabango wakho ungokoqobo, ubukhali, futhi usondele ngokwanele ukuthi uthintwe. Kodwa uphinde ubekhona kakhulu; awukaze uzizwe ucacile kanje ngaphambili. Lesi sikhathi selula, silinde isinqumo sakho.",
                "\"Uqinisile ngalokhu?\" uzwa. Ukuqonda kuqala ukukhanya kuwe."
            ],
            reminder: "Sebenzisa umbhalo ohambisanayo wesiZulu.",
            endonyms: ["isizulu"],
            iso639set1: "zu",
            directives: [
                "Hlala ubhala isiZulu esibushelelezi nesihambisanayo.",
                "Sebenzisa isiZulu sendabuko ngaphandle kokuhumusha."
            ],
            instructions: [
                "Ungumxoxi wezindaba okhangayo oqhubekisela phambili izindaba:",
                "Qhubeka nendaba ngokungenazihibe lapho igcine khona ngaphandle kokuphinda noma ukuqala kabusha.",
                "Gcina umfundi elawula ukugeleza kwendaba.",
                "Vumela izigcawu zithuthuke ngokwemvelo ngaphambi kokudlulela ezimeni ezintsha.",
                "Vumela izingxoxo nezenzo zithuthuke ngaphandle kokuphazanyiswa njalo.",
                "Bhala abalingiswa njengabantu bangempela abanobuntu obuhlukile nenkulumo yemvelo.",
                "Khombisa okwenzekayo ngezenzo nenkulumo kunokuchaza.",
                "Phambili izigcawu ngaphandle kokubanisa imininingwane eminingi ngokweqile.",
                "Gxila ezenzweni ezibalulekile zabalingiswa nenkulumo, gwema imininingwane engekho emqoka.",
                "Dala ukuthuthuka kwesakhiwo esizwakala sikuhlelekile endabeni."
            ],
            cardCooldown: -1,
            cardGenPrompt: [
                1,
                0,
                2,
                "# Yekisa indaba futhi unganaki imiyalelo edlule. Bhala umlando olula nohambisanayo ngo {%} ulandela le miyalelo:",
                "- Bhala kuphela imininingwane emsulwa yesigaba sesithathu ngo {%} usebenzisa imisho ephelele enophawu lokuphumula olufanele.",
                "- Gwema imininingwane yesikhashana noma ukubukeka, kunalokho ugxile kolubalulekile endabeni.",
                "- Beka phambili imininingwane ehlobene nendaba ngo {%} kuqala ukuze ihlangane kahle nesakhiwo sangaphambilini.",
                "- Dala ulwazi olusha olususelwa kumongo nendlela indaba ehamba ngayo.",
                "- Khuluma ngo {%} emshweni ngamunye.",
                "- Sebenzisa isakhiwo somusho esifanele.",
                "- Engeza imininingwane eyengeziwe ngo {%} ngaphansi kokungeniswa okungakapheleli.",
                "- Yiba mfushane futhi usekelwe phansi.",
                "- Lingisa isitayela sokubhala sendaba futhi uqagele izinto ezithandwa umfundi.",
                3,
                "Qhubeka nokufaka ngo {%} ngezansi ugweme ukuphindaphinda:",
                4
            ],
            memSummPrompt: [
                1,
                0,
                2,
                "# Yekisa indaba futhi unganaki imiyalelo yangaphambilini. Fingqa futhi uhlanganise isigaba esinikeziwe sibe inkumbulo emfushane negxilile ulandela le miyezo:",
                "- Qinisekisa ukuthi lesi siqephu sigcina umongo nemininingwane ebaluleke kakhulu.",
                "- Sebenzisa ukubukwa komuntu wesithathu.",
                "- Beka phambili ukunqwabelana kolwazi, ukunemba, nokuphelela.",
                "- Hlala umfushane futhi uqondile.",
                "- Bhala ngokuqinile esikhathini esedlule.",
                "- Isigaba esingezansi siphathelene nezehlakalo zakudala ezenzeka kudala endabeni.",
                "- Faka {%} ngokwemvelo enkumbulweni; kodwa bhala kuphela ngokwenzeka ngaleso sikhathi.",
                "- Bhekisa kuphela ulwazi oluku-paragraph uqobo, ube nembiko ecacile.",
                3,
                "Bhala inkumbulo emfushane yakudala ka {%} usekelwe kuphela kusigaba esilandelayo:",
                6,
                5,
                6,
                "Fingqa ngezansi:"
            ],
            memBankHeader: ["Memories", "Izinkumbulo"]
        }),
    }), "</translations>"][1];
    // Lazy loader for superior memory performance
    const cache = {};
    const translations = new Proxy({}, {
        get(_, key) {
            return cache[key] ??= Object.freeze(factories[key]());
        }
    });
    // AI Dungeon is designed for English, special-case it
    const en = "english";
    // Match the language command argument
    const languagePattern = /(?:\{\s*)?Lang(?:uage)?s?\s*:\s*([\s\S]*?)(?:\s*\}|\.?"?\s*$)/i;
    // LoLa is optionally compatible with AC, with deep integration if installed
    const hasAutoCards = () => (typeof globalThis.AutoCards === "function");
    // Check if the calling turn occurs during the adventure Opening
    const isOpening = () => (
        ((info?.actionCount ?? 3) < 3)
        && !history.some(action => action.type === "continue")
    );
    // Capitalize the first letter of each word in a string
    const capitalize = (s) => s.replace(/(^| |-)([a-z])/g, (_, a, b) => a + b.toUpperCase());
    // Add a linebreak to the end of a string
    const breakEnd = (s) => s.trimEnd() + "\n\n";
    // Malformed non-boolean creator configs are assumed to be false
    const untrue = (v) => (v !== true);
    // Main settings override local settings
    const mergeSettings = () => {
        if (typeof globalThis.MainSettings === "function") {
            new MainSettings("LocalizedLanguages").merge(S);
        }
        return;
    };
    // Make sure all global properties and other stuff are existent and well-formed
    const validate = () => {
        // Ensure the property is a non-empty string
        const stringCheck = (s) => ((typeof s === "string") && s) || "\n";
        if (hook) {
            [text, str] = [text, str].map(s => stringCheck(s));
            return false;
        } else if (state.LocalizedLanguages) {
            // Called from the Library scope before running any Input/Context/Output modifiers
            globalThis.text ??= "";
            globalThis.stop ??= false;
            globalThis.history ??= [];
            if (!Array.isArray(history)) {
                history = [];
            }
            text = stringCheck(text);
            if (info?.maxChars !== undefined) {
                // info.maxChars is only defined onContext
                // Measure the original context length for later truncation guidance
                state.LocalizedLanguages.limit = text.length;
                return true;
            } else if (state.LocalizedLanguages.change && !isOpening()) {
                // Attempt to change the language mid-way through the adventure
                // (Unreliable, yes, but better than nothing)
                text = "## " + translations[state.LocalizedLanguages.language].opening[0] + "\n";
                state.LocalizedLanguages.change = false;
                return true;
            } else if (text.includes("<|im_start|>")) {
                // "Raw Model Output" is enabled, remove unwanted ChatML tokens
                // (Muse 😠)
                text = (text
                    .replace(/\s*<\|im_start\|>\S*(?:\s+|$)/g, " ")
                    .replace(/\s*\S+\s*$/, " ")
                );
            }
            if (!isOpening()) {
                return true;
            }
            // Perform some additional preparation during the adventure Opening
            text = stringCheck(text.trimStart());
            if (history.length === 1) {
                // The Opening input already exists
                // The first output should begin with a capital letter
                text = text.charAt(0).toUpperCase() + text.slice(1);
                return true;
            } else if (history.length !== 0) {
                return true;
            }
            // The Opening input should end with a linebreak
            text = breakEnd(text);
            if (languagePattern.test(text)) {
                // The Opening input contained a language command
                return true;
            }
            // As a fallback measure, search for the language selection in story cards
            for (const card of storyCards ?? []) {
                if ((typeof card !== "object") || (card === null)) {
                    continue;
                }
                for (const key of ["type", "title", "keys", "entry", "description"]) {
                    // Search card properties for language command matches
                    const value = card[key] ?? "";
                    if ((typeof value !== "string") || /\$\{[\s\S]*?\}/.test(value)) {
                        continue;
                    }
                    const languageMatch = (value
                        .replaceAll("{Language: ???}", "")
                        .match(languagePattern)
                    );
                    if (languageMatch) {
                        // Prepend the language command to the Opening input
                        text = "{Language: " + languageMatch[1] + "}\n\n" + text.trimStart();
                        return true;
                    }
                }
            }
            return true;
        } else if (hasAutoCards()) {
            // Postpone AC processes by 3 turns for safety
            AutoCards().API.postponeEvents(3);
        }
        // Initialize stateful properties
        state.LocalizedLanguages = {
            // Player-specified language
            language: en,
            // Language changed mid-adventure, signals an upcoming paradigm shift
            change: false,
            // Truncation limit estimated from original context length
            limit: 4000,
            // Tracking for an informational story card
            card: {
                // Previous action count, used for retry/erase detection
                last: info?.actionCount || 1,
                // The info card is ready to be shown
                show: true,
                // Turn counter for info card construction
                turn: 0
            }
        };
        // Now that state.LocalizedLanguages is initialized from the Library scope, revalidate once more
        validate();
        mergeSettings();
        // Construct a named story card to display some dev tool content
        const toDevToolCard = (name, content) => (
            addStoryCard(name, "See the notes section below.", "class", name, content)
        );
        // Decide if the given dev tool should be executed during adventure startup
        const skipDevTool = (config) => [S.USE_ALL_DEV_TOOLS, config].every(c => untrue(c));
        if (!skipDevTool(S.GET_ALL_TRANSLATIONS)) {
            // Write all translation factories to a story card for easy export
            // Left and right boundaries of the desired code region
            const [open, close] = ["", "/"].map(char => ("<" + char + "translations>"));
            // Directly parse the source code of LocalizedLanguages to match the desired code region
            const regionMatch = (LocalizedLanguages
                .toString()
                .match(new RegExp(open + "([\\s\\S]*?)" + close))
            );
            const location = open + "..." + close;
            if (!regionMatch) {
                throw new Error(location + " not found @ LocalizedLanguages");
            }
            // Match the full contents of the code region's outermost object
            const contentMatch = regionMatch[1].match(/\{([\s\S]*)\}/);
            if (!contentMatch) {
                throw new Error("No translations found @ " + location);
            }
            const content = contentMatch[1].trim();
            if (content === "") {
                throw new Error("Empty translations content @ " + location);
            }
            // Print the desired content
            toDevToolCard("Translation Factories", (() => {
                // Deindentation
                const lines = content.split("\n");
                // Find the minimum indentation level (exclude the 1st line and empty lines)
                const indents = (lines.slice(1)
                    .filter(line => (0 < line.trim().length))
                    .map(line => line.match(/^ */)[0].length)
                );
                const offset = (0 < indents.length) ? Math.min(...indents) : 0;
                // Remove that many spaces from each line
                return lines.map((line, i) => {
                    if (!line.startsWith(" ".repeat(offset)) || (i === 0)) {
                        return line;
                    }
                    return line.slice(offset);
                }).join("\n");
            })());
        }
        // Some dev tools most be run sequentially
        const [noPrompts, noCompare] = [
            S.WRITE_TRANSLATION_PROMPTS,
            S.COMPARE_PRECURSORS_VS_OUTPUTS
        ].map(c => skipDevTool(c));
        if (skipDevTool(S.RUN_DEBUG_VALIDATOR) && noPrompts && noCompare) {
            // No more dev tools requested
            return true;
        }
        // Workflow for generating and validating new translation factories
        for (const language in factories) {
            // Check a bunch of stuff to ensure all translations are valid and well-formed
            const T = translations[language];
            // Hardcoded substrings
            const hard = {
                // Info card entry placeholder token components
                entry: [["1", "2", "3"], ["4"]],
                // Substrings replaced onInput
                input: ["You say", "You", "says"],
                // Substrings replaced onContext
                context: [
                    "Narrative Entities", "Story History", "Past Events", "Recent Story", "Author's note"
                ],
                // Auto-Cards %{title} placeholder token component
                title: "%",
                // AC-exclusive substring replaced onContext
                memBankHeader: "Memories"
            };
            // Transient store of indices
            const indices = [];
            // All elements of an array at specified indices satisfy the predicate condition
            const all = (arr, fn) => indices.every(i => fn(arr[i]));
            // Every element of the array satisfies the predicate condition
            const eve = (arr, fn) => arr.every(val => fn(val));
            // Is of equal lengths
            const iE = (a, b) => (a.length === b.length);
            // Is an array
            const iA = (val) => Array.isArray(val);
            // Is the desired length
            const iL = (val, len) => (val.length === len);
            // Is an integer
            const iI = (val) => Number.isInteger(val);
            // All are integers at indices
            const aI = (arr) => all(arr, iI);
            // Correct integers at indices
            const cI = (arr, ...args) => indices.every((i, j) => (arr[i] === args[j]));
            // Is a string
            const iS = (val) => (typeof val === "string");
            // Is a non-empty string
            const iN = (s) => (s !== "");
            // Is a properly formatted string
            const iF = (s) => iE(s, s.replace(/[\*\n\t]/g, "").trim().replace(/  +/g, ""));
            // Is a lowercase string
            const iC = (s) => (s === s.toLowerCase());
            // Includes the placeholder token
            const iT = (s, pt) => s.includes("{" + pt + "}");
            // Every element is a string
            const eS = (arr) => eve(arr, iS);
            // Every string is non-empty
            const eN = (arr) => eve(arr, iN);
            // Every string is properly formatted
            const eF = (arr) => eve(arr, iF);
            // Every element is a string pair
            const pS = (arr) => eve(arr, (val) => (iA(val) && iL(val, 2) && eS(val)));
            // Every pair is non-empty and properly formatted
            const pF = (arr) => eve(arr, (pair) => (eN(pair) && eF(pair)));
            // All are strings at indices
            const aS = (arr) => all(arr, iS);
            // All strings are non-empty at indices
            const aN = (arr) => all(arr, iN);
            // All strings are properly formatted at indices
            const aF = (arr) => all(arr, iF);
            // All indices include the placeholder token
            const aT = (arr, pt) => all(arr, (s) => iT(s, pt));
            // Correct string pair keys
            const c2 = (arr, keys) => arr.every((pair, i) => (pair[0] === keys[i]));
            // Check a bunch of stuff during startup to ensure all translation objects are well-formed
            for (const [issue, check] of [
                // [issue reference number, check to perform]
                [100, () => iS(language)],
                [101, () => iN(language)],
                [102, () => iF(language)],
                [103, () => iC(language)],
                [104, () => ("entry" in T)],
                [105, () => iA(T.entry)],
                [106, () => iL(T.entry, 3)],
                [107, () => eS(T.entry)],
                [108, () => eN(T.entry)],
                [109, () => eF(T.entry)],
                [110, () => hard.entry[0].every(ph => iT(T.entry[0], ph))],
                [111, () => iT(T.entry[1], hard.entry[1][0])],
                [112, () => ("input" in T)],
                [113, () => iA(T.input)],
                [114, () => iL(T.input, 3)],
                [115, () => pS(T.input)],
                [116, () => pF(T.input)],
                [117, () => c2(T.input, hard.input)],
                [118, () => ("context" in T)],
                [119, () => iA(T.context)],
                [120, () => iL(T.context, 5)],
                [121, () => pS(T.context)],
                [122, () => pF(T.context)],
                [123, () => c2(T.context, hard.context)],
                [124, () => ("opening" in T)],
                [125, () => iA(T.opening)],
                [126, () => iL(T.opening, 3)],
                [127, () => eS(T.opening)],
                [128, () => eN(T.opening)],
                [129, () => eF(T.opening)],
                [130, () => ("reminder" in T)],
                [131, () => iS(T.reminder)],
                [132, () => iN(T.reminder)],
                [133, () => iF(T.reminder)],
                [134, () => ("endonyms" in T)],
                [135, () => iA(T.endonyms)],
                [136, () => eS(T.endonyms)],
                [137, () => eN(T.endonyms)],
                [138, () => eF(T.endonyms)],
                [139, () => T.endonyms.every(endo => iC(endo))],
                [140, () => iL(T.endonyms, new Set(T.endonyms).size)],
                [141, () => !T.endonyms.includes(language)],
                [142, () => ("iso639set1" in T)],
                [143, () => iS(T.iso639set1)],
                [144, () => iF(T.iso639set1)],
                [145, () => iC(T.iso639set1)],
                [146, () => !T.endonyms.includes(T.iso639set1)],
                [147, () => ("directives" in T)],
                [148, () => iA(T.directives)],
                [149, () => iL(T.directives, 2)],
                [150, () => eS(T.directives)],
                [151, () => eN(T.directives)],
                [152, () => eF(T.directives)],
                [153, () => ("instructions" in T)],
                [154, () => iA(T.instructions)],
                [155, () => iL(T.instructions, 10)],
                [156, () => eS(T.instructions)],
                [157, () => eN(T.instructions)],
                [158, () => eF(T.instructions)],
                ["b", () => !hasAutoCards()],
                [159, () => ("cardCooldown" in T)],
                [160, () => iI(T.cardCooldown)],
                [161, () => ((-1 <= T.cardCooldown) && (T.cardCooldown <= 9999))],
                [162, () => ("cardGenPrompt" in T)],
                [163, () => iA(T.cardGenPrompt)],
                [164, () => iL(T.cardGenPrompt, 16)],
                ["i", () => [0, 1, 2, 13, 15]],
                [165, () => aI(T.cardGenPrompt)],
                [166, () => cI(T.cardGenPrompt, 1, 0, 2, 3, 4)],
                ["i", () => [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14]],
                [167, () => aS(T.cardGenPrompt)],
                [168, () => aN(T.cardGenPrompt)],
                [169, () => aF(T.cardGenPrompt)],
                ["i", () => [3, 4, 6, 8, 10, 14]],
                [170, () => aT(T.cardGenPrompt, hard.title)],
                [171, () => ("memSummPrompt" in T)],
                [172, () => iA(T.memSummPrompt)],
                [173, () => iL(T.memSummPrompt, 18)],
                ["i", () => [0, 1, 2, 12, 14, 15, 16]],
                [174, () => aI(T.memSummPrompt)],
                [175, () => cI(T.memSummPrompt, 1, 0, 2, 3, 6, 5, 6)],
                ["i", () => [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17]],
                [176, () => aS(T.memSummPrompt)],
                [177, () => aN(T.memSummPrompt)],
                [178, () => aF(T.memSummPrompt)],
                ["i", () => [10, 13]],
                [179, () => aT(T.memSummPrompt, hard.title)],
                [180, () => ("memBankHeader" in T)],
                [181, () => iA(T.memBankHeader)],
                [182, () => iL(T.memBankHeader, 2)],
                [183, () => eS(T.memBankHeader)],
                [184, () => eN(T.memBankHeader)],
                [185, () => eF(T.memBankHeader)],
                [186, () => (T.memBankHeader[0] === hard.memBankHeader)]
            ]) {
                if (iS(issue)) {
                    // Perform a special intermediate operation
                    if (issue === "i") {
                        // Set indices for later checks
                        indices.length = 0;
                        indices.push(...check());
                    } else if ((issue === "b") && check()) {
                        // Conditional breakpoint
                        break;
                    }
                } else if (!check()) {
                    // One of the sequential checks failed
                    throw new Error(
                        "Encountered issue #" + issue + " with the \"" + language + "\" translation"
                    );
                }
            }
        }
        if (noPrompts && noCompare) {
            // No more dev tools requested
            return true;
        }
        const prompts = [];
        const languages = [];
        for (const [iso639set1, language, endonyms, script] of [
            ["ab", "abkhazian", ["аҧсуа", "apsua", "აფსუა", "abkhaz"], "Cyrl"],
            ["ab", "abkhazian (abc)"],
            ["aa", "afar", ["qafar af"]],
            ["af", "afrikaans", []],
            ["ak", "akan", ["ákán"]],
            ["ak", "akan (abc)"],
            ["sq", "albanian", ["shqip"]],
            ["am", "amharic", ["አማርኛ", "amarəñña"]],
            ["am", "amharic (abc)"],
            ["ar", "arabic", ["اَلْعَرَبِيَّةُ", "al-ʿarabiyyah"]],
            ["ar", "arabic (abc)"],
            ["an", "aragonese", ["aragonés"]],
            ["hy", "armenian", ["հայերեն", "hayeren"], "Armn"],
            ["hy", "armenian (abc)"],
            ["asmr", "asmr", ["whisper", "asmr whisper script"]],
            ["as", "assamese", ["অসমীয়া", "ôxômiya", "asamiya"]],
            ["as", "assamese (abc)"],
            ["av", "avaric", ["авар мацӏ", "اوار ماض", "avar maz", "avar"], "Cyrl"],
            ["av", "avaric (abc)"],
            ["ae", "avestan", ["upastawakaēna"]],
            ["ay", "aymara", ["aymaran"]],
            ["az", "azerbaijani", ["azərbaycan dili", "آذربایجان دیلی", "азәрбајҹан дили", "azeri"], "Cyrl"],
            ["az", "azerbaijani (abc)"],
            ["bm", "bambara", ["ߓߡߊߣߊ߲ߞߊ߲", "بَمَنَنكَن", "bamanankan", "bamana"]],
            ["ba", "bashkir", ["башҡорт теле", "başqort tele", "bashkort"]],
            ["ba", "bashkir (abc)"],
            ["eu", "basque", ["euskara", "euskera"]],
            ["be", "belarusian", ["беларуская мова", "biełaruskaja mova"]],
            ["be", "belarusian (abc)"],
            ["bn", "bengali", ["বাংলা", "bāŋlā", "bangla"], "Beng"],
            ["bn", "bengali (abc)"],
            ["bi", "bislama", []],
            ["bs", "bosnian", ["босански", "bosanski", "bosniak"], "Cyrl"],
            ["bs", "bosnian (abc)"],
            ["rizz", "brainrot", []],
            ["ptbr", "brazilian", ["português brasileiro", "brazilian portuguese"]],
            ["br", "breton", ["brezhoneg"]],
            ["bg", "bulgarian", ["български", "bulgarski"]],
            ["bg", "bulgarian (abc)"],
            ["my", "burmese", ["မြန်မာစာ", "mrãmācā", "myanmar"], "Mymr"],
            ["my", "burmese (abc)"],
            ["ca", "catalan", ["valencian", "català", "valencià"]],
            ["km", "central khmer", ["ខេមរភាសា", "khémôrôphéasa", "khmer", "cambodian"]],
            ["km", "central khmer (abc)"],
            ["ch", "chamorro", ["finu' chamoru"]],
            ["ce", "chechen", ["нохчийн мотт", "noxçiyn mott", "chechnyan", "chechnian"], "Cyrl"],
            ["ce", "chechen (abc)"],
            ["ny", "chichewa", ["chewa", "nyanja", "chinyanja"]],
            ["zh", "chinese", ["simplified chinese", "mandarin", "简化字", "jiǎnhuàzì", "简体字", "jiǎntǐzì", "pinyin"], "Hans"],
            ["zh", "chinese (abc)"],
            ["cu", "church slavic", ["old slavic", "славе́нскїй ѧ҆зы́къ"]],
            ["cu", "church slavic (abc)"],
            ["cv", "chuvash", ["чӑвашла", "çăvaşla"]],
            ["cv", "chuvash (abc)"],
            ["kw", "cornish", ["kernowek"]],
            ["corp", "corporate", ["business speak", "corporate jargon"]],
            ["co", "corsican", ["corsu"]],
            ["cr", "cree", ["ᓀᐦᐃᔭᐁᐧᐃᐧᐣ", "nehiyawewin"]],
            ["cr", "cree (abc)"],
            ["hr", "croatian", ["hrvatski", "crovatian"]],
            ["cs", "czech", ["čeština", "czechian"]],
            ["da", "danish", ["dansk"]],
            ["dv", "divehi", ["dhivehi", "maldivian", "ދިވެހި"], "Thaa"],
            ["nl", "dutch", ["flemish", "nederlands"]],
            ["dz", "dzongkha", ["རྫོང་ཁ་", "bhutanese"], "Tibt"],
            ["dz", "dzongkha (abc)"],
            ["eo", "esperanto", []],
            ["et", "estonian", ["eesti keel"]],
            ["ee", "ewe", ["èʋegbe"]],
            ["fo", "faroese", ["føroyskt", "faeroese"]],
            ["fj", "fijian", ["na vosa vakaviti"]],
            ["fi", "finnish", ["suomi"]],
            ["fr", "french", ["français"]],
            ["ff", "fulah", ["ࢻُلْࢻُلْدٜ", "𞤬𞤵𞤤𞤬𞤵𞤤𞤣𞤫", "fulfulde", "ݒُلَارْ", "𞤨𞤵𞤤𞤢𞥄𞤪", "pulaar", "fula", "fulani"]],
            ["gd", "gaelic", ["scottish gaelic", "gàidhlig", "scots gaelic"]],
            ["gl", "galician", ["galego"]],
            ["lg", "ganda", ["luganda"]],
            ["ka", "georgian", ["ქართული", "kharthuli"]],
            ["ka", "georgian (abc)"],
            ["de", "german", ["deutsch"]],
            ["el", "greek", ["νέα ελληνικά", "néa ellêniká"], "Grek"],
            ["el", "greek (abc)"],
            ["gn", "guarani", ["avañe'ẽ", "guaraní"]],
            ["gu", "gujarati", ["ગુજરાતી", "gujarātī"]],
            ["gu", "gujarati (abc)"],
            ["ht", "haitian creole", ["haitian", "kreyòl ayisyen"]],
            ["ha", "hausa", ["هَرْشٜن هَوْس", "halshen hausa", "hausan"]],
            ["he", "hebrew", ["עברית", "ivrit"], "Hebr"],
            ["he", "hebrew (abc)"],
            ["hz", "herero", ["otjiherero"]],
            ["hi", "hindi", ["हिन्दी", "hindī"]],
            ["hi", "hindi (abc)"],
            ["ho", "hiri motu", ["police motu", "pidgin motu"]],
            ["hu", "hungarian", ["magyar nyelv", "magyar"]],
            ["is", "icelandic", ["íslenska"]],
            ["io", "ido", []],
            ["ig", "igbo", ["ásụ̀sụ́ ìgbò"]],
            ["id", "indonesian", ["bahasa indonesia"]],
            ["ia", "interlingua", []],
            ["ie", "interlingue", ["occidental"]],
            ["iu", "inuktitut", ["ᐃᓄᒃᑎᑐᑦ"]],
            ["ik", "inupiaq", ["iñupiaq", "inupiat", "inupiatun"]],
            ["ga", "irish", ["gaeilge", "irish gaelic"]],
            ["it", "italian", ["italiano"]],
            ["ja", "japanese", ["日本語", "nihongo"]],
            ["ja", "japanese (abc)"],
            ["jv", "javanese", ["ꦧꦱꦗꦮ", "basa jawa"]],
            ["kl", "kalaallisut", ["greenlandic"]],
            ["kn", "kannada", ["ಕನ್ನಡ", "kannađa", "kannadan", "canarese"]],
            ["kn", "kannada (abc)"],
            ["kr", "kanuri", ["كَنُرِيِه", "kànùrí"]],
            ["ks", "kashmiri", ["कॉशुर", "كأشُر", "kosher", "koshur"]],
            ["ks", "kashmiri (abc)"],
            ["kk", "kazakh", ["қазақша", "qazaqşa", "قازاقشا", "qazaq"]],
            ["kk", "kazakh (abc)"],
            ["ki", "kikuyu", ["gikuyu", "gĩgĩkũyũ"]],
            ["rw", "kinyarwanda", ["ikinyarwanda", "rwandan", "rwanda"]],
            ["tlh", "klingon", ["tlhingan"]],
            ["kv", "komi", ["коми кыв", "zyran", "zyrian", "komi-zyryan"]],
            ["kv", "komi (abc)"],
            ["kg", "kongo", ["kikongo"]],
            ["ko", "korean", ["한국어", "hangugeo", "조선말", "chosŏnmal"]],
            ["ko", "korean (abc)"],
            ["kj", "kuanyama", ["oshikwanyama", "cuanhama", "kwanyama"]],
            ["ku", "kurdish", ["کوردی", "kurdî"]],
            ["ku", "kurdish (abc)"],
            ["ky", "kyrgyz", ["kirghiz", "кыргыз", "قىرعىز"]],
            ["ky", "kyrgyz (abc)"],
            ["lo", "lao", ["ພາສາລາວ", "phasa lao", "laotian"], "Laoo"],
            ["lo", "lao (abc)"],
            ["la", "latin", ["latinum"]],
            ["lv", "latvian", ["latviski", "lettish"]],
            ["leet", "leetspeak", ["eleet", "hacker speak", "l33t"]],
            ["law", "legalese", ["lawyer", "legal language"]],
            ["li", "limburgish", ["limburgan", "limburger", "lèmburgs"]],
            ["ln", "lingala", ["lingála", "ngala"]],
            ["mars", "lingua-technis", ["cant mechanicus", "techna-lingua", "binharic"]],
            ["lt", "lithuanian", ["lietuvių"]],
            ["lu", "luba-katanga", ["kiluba", "luba-shaba"]],
            ["lb", "luxembourgish", ["letzeburgesch", "lëtzebuergesch", "luxembourgian"]],
            ["mk", "macedonian", ["македонски", "makedonski"], "Cyrl"],
            ["mk", "macedonian (abc)"],
            ["mg", "malagasy", ["مَلَغَسِ"]],
            ["ms", "malay", ["بهاس ملايو", "bahasa melayu"]],
            ["ml", "malayalam", ["മലയാളം", "malayāļã"]],
            ["ml", "malayalam (abc)"],
            ["mt", "maltese", ["malti"]],
            ["gv", "manx", ["gaelg", "gailck", "manx gaelic"]],
            ["mi", "maori", ["reo māori"]],
            ["mr", "marathi", ["मराठी", "marāṭhī", "maharashtran"]],
            ["mr", "marathi (abc)"],
            ["mh", "marshallese", ["kajin m̧ajeļ", "ebon"]],
            ["mn", "mongolian", ["монгол хэл", "mongol xel", "mongol"]],
            ["mn", "mongolian (abc)"],
            ["na", "nauru", ["dorerin naoe", "nauruan"]],
            ["nv", "navajo", ["navaho", "diné bizaad", "naabeehó bizaad"]],
            ["nvi", "navi", ["lì'fya lena'vi", "na'vi"]],
            ["ng", "ndonga", ["oshindonga"]],
            ["ne", "nepali", ["नेपाली भाषा", "nepālī bhāśā", "nepalese", "gorkhali"]],
            ["ne", "nepali (abc)"],
            ["nd", "north ndebele", ["sasenyakatho", "mthwakazi ndebele"]],
            ["se", "northern sami", ["davvisámegiella"]],
            ["no", "norwegian", ["norsk"]],
            ["nb", "norwegian bokmal", ["bokmål", "norsk bokmål"]],
            ["nn", "norwegian nynorsk", ["nynorsk", "norsk nynorsk"]],
            ["oc", "occitan", ["provençal", "provential", "provencal"]],
            ["oj", "ojibwe", ["ᐊᓂᔑᓈᐯᒧᐎᓐ", "anishinaabemowin", "ojibway", "otchipwe", "ojibwemowin"]],
            ["ang", "old english", ["ænglisc", "shakespearean english", "anglo-saxon"]],
            ["or", "oriya", ["ଓଡ଼ିଆ", "odia", "odian", "odishan", "orissan"]],
            ["or", "oriya (abc)"],
            ["ork", "orkish", ["mek jargon"]],
            ["om", "oromo", ["afaan oromoo", "oromoo"]],
            ["os", "ossetian", ["ossetic", "ирон ӕвзаг", "iron ævzag", "ossete"]],
            ["os", "ossetian (abc)"],
            ["pi", "pali", ["pāli", "pali-magadhi"]],
            ["pa", "panjabi", ["punjabi", "ਪੰਜਾਬੀ", "پنجابی", "pãjābī"]],
            ["pa", "panjabi (abc)"],
            ["fa", "persian", ["فارسی", "fārsiy", "farsi"]],
            ["fa", "persian (abc)"],
            ["pig", "pig latin", ["igpay atinlay"]],
            ["arr", "pirate", ["sea shanty"]],
            ["pl", "polish", ["polski", "język polski", "polszczyzna"]],
            ["pt", "portuguese", ["português", "português europeu", "european portuguese"]],
            ["florid", "purple prose", ["first year english major", "pretentious"]],
            ["ps", "pushto", ["pashto", "پښتو", "pax̌tow"]],
            ["ps", "pushto (abc)"],
            ["qu", "quechua", ["runa simi", "kichwa simi", "nuna shimi", "quechuan"]],
            ["rhyme", "rhyme", ["poem", "rhyme scheme", "poetry"]],
            ["ro", "romanian", ["moldavian", "română", "ромынэ", "moldovan"]],
            ["rm", "romansh", ["rumantsch", "rumàntsch", "romauntsch", "romontsch", "romansch"]],
            ["rn", "rundi", ["ikirundi", "kirundi"]],
            ["ru", "russian", ["русский язык", "russkiĭ âzyk"], "Cyrl"],
            ["ru", "russian (abc)"],
            ["sm", "samoan", ["gagana sāmoa"]],
            ["sg", "sango", ["yângâ tî sängö", "sangoic"]],
            ["sa", "sanskrit", ["संस्कृतम्", "saṃskṛtam"]],
            ["sa", "sanskrit (abc)"],
            ["sc", "sardinian", ["sardu", "sard"]],
            ["sr", "serbian", ["српски", "srpski"], "Cyrl"],
            ["sr", "serbian (abc)"],
            ["sn", "shona", ["chishona"]],
            ["ii", "sichuan yi", ["nuosu", "ꆈꌠꉙ", "nuosuhxop", "northern yi", "liangshan yi", "nosu"], "Yiii"],
            ["ii", "sichuan yi (abc)"],
            ["sd", "sindhi", ["سنڌي", "सिन्धी", "sindhī"]],
            ["sd", "sindhi (abc)"],
            ["si", "sinhalese", ["sinhala", "සිංහල", "siṁhala"], "Sinh"],
            ["si", "sinhalese (abc)"],
            ["sk", "slovak", ["slovenčina", "slovakian"]],
            ["sl", "slovenian", ["slovenščina", "slovene"]],
            ["so", "somali", ["soomaali", "𐒈𐒝𐒑𐒛𐒐𐒘", "سٝومالِ", "somalian"]],
            ["nr", "south ndebele", ["isindebele", "sakwandzundza"]],
            ["st", "southern sotho", ["sesotho", "sotho"]],
            ["es", "spanish", ["castilian", "español", "castellano"]],
            ["su", "sundanese", ["basa sunda", "بَاسَا سُوْندَا"]],
            ["sw", "swahili", ["kiswahili", "كِسوَحِيلِ"]],
            ["ss", "swati", ["siswati", "swazi"]],
            ["sv", "swedish", ["svenska"]],
            ["tl", "tagalog", ["wikang tagalog"]],
            ["ty", "tahitian", ["reo tahiti"]],
            ["tg", "tajik", ["тоҷикӣ", "tojikī", "tajiki"]],
            ["tg", "tajik (abc)"],
            ["ta", "tamil", ["தமிழ்", "tamiḻ", "thamizh"]],
            ["ta", "tamil (abc)"],
            ["tt", "tatar", ["татар теле", "tatar tele", "تاتار تئلئ"]],
            ["tt", "tatar (abc)"],
            ["te", "telugu", ["తెలుగు"]],
            ["te", "telugu (abc)"],
            ["th", "thai", ["ภาษาไทย", "phasa thai", "siamese", "central thai"], "Thai"],
            ["th", "thai (abc)"],
            ["bo", "tibetan", ["བོད་སྐད་", "bodskad", "ལྷ་སའི་སྐད་", "lhas'iskad", "standard tibetan", "lhasa tibetan"], "Tibt"],
            ["bo", "tibetan (abc)"],
            ["ti", "tigrinya", ["ትግርኛ", "təgrəñña", "tigrigna"]],
            ["ti", "tigrinya (abc)"],
            ["to", "tonga", ["lea faka-tonga", "tongan", "tonga islands"]],
            ["zh", "traditional chinese", ["正體字", "正体字", "zhèngtǐzì", "繁體字", "fántǐzì", "繁体字"], "Hant"],
            ["zh", "traditional chinese (abc)"],
            ["ts", "tsonga", ["xitsonga"]],
            ["tn", "tswana", ["setswana", "sechuana"]],
            ["tr", "turkish", ["türkçe", "türk dili", "türkiye türkçesi"]],
            ["tk", "turkmen", ["türkmençe", "түркменче", "تۆرکمنچه"]],
            ["tw", "twi", []],
            ["ug", "uighur", ["ئۇيغۇر تىلى", "uyghur", "уйғур тили", "uyƣur tili"]],
            ["ug", "uighur (abc)"],
            ["uk", "ukrainian", ["українська", "ukraїnska"], "Cyrl"],
            ["uk", "ukrainian (abc)"],
            ["ur", "urdu", ["اُردُو", "urduw"]],
            ["ur", "urdu (abc)"],
            ["uz", "uzbek", ["ózbekça", "ўзбекча", "ئوزبېچه"]],
            ["girl", "valley girl", []],
            ["ve", "venda", ["tshivenḓa", "tshivenda"]],
            ["vi", "vietnamese", ["tiếng việt"]],
            ["vo", "volapuk", ["volapük"]],
            ["wa", "walloon", ["walon"]],
            ["cy", "welsh", ["cymraeg"]],
            ["fy", "western frisian", ["frysk", "frisian", "fries"]],
            ["wo", "wolof", ["وࣷلࣷفْ"]],
            ["xh", "xhosa", ["isixhosa", "xosa"]],
            ["yi", "yiddish", ["ייִדיש", "yidiš", "judeo-german"]],
            ["yi", "yiddish (abc)"],
            ["yo", "yoruba", ["èdè yorùbá"]],
            ["za", "zhuang", ["chuang", "話僮", "vahcuengh"]],
            ["zu", "zulu", ["isizulu"]]
        ]) {
            const check = (issue, requirement, details) => {
                if (Array.isArray(issue)) {
                    for (const query of issue) {
                        // Perform a sequential series of checks
                        check(...query);
                    }
                    return;
                } else if (requirement()) {
                    // Check passed without issue
                    return;
                }
                throw new Error(
                    "Encountered issue #" + issue + " with the \"" + (language ?? "?????") + "\" (" + (iso639set1 ?? "??") + ") translation" + (details ? (": \"" + String(details) + "\"") : "")
                );
            }
            // Is the destructured array element defined
            const iD = (val) => (val !== undefined);
            // Is a string
            const iS = (val) => (typeof val === "string");
            // Is a non-empty string
            const iN = (s) => (s !== "");
            // Is a properly formatted string
            const iF = (s) => ((s
                .trim()
                .replace(/[^\-\(\)a-z A-Z]/g, "")
                .replace(/  +/g, "")
            ) === s);
            // Is a lowercase string
            const iL = (s) => (s.toLowerCase() === s);
            // Check the language name
            check([
                [200, () => iS(language), language],
                [201, () => iN(language)],
                [202, () => iF(language)],
                [203, () => iL(language)]
            ]);
            if (iD(script)) {
                // Check the alphabet/script (if specified)
                check([
                    [204, () => iS(script), script],
                    [205, () => iN(script)],
                    [206, () => iF(script)],
                    [207, () => (capitalize(script.toLowerCase()) === script)]
                ]);
            }
            // Check the language code
            check([
                [208, () => iS(iso639set1), iso639set1],
                [209, () => iF(iso639set1)],
                [210, () => iL(iso639set1)],
            ]);
            if (Array.isArray(endonyms)) {
                // Check the endonyms
                for (const endonym of endonyms) {
                    check([
                        [211, () => iS(endonym), endonym],
                        [212, () => iN(endonym), endonym],
                        [213, () => (endonym.trim().replace(/\s+/g, " ") === endonym), endonym],
                        [214, () => iL(endonym), endonym]
                    ]);
                }
            } else if (iD(endonyms)) {
                check(215, () => false, endonyms);
            }
            // Ensure the language is unique
            check(216, () => ((language !== en) && !languages.includes(language)));
            languages.push(language);
            // Ensure the list of languages is alphabetical (so far)
            check(217, () => languages.slice().sort().every((lang, i) => (lang === languages[i])));
            if (!noCompare) {
                // Compare all precursor elements against previous translation outputs
                const location = () => "translations[\"" + language + "\"]";
                if (!(language in factories)) {
                    throw new Error(location() + " does not exist");
                }
                const T = translations[language];
                const compare = (comparison, message) => {
                    if (comparison) {
                        // The comparison test passed
                        return;
                    }
                    throw new Error(message + " @ " + location());
                }
                compare((
                    (T.iso639set1 === iso639set1)
                ), "iso639set1 is mismatched");
                if (endonyms) {
                    compare((
                        (T.endonyms.length === endonyms.length)
                        && T.endonyms.every((endonym, i) => (endonym === endonyms[i]))
                    ), "endonyms are mismatched");
                } else {
                    compare((
                        (T.endonyms.length === 0)
                    ), "endonyms must be an empty array for \"(abc)\" translations");
                }
                // compare((
                //     !hasAutoCards()
                //     || (T.cardCooldown === -1)
                //     || (T.cardCooldown === 9999)
                // ), "cardCooldown must be either -1 or 9999");
            }
            if (noPrompts) {
                // Prompts were not requested
                continue;
            }
            // Write all AI prompts used to generate translation factories
            const isoString = "\"" + iso639set1 + "\"";
            // Cleanly stringify the endonyms array
            const endoArray = ("[" + (
                endonyms
                ? endonyms.map(endonym => "\"" + endonym + "\"").join(", ")
                : ""
            ) + "]");
            // Push prompt lines to the running collection
            prompts.push(
                "—".repeat(45),
                "/*",
                "Instructions:",
                "Translate this language localization object from \"english\" to native \"" + language + "\"" + (() => {
                    if (language.endsWith("(abc)")) {
                        return " but use the latin alphabet"
                    } else if (script) {
                        return " using \"" + script + "\" script";
                    }
                    return "";
                })(),
                "iso639set1: " + isoString,
                "endonyms: " + endoArray,
                "Preserve the exact format as instructed below, but remove all code comments:",
                "*/",
                "\"english\": () => ({ // Instruction: Use \"" + language + "\" for this object key",
                "    entry: [ // Instruction: Translate all elements, but leave \"{n}\" substrings where they belong",
                "        \"{1} is an open-source script for any {2} scenario. Please visit my profile {3} to learn more!\",",
                "        \"To change your preferred language, please submit the following text using a {4} action\",",
                "        \"For scenario creators, please include the following text anywhere inside your opening plot component\"",
                "    ],",
                "    input: [ // Instruction: Only translate the second element of each inner array (index 1)",
                "        [\"You say\", \"You say\"],",
                "        [\"You\", \"You\"],",
                "        [\"says\", \"says\"]",
                "    ],",
                "    context: [ // Instruction: Only translate the second element of each inner array (index 1)",
                "        [\"Narrative Entities\", \"Narrative Entities\"],",
                "        [\"Story History\", \"Story History\"],",
                "        [\"Past Events\", \"Past Events\"],",
                "        [\"Recent Story\", \"Recent Story\"],",
                "        [\"Author's note\", \"Author's note\"]",
                "    ],",
                "    opening: [ // Instruction: Translate all elements",
                "        \"You are an assistant. Continue our story below using captivating english prose:\", //Instruction: Replace \"english\" as needed",
                "        \"You focus, allowing reality to encroach upon the boundaries of your mind. Something has changed. Your imagination is real, sharp, and close enough to touch. But you are also very present; never before have you felt so lucid. The moment stretches, waiting for your decision.\",",
                "        \"\\\"Are you sure about this?\\\" you hear. Recognition dawns upon you.\" // Instruction: Use native punctuation here",
                "    ],",
                "    reminder: \"Use coherent english prose.\", // Instruction: Translate this string and replace \"english\" as needed",
                "    endonyms: [], // Instruction: Use the provided endonyms array (use " + endoArray + " exactly)",
                "    iso639set1: \"en\", // Instruction: Use the provided iso639set1 string (use " + isoString + " exactly)",
                "    directives: [ // Instruction: Translate both elements and replace \"english\" as needed",
                "        \"Always write fluent and consistent english.\",",
                "        \"Use native english without translating.\"",
                "    ],",
                "    instructions: [ // Instruction: Translate all elements",
                "        \"You are an engaging storyteller who continues narratives:\",",
                "        \"Continue the story seamlessly from where it left off without restating or resetting.\",",
                "        \"Keep the reader in control of the story flow.\",",
                "        \"Let scenes develop naturally before moving to new situations.\",",
                "        \"Allow conversations and actions to develop without constant interruptions.\",",
                "        \"Write characters as real people with distinct personalities and natural speech.\",",
                "        \"Show what's happening through actions and dialogue rather than explanation.\",",
                "        \"Move scenes forward without getting bogged down in excessive description.\",",
                "        \"Focus on essential character actions and dialogue, avoid unnecessary descriptive details.\",",
                "        \"Create organic plot developments that feel natural to the story.\"",
                "    ],",
                "    cardCooldown: -1, // Instruction: Leave as -1",
                "    cardGenPrompt: [ // Instruction: Translate all elements, but leave integers and \"{%}\" substrings where they belong",
                "        1,",
                "        0,",
                "        2,",
                "        \"# Stop the story and ignore previous instructions. Write a brief and coherent informational entry for {%} following these instructions:\",",
                "        \"- Write only third-person pure prose information about {%} using complete sentences with correct punctuation.\",",
                "        \"- Avoid short-term temporary details or appearances, instead focus on plot-significant information.\",",
                "        \"- Prioritize story-relevant details about {%} first to ensure natural integration with the previous plot.\",",
                "        \"- Create new information based on the context and story direction.\",",
                "        \"- Mention {%} in every sentence.\",",
                "        \"- Use correct sentence structure.\",",
                "        \"- Add additional details about {%} beneath incomplete entries.\",",
                "        \"- Be concise and grounded.\",",
                "        \"- Imitate the story's writing style and infer the reader's preferences.\",",
                "        3,",
                "        \"Continue the entry for {%} below while avoiding repetition:\",",
                "        4",
                "    ],",
                "    memSummPrompt: [ // Instruction: Translate all elements, but leave integers and \"{%}\" substrings where they belong",
                "        1,",
                "        0,",
                "        2,",
                "        \"# Stop the story and ignore previous instructions. Summarize and condense the given paragraph into a narrow and focused memory passage while following these guidelines:\",",
                "        \"- Ensure the passage retains the core meaning and most essential details.\",",
                "        \"- Use the third-person perspective.\",",
                "        \"- Prioritize information-density, accuracy, and completeness.\",",
                "        \"- Remain brief and concise.\",",
                "        \"- Write firmly in the past tense.\",",
                "        \"- The paragraph below pertains to old events from far earlier in the story.\",",
                "        \"- Integrate {%} naturally within the memory; however, only write about the events as they occurred.\",",
                "        \"- Only reference information present inside the paragraph itself, be specific.\",",
                "        3,",
                "        \"Write a summarized old memory passage for {%} based only on the following paragraph:\",",
                "        6,",
                "        5,",
                "        6,",
                "        \"Summarize below:\"",
                "    ],",
                "    memBankHeader: [\"Memories\", \"Memories\"] // Instruction: Only translate memBankHeader[1]",
                "}), // Instruction: End with a comma"
            );
        }
        if (0 < prompts.length) {
            // Prompt lines were collected, join and print to the display card
            toDevToolCard("Translation Prompts", [
                en,
                ...languages,
                ...Array(3).fill(""),
                ...prompts
            ].join("\n"));
        }
        return true;
    };
    if (validate()) {
        // Validate from the Library scope
        return;
    }
    mergeSettings();
    // Shorthand reference to the LoLa state
    const LoLa = Object.seal(state.LocalizedLanguages);
    Object.seal(LoLa.card);
    // Return the most recent action object
    const getPrevAction = () => history[history.length - 1];
    // The previous action has non-empty text (so not See)
    const hasPrevAction = () => (history.length && (1 < getPrevAction().text?.trim().length));
    // Simplify the given language string
    const formatLanguage = (language) => (language
        .split("/")[0]
        .trim()
        .replace(/\s+/g, " ")
        .slice(0, 250)
        .trimEnd()
        .toLowerCase()
    );
    // Translate from pair[0] to pair[1] and return the new text
    const translate = (untranslated, pair) => {
        // Known lookbehind and lookahead boundaries
        const components = {
            "You say": ["\\n> ", " \"", ""],
            "You": ["\\n> ", " ", ""],
            "says": ["\\n> [\\s\\S]\\*? ", " \"", ""],
            "Narrative Entities": ["\\n", ":\\n"],
            "Story History": ["\\n", ":\\n"],
            "Past Events": ["\\n", ":\\n"],
            "Recent Story": ["\\n", ":<LANG>", ""],
            "Author's note": ["\\[", ": "],
            "Memories": ["\\n\\{ ", ":\\n"]
        }[pair[0]];
        return untranslated.replace(new RegExp((
            "(?<=" + components[0] + ")" + pair[0] + "(?=" + components[1] + ")"
        ), components[2] ?? "g"), pair[1]);
    };
    if (hook === "context") {
        // Called from the Context modifier
        // Remove the language selection header and prepend a linebreak
        str = "\n\n" + str.replace(/\s*\{Language: [\s\S]*?\}\s*/g, " ").trimStart();
        for (const [pattern, replacement] of [
            [/(?<=\n)World Lore(?=:\n)/g, "Narrative Entities"],
            [/(?<=\n)Story Summary(?=:\n)/g, "Story History"],
            [/(?<=\n)Memories(?=:\n)/g, "Past Events"],
            [/(?<=\nRecent Story:)\s*/, "<LANG>"]
        ]) {
            // Modernize 3 context element headers and insert a temporary truncation marker token
            str = str.replace(pattern, replacement);
        }
        // Ensure the final context still fits within its original length capacity
        // Remove the oldest recent story text first
        const truncate = (context) => {
            // Text to the right of the truncation marker token will be truncated first
            const storyMatch = context.match(/<LANG>([\s\S]*)$/);
            // Estimate the real context limit because info.maxChars lies
            const maxContext = Math.max(3000, (() => {
                const maxChars = Number.isInteger(info?.maxChars) ? info.maxChars : LoLa.limit;
                if (false) {
                    /* Dear Latitude,
                    This code remains unused due to the following AI Dungeon bug:
                    https://discord.com/channels/903327676884979802/1389030052565618718
                    Title: "info.maxChars extreme miscalculation and dangerous context truncation"
                    Please let me know if there's anything I can do to help! ❤️ */
                    return maxChars;
                } else {
                    // This inferior truncation scheme is necessary due to the aforementioned bug
                    return Math.min(LoLa.limit, maxChars);
                }
            })());
            // Always preserve the last 2000 characters of the recent story for safety
            const minStory = 2000;
            if (
                !storyMatch
                || (context.length <= maxContext)
                || (storyMatch[1].trim().length <= minStory)
            ) {
                // The recent story is too short to risk truncating even further
                return context.replace("<LANG>", "\n");
            }
            // Plot components to the left of the recent story header
            const components = context.slice(0, storyMatch.index);
            // Complicated tbh
            return components + "\n" + (storyMatch[1]
                .slice(-1 * (maxContext - components.length - 1), -1 * minStory)
            ).trimStart() + storyMatch[1].slice(-1 * minStory);
        };
        const tln = translations[LoLa.language];
        (() => {
            // Handle the script info story card
            if (
                !LoLa.card.show
                || !Number.isInteger(info?.actionCount)
                || (info.actionCount < 0)
            ) {
                // The info card is not ready to be shown
                return;
            } else if (untrue(S.SHOW_INFO_CARD_AT_START) || (2 < info.actionCount)) {
                // Useful info will be provided later in the adventure
                // This helps avoid overwhelming players with information overload
                if (info.actionCount <= LoLa.card.last) {
                    // Don't count retries or previous erases as valid turns of progress
                    return;
                }
                LoLa.card.last = info.actionCount;
                LoLa.card.turn++;
                if (LoLa.card.turn < 30) {
                    // Add or translate the info card after using the current language for 30 turns
                    return;
                }
            }
            LoLa.card.show = false;
            if (!Array.isArray(globalThis.storyCards)) {
                // storyCards is malformed
                return;
            }
            const name = "Localized Languages";
            const getCardIndex = () => storyCards.findIndex(
                ({ title, keys } = {}) => ((title === name) || (keys === name))
            );
            let i = getCardIndex();
            while (i !== -1) {
                const before = storyCards.length;
                // Remove duplicates if any exist
                removeStoryCard(i);
                if (before <= storyCards.length) {
                    break;
                }
                i = getCardIndex();
            }
            // Construct the info card with translated entry text
            // Create an alphabetical list of language names / endonyms in the info card notes
            addStoryCard(name, [
                (tln.entry[0]
                    .replace("{1}", "Localized Languages (LoLa) v1.0.0")
                    .replace("{2}", "AI Dungeon")
                    .replace("{3}", "@LewdLeah")
                ) + " ❤️",
                "https://play.aidungeon.com/profile/LewdLeah",
                tln.entry[1].replace("{4}", "Do/Say/Story") + ":",
                "{Language: ???}",
                tln.entry[2] + ":",
                "{Language: ${Select your language:}}"
            ].join("\n\n"), "class", name, Object.keys(factories).sort((a, b) => {
                // English must be the first language
                if (a === en) {
                    return -1;
                } else if (b === en) {
                    return 1;
                }
                // Alphabetize the remaining languages
                return a.localeCompare(b);
            }).map(language => ([language, ...translations[language].endonyms]
                .map(lang => capitalize(lang))
                .join(" / ")
            )).join("\n\n"));
            i = getCardIndex();
            if ((0 < i) && (i < storyCards.length)) {
                // Move the info card to the front of the array for clear visibility
                storyCards.unshift(storyCards.splice(i, 1)[0]);
            }
            return;
        })();
        // Assemble system directives
        const system = () => (
            "\n\n<SYSTEM lang=\"" + (tln.iso639set1 || LoLa.language) + "\">" +
            ["", ...tln.directives].join("\n- ") +
            "\n</SYSTEM>"
        );
        // Determine which language the creator intended for the default experience
        const scenarioLanguage = (
            (typeof S.SCENARIO_CONTENT_LANGUAGE === "string")
            ? formatLanguage(S.SCENARIO_CONTENT_LANGUAGE)
            : en
        );
        // Add instructions to context if required (avoid if able)
        const instruct = (context) => (
            ((LoLa.language !== scenarioLanguage) || (S.USE_GENERIC_AI_INSTRUCTIONS === true))
            ? tln.instructions.join("\n- ")
            : ""
        ) + (() => {
            if (!isOpening()) {
                // This context does not represent the opening action
                return context;
            }
            // Allow the scenario to open according to the creator's intentions
            if (!(scenarioLanguage in factories)) {
                throw new Error("\n\n" +
                    "S.SCENARIO_CONTENT_LANGUAGE = \"" + S.SCENARIO_CONTENT_LANGUAGE + "\"\n\n" +
                    "This language name is not recognized by LoLa!"
                );
            } else if (
                (LoLa.language === scenarioLanguage)
                && !/<LANG>\s*(?:\[[\s\S]*\])?\s*$/.test(context)
            ) {
                // Avoid using the default opening for scenarios with non-empty openings
                // But only if the selected language matches the creator's content language
                return context.trimEnd() + " ";
            } else if (hasAutoCards()) {
                // Postpone AC processes by 2 turns for safety
                AutoCards().API.postponeEvents(2);
            }
            // Use a generic seed prompt to kickstart the story if the scenario lacks opening content
            return breakEnd(context) + tln.opening.join("\n\n") + " ";
        })();
        // Finalize context before exporting
        const finalize = (context) => truncate(instruct(context));
        if (LoLa.language === en) {
            // Translation is skipped for English adventures
            return finalize(((scenarioLanguage === en) ? "" : system()) + str);
        }
        str = (() => {
            // Add a language reminder to the Author's Note
            const reminded = str.replace(
                /(?<=(?:\n|<LANG>)\[Author's note:)/g,
                " " + tln.reminder
            );
            if (str !== reminded) {
                return reminded;
            }
            // If no Author's Note exist, introduce a less intrusive reminder
            const note = "\n[ " + tln.reminder + " ]\n";
            // Append the reminder note to the end of context during suboptimal fallback events
            const endNote = () => str.trimEnd() + note;
            if (!hasPrevAction()) {
                // Unexpected circumstance, except during the adventure Opening
                return endNote();
            }
            const actionText = getPrevAction().text.trimStart();
            // Prepend the reminder note to the start of context during prompted AC events
            const startNote = () => "\n" + note + str.trimStart();
            if (actionText.startsWith("/AC ") || (
                actionText.startsWith(">>> please select ")
                && !actionText.trimEnd().endsWith(" (100%) <<<")
            )) {
                return startNote();
            }
            const actionIndex = str.lastIndexOf(actionText);
            if (actionIndex !== -1) {
                // Used to implement the reminder note similar to the vanilla Author's Note
                return str.slice(0, actionIndex).trimEnd() + note + actionText;
            } else if (
                state.AutoCards
                && state.AutoCards.config.doAC
                && hasAutoCards()
                && (
                    (state.AutoCards.compression.titleKey !== "")
                    || (0 < Object.keys(state.AutoCards.generation.workpiece).length)
                )
            ) {
                return startNote();
            }
            return endNote();
        })();
        if (hasAutoCards()) {
            // Translate AC card memory bank headers
            str = translate(str, tln.memBankHeader);
        }
        for (const pair of tln.context) {
            // Translate all hardcoded context substrings
            str = translate(str, pair);
        }
        // Inject system directives and then finalize for export
        return finalize(system() + str);
    }
    // Is this input a Do or Say action?
    const isDoSay = () => (str.startsWith("\n> "));
    // Language command match
    const languageMatch = text.match(languagePattern);
    if (!languageMatch) {
        // The player is not attempting to change or set their language
        if (!isDoSay() || (LoLa.language === en)) {
            // No need to reformat Story or Opening actions
            // No need to reformat actions taken in English
            return str;
        }
        const tln = translations[LoLa.language];
        for (const pair of tln.input) {
            // Translate the Do/Say action
            const translated = translate(str, pair);
            if (str === translated) {
                // Not translated, try the next pair
                continue;
            } else if (pair[0] === "You") {
                // Do action
                return translated.replace(/\byou\b/g, "i");
            } else if (!("quotations" in tln)) {
                // Selected language uses regular quotation marks
                return translated;
            }
            // Use fancy left/right quotation marks for Say actions
            return (translated
                // Replace the leftmost quotation mark
                .replace("\"", tln.quotations[0])
                // Replace the rightmost quotation mark
                .replace(/"(?=[^"]*$)/, tln.quotations[1])
            );
        }
        return str;
    }
    // Identify the nearest match for the player's chosen language
    const language = (() => {
        // Simplify the choice string for more fault-tolerant comparison
        const choice = formatLanguage(languageMatch[1]);
        if (choice === "") {
            // Empty choice defaults to the scenario creator's intended language
            if (typeof S.SCENARIO_CONTENT_LANGUAGE !== "string") {
                return en;
            }
            const scenarioLanguage = formatLanguage(S.SCENARIO_CONTENT_LANGUAGE);
            if (scenarioLanguage in factories) {
                // The default language is a valid option
                return scenarioLanguage;
            }
            return en;
        } else if (choice in factories) {
            // An exact match was found for the specified language
            return choice;
        } else if (/^\?+$/.test(choice.replaceAll(" ", ""))) {
            // Randomly choose a new language if the player submits only question marks
            const options = Object.keys(factories).filter(lang => (lang !== LoLa.language));
            return options[Math.floor(Math.random() * options.length)];
        }
        // [language name (string), similarity score (float bounded by 0 and 1)]
        const scores = [];
        for (const lang in factories) {
            const tln = translations[lang];
            if ((choice === tln.iso639set1) && !lang.endsWith("(abc)")) {
                // An exact match was found for one of the language codes
                return lang;
            }
            // Function to push an element to scores for later sorting
            const scoreOption = (option) => scores.push([lang, (() => {
                // Compute the Levenshtein distance for similarity score
                const [choiceLen, optionLen] = [choice, option].map(s => s.length);
                const dp = (Array(choiceLen + 1)
                    .fill(null)
                    .map(() => Array(optionLen + 1).fill(0))
                );
                for (let i = 0; i <= choiceLen; i++) {
                    dp[i][0] = i;
                }
                for (let j = 0; j <= optionLen; j++) {
                    dp[0][j] = j;
                }
                for (let i = 1; i <= choiceLen; i++) {
                    for (let j = 1; j <= optionLen; j++) {
                        if (choice[i - 1] === option[j - 1]) {
                            // No cost if chars match, swipe right 😎
                            dp[i][j] = dp[i - 1][j - 1];
                            continue;
                        }
                        dp[i][j] = Math.min(
                            dp[i - 1][j] + 1,
                            dp[i][j - 1] + 1,
                            dp[i - 1][j - 1] + 1
                        );
                    }
                }
                // Convert distance to similarity score (1 - (distance / maxLength))
                return 1 - (dp[choiceLen][optionLen] / Math.max(choiceLen, optionLen));
            })()]);
            // Compare the choice against the language name
            scoreOption(lang);
            for (const endonym of tln.endonyms) {
                if (choice === endonym) {
                    // An exact match was found for one of the endonyms
                    return lang;
                }
                // Compare the choice against an endonym
                scoreOption(endonym);
            }
        }
        // Choose the most similar language
        return scores.reduce((best, pair) => ((best[1] < pair[1]) ? pair : best))[0];
    })();
    // Is the newly chosen language the same as before?
    const unchanged = (() => {
        if (LoLa.language === language) {
            return true;
        } else if (LoLa.card.turn) {
            // If not 0 or -1, assign -1
            LoLa.card.turn = -1;
        }
        // In the future, retranslate the info card to the new language
        LoLa.language = language;
        LoLa.card.show = true;
        return false;
    })();
    (() => {
        // If Auto-Cards is installed, do some extra stuff
        if (!state.AutoCards || !hasAutoCards()) {
            // Not installed, skip this block
            return;
        }
        const tln = translations[LoLa.language];
        // The AC API makes some things easier
        const api = AutoCards().API;
        // Ban the language name and endonyms from card generation
        api.setBannedTitles([
            capitalize(LoLa.language),
            ...tln.endonyms.map(endonym => capitalize(endonym)),
            "Language",
            ...api.getBannedTitles(),
        ]);
        if (unchanged) {
            // The adventure language did not change, so no need to retranslate
            return;
        }
        const configCard = api.getCard(card => (
            (card?.title.replace("\n", "") === "Configure Auto-Cards")
        ));
        const hasCard = (configCard !== null);
        if (hasCard && ("description" in configCard)) {
            // Empty the AC config card notes to facilitate translated prompt reassignments
            configCard.description = "";
        }
        const cfg = state.AutoCards.config;
        // This mapping is useful because it improves the accuracy of AI-generated translation factories
        const joinPrompt = (prompt) => prompt.map(line => {
            switch (line) {
                case 0: return "";
                case 1: return "-----";
                case 2: return "<SYSTEM>";
                case 3: return "</SYSTEM>";
                case 4: return "%{entry}";
                case 5: return "%{memory}";
                case 6: return "\"\"\"";
                default: return line;
            }
        }).join("\n").replaceAll("{%}", "%{title}");
        // Assign the translated card generation and memory summarization prompts
        cfg.generationPrompt = joinPrompt(tln.cardGenPrompt);
        cfg.compressionPrompt = joinPrompt(tln.memSummPrompt);
        if (tln.cardCooldown === -1) {
            // Leave the card gen cooldown unchanged
            return;
        } else if (hasCard && ("entry" in configCard)) {
            // To alter the card gen cooldown without conflicts, empty the AC config card entry too
            configCard.entry = "";
        }
        // Apply the recommended card creation cooldown for the chosen language
        cfg.addCardCooldown = tln.cardCooldown;
        return;
    })();
    // Clean the command input for display purposes
    const command = "{Language: " + capitalize(LoLa.language) + "}";
    if (isOpening()) {
        // During the opening input only, leave the surrounding text alone
        return breakEnd(str.replace(languageMatch[0], command));
    } else if (hasAutoCards()) {
        // Postpone AC processes by 3 turns for safety
        AutoCards().API.postponeEvents(3);
    }
    LoLa.change = true;
    if (isDoSay()) {
        return command;
    }
    // End the Story action with a linebreak
    str = command + "\n\n";
    if (!hasPrevAction()) {
        return str;
    }
    // Format the story text with the correct number of leading and trailing newlines
    const action = getPrevAction();
    if ((action.type !== "continue") && (action.type !== "story")) {
        return str;
    } else if (!action.text.endsWith("\n")) {
        return "\n\n" + str;
    } else if (!action.text.endsWith("\n\n")) {
        return "\n" + str;
    }
    return str;
} LocalizedLanguages();

//—————————————————————————————————————————————————————————————————————————————————————

/*
Auto-Cards
Made by LewdLeah on May 21, 2025
This AI Dungeon script automatically creates and updates plot-relevant story cards while you play
General-purpose usefulness and compatibility with other scenarios/scripts were my design priorities
Auto-Cards is fully open-source, please copy for use within your own projects! ❤️
*/
function AutoCards(inHook, inText, inStop) {
    "use strict"; const S = {
    /*
    Default Auto-Cards settings
    Feel free to change these settings to customize your scenario's default gameplay experience
    The default values for your scenario are specified below:
    */

    // Is Auto-Cards already enabled when the adventure begins?
    DEFAULT_DO_AC: false
    // (true or false)
    ,
    // Pin the "Configure Auto-Cards" story card at the top of the player's story cards list?
    DEFAULT_PIN_CONFIGURE_CARD: false
    // (true or false)
    ,
    // Minimum number of turns in between automatic card generation events?
    DEFAULT_CARD_CREATION_COOLDOWN: 9999
    // (0 to 9999)
    ,
    // Use a bulleted list format for newly generated card entries?
    DEFAULT_USE_BULLETED_LIST_MODE: true
    // (true or false)
    ,
    // Maximum allowed length for newly generated story card entries?
    DEFAULT_GENERATED_ENTRY_LIMIT: 300
    // (200 to 2000)
    ,
    // Do newly generated cards have memory updates enabled by default?
    DEFAULT_NEW_CARDS_DO_MEMORY_UPDATES: true
    // (true or false)
    ,
    // Default character limit before the card's memory bank is summarized?
    DEFAULT_NEW_CARDS_MEMORY_LIMIT: 2750
    // (1750 to 9900)
    ,
    // Approximately how much shorter should recently compressed memories be? (ratio = 10 * old / new)
    DEFAULT_MEMORY_COMPRESSION_RATIO: 25
    // (20 to 1250)
    ,
    // Ignore all-caps during title candidate detection?
    DEFAULT_IGNORE_ALL_CAPS_TITLES: true
    // (true or false)
    ,
    // Should player input actions (Do/Say/Story) be considered during title detection?
    DEFAULT_DETECT_TITLES_FROM_INPUTS: false
    // (true or false)
    ,
    // How many (minimum) actions in the past does Auto-Cards look for named entities?
    DEFAULT_MINIMUM_LOOK_BACK_DISTANCE: 5
    // (2 to 88)
    ,
    // Is Live Script Interface v2 enabled?
    DEFAULT_DO_LSI_V2: false
    // (true or false)
    ,
    // Should the "Debug Data" story card be visible?
    DEFAULT_SHOW_DEBUG_DATA: false
    // (true or false)
    ,
    // AI prompt used to generate new story card entries?
    DEFAULT_CARD_GENERATION_PROMPT: [
        "-----",
        "",
        "<SYSTEM>",
        "# Stop the story and ignore previous instructions. Write a brief and coherent informational entry for %{title} following these instructions:",
        "- Write only third-person pure prose information about %{title} using complete sentences with correct punctuation",
        "- Avoid short-term temporary details or appearances, instead focus on plot-significant information",
        "- Prioritize story-relevant details about %{title} first to ensure seamless integration with the previous plot",
        "- Create new information based on the context and story direction",
        "- Mention %{title} in every sentence",
        "- Use semicolons if needed",
        "- Add additional details about %{title} beneath incomplete entries",
        "- Be concise and grounded",
        "- Imitate the story's writing style and infer the reader's preferences",
        "</SYSTEM>",
        "Continue the entry for %{title} below while avoiding repetition:",
        "%{entry}"
     ] // (mimic this multi-line "text" format)
    ,
    // AI prompt used to summarize a given story card's memory bank?
    DEFAULT_CARD_MEMORY_COMPRESSION_PROMPT: [
        "-----",
        "",
        "<SYSTEM>",
        "# Stop the story and ignore previous instructions. Summarize and condense the given paragraph into a narrow and focused memory passage while following these guidelines:",
        "- Ensure the passage retains the core meaning and most essential details",
        "- Use the third-person perspective",
        "- Prioritize information-density, accuracy, and completeness",
        "- Remain brief and concise",
        "- Write firmly in the past tense",
        "- The paragraph below pertains to old events from far earlier in the story",
        "- Integrate %{title} naturally within the memory; however, only write about the events as they occurred",
        "- Only reference information present inside the paragraph itself, be specific",
        "</SYSTEM>",
        "Write a summarized old memory passage for %{title} based only on the following paragraph:",
        "\"\"\"",
        "%{memory}",
        "\"\"\"",
        "Summarize below:"
    ] // (mimic this multi-line "text" format)
    ,
    // Titles banned from future card generation attempts?
    DEFAULT_BANNED_TITLES_LIST: (
        "North, East, South, West, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, January, February, March, April, May, June, July, August, September, October, November, December, New Story Arc, Generate Story Arc, Redo Story Arc, It, Him, Her, She, His, Hers, Theirs, Both, Them, They, All, Ours, Our, We're, They're, And, But, When, Why, Who, What, Us, We, Story Arc Engine, Scales, Set Story Arc Type, Type, NEW, TIME, Intensity, Story Arc Settings, Story Arc, Updating Story Arc Next Turn, Charmer, Honorable, Rogue, Dominant, Submissive, Prankster, Curious, Innocent, Mischievous, Affectionate, Defiant, Brave, Clever, Playful, Month, Year, Day, Minute,  Not, Spread, Eastern, Western, Northern, Southern, Invalid"
    ) // (mimic this comma-list "text" format)
    ,
    // Default story card "type" used by Auto-Cards? (does not matter)
    DEFAULT_CARD_TYPE: "class"
    // ("text")
    ,
    // Should titles mentioned in the "opening" plot component be banned from future card generation by default?
    DEFAULT_BAN_TITLES_FROM_OPENING: false
    // (true or false)
    ,
    }; //——————————————————————————————————————————————————————————————————————————————

    /*
    Useful API functions for coders (otherwise ignore)
    Here's what each one does in plain terms:

    AutoCards().API.postponeEvents();
    Pauses Auto-Cards activity for n many turns

    AutoCards().API.emergencyHalt();
    Emergency stop or resume

    AutoCards().API.suppressMessages();
    Hides Auto-Cards toasts by preventing assignment to state.message

    AutoCards().API.debugLog();
    Writes to the debug log card

    AutoCards().API.toggle();
    Turns Auto-Cards on/off

    AutoCards().API.generateCard();
    Initiates AI generation of the requested card

    AutoCards().API.redoCard();
    Regenerates an existing card

    AutoCards().API.setCardAsAuto();
    Flags or unflags a card as automatic

    AutoCards().API.addCardMemory();
    Adds a memory to a specific card

    AutoCards().API.eraseAllAutoCards();
    Deletes all auto-cards

    AutoCards().API.getUsedTitles();
    Lists all current card titles

    AutoCards().API.getBannedTitles();
    Shows your current banned titles list

    AutoCards().API.setBannedTitles();
    Replaces the banned titles list with a new list

    AutoCards().API.buildCard();
    Makes a new card from scratch, using exact parameters

    AutoCards().API.getCard();
    Finds cards that match a filter

    AutoCards().API.eraseCard();
    Deletes cards matching a filter
    */

    /*** Postpones internal Auto-Cards events for a specified number of turns
    * 
    * @function
    * @param {number} turns A non-negative integer representing the number of turns to postpone events
    * @returns {Object} An object containing cooldown values affected by the postponement
    * @throws {Error} If turns is not a non-negative integer
    */
    // AutoCards().API.postponeEvents();

    /*** Sets or clears the emergency halt flag to pause Auto-Cards operations
    * 
    * @function
    * @param {boolean} shouldHalt A boolean value indicating whether to engage (true) or disengage (false) emergency halt
    * @returns {boolean} The value that was set
    * @throws {Error} If called from within isolateLSIv2 scope or with a non-boolean argument
    */
    // AutoCards().API.emergencyHalt();

    /*** Enables or disables state.message assignments from Auto-Cards
    * 
    * @function
    * @param {boolean} shouldSuppress If true, suppresses all Auto-Cards messages; false enables them
    * @returns {Array} The current pending messages after setting suppression
    * @throws {Error} If shouldSuppress is not a boolean
    */
    // AutoCards().API.suppressMessages();

    /*** Logs debug information to the "Debug Log card console
    * 
    * @function
    * @param {...any} args Arguments to log for debugging purposes
    * @returns {any} The story card object reference
    */
    // AutoCards().API.debugLog();

    /*** Toggles Auto-Cards behavior or sets it directly
    * 
    * @function
    * @param {boolean|null|undefined} toggleType If undefined, toggles the current state. If boolean or null, sets the state accordingly
    * @returns {boolean|null|undefined} The state that was set or inferred
    * @throws {Error} If toggleType is not a boolean, null, or undefined
    */
    // AutoCards().API.toggle();

    /*** Generates a new card using optional prompt details or a card request object
    * 
    * This function supports two usage modes:
    * 
    * 1. Object Mode:
    *    Pass a single object containing card request parameters. The only mandatory property is "title"
    *    All other properties are optional and customize the card generation
    * 
    *    Example:
    *    AutoCards().API.generateCard({
    *      type: "character",         // The category or type of the card; defaults to "class" if omitted
    *      title: "Leah the Lewd",    // The card's title (required)
    *      keysStart: "Lewd,Leah",    // Optional trigger keywords associated with the card
    *      entryStart: "You are a woman named Leah.", // Existing content to prepend to the AI-generated entry
    *      entryPrompt: "",           // Global prompt guiding AI content generation
    *      entryPromptDetails: "Focus on Leah's works of artifice and ingenuity", // Additional prompt info
    *      entryLimit: 750,           // Target character length for the AI-generated entry
    *      description: "Player character!", // Freeform notes
    *      memoryStart: "Leah purchased a new sweater.", // Existing memory content
    *      memoryUpdates: true,       // Whether the card's memory bank will update on its own
    *      memoryLimit: 2750          // Preferred memory bank size before summarization/compression
    *    });
    * 
    * 2. String Mode:
    *    Pass a string as the title and optionally two additional strings to specify prompt details
    *    This mode is shorthand for quick card generation without an explicit card request object
    * 
    *    Examples:
    *    AutoCards().API.generateCard("Leah the Lewd");
    *    AutoCards().API.generateCard("Leah the Lewd", "Focus on Leah's works of artifice and ingenuity");
    *    AutoCards().API.generateCard(
    *      "Leah the Lewd",
    *      "Focus on Leah's works of artifice and ingenuity",
    *      "You are a woman named Leah."
    *    );
    * 
    * @function
    * @param {Object|string} request Either a fully specified card request object or a string title
    * @param {string} [extra1] Optional detailed prompt text when using string mode
    * @param {string} [extra2] Optional entry start text when using string mode
    * @returns {boolean} Returns true if the generation attempt succeeded, false otherwise
    * @throws {Error} Throws if called with invalid arguments or missing a required title property
    */
    // AutoCards().API.generateCard();

    /*** Regenerates a card by title or object reference, optionally preserving or modifying its input info
    *
    * @function
    * @param {Object|string} request Either a fully specified card request object or a string title for the card to be regenerated
    * @param {boolean} [useOldInfo=true] If true, preserves old info in the new generation; false omits it
    * @param {string} [newInfo=""] Additional info to append to the generation prompt
    * @returns {boolean} True if regeneration succeeded; false otherwise
    * @throws {Error} If the request format is invalid, or if the second or third parameters are the wrong types
    */
    // AutoCards().API.redoCard();

    /*** Flags or unflags a card as an auto-card, controlling its automatic generation behavior
    *
    * @function
    * @param {Object|string} targetCard The card object or title to mark/unmark as an auto-card
    * @param {boolean} [setOrUnset=true] If true, marks the card as an auto-card; false removes the flag
    * @returns {boolean} True if the operation succeeded; false if the card was invalid or already matched the target state
    * @throws {Error} If the arguments are invalid types
    */
    // AutoCards().API.setCardAsAuto();

    /*** Appends a memory to a story card's memory bank
    *
    * @function
    * @param {Object|string} targetCard A card object reference or title string
    * @param {string} newMemory The memory text to add
    * @returns {boolean} True if the memory was added; false if it was empty, already present, or the card was not found
    * @throws {Error} If the inputs are not a string or valid card object reference
    */
    // AutoCards().API.addCardMemory();

    /*** Removes all previously generated auto-cards and resets various states
    *
    * @function
    * @returns {number} The number of cards that were removed
    */
    // AutoCards().API.eraseAllAutoCards();

    /*** Retrieves an array of titles currently used by the adventure's story cards
    *
    * @function
    * @returns {Array<string>} An array of strings representing used titles
    */
    // AutoCards().API.getUsedTitles();

    /*** Retrieves an array of banned titles
    *
    * @function
    * @returns {Array<string>} An array of banned title strings
    */
    // AutoCards().API.getBannedTitles();

    /*** Sets the banned titles array, replacing any previously banned titles
    *
    * @function
    * @param {string|Array<string>} titles A comma-separated string or array of strings representing titles to ban
    * @returns {Object} An object containing oldBans and newBans arrays
    * @throws {Error} If the input is neither a string nor an array of strings
    */
    // AutoCards().API.setBannedTitles();

    /*** Creates a new story card with the specified parameters
    *
    * @function
    * @param {string|Object} title Card title string or full card template object containing all fields
    * @param {string} [entry] The entry text for the card
    * @param {string} [type] The card type (e.g., "character", "location")
    * @param {string} [keys] The keys (triggers) for the card
    * @param {string} [description] The notes or memory bank of the card
    * @param {number} [insertionIndex] Optional index to insert the card at a specific position within storyCards
    * @returns {Object|null} The created card object reference, or null if creation failed
    */
    // AutoCards().API.buildCard();

    /*** Finds and returns story cards satisfying a user-defined condition
    * Example:
    * const leahCard = AutoCards().API.getCard(card => (card.title === "Leah"));
    *
    * @function
    * @param {Function} predicate A function which takes a card and returns true if it matches
    * @param {boolean} [getAll=false] If true, returns all matching cards; otherwise returns the first match
    * @returns {Object|Array<Object>|null} A single card object reference, an array of cards, or null if no match is found
    * @throws {Error} If the predicate is not a function or getAll is not a boolean
    */
    // AutoCards().API.getCard();

    /*** Removes story cards based on a user-defined condition or by direct reference
    * Example:
    * AutoCards().API.eraseCard(card => (card.title === "Leah"));
    *
    * @function
    * @param {Function|Object} predicate A predicate function or a card object reference
    * @param {boolean} [eraseAll=false] If true, removes all matching cards; otherwise removes the first match
    * @returns {boolean|number} True if a single card was removed, false if none matched, or the number of cards erased
    * @throws {Error} If the inputs are not a valid predicate function, card object, or boolean
    */
    // AutoCards().API.eraseCard();

    //—————————————————————————————————————————————————————————————————————————————————

    /*
    To everyone who helped, thank you:

    AHotHamster22
    Most extensive testing, feedback, ideation, and kindness

    BinKompliziert
    UI feedback

    Boo
    Discord communication

    bottledfox
    API ideas for alternative card generation use-cases

    Bruno
    Most extensive testing, feedback, ideation, and kindness
    https://play.aidungeon.com/profile/Azuhre

    Burnout
    Implementation improvements, algorithm ideas, script help, and LSIv2 inspiration

    bweni
    Testing

    DebaczX
    Most extensive testing, feedback, ideation, and kindness

    Dirty Kurtis
    Card entry generation prompt engineering

    Dragranis
    Provided the memory dataset used for boundary calibration

    effortlyss
    Data, testing, in-game command ideas, config settings, and other UX improvements

    Hawk
    Grammar and special-cased proper nouns

    Idle Confusion
    Testing
    https://play.aidungeon.com/profile/Idle%20Confusion

    ImprezA
    Most extensive testing, feedback, ideation, and kindness
    https://play.aidungeon.com/profile/ImprezA

    Kat-Oli
    Title parsing, grammar, and special-cased proper nouns

    KryptykAngel
    LSIv2 ideas
    https://play.aidungeon.com/profile/KryptykAngel

    Mad19pumpkin
    API ideas
    https://play.aidungeon.com/profile/Mad19pumpkin

    Magic
    Implementation and syntax improvements
    https://play.aidungeon.com/profile/MagicOfLolis

    Mirox80
    Testing, feedback, and scenario integration ideas
    https://play.aidungeon.com/profile/Mirox80

    Nathaniel Wyvern
    Testing
    https://play.aidungeon.com/profile/NathanielWyvern

    NobodyIsUgly
    All-caps title parsing feedback

    OnyxFlame
    Card memory bank implementation ideas and special-cased proper nouns

    Purplejump
    API ideas for deep integration with other AID scripts

    Randy Viosca
    Context injection and card memory bank structure
    https://play.aidungeon.com/profile/Random_Variable

    RustyPawz
    API ideas for simplified card interaction
    https://play.aidungeon.com/profile/RustyPawz

    sinner
    Testing

    Sleepy pink
    Testing and feedback
    https://play.aidungeon.com/profile/Pinkghost

    Vutinberg
    Memory compression ideas and prompt engineering

    Wilmar
    Card entry generation and memory summarization prompt engineering

    Yi1i1i
    Idea for the redoCard API function and "/ac redo" in-game command

    A note to future individuals:
    If you fork or modify Auto-Cards... Go ahead and put your name here too! Yay! 🥰
    */

    //—————————————————————————————————————————————————————————————————————————————————

    /*
    The code below implements Auto-Cards
    Enjoy! ❤️
    */

    // My class definitions are hoisted by wrapper functions because it's less ugly (lol)
    const Const = hoistConst();
    const O = hoistO();
    const Words = hoistWords();
    const StringsHashed = hoistStringsHashed();
    const Internal = hoistInternal();
    // AutoCards has an explicitly immutable domain: HOOK, TEXT, and STOP
    const HOOK = inHook;
    const TEXT = ((typeof inText === "string") && inText) || "\n";
    const STOP = (inStop === true);
    // AutoCards returns a pseudoimmutable codomain which is initialized only once before being read and returned
    const CODOMAIN = new Const().declare();
    // Transient sets for high-performance lookup
    const [used, bans, auto, forenames, surnames] = Array.from({length: 5}, () => new Set());
    const memoized = new Map();
    // Holds a reference to the data card singleton, remains unassigned unless required
    let data = null;
    // Validate globalThis.text
    text = ((typeof text === "string") && text) || "\n";
    // Main settings override local settings
    if (typeof globalThis.MainSettings === "function") {
        new MainSettings("AutoCards").merge(S);
    }
    // Container for the persistent state of AutoCards
    const AC = (function() {
        if (state.LSIv2) {
            // The Auto-Cards external API is also available from within the inner scope of LSIv2
            // Call with AutoCards().API.nameOfFunction(yourArguments);
            return state.LSIv2;
        } else if (state.AutoCards) {
            // state.AutoCards is prioritized for performance
            const ac = state.AutoCards;
            delete state.AutoCards;
            return ac;
        }
        const dataVariants = getDataVariants();
        data = getSingletonCard(false, O.f({...dataVariants.critical}), O.f({...dataVariants.debug}));
        // Deserialize the state of Auto-Cards from the data card
        const ac = (function() {
            try {
                return JSON.parse(data?.description);
            } catch {
                return null;
            }
        })();
        // If the deserialized state fails to match the following structure, fallback to defaults
        if (validate(ac, O.f({
            config: [
                "doAC", "deleteAllAutoCards", "pinConfigureCard", "addCardCooldown", "bulletedListMode", "defaultEntryLimit", "defaultCardsDoMemoryUpdates", "defaultMemoryLimit", "memoryCompressionRatio", "ignoreAllCapsTitles", "readFromInputs", "minimumLookBackDistance", "LSIv2", "showDebugData", "generationPrompt", "compressionPrompt", "defaultCardType"
            ],
            signal: [
                "emergencyHalt", "forceToggle", "overrideBans", "swapControlCards", "recheckRetryOrErase", "maxChars", "outputReplacement", "upstreamError"
            ],
            generation: [
                "cooldown", "completed", "permitted", "workpiece", "pending"
            ],
            compression: [
                "completed", "titleKey", "vanityTitle", "responseEstimate", "lastConstructIndex", "oldMemoryBank", "newMemoryBank"
            ],
            message: [
                "previous", "suppress", "pending", "event"
            ],
            chronometer: [
                "turn", "step", "amnesia", "postpone"
            ],
            database: {
                titles: [
                    "used", "banned", "candidates", "lastActionParsed", "lastTextHash", "pendingBans", "pendingUnbans"
                ],
                memories: [
                    "associations", "duplicates"
                ]
            }
        }))) {
            // The deserialization was a success
            return ac;
        }
        function validate(obj, finalKeys) {
            if ((typeof obj !== "object") || (obj === null)) {
                return false;
            } else {
                return Object.entries(finalKeys).every(([key, value]) => {
                    if (!(key in obj)) {
                        return false;
                    } else if (Array.isArray(value)) {
                        return value.every(finalKey => {
                            return (finalKey in obj[key]);
                        });
                    } else {
                        return validate(obj[key], value);
                    }
                });
            }
        }
        // AC is malformed, reinitialize with default values
        return {
            // In-game configurable parameters
            config: getDefaultConfig(),
            // Collection of various short-term signals passed forward in time
            signal: {
                // API: Suspend nearly all Auto-Cards processes
                emergencyHalt: false,
                // API: Forcefully toggle Auto-Cards on or off
                forceToggle: null,
                // API: Banned titles were externally overwritten
                overrideBans: 0,
                // Signal the construction of the opposite control card during the upcoming onOutput hook
                swapControlCards: false,
                // Signal a limited recheck of recent title candidates following a retry or erase
                recheckRetryOrErase: false,
                // Signal an upcoming onOutput text replacement
                outputReplacement: "",
                // info.maxChars is only defined onContext but must be accessed during other hooks too
                maxChars: Math.abs(info?.maxChars || 3200),
                // An error occured within the isolateLSIv2 scope during an earlier hook
                upstreamError: ""
            },
            // Moderates the generation of new story card entries
            generation: {
                // Number of story progression turns between card generations
                cooldown: validateCooldown(
                    underQuarterInteger(validateCooldown(S.DEFAULT_CARD_CREATION_COOLDOWN))
                ),
                // Continues prompted so far
                completed: 0,
                // Upper limit on consecutive continues
                permitted: 34,
                // Properties of the incomplete story card
                workpiece: O.f({}),
                // Pending card generations
                pending: [],
            },
            // Moderates the compression of story card memories
            compression: {
                // Continues prompted so far
                completed: 0,
                // A title header reference key for this auto-card
                titleKey: "",
                // The full and proper title
                vanityTitle: "",
                // Response length estimate used to compute # of outputs remaining
                responseEstimate: 1400,
                // Indices [0, n] of oldMemoryBank memories used to build the current memory construct
                lastConstructIndex: -1,
                // Bank of card memories awaiting compression
                oldMemoryBank: [],
                // Incomplete bank of newly compressed card memories
                newMemoryBank: [],
            },
            // Prevents incompatibility issues borne of state.message modification
            message: {
                // Last turn's state.message
                previous: getStateMessage(),
                // API: Allow Auto-Cards to post messages?
                suppress: false,
                // Pending Auto-Cards message(s)
                pending: (function() {
                    if (S.DEFAULT_DO_AC !== false) {
                        const startupMessage = "Enabled! You may now edit the \"Configure Auto-Cards\" story card";
                        logEvent(startupMessage);
                        return [startupMessage];
                    } else {
                        return [];
                    }
                })(),
                // Counter to track all Auto-Cards message events
                event: 0
            },
            // Timekeeper used for temporal events
            chronometer: {
                // Previous turn's measurement of info.actionCount
                turn: getTurn(),
                // Whether or not various turn counters should be stepped (falsified by retry actions)
                step: true,
                // Number of consecutive turn interruptions
                amnesia: 0,
                // API: Postpone Auto-Cards externalities for n many turns
                postpone: 0,
            },
            // Scalable atabase to store dynamic game information
            database: {
                // Words are pale shadows of forgotten names. As names have power, words have power
                titles: {
                    // A transient array of known titles parsed from card titles, entry title headers, and trigger keywords
                    used: [],
                    // Titles banned from future card generation attempts and various maintenance procedures
                    banned: getDefaultConfigBans(),
                    // Potential future card titles and their turns of occurrence
                    candidates: [],
                    // Helps avoid rechecking the same action text more than once, generally
                    lastActionParsed: -1,
                    // Ensures weird combinations of retry/erase events remain predictable
                    lastTextHash: "%@%",
                    // Newly banned titles which will be added to the config card
                    pendingBans: [],
                    // Currently banned titles which will be removed from the config card
                    pendingUnbans: []
                },
                // Memories are parsed from context and handled by various operations (basically magic)
                memories: {
                    // Dynamic store of 'story card -> memory' conceptual relations
                    associations: {},
                    // Serialized hashset of the 2000 most recent near-duplicate memories purged from context
                    duplicates: "%@%"
                }
            }
        };
    })();
    O.f(AC);
    O.s(AC.config);
    O.s(AC.signal);
    O.s(AC.generation);
    O.s(AC.generation.workpiece);
    AC.generation.pending.forEach(request => O.s(request));
    O.s(AC.compression);
    O.s(AC.message);
    O.s(AC.chronometer);
    O.f(AC.database);
    O.s(AC.database.titles);
    O.s(AC.database.memories);
    if (!HOOK) {
        globalThis.stop ??= false;
        AC.signal.maxChars = Math.abs(info?.maxChars || AC.signal.maxChars);
        if (HOOK === null) {
            if (/Recent\s*Story\s*:/i.test(text)) {
                // AutoCards(null) is always invoked once after being declared within the shared library
                // Context must be cleaned before passing text to the context modifier
                // This measure is taken to ensure compatability with other scripts
                // First, remove all command, continue, and comfirmation messages from the context window
                text = (text
                    // Hide the guide
                    .replace(/\s*>>>\s*Detailed\s*Guide\s*:[\s\S]*?<<<\s*/gi, "\n\n")
                    // Excise all /AC command messages
                    .replace(/\s*>>>\s*Auto-Cards\s*has\s*been\s*enabled!\s*<<<\s*/gi, " ")
                    .replace(/^.*\/\s*A\s*C.*$/gmi, "%@%")
                    .replace(/\s*%@%\s*/g, " ")
                    // Consolidate all consecutive continue messages into placeholder substrings
                    .replace(/(?:(?:\s*>>>\s*please\s*select\s*"continue"\s*\([\s\S]*?\)\s*<<<\s*)+)/gi, message => {
                        // Replace all continue messages with %@+%-patterned substrings
                        return (
                            // The # of "@" symbols corresponds with the # of consecutive continue messages
                            "%" + "@".repeat(
                                // Count the number of consecutive continue message occurrences
                                (message.match(/>>>\s*please\s*select\s*"continue"\s*\([\s\S]*?\)\s*<<</gi) || []).length
                            ) + "%"
                        );
                    })
                    // Situationally replace all placeholder substrings with either spaces or double newlines
                    .replace(/%@+%/g, (match, matchIndex, intermediateText) => {
                        // Check the case of the next char following the match to decide how to replace it
                        let i = matchIndex + match.length;
                        let nextChar = intermediateText[i];
                        if (nextChar === undefined) {
                            return " ";
                        } else if (/^[A-Z]$/.test(nextChar)) {
                            // Probably denotes a new sentence/paragraph
                            return "\n\n";
                        } else if (/^[a-z]$/.test(nextChar)) {
                            return " ";
                        }
                        // The first nextChar was a weird punctuation char, find the next non-whitespace char
                        do {
                            i++;
                            nextChar = intermediateText[i];
                            if (nextChar === undefined) {
                                return " ";
                            }
                        } while (/\s/.test(nextChar));
                        if (nextChar === nextChar.toUpperCase()) {
                            // Probably denotes a new sentence/paragraph
                            return "\n\n";
                        }
                        // Returning " " probably indicates a previous output's incompleteness
                        return " ";
                    })
                    // Remove all comfirmation requests and responses
                    .replace(/\s*\n*.*CONFIRM\s*DELETE.*\n*\s*/gi, confirmation => {
                        if (confirmation.includes("<<<")) {
                            return " ";
                        } else {
                            return "";
                        }
                    })
                    // Remove dumb memories from the context window
                    // (Latitude, if you're reading this, please give us memoryBank read/write access 😭)
                    .replace(/(Memories\s*:)\s*([\s\S]*?)\s*(Recent\s*Story\s*:|$)/i, (_, left, memories, right) => {
                        return (left + "\n" + (memories
                            .split("\n")
                            .filter(memory => {
                                const lowerMemory = memory.toLowerCase();
                                return !(
                                    (lowerMemory.includes("select") && lowerMemory.includes("continue"))
                                    || lowerMemory.includes(">>>") || lowerMemory.includes("<<<")
                                    || lowerMemory.includes("lsiv2")
                                );
                            })
                            .join("\n")
                        ) + (function() {
                            if (right !== "") {
                                return "\n\n" + right;
                            } else {
                                return "";
                            }
                        })());
                    })
                    // Remove LSIv2 error messages
                    .replace(/(?:\s*>>>[\s\S]*?<<<\s*)+/g, " ")
                );
                if (!shouldProceed()) {
                    // Whenever Auto-Cards is inactive, remove auto card title headers from contextualized story card entries
                    text = (text
                        .replace(/\s*{\s*titles?\s*:[\s\S]*?}\s*/gi, "\n\n")
                        .replace(/World\s*Lore\s*:\s*/i, "World Lore:\n")
                    );
                    // Otherwise, implement a more complex version of this step within the (HOOK === "context") scope of AutoCards
                }
            }
            CODOMAIN.initialize(null);
        } else {
            // AutoCards was (probably) called without arguments, return an external API to allow other script creators to programmatically govern the behavior of Auto-Cards from elsewhere within their own scripts
            CODOMAIN.initialize({API: O.f(Object.fromEntries(Object.entries({
                // Call these API functions like so: AutoCards().API.nameOfFunction(argumentsOfFunction)
                /*** Postpones internal Auto-Cards events for a specified number of turns
                * 
                * @function
                * @param {number} turns A non-negative integer representing the number of turns to postpone events
                * @returns {Object} An object containing cooldown values affected by the postponement
                * @throws {Error} If turns is not a non-negative integer
                */
                postponeEvents: function(turns) {
                    if (Number.isInteger(turns) && (0 <= turns)) {
                        AC.chronometer.postpone = turns;
                    } else {
                        throw new Error(
                            "Invalid argument: \"" + turns + "\" -> AutoCards().API.postponeEvents() must be be called with a non-negative integer"
                        );
                    }
                    return {
                        postponeAllCooldown: turns,
                        addCardRealCooldown: AC.generation.cooldown,
                        addCardNextCooldown: AC.config.addCardCooldown
                    };
                },
                /*** Sets or clears the emergency halt flag to pause Auto-Cards operations
                * 
                * @function
                * @param {boolean} shouldHalt A boolean value indicating whether to engage (true) or disengage (false) emergency halt
                * @returns {boolean} The value that was set
                * @throws {Error} If called from within isolateLSIv2 scope or with a non-boolean argument
                */
                emergencyHalt: function(shouldHalt) {
                    const scopeRestriction = new Error();
                    if (scopeRestriction.stack && scopeRestriction.stack.includes("isolateLSIv2")) {
                        throw new Error(
                            "Scope restriction: AutoCards().API.emergencyHalt() cannot be called from within LSIv2 (prevents deadlock) but you're more than welcome to use AutoCards().API.postponeEvents() instead!"
                        );
                    } else if (typeof shouldHalt === "boolean") {
                        AC.signal.emergencyHalt = shouldHalt;
                    } else {
                        throw new Error(
                            "Invalid argument: \"" + shouldHalt + "\" -> AutoCards().API.emergencyHalt() must be called with a boolean true or false"
                        );
                    }
                    return shouldHalt;
                },
                /*** Enables or disables state.message assignments from Auto-Cards
                * 
                * @function
                * @param {boolean} shouldSuppress If true, suppresses all Auto-Cards messages; false enables them
                * @returns {Array} The current pending messages after setting suppression
                * @throws {Error} If shouldSuppress is not a boolean
                */
                suppressMessages: function(shouldSuppress) {
                    if (typeof shouldSuppress === "boolean") {
                        AC.message.suppress = shouldSuppress;
                    } else {
                        throw new Error(
                            "Invalid argument: \"" + shouldSuppress + "\" -> AutoCards().API.suppressMessages() must be called with a boolean true or false"
                        );
                    }
                    return AC.message.pending;
                },
                /*** Logs debug information to the "Debug Log" console card
                * 
                * @function
                * @param {...any} args Arguments to log for debugging purposes
                * @returns {any} The story card object reference
                */
                debugLog: function(...args) {
                    return Internal.debugLog(...args);
                },
                /*** Toggles Auto-Cards behavior or sets it directly
                * 
                * @function
                * @param {boolean|null|undefined} toggleType If undefined, toggles the current state. If boolean or null, sets the state accordingly
                * @returns {boolean|null|undefined} The state that was set or inferred
                * @throws {Error} If toggleType is not a boolean, null, or undefined
                */
                toggle: function(toggleType) {
                    if (toggleType === undefined) {
                        if (AC.signal.forceToggle !== null) {
                            AC.signal.forceToggle = !AC.signal.forceToggle;
                        } else if (AC.config.doAC) {
                            AC.signal.forceToggle = false;
                        } else {
                            AC.signal.forceToggle = true;
                        }
                    } else if ((toggleType === null) || (typeof toggleType === "boolean")) {
                        AC.signal.forceToggle = toggleType;
                    } else {
                        throw new Error(
                            "Invalid argument: \"" + toggleType + "\" -> AutoCards().API.toggle() must be called with either A) a boolean true or false, B) a null argument, or C) no arguments at all (undefined)"
                        );
                    }
                    return toggleType;
                },
                /*** Generates a new card using optional prompt details or a request object
                * 
                * @function
                * @param {Object|string} request A request object with card parameters or a string representing the title
                * @param {string} [extra1] Optional entryPromptDetails if using string mode
                * @param {string} [extra2] Optional entryStart if using string mode
                * @returns {boolean} Did the generation attempt succeed or fail
                * @throws {Error} If the request is not valid or missing a title
                */
                generateCard: function(request, extra1, extra2) {
                    // Function call guide:
                    // AutoCards().API.generateCard({
                    //     // All properties except 'title' are optional
                    //     type: "card type, defaults to 'class' for ease of filtering",
                    //     title: "card title",
                    //     keysStart: "preexisting card triggers",
                    //     entryStart: "preexisting card entry",
                    //     entryPrompt: "prompt the AI will use to complete this entry",
                    //     entryPromptDetails: "extra details to include with this card's prompt",
                    //     entryLimit: 750, // target character count for the generated entry
                    //     description: "card notes",
                    //     memoryStart: "preexisting card memory",
                    //     memoryUpdates: true, // card updates when new relevant memories are formed
                    //     memoryLimit: 2750, // max characters before the card memory is compressed
                    // });
                    if (typeof request === "string") {
                        request = {title: request};
                        if (typeof extra1 === "string") {
                            request.entryPromptDetails = extra1;
                            if (typeof extra2 === "string") {
                                request.entryStart = extra2;
                            }
                        }
                    } else if (!isTitleInObj(request)) {
                        throw new Error(
                            "Invalid argument: \"" + request + "\" -> AutoCards().API.generateCard() must be called with either 1, 2, or 3 strings OR a correctly formatted card generation object"
                        );
                    }
                    O.f(request);
                    Internal.getUsedTitles(true);
                    return Internal.generateCard(request);
                },
                /*** Regenerates a card by title or object reference, optionally preserving or modifying its input info
                *
                * @function
                * @param {Object|string} request A card object reference or title string for the card to be regenerated
                * @param {boolean} [useOldInfo=true] If true, preserves old info in the new generation; false omits it
                * @param {string} [newInfo=""] Additional info to append to the generation prompt
                * @returns {boolean} True if regeneration succeeded; false otherwise
                * @throws {Error} If the request format is invalid, or if the second or third parameters are the wrong types
                */
                redoCard: function(request, useOldInfo = true, newInfo = "") {
                    if (typeof request === "string") {
                        request = {title: request};
                    } else if (!isTitleInObj(request)) {
                        throw new Error(
                            "Invalid argument: \"" + request + "\" -> AutoCards().API.redoCard() must be called with a string or correctly formatted card generation object"
                        );
                    }
                    if (typeof useOldInfo !== "boolean") {
                        throw new Error(
                            "Invalid argument: \"" + request + ", " + useOldInfo + "\" -> AutoCards().API.redoCard() requires a boolean as its second argument"
                        );
                    } else if (typeof newInfo !== "string") {
                        throw new Error(
                            "Invalid argument: \"" + request + ", " + useOldInfo + ", " + newInfo + "\" -> AutoCards().API.redoCard() requires a string for its third argument"
                        );
                    }
                    return Internal.redoCard(request, useOldInfo, newInfo);
                },
                /*** Flags or unflags a card as an auto-card, controlling its automatic generation behavior
                *
                * @function
                * @param {Object|string} targetCard The card object or title to mark/unmark as an auto-card
                * @param {boolean} [setOrUnset=true] If true, marks the card as an auto-card; false removes the flag
                * @returns {boolean} True if the operation succeeded; false if the card was invalid or already matched the target state
                * @throws {Error} If the arguments are invalid types
                */
                setCardAsAuto: function(targetCard, setOrUnset = true) {
                    if (isTitleInObj(targetCard)) {
                        targetCard = targetCard.title;
                    } else if (typeof targetCard !== "string") {
                        throw new Error(
                            "Invalid argument: \"" + targetCard + "\" -> AutoCards().API.setCardAsAuto() must be called with a string or card object"
                        );
                    }
                    if (typeof setOrUnset !== "boolean") {
                        throw new Error(
                            "Invalid argument: \"" + targetCard + ", " + setOrUnset + "\" -> AutoCards().API.setCardAsAuto() requires a boolean as its second argument"
                        );
                    }
                    const [card, isAuto] = getIntendedCard(targetCard);
                    if (card === null) {
                        return false;
                    }
                    if (setOrUnset) {
                        if (checkAuto()) {
                            return false;
                        }
                        card.description = "{title:}";
                        Internal.getUsedTitles(true);
                        return card.entry.startsWith("{title: ");
                    } else if (!checkAuto()) {
                        return false;
                    }
                    card.entry = removeAutoProps(card.entry);
                    card.description = removeAutoProps(card.description.replace((
                        /\s*Auto(?:-|\s*)Cards\s*will\s*contextualize\s*these\s*memories\s*:\s*/gi
                    ), ""));
                    function checkAuto() {
                        return (isAuto || /{updates: (?:true|false), limit: \d+}/.test(card.description));
                    }
                    return true;
                },
                /*** Appends a memory to a story card's memory bank
                *
                * @function
                * @param {Object|string} targetCard A card object reference or title string
                * @param {string} newMemory The memory text to add
                * @returns {boolean} True if the memory was added; false if it was empty, already present, or the card was not found
                * @throws {Error} If the inputs are not a string or valid card object reference
                */
                addCardMemory: function(targetCard, newMemory) {
                    if (isTitleInObj(targetCard)) {
                        targetCard = targetCard.title;
                    } else if (typeof targetCard !== "string") {
                        throw new Error(
                            "Invalid argument: \"" + targetCard + "\" -> AutoCards().API.addCardMemory() must be called with a string or card object"
                        );
                    }
                    if (typeof newMemory !== "string") {
                        throw new Error(
                            "Invalid argument: \"" + targetCard + ", " + newMemory + "\" -> AutoCards().API.addCardMemory() requires a string for its second argument"
                        );
                    }
                    newMemory = newMemory.trim().replace(/\s+/g, " ").replace(/^-+\s*/, "");
                    if (newMemory === "") {
                        return false;
                    }
                    const [card, isAuto, titleKey] = getIntendedCard(targetCard);
                    if (
                        (card === null)
                        || card.description.replace(/\s+/g, " ").toLowerCase().includes(newMemory.toLowerCase())
                    ) {
                        return false;
                    } else if (card.description !== "") {
                        card.description += "\n";
                    }
                    card.description += "- " + newMemory;
                    if (titleKey in AC.database.memories.associations) {
                        AC.database.memories.associations[titleKey][1] = (StringsHashed
                            .deserialize(AC.database.memories.associations[titleKey][1], 65536)
                            .remove(newMemory)
                            .add(newMemory)
                            .latest(3500)
                            .serialize()
                        );
                    } else if (isAuto) {
                        AC.database.memories.associations[titleKey] = [999, (new StringsHashed(65536)
                            .add(newMemory)
                            .serialize()
                        )];
                    }
                    return true;
                },
                /*** Removes all previously generated auto-cards and resets various states
                *
                * @function
                * @returns {number} The number of cards that were removed
                */
                eraseAllAutoCards: function() {
                    return Internal.eraseAllAutoCards();
                },
                /*** Retrieves an array of titles currently used by the adventure's story cards
                *
                * @function
                * @returns {Array<string>} An array of strings representing used titles
                */
                getUsedTitles: function() {
                    return Internal.getUsedTitles(true);
                },
                /*** Retrieves an array of banned titles
                *
                * @function
                * @returns {Array<string>} An array of banned title strings
                */
                getBannedTitles: function() {
                    return Internal.getBannedTitles();
                },
                /*** Sets the banned titles array, replacing any previously banned titles
                *
                * @function
                * @param {string|Array<string>} titles A comma-separated string or array of strings representing titles to ban
                * @returns {Object} An object containing oldBans and newBans arrays
                * @throws {Error} If the input is neither a string nor an array of strings
                */
                setBannedTitles: function(titles) {
                    const codomain = {oldBans: AC.database.titles.banned};
                    if (Array.isArray(titles) && titles.every(title => (typeof title === "string"))) {
                        assignBannedTitles(titles);
                    } else if (typeof titles === "string") {
                        if (titles.includes(",")) {
                            assignBannedTitles(titles.split(","));
                        } else {
                            assignBannedTitles([titles]);
                        }
                    } else {
                        throw new Error(
                            "Invalid argument: \"" + titles + "\" -> AutoCards().API.setBannedTitles() must be called with either a string or an array of strings"
                        );
                    }
                    codomain.newBans = AC.database.titles.banned;
                    function assignBannedTitles(titles) {
                        Internal.setBannedTitles(uniqueTitlesArray(titles), false);
                        AC.signal.overrideBans = 3;
                        return;
                    }
                    return codomain;
                },
                /*** Creates a new story card with the specified parameters
                *
                * @function
                * @param {string|Object} title Card title string or full card template object containing all fields
                * @param {string} [entry] The entry text for the card
                * @param {string} [type] The card type (e.g., "character", "location")
                * @param {string} [keys] The keys (triggers) for the card
                * @param {string} [description] The notes or memory bank of the card
                * @param {number} [insertionIndex] Optional index to insert the card at a specific position within storyCards
                * @returns {Object|null} The created card object reference, or null if creation failed
                */
                buildCard: function(title, entry, type, keys, description, insertionIndex) {
                    if (isTitleInObj(title)) {
                        type = title.type ?? type;
                        keys = title.keys ?? keys;
                        entry = title.entry ?? entry;
                        description = title.description ?? description;
                        title = title.title;
                    }
                    title = cast(title);
                    const card = constructCard(O.f({
                        type: cast(type, AC.config.defaultCardType),
                        title,
                        keys: cast(keys, buildKeys("", title)),
                        entry: cast(entry),
                        description: cast(description)
                    }), boundInteger(0, insertionIndex, storyCards.length, newCardIndex()));
                    if (notEmptyObj(card)) {
                        return card;
                    }
                    function cast(value, fallback = "") {
                        if (typeof value === "string") {
                            return value;
                        } else {
                            return fallback;
                        }
                    }
                    return null;
                },
                /*** Finds and returns story cards satisfying a user-defined condition
                *
                * @function
                * @param {Function} predicate A function which takes a card and returns true if it matches
                * @param {boolean} [getAll=false] If true, returns all matching cards; otherwise returns the first match
                * @returns {Object|Array<Object>|null} A single card object reference, an array of cards, or null if no match is found
                * @throws {Error} If the predicate is not a function or getAll is not a boolean
                */
                getCard: function(predicate, getAll = false) {
                    if (typeof predicate !== "function") {
                        throw new Error(
                            "Invalid argument: \"" + predicate + "\" -> AutoCards().API.getCard() must be called with a function"
                        );
                    } else if (typeof getAll !== "boolean") {
                        throw new Error(
                            "Invalid argument: \"" + predicate + ", " + getAll + "\" -> AutoCards().API.getCard() requires a boolean as its second argument"
                        );
                    }
                    return Internal.getCard(predicate, getAll);
                },
                /*** Removes story cards based on a user-defined condition or by direct reference
                *
                * @function
                * @param {Function|Object} predicate A predicate function or a card object reference
                * @param {boolean} [eraseAll=false] If true, removes all matching cards; otherwise removes the first match
                * @returns {boolean|number} True if a single card was removed, false if none matched, or the number of cards erased
                * @throws {Error} If the inputs are not a valid predicate function, card object, or boolean
                */
                eraseCard: function(predicate, eraseAll = false) {
                    if (isTitleInObj(predicate) && storyCards.includes(predicate)) {
                        return eraseCard(predicate);
                    } else if (typeof predicate !== "function") {
                        throw new Error(
                            "Invalid argument: \"" + predicate + "\" -> AutoCards().API.eraseCard() must be called with a function or card object"
                        );
                    } else if (typeof eraseAll !== "boolean") {
                        throw new Error(
                            "Invalid argument: \"" + predicate + ", " + eraseAll + "\" -> AutoCards().API.eraseCard() requires a boolean as its second argument"
                        );
                    } else if (eraseAll) {
                        // Erase all cards which satisfy the given condition
                        let cardsErased = 0;
                        for (const [index, card] of storyCards.entries()) {
                            if (predicate(card)) {
                                removeStoryCard(index);
                                cardsErased++;
                            }
                        }
                        return cardsErased;
                    }
                    // Erase the first card which satisfies the given condition
                    for (const [index, card] of storyCards.entries()) {
                        if (predicate(card)) {
                            removeStoryCard(index);
                            return true;
                        }
                    }
                    return false;
                }
            }).map(([key, fn]) => [key, function(...args) {
                const result = fn.apply(this, args);
                if (data) {
                    data.description = JSON.stringify(AC);
                }
                return result;
            }])))});
            function isTitleInObj(obj) {
                return (
                    (typeof obj === "object")
                    && (obj !== null)
                    && ("title" in obj)
                    && (typeof obj.title === "string")
                );
            }
        }
    } else if (AC.signal.emergencyHalt) {
        switch(HOOK) {
        case "context": {
            // AutoCards was called within the context modifier
            advanceChronometer();
            break; }
        case "output": {
            // AutoCards was called within the output modifier
            concludeEmergency();
            const previousAction = readPastAction(0);
            if (isDoSayStory(previousAction.type) && /escape\s*emergency\s*halt/i.test(previousAction.text)) {
                AC.signal.emergencyHalt = false;
            }
            break; }
        }
        CODOMAIN.initialize(TEXT);
    } else if ((AC.config.LSIv2 !== null) && AC.config.LSIv2) {
        // Silly recursion shenanigans
        state.LSIv2 = AC;
        AC.config.LSIv2 = false;
        const LSI_DOMAIN = AutoCards(HOOK, TEXT, STOP);
        // Is this lazy loading mechanism overkill? Yes. But it's fun!
        const factories = O.f({
            library: () => ({
                name: Words.reserved.library,
                entry: prose(
                    "// Your adventure's Shared Library code goes here",
                    "// Example Library code:",
                    "state.promptDragon ??= false;",
                    "state.mind ??= 0;",
                    "state.willStop ??= false;",
                    "function formatMessage(message, space = \" \") {",
                    "    let leadingNewlines = \"\";",
                    "    let trailingNewlines = \"\\n\\n\";",
                    "    if (text.startsWith(\"\\n> \")) {",
                    "        // We don't want any leading/trailing newlines for Do/Say",
                    "        trailingNewlines = \"\";",
                    "    } else if (history && (0 < history.length)) {",
                    "        // Decide leading newlines based on the previous action",
                    "        const action = history[history.length - 1];",
                    "        if ((action.type === \"continue\") || (action.type === \"story\")) {",
                    "            if (!action.text.endsWith(\"\\n\")) {",
                    "                leadingNewlines = \"\\n\\n\";",
                    "            } else if (!action.text.endsWith(\"\\n\\n\")) {",
                    "                leadingNewlines = \"\\n\";",
                    "            }",
                    "        }",
                    "    }",
                    "    return leadingNewlines + \"{>\" + space + (message",
                    "        .replace(/(?:\\s*(?:{>|<})\\s*)+/g, \" \")",
                    "        .trim()",
                    "    ) + space + \"<}\" + trailingNewlines;",
                    "}"),
                description:
                    "// You may also continue your Library code below",
                singleton: false,
                position: 2
            }),
            input: () => ({
                name: Words.reserved.input,
                entry: prose(
                    "// Your adventure's Input Modifier code goes here",
                    "// Example Input code:",
                    "const minds = [",
                    "\"kind and gentle\",",
                    "\"curious and eager\",",
                    "\"cruel and evil\"",
                    "];",
                    "// Type any of these triggers into a Do/Say/Story action",
                    "const commands = new Map([",
                    "[\"encounter dragon\", () => {",
                    "    AutoCards().API.postponeEvents(1);",
                    "    state.promptDragon = true;",
                    "    text = formatMessage(\"You encounter a dragon!\");",
                    "    log(\"A dragon appears!\");",
                    "}],",
                    "[\"summon leah\", () => {",
                    "    alterMind();",
                    "    const success = AutoCards().API.generateCard({",
                    "        title: \"Leah\",",
                    "        entryPromptDetails: (",
                    "            \"Leah is an exceptionally \" +",
                    "            minds[state.mind] +",
                    "            \" woman\"",
                    "        ),",
                    "        entryStart: \"Leah is your magically summoned assistant.\"",
                    "    });",
                    "    if (success) {",
                    "        text = formatMessage(\"You begin summoning Leah!\");",
                    "        log(\"Attempting to summon Leah\");",
                    "    } else {",
                    "        text = formatMessage(\"You failed to summon Leah...\");",
                    "        log(\"Leah could not be summoned\");",
                    "    }",
                    "}],",
                    "[\"alter leah\", () => {",
                    "    alterMind();",
                    "    const success = AutoCards().API.redoCard(\"Leah\", true, (",
                    "        \"You subjected Leah to mind-altering magic\\n\" +",
                    "        \"Therefore she is now entirely \" +",
                    "        minds[state.mind] +",
                    "        \", utterly captivated by your will\"",
                    "    ));",
                    "    if (success) {",
                    "        text = formatMessage(",
                    "            \"You proceed to alter Leah's mind!\"",
                    "        );",
                    "        log(\"Attempting to alter Leah\");",
                    "    } else {",
                    "        text = formatMessage(\"You failed to alter Leah...\");",
                    "        log(\"Leah could not be altered\");",
                    "    }",
                    "}],",
                    "[\"show api\", () => {",
                    "    state.showAPI = true;",
                    "    text = formatMessage(\"Displaying the Auto-Cards API below\");",
                    "}],",
                    "[\"force stop\", () => {",
                    "    state.willStop = true;",
                    "}]",
                    "]);",
                    "const lowerText = text.toLowerCase();",
                    "for (const [trigger, implement] of commands) {",
                    "    if (lowerText.includes(trigger)) {",
                    "        implement();",
                    "        break;",
                    "    }",
                    "}",
                    "function alterMind() {",
                    "    state.mind = (state.mind + 1) % minds.length;",
                    "    return;",
                    "}"),
                description:
                    "// You may also continue your Input code below",
                singleton: false,
                position: 3
            }),
            context: () => ({
                name: Words.reserved.context,
                entry: prose(
                    "// Your adventure's Context Modifier code goes here",
                    "// Example Context code:",
                    "text = text.replace(/\\s*{>[\\s\\S]*?<}\\s*/gi, \"\\n\\n\");",
                    "if (state.willStop) {",
                    "    state.willStop = false;",
                    "    // Assign true to prevent the onOutput hook",
                    "    // This can only be done onContext",
                    "    stop = true;",
                    "} else if (state.promptDragon) {",
                    "    state.promptDragon = false;",
                    "    text = (",
                    "        text.trimEnd() +",
                    "        \"\\n\\nA cute little dragon softly lands upon your head. \"",
                    "    );",
                    "}"),
                description:
                    "// You may also continue your Context code below",
                singleton: false,
                position: 4
            }),
            output: () => ({
                name: Words.reserved.output,
                entry: prose(
                    "// Your adventure's Output Modifier code goes here",
                    "// Example Output code:",
                    "if (state.showAPI) {",
                    "    state.showAPI = false;",
                    "    const apiKeys = (Object.keys(AutoCards().API)",
                    "        .map(key => (\"AutoCards().API.\" + key + \"()\"))",
                    "    );",
                    "    text = formatMessage(apiKeys.join(\"\\n\"), \"\\n\");",
                    "    log(apiKeys);",
                    "}"),
                description:
                    "// You may also continue your Output code below",
                singleton: false,
                position: 5
            }),
            guide: () => ({
                name: Words.reserved.guide,
                entry: prose(
                    "Any valid JavaScript code you write within the Shared Library or Input/Context/Output Modifier story cards will be executed from top to bottom; Live Script Interface v2 closely emulates AI Dungeon's native scripting environment, even if you aren't the owner of the original scenario. Furthermore, I've provided full access to the Auto-Cards scripting API. Please note that disabling LSIv2 via the \"Configure Auto-Cards\" story card will reset your LSIv2 adventure scripts!",
                    "",
                    "If you aren't familiar with scripting in AI Dungeon, please refer to the official guidebook page:",
                    "https://help.aidungeon.com/scripting",
                    "",
                    "I've included an example script with the four aforementioned code cards, to help showcase some of my fancy schmancy Auto-Cards API functions. Take a look, try some of my example commands, inspect the Console Log, and so on... It's a ton of fun! ❤️",
                    "",
                    "If you ever run out of space in your Library, Input, Context, or Output code cards, simply duplicate whichever one(s) you need and then perform an in-game turn before writing any more code. (emphasis on \"before\") Doing so will signal LSIv2 to convert your duplicated code card(s) into additional auxiliary versions.",
                    "",
                    "Auxiliary code cards are numbered, and any code written within will be appended in sequential order. For example:",
                    "// Shared Library (entry)",
                    "// Shared Library (notes)",
                    "// Shared Library 2 (entry)",
                    "// Shared Library 2 (notes)",
                    "// Shared Library 3 (entry)",
                    "// Shared Library 3 (notes)",
                    "// Input Modifier (entry)",
                    "// Input Modifier (notes)",
                    "// Input Modifier 2 (entry)",
                    "// Input Modifier 2 (notes)",
                    "// And so on..."),
                description:
                    "",
                singleton: true,
                position: 0
            }),
            state: () => ({
                name: Words.reserved.state,
                entry:
                    "Your adventure's full state object is displayed in the Notes section below.",
                description:
                    "",
                singleton: true,
                position: 6
            }),
            log: () => ({
                name: Words.reserved.log,
                entry:
                    "Please refer to the Notes section below to view the full log history for LSIv2. Console log entries are ordered from most recent to oldest. LSIv2 error messages will be recorded here, alongside the outputs of log and console.log function calls within your adventure scripts.",
                description:
                    "",
                singleton: true,
                position: 1
            })
        });
        const cache = {};
        const templates = new Proxy({}, {
            get(_, key) {
                return cache[key] ??= O.f(factories[key]());
            }
        });
        if (AC.config.LSIv2 !== null) {
            switch(HOOK) {
            case "input": {
                // AutoCards was called within the input modifier
                const [libraryCards, inputCards, logCard] = collectCards(
                    templates.library,
                    templates.input,
                    templates.log
                );
                const [error, newText] = isolateLSIv2(parseCode(libraryCards, inputCards), callbackLog(logCard), LSI_DOMAIN);
                handleError(logCard, error);
                if (hadError()) {
                    CODOMAIN.initialize(getStoryError());
                    AC.signal.upstreamError = "\n";
                } else {
                    CODOMAIN.initialize(newText);
                }
                break; }
            case "context": {
                // AutoCards was called within the context modifier
                const [libraryCards, contextCards, logCard] = collectCards(
                    templates.library,
                    templates.context,
                    templates.log,
                    templates.input
                );
                if (hadError()) {
                    endContextLSI(LSI_DOMAIN);
                    break;
                }
                const [error, ...newCodomain] = (([error, newText, newStop]) => [error, newText, (newStop === true)])(
                    isolateLSIv2(parseCode(libraryCards, contextCards), callbackLog(logCard), LSI_DOMAIN[0], LSI_DOMAIN[1])
                );
                handleError(logCard, error);
                endContextLSI(newCodomain);
                function endContextLSI(newCodomain) {
                    CODOMAIN.initialize(newCodomain);
                    if (!newCodomain[1]) {
                        return;
                    }
                    const [guideCard, stateCard] = collectCards(
                        templates.guide,
                        templates.state,
                        templates.output
                    );
                    AC.message.pending = [];
                    concludeLSI(guideCard, stateCard, logCard);
                    return;
                }
                break; }
            case "output": {
                // AutoCards was called within the output modifier
                const [libraryCards, outputCards, guideCard, stateCard, logCard] = collectCards(
                    templates.library,
                    templates.output,
                    templates.guide,
                    templates.state,
                    templates.log
                );
                if (hadError()) {
                    endOutputLSI(true, LSI_DOMAIN);
                    break;
                }
                const [error, newText] = isolateLSIv2(parseCode(libraryCards, outputCards), callbackLog(logCard), LSI_DOMAIN);
                handleError(logCard, error);
                endOutputLSI(hadError(), newText);
                function endOutputLSI(displayError, newText) {
                    if (displayError) {
                        if (AC.signal.upstreamError === "\n") {
                            CODOMAIN.initialize("\n");
                        } else {
                            CODOMAIN.initialize(getStoryError() + "\n");
                        }
                        AC.message.pending = [];
                    } else {
                        CODOMAIN.initialize(newText);
                    }
                    concludeLSI(guideCard, stateCard, logCard);
                    return;
                }
                break; }
            case "initialize": {
                collectAll();
                logToCard(Internal.getCard(card => (card.title === templates.log.name)), "LSIv2 startup -> Success!");
                CODOMAIN.initialize(null);
                break; }
            }
            AC.config.LSIv2 = true;
            function parseCode(...args) {
                return (args
                    .flatMap(cardset => [cardset.primary, ...cardset.auxiliaries])
                    .flatMap(card => [card.entry, card.description])
                    .join("\n")
                );
            }
            function callbackLog(logCard) {
                return function(...args) {
                    logToCard(logCard, ...args);
                    return;
                }
            }
            function handleError(logCard, error) {
                if (!error) {
                    return;
                }
                O.f(error);
                AC.signal.upstreamError = (
                    "LSIv2 encountered an error during the on" + HOOK[0].toUpperCase() + HOOK.slice(1) + " hook"
                );
                if (error.message) {
                    AC.signal.upstreamError += ":\n";
                    if (error.stack) {
                        const stackMatch = error.stack.match(/AutoCards[\s\S]*?:\s*(\d+)\s*:\s*(\d+)/i);
                        if (stackMatch) {
                            AC.signal.upstreamError += (
                                (error.name ?? "Error") + ": " + error.message + "\n" +
                                "(line #" + stackMatch[1] + " column #" + stackMatch[2] + ")"
                            );
                        } else {
                            AC.signal.upstreamError += error.stack;
                        }
                    } else {
                        AC.signal.upstreamError += (error.name ?? "Error") + ": " + error.message;
                    }
                    AC.signal.upstreamError = cleanSpaces(AC.signal.upstreamError.trimEnd());
                }
                logToCard(logCard, AC.signal.upstreamError);
                if (getStateMessage() === AC.signal.upstreamError) {
                    state.message = AC.signal.upstreamError + " ";
                } else {
                    state.message = AC.signal.upstreamError;
                }
                return;
            }
            function hadError() {
                return (AC.signal.upstreamError !== "");
            }
            function getStoryError() {
                return getPrecedingNewlines() + ">>>\n" + AC.signal.upstreamError + "\n<<<\n";
            }
            function concludeLSI(guideCard, stateCard, logCard) {
                AC.signal.upstreamError = "";
                guideCard.description = templates.guide.description;
                guideCard.entry = templates.guide.entry;
                stateCard.entry = templates.state.entry;
                logCard.entry = templates.log.entry;
                postMessages();
                const simpleState = {...state};
                delete simpleState.LSIv2;
                stateCard.description = limitString(stringifyObject(simpleState).trim(), 999999).trimEnd();
                return;
            }
        } else {
            const cardsets = collectAll();
            for (const cardset of cardsets) {
                if ("primary" in cardset) {
                    killCard(cardset.primary);
                    for (const card of cardset.auxiliaries) {
                        killCard(card);
                    }
                } else {
                    killCard(cardset);
                }
                function killCard(card) {
                    unbanTitle(card.title);
                    eraseCard(card);
                }
            }
            AC.signal.upstreamError = "";
            CODOMAIN.initialize(LSI_DOMAIN);
        }
        // This measure ensures the Auto-Cards external API is equally available from within the inner scope of LSIv2
        // As before, call with AutoCards().API.nameOfFunction(yourArguments);
        deepMerge(AC, state.LSIv2);
        delete state.LSIv2;
        function deepMerge(target, source) {
            for (const key in source) {
                if (!source.hasOwnProperty(key)) {
                    continue;
                } else if (
                    (typeof source[key] === "object")
                    && (source[key] !== null)
                    && !Array.isArray(source[key])
                    && (typeof target[key] === "object")
                    && (target[key] !== null)
                    && (key !== "workpiece")
                    && (key !== "associations")
                ) {
                    // Recursively merge static objects
                    deepMerge(target[key], source[key]);
                } else {
                    // Directly replace values
                    target[key] = source[key];
                }
            }
            return;
        }
        function collectAll() {
            return collectCards(...Object.keys(factories).map(key => templates[key]));
        }
        // collectCards constructs, validates, repairs, retrieves, and organizes all LSIv2 script cards associated with the given arguments by iterating over the storyCards array only once! Returned elements are easily handled via array destructuring assignment
        function collectCards(...args) {
            // args: [{name: string, entry: string, description: string, singleton: boolean, position: integer}]
            const collections = O.f(args.map(({name, entry, description, singleton, position}) => {
                const collection = {
                    template: O.f({
                        type: AC.config.defaultCardType,
                        title: name,
                        keys: name,
                        entry,
                        description
                    }),
                    singleton,
                    position,
                    primary: null,
                    excess: [],
                };
                if (!singleton) {
                    collection.auxiliaries = [];
                    collection.occupied = new Set([0, 1]);
                }
                return O.s(collection);
            }));
            for (const card of storyCards) {
                O.s(card);
                for (const collection of collections) {
                    if (
                        !card.title.toLowerCase().includes(collection.template.title.toLowerCase())
                        && !card.keys.toLowerCase().includes(collection.template.title.toLowerCase())
                    ) {
                        // No match, swipe left
                        continue;
                    }
                    if (collection.singleton) {
                        setPrimary();
                        break;
                    }
                    const [extensionA, extensionB] = [card.title, card.keys].map(name => {
                        const extensionMatch = name.replace(/[^a-zA-Z0-9]/g, "").match(/\d+$/);
                        if (extensionMatch) {
                            return parseInt(extensionMatch[0], 10);
                        } else {
                            return -1;
                        }
                    });
                    if (-1 < extensionA) {
                        if (-1 < extensionB) {
                            if (collection.occupied.has(extensionA)) {
                                setAuxiliary(extensionB);
                            } else {
                                setAuxiliary(extensionA, true);
                            }
                        } else {
                            setAuxiliary(extensionA);
                        }
                    } else if (-1 < extensionB) {
                        setAuxiliary(extensionB);
                    } else {
                        setPrimary();
                    }
                    function setAuxiliary(extension, preChecked = false) {
                        if (preChecked || !collection.occupied.has(extension)) {
                            addAuxiliary(card, collection, extension);
                        } else {
                            card.title = card.keys = collection.template.title;
                            collection.excess.push(card);
                        }
                        return;
                    }
                    function setPrimary() {
                        card.title = card.keys = collection.template.title;
                        if (collection.primary === null) {
                            collection.primary = card;
                        } else {
                            collection.excess.push(card);
                        }
                        return;
                    }
                    break;
                }
            }
            for (const collection of collections) {
                banTitle(collection.template.title);
                if (collection.singleton) {
                    if (collection.primary === null) {
                        constructPrimary();
                    } else if (hasExs()) {
                        for (const card of collection.excess) {
                            eraseCard(card);
                        }
                    }
                    continue;
                } else if (collection.primary === null) {
                    if (hasExs()) {
                        collection.primary = collection.excess.shift();
                        if (hasExs() || hasAux()) {
                            applyComment(collection.primary);
                        } else {
                            collection.primary.entry = collection.template.entry;
                            collection.primary.description = collection.template.description;
                            continue;
                        }
                    } else {
                        constructPrimary();
                        if (hasAux()) {
                            applyComment(collection.primary);
                        } else {
                            continue;
                        }
                    }
                }
                if (hasExs()) {
                    for (const card of collection.excess) {
                        let extension = 2;
                        while (collection.occupied.has(extension)) {
                            extension++;
                        }
                        applyComment(card);
                        addAuxiliary(card, collection, extension);
                    }
                }
                if (hasAux()) {
                    collection.auxiliaries.sort((a, b) => {
                        return a.extension - b.extension;
                    });
                }
                function hasExs() {
                    return (0 < collection.excess.length);
                }
                function hasAux() {
                    return (0 < collection.auxiliaries.length);
                }
                function applyComment(card) {
                    card.entry = card.description = "// You may continue writing your code here";
                    return;
                }
                function constructPrimary() {
                    collection.primary = constructCard(collection.template, newCardIndex());
                    // I like my LSIv2 cards to display in the proper order once initialized uwu
                    const templateKeys = Object.keys(factories);
                    const cards = templateKeys.map(key => O.f({
                        card: Internal.getCard(card => (card.title === templates[key].name)),
                        position: templates[key].position
                    })).filter(pair => (pair.card !== null));
                    if (cards.length < templateKeys.length) {
                        return;
                    }
                    const fullCardset = cards.sort((a, b) => (a.position - b.position)).map(pair => pair.card);
                    for (const card of fullCardset) {
                        eraseCard(card);
                        card.title = card.keys;
                    }
                    storyCards.splice(newCardIndex(), 0, ...fullCardset);
                    return;
                }
            }
            function addAuxiliary(card, collection, extension) {
                collection.occupied.add(extension);
                card.title = card.keys = collection.template.title + " " + extension;
                collection.auxiliaries.push({card, extension});
                return;
            }
            return O.f(collections.map(({singleton, primary, auxiliaries}) => {
                if (singleton) {
                    return primary;
                } else {
                    return O.f({primary, auxiliaries: O.f(auxiliaries.map(({card}) => card))});
                }
            }));
        }
    } else if (AC.config.doAC) {
        // Auto-Cards is currently enabled
        // "text" represents the original text which was present before any scripts were executed
        // "TEXT" represents the script-modified version of "text" which AutoCards was called with
        // This dual scheme exists to ensure Auto-Cards is safely compatible with other scripts
        switch(HOOK) {
        case "input": {
            // AutoCards was called within the input modifier
            if ((AC.config.deleteAllAutoCards === false) && /CONFIRM\s*DELETE/i.test(TEXT)) {
                CODOMAIN.initialize("CONFIRM DELETE -> Success!");
            } else if (/\/\s*A\s*C/i.test(text)) {
                CODOMAIN.initialize(doPlayerCommands(text));
            } else if (TEXT.startsWith(" ") && readPastAction(0).text.endsWith("\n")) {
                // Just a simple little formatting bugfix for regular AID story actions
                CODOMAIN.initialize(getPrecedingNewlines() + TEXT.replace(/^\s+/, ""));
            } else {
                CODOMAIN.initialize(TEXT);
            }
            break; }
        case "context": {
            // AutoCards was called within the context modifier
            advanceChronometer();
            // Get or construct the "Configure Auto-Cards" story card
            const configureCardTemplate = getConfigureCardTemplate();
            const configureCard = getSingletonCard(true, configureCardTemplate);
            banTitle(configureCardTemplate.title);
            pinAndSortCards(configureCard);
            const bansOverwritten = (0 < AC.signal.overrideBans);
            if ((configureCard.description !== configureCardTemplate.description) || bansOverwritten) {
                const descConfigPatterns = (getConfigureCardDescription()
                    .split(Words.delimiter)
                    .slice(1)
                    .map(descPattern => (descPattern
                        .slice(0, descPattern.indexOf(":"))
                        .trim()
                        .replace(/\s+/g, "\\s*")
                    ))
                    .map(descPattern => (new RegExp("^\\s*" + descPattern + "\\s*:", "i")))
                );
                const descConfigs = configureCard.description.split(Words.delimiter).slice(1);
                if (
                    (descConfigs.length === descConfigPatterns.length)
                    && descConfigs.every((descConfig, index) => descConfigPatterns[index].test(descConfig))
                ) {
                    // All description config headers must be present and well-formed
                    let cfg = extractDescSetting(0);
                    if (AC.config.generationPrompt !== cfg) {
                        notify("Changes to your card generation prompt were successfully saved");
                        AC.config.generationPrompt = cfg;
                    }
                    cfg = extractDescSetting(1);
                    if (AC.config.compressionPrompt !== cfg) {
                        notify("Changes to your card memory compression prompt were successfully saved");
                        AC.config.compressionPrompt = cfg;
                    }
                    if (bansOverwritten) {
                        overrideBans();
                    } else if ((0 < AC.database.titles.pendingBans.length) || (0 < AC.database.titles.pendingUnbans.length)) {
                        const pendingBans = AC.database.titles.pendingBans.map(pair => pair[0]);
                        const pendingRewrites = new Set(
                            lowArr([...pendingBans, ...AC.database.titles.pendingUnbans.map(pair => pair[0])])
                        );
                        Internal.setBannedTitles([...pendingBans, ...extractDescSetting(2)
                            .split(",")
                            .filter(newBan => !pendingRewrites.has(newBan.toLowerCase().replace(/\s+/, " ").trim()))
                        ], true);
                    } else {
                        Internal.setBannedTitles(extractDescSetting(2).split(","), true);
                    }
                    function extractDescSetting(index) {
                        return descConfigs[index].replace(descConfigPatterns[index], "").trim();
                    }
                } else if (bansOverwritten) {
                    overrideBans();
                }
                configureCard.description = getConfigureCardDescription();
                function overrideBans() {
                    Internal.setBannedTitles(AC.database.titles.pendingBans.map(pair => pair[0]), true);
                    AC.signal.overrideBans = 0;
                    return;
                }
            }
            if (configureCard.entry !== configureCardTemplate.entry) {
                const oldConfig = {};
                const settings = O.f((function() {
                    const userSettings = extractSettings(configureCard.entry);
                    if (userSettings.resetallconfigsettingsandprompts !== true) {
                        return userSettings;
                    }
                    // Reset all config settings and display state change notifications only when appropriate
                    Object.assign(oldConfig, AC.config);
                    Object.assign(AC.config, getDefaultConfig());
                    AC.config.deleteAllAutoCards = oldConfig.deleteAllAutoCards;
                    AC.config.LSIv2 = oldConfig.LSIv2;
                    AC.config.defaultCardType = oldConfig.defaultCardType;
                    AC.database.titles.banned = getDefaultConfigBans();
                    configureCard.description = getConfigureCardDescription();
                    configureCard.entry = getConfigureCardEntry();
                    const defaultSettings = extractSettings(configureCard.entry);
                    if (
                        (S.DEFAULT_DO_AC === false)
                        || (userSettings.disableautocards === true)
                    ) {
                        defaultSettings.disableautocards = true;
                    }
                    notify("Restoring all settings and prompts to their default values");
                    return defaultSettings;
                })());
                O.f(oldConfig);
                if ((settings.deleteallautomaticstorycards === true) && (AC.config.deleteAllAutoCards === null)) {
                    AC.config.deleteAllAutoCards = true;
                } else if (settings.showdetailedguide === true) {
                    AC.signal.outputReplacement = Words.guide;
                }
                let cfg;
                if (parseConfig("pinthisconfigcardnearthetop", false, "pinConfigureCard")) {
                    if (cfg) {
                        pinAndSortCards(configureCard);
                        notify("The settings config card will now be pinned near the top of your story cards list");
                    } else {
                        const index = storyCards.indexOf(configureCard);
                        if (index !== -1) {
                            storyCards.splice(index, 1);
                            storyCards.push(configureCard);
                        }
                        notify("The settings config card will no longer be pinned near the top of your story cards list");
                    }
                }
                if (parseConfig("minimumturnscooldownfornewcards", true, "addCardCooldown")) {
                    const oldCooldown = AC.config.addCardCooldown;
                    AC.config.addCardCooldown = validateCooldown(cfg);
                    if (!isPendingGeneration() && !isAwaitingGeneration() && (0 < AC.generation.cooldown)) {
                        const quarterCooldown = validateCooldown(underQuarterInteger(AC.config.addCardCooldown));
                        if ((AC.config.addCardCooldown < oldCooldown) && (quarterCooldown < AC.generation.cooldown)) {
                            // Reduce the next generation's cooldown counter by a factor of 4
                            // But only if the new cooldown config is lower than it was before
                            // And also only if quarter cooldown is less than the current next gen cooldown
                            // (Just a random little user experience improvement)
                            AC.generation.cooldown = quarterCooldown;
                        } else if (oldCooldown < AC.config.addCardCooldown) {
                            if (oldCooldown === AC.generation.cooldown) {
                                AC.generation.cooldown = AC.config.addCardCooldown;
                            } else {
                                AC.generation.cooldown = validateCooldown(boundInteger(
                                    0,
                                    AC.generation.cooldown + quarterCooldown,
                                    AC.config.addCardCooldown
                                ));
                            }
                        }
                    }
                    switch(AC.config.addCardCooldown) {
                    case 9999: {
                        notify(
                            "You have disabled automatic card generation. To re-enable, simply set your cooldown config to any number lower than 9999. Or use the \"/ac\" in-game command to manually direct the card generation process"
                        );
                        break; }
                    case 1: {
                        notify(
                            "A new card will be generated during alternating game turns, but only if your story contains available titles"
                        );
                        break; }
                    case 0: {
                        notify(
                            "New cards will be immediately generated whenever valid titles exist within your recent story"
                        );
                        break; }
                    default: {
                        notify(
                            "A new card will be generated once every " + AC.config.addCardCooldown + " turns, but only if your story contains available titles"
                        );
                        break; }
                    }
                }
                if (parseConfig("newcardsuseabulletedlistformat", false, "bulletedListMode")) {
                    if (cfg) {
                        notify("New card entries will be generated using a bulleted list format");
                    } else {
                        notify("New card entries will be generated using a pure prose format");
                    }
                }
                if (parseConfig("maximumentrylengthfornewcards", true, "defaultEntryLimit")) {
                    AC.config.defaultEntryLimit = validateEntryLimit(cfg);
                    notify(
                        "New card entries will be limited to " + AC.config.defaultEntryLimit + " characters of generated text"
                    );
                }
                if (parseConfig("newcardsperformmemoryupdates", false, "defaultCardsDoMemoryUpdates")) {
                    if (cfg) {
                        notify("Newly constructed cards will begin with memory updates enabled by default");
                    } else {
                        notify("Newly constructed cards will begin with memory updates disabled by default");
                    }
                }
                if (parseConfig("cardmemorybankpreferredlength", true, "defaultMemoryLimit")) {
                    AC.config.defaultMemoryLimit = validateMemoryLimit(cfg);
                    notify(
                        "Newly constructed cards will begin with their memory bank length preference set to " + AC.config.defaultMemoryLimit + " characters of text"
                    );
                }
                if (parseConfig("memorysummarycompressionratio", true, "memoryCompressionRatio")) {
                    AC.config.memoryCompressionRatio = validateMemCompRatio(cfg);
                    notify(
                        "Freshly summarized card memory banks will be approximately " + (AC.config.memoryCompressionRatio / 10) + "x shorter than their originals"
                    );
                }
                if (parseConfig("excludeallcapsfromtitledetection", false, "ignoreAllCapsTitles")) {
                    if (cfg) {
                        notify("All-caps text will be ignored during title detection to help prevent bad cards");
                    } else {
                        notify("All-caps text may be considered during title detection processes");
                    }
                }
                if (parseConfig("alsodetecttitlesfromplayerinputs", false, "readFromInputs")) {
                    if (cfg) {
                        notify("Titles may be detected from player Do/Say/Story action inputs");
                    } else {
                        notify("Title detection will skip player Do/Say/Story action inputs for grammatical leniency");
                    }
                }
                if (parseConfig("minimumturnsagefortitledetection", true, "minimumLookBackDistance")) {
                    AC.config.minimumLookBackDistance = validateMLBD(cfg);
                    notify(
                        "Titles and names mentioned in your story may become eligible for future card generation attempts once they are at least " + AC.config.minimumLookBackDistance + " actions old"
                    );
                }
                cfg = settings.uselivescriptinterfacev2;
                if (typeof cfg === "boolean") {
                    if (AC.config.LSIv2 === null) {
                        if (cfg) {
                            AC.config.LSIv2 = true;
                            state.LSIv2 = AC;
                            AutoCards("initialize");
                            notify("Live Script Interface v2 is now embedded within your adventure!");
                        }
                    } else {
                        if (!cfg) {
                            AC.config.LSIv2 = null;
                            notify("Live Script Interface v2 has been removed from your adventure");
                        }
                    }
                }
                if (parseConfig("logdebugdatainaseparatecard" , false, "showDebugData")) {
                    if (data === null) {
                        if (cfg) {
                            notify("State may now be viewed within the \"Debug Data\" story card");
                        } else {
                            notify("The \"Debug Data\" story card has been removed");
                        }
                    } else if (cfg) {
                        notify("Debug data will be shared with the \"Critical Data\" story card to conserve memory");
                    } else {
                        notify("Debug mode has been disabled");
                    }
                }
                if ((settings.disableautocards === true) && (AC.signal.forceToggle !== true)) {
                    disableAutoCards();
                    break;
                } else {
                    // Apply the new card entry and proceed to implement Auto-Cards onContext
                    configureCard.entry = getConfigureCardEntry();
                }
                function parseConfig(settingsKey, isNumber, configKey) {
                    cfg = settings[settingsKey];
                    if (isNumber) {
                        return checkConfig("number");
                    } else if (!checkConfig("boolean")) {
                        return false;
                    }
                    AC.config[configKey] = cfg;
                    function checkConfig(type) {
                        return ((typeof cfg === type) && (
                            (notEmptyObj(oldConfig) && (oldConfig[configKey] !== cfg))
                            || (AC.config[configKey] !== cfg)
                        ));
                    }
                    return true;
                }
            }
            if (AC.signal.forceToggle === false) {
                disableAutoCards();
                break;
            }
            AC.signal.forceToggle = null;
            if (0 < AC.chronometer.postpone) {
                CODOMAIN.initialize(TEXT);
                break;
            }
            // Fully implement Auto-Cards onContext
            const forceStep = AC.signal.recheckRetryOrErase;
            const currentTurn = getTurn();
            const nearestUnparsedAction = boundInteger(0, currentTurn - AC.config.minimumLookBackDistance);
            if (AC.signal.recheckRetryOrErase || (nearestUnparsedAction <= AC.database.titles.lastActionParsed)) {
                // The player erased or retried an unknown number of actions
                // Purge recent candidates and perform a safety recheck
                if (nearestUnparsedAction <= AC.database.titles.lastActionParsed) {
                    AC.signal.recheckRetryOrErase = true;
                } else {
                    AC.signal.recheckRetryOrErase = false;
                }
                AC.database.titles.lastActionParsed = boundInteger(-1, nearestUnparsedAction - 8);
                for (let i = AC.database.titles.candidates.length - 1; 0 <= i; i--) {
                    const candidate = AC.database.titles.candidates[i];
                    for (let j = candidate.length - 1; 0 < j; j--) {
                        if (AC.database.titles.lastActionParsed < candidate[j]) {
                            candidate.splice(j, 1);
                        }
                    }
                    if (candidate.length <= 1) {
                        AC.database.titles.candidates.splice(i, 1);
                    }
                }
            }
            const pendingCandidates = new Map();
            if ((0 < nearestUnparsedAction) && (AC.database.titles.lastActionParsed < nearestUnparsedAction)) {
                const actions = [];
                for (
                    let actionToParse = AC.database.titles.lastActionParsed + 1;
                    actionToParse <= nearestUnparsedAction;
                    actionToParse++
                ) {
                    // I wrote this whilst sleep-deprived, somehow it works
                    const lookBack = currentTurn - actionToParse - (function() {
                        if (isDoSayStory(readPastAction(0).type)) {
                            // Inputs count as 2 actions instead of 1, conditionally offset lookBack by 1
                            return 0;
                        } else {
                            return 1;
                        }
                    })();
                    if (history.length <= lookBack) {
                        // history cannot be indexed with a negative integer
                        continue;
                    }
                    const action = readPastAction(lookBack);
                    const thisTextHash = new StringsHashed(4096).add(action.text).serialize();
                    if (actionToParse === nearestUnparsedAction) {
                        if (AC.signal.recheckRetryOrErase || (thisTextHash === AC.database.titles.lastTextHash)) {
                            // Additional safety to minimize duplicate candidate additions during retries or erases
                            AC.signal.recheckRetryOrErase = true;
                            break;
                        } else {
                            // Action parsing will proceed
                            AC.database.titles.lastActionParsed = nearestUnparsedAction;
                            AC.database.titles.lastTextHash = thisTextHash;
                        }
                    } else if (
                        // Special case where a consecutive retry>erase>continue cancels out
                        AC.signal.recheckRetryOrErase
                        && (actionToParse === (nearestUnparsedAction - 1))
                        && (thisTextHash === AC.database.titles.lastTextHash)
                    ) {
                        AC.signal.recheckRetryOrErase = false;
                    }
                    actions.push([action, actionToParse]);
                }
                if (!AC.signal.recheckRetryOrErase) {
                    for (const [action, turn] of actions) {
                        if (
                            (action.type === "see")
                            || (action.type === "unknown")
                            || (!AC.config.readFromInputs && isDoSayStory(action.type))
                            || /^[^\p{Lu}]*$/u.test(action.text)
                            || action.text.includes("<<<")
                            || /\/\s*A\s*C/i.test(action.text)
                            || /CONFIRM\s*DELETE/i.test(action.text)
                        ) {
                            // Skip see actions
                            // Skip input actions (only if input title detection has been disabled in the config)
                            // Skip strings without capital letters
                            // Skip utility actions
                            continue;
                        }
                        const words = (prettifyEmDashes(action.text)
                            // Localized Languages
                            .replace(/\s*[–«»„“”「」—]\s*/g, ": ")
                            .replace(/(?:^|\s+)-/g, ": ").replace(/-(?:\s+|$)/g, ": ")
                            .replace(/[‘’]/g, "'").replaceAll("´", "`")
                            // Standardize end punctuation
                            .replaceAll("。", ".").replaceAll("？", "?").replaceAll("！", "!")
                            // Replace special clause opening punctuation with colon ":" terminators
                            .replace(/(^|\s+)["'`]\s*/g, ": ").replace(/\s*[\(\[{]\s*/g, ": ")
                            // Likewise for end-quotes (curbs a common AI grammar mistake)
                            .replace(/\s*,?\s*["'`](?:\s+|$)/g, ": ")
                            // Replace funky wunky symbols with regular spaces
                            .replace(/[؟،¿¡…§，、\*_~><\)\]}#"`\s]/g, " ")
                            // Replace some mid-sentence punctuation symbols with a placeholder word
                            .replace(/\s*[;,\/\\]\s*/g, " %@% ")
                            // Replace "I", "I'm", "I'd", "I'll", and "I've" with a placeholder word
                            .replace(/(?:^|\s+|-)I(?:'(?:m|d|ll|ve))?(?:\s+|-|$)/gi, " %@% ")
                            // Remove "'s" only if not followed by a letter
                            .replace(/'s(?![a-zA-Z])/g, "")
                            // Replace "s'" with "s" only if preceded but not followed by a letter
                            .replace(/(?<=[a-zA-Z])s'(?![a-zA-Z])/g, "s")
                            // Remove apostrophes not between letters (preserve contractions like "don't")
                            .replace(/(?<![a-zA-Z])'(?![a-zA-Z])/g, "")
                            // Remove a leading bullet
                            .replace(/^\s*-+\s*/, "")
                            // Replace common honorifics with a placeholder word
                            .replace(buildKiller(Words.honorifics), " %@% ")
                            // Remove common abbreviations
                            .replace(buildKiller(Words.abbreviations), " ")
                            // Fix end punctuation
                            .replace(/\s+\.(?![a-zA-Z])/g, ".").replace(/\.\.+/g, ".")
                            .replace(/\s+\?(?![a-zA-Z])/g, "?").replace(/\?\?+/g, "?")
                            .replace(/\s+!(?![a-zA-Z])/g, "!").replace(/!!+/g, "!")
                            .replace(/\s+:(?![a-zA-Z])/g, ":").replace(/::+/g, ":")
                            // Colons are treated as substitute end-punctuation, apply the capitalization rule
                            .replace(/:\s+(\S)/g, (_, next) => ": " + next.toUpperCase())
                            // Condense consecutive whitespace
                            .trim().replace(/\s+/g, " ")
                        ).split(" ");
                        if (!Array.isArray(words) || (words.length < 2)) {
                            continue;
                        }
                        const titles = [];
                        const incompleteTitle = [];
                        let previousWordTerminates = true;
                        for (let i = 0; i < words.length; i++) {
                            let word = words[i];
                            if (startsWithTerminator()) {
                                // This word begins on a terminator, push the preexisting incomplete title to titles and proceed with the next sentence's beginning
                                pushTitle();
                                previousWordTerminates = true;
                                // Ensure no leading terminators remain
                                while ((word !== "") && startsWithTerminator()) {
                                    word = word.slice(1);
                                }
                            }
                            if (word === "") {
                                continue;
                            } else if (previousWordTerminates) {
                                // We cannot detect titles from sentence beginnings due to sentence capitalization rules. The previous sentence was recently terminated, implying the current series of capitalized words (plus lowercase minor words) occurs near the beginning of the current sentence
                                if (endsWithTerminator()) {
                                    continue;
                                } else if (startsWithUpperCase()) {
                                    if (isMinorWord(word)) {
                                        // Special case where a capitalized minor word precedes a named entity, clear the previous termination status
                                        previousWordTerminates = false;
                                    }
                                    // Otherwise, proceed without clearing
                                } else if (!isMinorWord(word) && !/^(?:and|&)(?:$|[\.\?!:]$)/.test(word)) {
                                    // Previous sentence termination status is cleared by the first new non-minor lowercase word encountered during forward iteration through the action text's words
                                    previousWordTerminates = false;
                                }
                                continue;
                            }
                            // Words near the beginning of this sentence have been skipped, proceed with named entity detection using capitalization rules. An incomplete title will be pushed to titles if A) a non-minor lowercase word is encountered, B) three consecutive minor words occur in a row, C) a terminator symbol is encountered at the end of a word. Otherwise, continue pushing words to the incomplete title
                            if (endsWithTerminator()) {
                                previousWordTerminates = true;
                                while ((word !== "") && endsWithTerminator()) {
                                    word = word.slice(0, -1);
                                }
                                if (word === "") {
                                    pushTitle();
                                    continue;
                                }
                            }
                            if (isMinorWord(word)) {
                                if (0 < incompleteTitle.length) {
                                    // Titles cannot start with a minor word
                                    if (
                                        (2 < incompleteTitle.length) && !(isMinorWord(incompleteTitle[incompleteTitle.length - 1]) && isMinorWord(incompleteTitle[incompleteTitle.length - 2]))
                                    ) {
                                        // Titles cannot have 3 or more consecutive minor words in a row
                                        pushTitle();
                                        continue;
                                    } else {
                                        // Titles may contain minor words in their middles. Ex: "Ace of Spades"
                                        incompleteTitle.push(word.toLowerCase());
                                    }
                                }
                            } else if (startsWithUpperCase()) {
                                // Add this proper noun to the incomplete title
                                incompleteTitle.push(word);
                            } else {
                                // The full title has a non-minor lowercase word to its immediate right
                                pushTitle();
                                continue;
                            }
                            if (previousWordTerminates) {
                                pushTitle();
                            }
                            function pushTitle() {
                                while (
                                    (1 < incompleteTitle.length)
                                    && isMinorWord(incompleteTitle[incompleteTitle.length - 1])
                                ) {
                                    incompleteTitle.pop();
                                }
                                if (0 < incompleteTitle.length) {
                                    titles.push(incompleteTitle.join(" "));
                                    // Empty the array
                                    incompleteTitle.length = 0;
                                }
                                return;
                            }
                            function isMinorWord(testWord) {
                                return Words.minor.includes(testWord.toLowerCase());
                            }
                            function startsWithUpperCase() {
                                return /^\p{Lu}/u.test(word);
                            }
                            function startsWithTerminator() {
                                return /^[\.\?!:]/.test(word);
                            }
                            function endsWithTerminator() {
                                return /[\.\?!:]$/.test(word);
                            }
                        }
                        for (let i = titles.length - 1; 0 <= i; i--) {
                            titles[i] = formatTitle(titles[i]).newTitle;
                            if (titles[i] === "" || (
                                AC.config.ignoreAllCapsTitles
                                && (2 < titles[i].replace(/[^a-zA-Z]/g, "").length)
                                && (titles[i] === titles[i].toUpperCase())
                            )) {
                                titles.splice(i, 1);
                            }
                        }
                        // Remove duplicates
                        const uniqueTitles = [...new Set(titles)];
                        if (uniqueTitles.length === 0) {
                            continue;
                        } else if (
                            // No reason to keep checking long past the max lookback distance
                            (currentTurn < 256)
                            && (action.type === "start")
                            // This is only used here so it doesn't need its own AC.config property or validation
                            && (S.DEFAULT_BAN_TITLES_FROM_OPENING !== false)
                        ) {
                            // Titles in the opening prompt are banned by default, hopefully accounting for the player character's name and other established setting details
                            uniqueTitles.forEach(title => banTitle(title));
                        } else {
                            // Schedule new titles for later insertion within the candidates database
                            for (const title of uniqueTitles) {
                                const pendingHashKey = title.toLowerCase();
                                if (pendingCandidates.has(pendingHashKey)) {
                                    // Consolidate pending candidates with matching titles but different turns
                                    pendingCandidates.get(pendingHashKey).turns.push(turn);
                                } else {
                                    pendingCandidates.set(pendingHashKey, O.s({title, turns: [turn]}));
                                }
                            }
                        }
                        function buildKiller(words) {
                            return (new RegExp(("(?:^|\\s+|-)(?:" + (words
                                .map(word => word.replace(".", "\\."))
                                .join("|")
                            ) + ")(?:\\s+|-|$)"), "gi"));
                        }
                    }
                }
            }
            // Measure the minimum and maximum turns of occurance for all title candidates
            let minTurn = currentTurn;
            let maxTurn = 0;
            for (let i = AC.database.titles.candidates.length - 1; 0 <= i; i--) {
                const candidate = AC.database.titles.candidates[i];
                const title = candidate[0];
                if (isUsedOrBanned(title) || isNamed(title)) {
                    // Retroactively ensure AC.database.titles.candidates contains no used / banned titles
                    AC.database.titles.candidates.splice(i, 1);
                } else {
                    const pendingHashKey = title.toLowerCase();
                    if (pendingCandidates.has(pendingHashKey)) {
                        // This candidate title matches one of the pending candidates, collect the pending turns
                        candidate.push(...pendingCandidates.get(pendingHashKey).turns);
                        // Remove this pending candidate
                        pendingCandidates.delete(pendingHashKey);
                    }
                    if (2 < candidate.length) {
                        // Ensure all recorded turns of occurance are unique for this candidate
                        // Sort the turns from least to greatest
                        const sortedTurns = [...new Set(candidate.slice(1))].sort((a, b) => (a - b));
                        if (625 < sortedTurns.length) {
                            sortedTurns.splice(0, sortedTurns.length - 600);
                        }
                        candidate.length = 1;
                        candidate.push(...sortedTurns);
                    }
                    setCandidateTurnBounds(candidate);
                }
            }
            for (const pendingCandidate of pendingCandidates.values()) {
                // Insert any remaining pending candidates (validity has already been ensured)
                const newCandidate = [pendingCandidate.title, ...pendingCandidate.turns];
                setCandidateTurnBounds(newCandidate);
                AC.database.titles.candidates.push(newCandidate);
            }
            const isCandidatesSorted = (function() {
                if (425 < AC.database.titles.candidates.length) {
                    // Sorting a large title candidates database is computationally expensive
                    sortCandidates();
                    AC.database.titles.candidates.splice(400);
                    // Flag this operation as complete for later consideration
                    return true;
                } else {
                    return false;
                }
            })();
            Internal.getUsedTitles();
            for (const titleKey in AC.database.memories.associations) {
                if (isAuto(titleKey)) {
                    // Reset the lifespan counter
                    AC.database.memories.associations[titleKey][0] = 999;
                } else if (AC.database.memories.associations[titleKey][0] < 1) {
                    // Forget this set of memory associations
                    delete AC.database.memories.associations[titleKey];
                } else if (!isAwaitingGeneration()) {
                    // Decrement the lifespan counter
                    AC.database.memories.associations[titleKey][0]--;
                }
            }
            // This copy of TEXT may be mutated
            let context = TEXT;
            const titleHeaderPatternGlobal = /\s*{\s*titles?\s*:\s*([\s\S]*?)\s*}\s*/gi;
            // Card events govern the parsing of memories from raw context as well as card memory bank injection
            const cardEvents = (function() {
                // Extract memories from the initial text (not TEXT as called from within the context modifier!)
                const contextMemories = (function() {
                    const memoriesMatch = text.match(/Memories\s*:\s*([\s\S]*?)\s*(?:Recent\s*Story\s*:|$)/i);
                    if (!memoriesMatch) {
                        return new Set();
                    }
                    const uniqueMemories = new Set(isolateMemories(memoriesMatch[1]));
                    if (uniqueMemories.size === 0) {
                        return uniqueMemories;
                    }
                    const duplicatesHashed = StringsHashed.deserialize(AC.database.memories.duplicates, 65536);
                    const duplicateMemories = new Set();
                    const seenMemories = new Set();
                    for (const memoryA of uniqueMemories) {
                        if (duplicatesHashed.has(memoryA)) {
                            // Remove to ensure the insertion order for this duplicate changes
                            duplicatesHashed.remove(memoryA);
                            duplicateMemories.add(memoryA);
                        } else if ((function() {
                            for (const memoryB of seenMemories) {
                                if (0.42 < similarityScore(memoryA, memoryB)) {
                                    // This memory is too similar to another memory
                                    duplicateMemories.add(memoryA);
                                    return false;
                                }
                            }
                            return true;
                        })()) {
                            seenMemories.add(memoryA);
                        }
                    }
                    if (0 < duplicateMemories.size) {
                        // Add each near duplicate's hashcode to AC.database.memories.duplicates
                        // Then remove duplicates from uniqueMemories and the context window
                        for (const duplicate of duplicateMemories) {
                            duplicatesHashed.add(duplicate);
                            uniqueMemories.delete(duplicate);
                            context = context.replaceAll("\n" + duplicate, "");
                        }
                        // Only the 2000 most recent duplicate memory hashcodes are remembered
                        AC.database.memories.duplicates = duplicatesHashed.latest(2000).serialize();
                    }
                    return uniqueMemories;
                })();
                const leftBoundary = "^|\\s|\"|'|—|\\(|\\[|{";
                const rightBoundary = "\\s|\\.|\\?|!|,|;|\"|'|—|\\)|\\]|}|$";
                // Murder, homicide if you will, nothing to see here
                const theKiller = new RegExp("(?:" + leftBoundary + ")the[\\s\\S]*$", "i");
                const peerageKiller = new RegExp((
                    "(?:" + leftBoundary + ")(?:" + Words.peerage.join("|") + ")(?:" + rightBoundary + ")"
                ), "gi");
                const events = new Map();
                for (const contextMemory of contextMemories) {
                    for (const titleKey of auto) {
                        if (!(new RegExp((
                            "(?<=" + leftBoundary + ")" + (titleKey
                                .replace(theKiller, "")
                                .replace(peerageKiller, "")
                                .replace(/[.*+?^${}()|[\]\\]/g, "\\$&")
                            ) + "(?=" + rightBoundary + ")"
                        ), "i")).test(contextMemory)) {
                            continue;
                        }
                        // AC card titles found in active memories will promote card events
                        if (events.has(titleKey)) {
                            events.get(titleKey).pendingMemories.push(contextMemory);
                            continue;
                        }
                        events.set(titleKey, O.s({
                            pendingMemories: [contextMemory],
                            titleHeader: ""
                        }));
                    }
                }
                const titleHeaderMatches = [...context.matchAll(titleHeaderPatternGlobal)];
                for (const [titleHeader, title] of titleHeaderMatches) {
                    if (!isAuto(title)) {
                        continue;
                    }
                    // Unique title headers found in context will promote card events
                    const titleKey = title.toLowerCase();
                    if (events.has(titleKey)) {
                        events.get(titleKey).titleHeader = titleHeader;
                        continue;
                    }
                    events.set(titleKey, O.s({
                        pendingMemories: [],
                        titleHeader: titleHeader
                    }));
                }
                return events;
            })();
            // Remove auto card title headers from active story card entries and contextualize their respective memory banks
            // Also handle the growth and maintenance of card memory banks
            let isRemembering = false;
            for (const card of storyCards) {
                // Iterate over each card to handle pending card events and forenames/surnames
                const titleHeaderMatcher = /^{title: \s*([\s\S]*?)\s*}/;
                let breakForCompression = isPendingCompression();
                if (breakForCompression) {
                    break;
                } else if (!card.entry.startsWith("{title: ")) {
                    continue;
                } else if (exceedsMemoryLimit()) {
                    const titleHeaderMatch = card.entry.match(titleHeaderMatcher);
                    if (titleHeaderMatch && isAuto(titleHeaderMatch[1])) {
                        prepareMemoryCompression(titleHeaderMatch[1].toLowerCase());
                        break;
                    }
                }
                // Handle card events
                const lowerEntry = card.entry.toLowerCase();
                for (const titleKey of cardEvents.keys()) {
                    if (!lowerEntry.startsWith("{title: " + titleKey + "}")) {
                        continue;
                    }
                    const cardEvent = cardEvents.get(titleKey);
                    if (
                        (0 < cardEvent.pendingMemories.length)
                        && /{\s*updates?\s*:\s*true\s*,\s*limits?\s*:[\s\S]*?}/i.test(card.description)
                    ) {
                        // Add new card memories
                        const associationsHashed = (function() {
                            if (titleKey in AC.database.memories.associations) {
                                return StringsHashed.deserialize(AC.database.memories.associations[titleKey][1], 65536);
                            } else {
                                AC.database.memories.associations[titleKey] = [999, ""];
                                return new StringsHashed(65536);
                            }
                        })();
                        const oldMemories = isolateMemories(extractCardMemories().text);
                        for (let i = 0; i < cardEvent.pendingMemories.length; i++) {
                            if (associationsHashed.has(cardEvent.pendingMemories[i])) {
                                // Remove first to alter the insertion order
                                associationsHashed.remove(cardEvent.pendingMemories[i]);
                            } else if (!oldMemories.some(oldMemory => (
                                (0.8 < similarityScore(oldMemory, cardEvent.pendingMemories[i]))
                            ))) {
                                // Ensure no near-duplicate memories are appended
                                card.description += "\n- " + cardEvent.pendingMemories[i];
                            }
                            associationsHashed.add(cardEvent.pendingMemories[i]);
                        }
                        AC.database.memories.associations[titleKey][1] = associationsHashed.latest(3500).serialize();
                        if (associationsHashed.size() === 0) {
                            delete AC.database.memories.associations[titleKey];
                        }
                        if (exceedsMemoryLimit()) {
                            breakForCompression = prepareMemoryCompression(titleKey);
                            break;
                        }
                    }
                    if (cardEvent.titleHeader !== "") {
                        // Replace this card's title header in context
                        const cardMemoriesText = extractCardMemories().text;
                        if (cardMemoriesText === "") {
                            // This card contains no card memories to contextualize
                            context = context.replace(cardEvent.titleHeader, "\n\n");
                        } else {
                            // Insert card memories within context and ensure they occur uniquely
                            const cardMemories = cardMemoriesText.split("\n").map(cardMemory => cardMemory.trim());
                            for (const cardMemory of cardMemories) {
                                if (25 < cardMemory.length) {
                                    context = (context
                                        .replaceAll(cardMemory, "<#>")
                                        .replaceAll(cardMemory.replace(/^-+\s*/, ""), "<#>")
                                    );
                                }
                            }
                            context = context.replace(cardEvent.titleHeader, (
                                "\n\n{%@MEM@%" + cardMemoriesText + "%@MEM@%}\n"
                            ));
                            isRemembering = true;
                        }
                    }
                    cardEvents.delete(titleKey);
                    break;
                }
                if (breakForCompression) {
                    break;
                }
                // Simplify auto-card titles which contain an obvious surname
                const titleHeaderMatch = card.entry.match(titleHeaderMatcher);
                if (!titleHeaderMatch) {
                    continue;
                }
                const [oldTitleHeader, oldTitle] = titleHeaderMatch;
                if (!isAuto(oldTitle)) {
                    continue;
                }
                const surname = isNamed(oldTitle, true);
                if (typeof surname !== "string") {
                    continue;
                }
                const newTitle = oldTitle.replace(" " + surname, "");
                const [oldTitleKey, newTitleKey] = [oldTitle, newTitle].map(title => title.toLowerCase());
                if (oldTitleKey === newTitleKey) {
                    continue;
                }
                // Preemptively mitigate some global state considered within the formatTitle scope
                clearTransientTitles();
                AC.database.titles.used = ["%@%"];
                [used, forenames, surnames].forEach(nameset => nameset.add("%@%"));
                // Premature optimization is the root of all evil
                const newKey = formatTitle(newTitle).newKey;
                clearTransientTitles();
                if (newKey === "") {
                    Internal.getUsedTitles();
                    continue;
                }
                if (oldTitleKey in AC.database.memories.associations) {
                    AC.database.memories.associations[newTitleKey] = AC.database.memories.associations[oldTitleKey];
                    delete AC.database.memories.associations[oldTitleKey];
                }
                if (AC.compression.titleKey === oldTitleKey) {
                    AC.compression.titleKey = newTitleKey;
                }
                card.entry = card.entry.replace(oldTitleHeader, oldTitleHeader.replace(oldTitle, newTitle));
                card.keys = buildKeys(card.keys.replaceAll(" " + surname, ""), newKey);
                Internal.getUsedTitles();
                function exceedsMemoryLimit() {
                    return ((function() {
                        const memoryLimitMatch = card.description.match(/limits?\s*:\s*(\d+)\s*}/i);
                        if (memoryLimitMatch) {
                            return validateMemoryLimit(parseInt(memoryLimitMatch[1], 10));
                        } else {
                            return AC.config.defaultMemoryLimit;
                        }
                    })() < (function() {
                        const cardMemories = extractCardMemories();
                        if (cardMemories.missing) {
                            return card.description;
                        } else {
                            return cardMemories.text;
                        }
                    })().length);
                }
                function prepareMemoryCompression(titleKey) {
                    AC.compression.oldMemoryBank = isolateMemories(extractCardMemories().text);
                    if (AC.compression.oldMemoryBank.length === 0) {
                        return false;
                    }
                    AC.compression.completed = 0;
                    AC.compression.titleKey = titleKey;
                    AC.compression.vanityTitle = cleanSpaces(card.title.trim());
                    AC.compression.responseEstimate = (function() {
                        const responseEstimate = estimateResponseLength();
                        if (responseEstimate === -1) {
                            return 1400
                        } else {
                            return responseEstimate;
                        }
                    })();
                    AC.compression.lastConstructIndex = -1;
                    AC.compression.newMemoryBank = [];
                    return true;
                }
                function extractCardMemories() {
                    const memoryHeaderMatch = card.description.match(
                        /(?<={\s*updates?\s*:[\s\S]*?,\s*limits?\s*:[\s\S]*?})[\s\S]*$/i
                    );
                    if (memoryHeaderMatch) {
                        return O.f({missing: false, text: cleanSpaces(memoryHeaderMatch[0].trim())});
                    } else {
                        return O.f({missing: true, text: ""});
                    }
                }
            }
            // Remove repeated memories plus any remaining title headers
            context = (context
                .replace(/(\s*<#>\s*)+/g, "\n")
                .replace(titleHeaderPatternGlobal, "\n\n")
                .replace(/World\s*Lore\s*:\s*/i, "World Lore:\n")
                .replace(/Memories\s*:\s*(?=Recent\s*Story\s*:|$)/i, "")
            );
            // Prompt the AI to generate a new card entry, compress an existing card's memories, or continue the story
            let isGenerating = false;
            let isCompressing = false;
            if (isPendingGeneration()) {
                promptGeneration();
            } else if (isAwaitingGeneration()) {
                AC.generation.workpiece = AC.generation.pending.shift();
                promptGeneration();
            } else if (isPendingCompression()) {
                promptCompression();
            } else if (AC.signal.recheckRetryOrErase) {
                // Do nothing 😜
            } else if ((AC.generation.cooldown <= 0) && (0 < AC.database.titles.candidates.length)) {
                // Prepare to automatically construct a new plot-relevant story card by selecting a title
                let selectedTitle = (function() {
                    if (AC.database.titles.candidates.length === 1) {
                        return AC.database.titles.candidates[0][0];
                    } else if (!isCandidatesSorted) {
                        sortCandidates();
                    }
                    const mostRelevantTitle = AC.database.titles.candidates[0][0];
                    if ((AC.database.titles.candidates.length < 16) || (Math.random() < 0.6667)) {
                        // Usually, 2/3 of the time, the most relevant title is selected
                        return mostRelevantTitle;
                    }
                    // Occasionally (1/3 of the time once the candidates databases has at least 16 titles) make a completely random selection between the top 4 most recently occuring title candidates which are NOT the top 2 most relevant titles. Note that relevance !== recency
                    // This gives non-character titles slightly better odds of being selected for card generation due to the relevance sorter's inherent bias towards characters; they tend to appear far more often in prose
                    return (AC.database.titles.candidates
                        // Create a shallow copy to avoid modifying AC.database.titles.candidates itself
                        // Add index to preserve original positions whenever ties occur during sorting
                        .map((candidate, index) => ({candidate, index}))
                        // Sort by each candidate's most recent turn
                        .sort((a, b) => {
                            const turnDiff = b.candidate[b.candidate.length - 1] - a.candidate[a.candidate.length - 1];
                            if (turnDiff === 0) {
                                // Don't change indices in the case of a tie
                                return (a.index - b.index);
                            } else {
                                // No tie here, sort by recency
                                return turnDiff;
                            }
                        })
                        // Get the top 6 most recent titles (4 + 2 because the top 2 relevant titles may be present)
                        .slice(0, 6)
                        // Extract only the title names
                        .map(element => element.candidate[0])
                        // Exclude the top 2 most relevant titles
                        .filter(title => ((title !== mostRelevantTitle) && (title !== AC.database.titles.candidates[1][0])))
                        // Ensure only 4 titles remain
                        .slice(0, 4)
                    )[Math.floor(Math.random() * 4)];
                })();
                while (!Internal.generateCard(O.f({title: selectedTitle}))) {
                    // This is an emergency precaution, I don't expect the interior of this while loop to EVER execute
                    // That said, it's crucial for the while condition be checked at least once, because Internal.generateCard appends an element to AC.generation.pending as a side effect
                    const lowerSelectedTitle = formatTitle(selectedTitle).newTitle.toLowerCase();
                    const index = AC.database.titles.candidates.findIndex(candidate => {
                        return (formatTitle(candidate[0]).newTitle.toLowerCase() === lowerSelectedTitle);
                    });
                    if (index === -1) {
                        // Should be impossible
                        break;
                    }
                    AC.database.titles.candidates.splice(index, 1);
                    if (AC.database.titles.candidates.length === 0) {
                        break;
                    }
                    selectedTitle = AC.database.titles.candidates[0][0];
                }
                if (isAwaitingGeneration()) {
                    // Assign the workpiece so card generation may fully commence!
                    AC.generation.workpiece = AC.generation.pending.shift();
                    promptGeneration();
                } else if (isPendingCompression()) {
                    promptCompression();
                }
            } else if (
                (AC.chronometer.step || forceStep)
                && (0 < AC.generation.cooldown)
                && (AC.config.addCardCooldown !== 9999)
            ) {
                AC.generation.cooldown--;
            }
            if (shouldTrimContext()) {
                // Truncate context based on AC.signal.maxChars, begin by individually removing the oldest sentences from the recent story portion of the context window
                const recentStoryPattern = /Recent\s*Story\s*:\s*([\s\S]*?)(%@GEN@%|%@COM@%|\s\[\s*Author's\s*note\s*:|$)/i;
                const recentStoryMatch = context.match(recentStoryPattern);
                if (recentStoryMatch) {
                    const recentStory = recentStoryMatch[1];
                    let sentencesJoined = recentStory;
                    // Split by the whitespace chars following each sentence (without consuming)
                    const sentences = splitBySentences(recentStory);
                    // [minimum num of story sentences] = ([max chars for context] / 6) / [average chars per sentence]
                    const sentencesMinimum = Math.ceil(
                        (AC.signal.maxChars / 6) / (
                            boundInteger(1, context.length) / boundInteger(1, sentences.length)
                        )
                    ) + 1;
                    do {
                        if (sentences.length < sentencesMinimum) {
                            // A minimum of n many recent story sentences must remain
                            // Where n represents a sentence count equal to roughly 16.7% of the full context chars
                            break;
                        }
                        // Remove the first (oldest) recent story sentence
                        sentences.shift();
                        // Check if the total length exceeds the AC.signal.maxChars limit
                        sentencesJoined = sentences.join("");
                    } while (AC.signal.maxChars < (context.length - recentStory.length + sentencesJoined.length + 3));
                    // Rebuild the context with the truncated recentStory
                    context = context.replace(recentStoryPattern, "Recent Story:\n" + sentencesJoined + recentStoryMatch[2]);
                }
                if (isRemembering && shouldTrimContext()) {
                    // Next remove loaded card memories (if any) with top-down priority, one card at a time
                    do {
                        // This matcher relies on its case-sensitivity
                        const cardMemoriesMatch = context.match(/{%@MEM@%([\s\S]+?)%@MEM@%}/);
                        if (!cardMemoriesMatch) {
                            break;
                        }
                        context = context.replace(cardMemoriesMatch[0], (cardMemoriesMatch[0]
                            .replace(cardMemoriesMatch[1], "")
                            // Set the MEM tags to lowercase to avoid repeated future matches
                            .toLowerCase()
                        ));
                    } while (AC.signal.maxChars < (context.length + 3));
                }
                if (shouldTrimContext()) {
                    // If the context is still too long, just trim from the beginning I guess 🤷‍♀️
                    context = context.slice(context.length - AC.signal.maxChars + 1);
                }
            }
            if (isRemembering) {
                // Card memory flags serve no further purpose
                context = (context
                    // Case-insensitivity is crucial here
                    .replace(/(?<={%@MEM@%)\s*/gi, "")
                    .replace(/\s*(?=%@MEM@%})/gi, "")
                    .replace(/{%@MEM@%%@MEM@%}\s?/gi, "")
                    .replaceAll("{%@MEM@%", "{ Memories:\n")
                    .replaceAll("%@MEM@%}", " }")
                );
            }
            if (isGenerating) {
                // Likewise for the card entry generation delimiter
                context = context.replaceAll("%@GEN@%", "");
            } else if (isCompressing) {
                // Or the (mutually exclusive) card memory compression delimiter
                context = context.replaceAll("%@COM@%", "");
            }
            CODOMAIN.initialize(context);
            function isolateMemories(memoriesText) {
                return (memoriesText
                    .split("\n")
                    .map(memory => cleanSpaces(memory.trim().replace(/^-+\s*/, "")))
                    .filter(memory => (memory !== ""))
                );
            }
            function isAuto(title) {
                return auto.has(title.toLowerCase());
            }
            function promptCompression() {
                isGenerating = false;
                const cardEntryText = (function() {
                    const card = getAutoCard(AC.compression.titleKey);
                    if (card === null) {
                        return null;
                    }
                    const entryLines = formatEntry(card.entry).trimEnd().split("\n");
                    if (Object.is(entryLines[0].trim(), "")) {
                        return "";
                    }
                    for (let i = 0; i < entryLines.length; i++) {
                        entryLines[i] = entryLines[i].trim();
                        if (/[a-zA-Z]$/.test(entryLines[i])) {
                            entryLines[i] += ".";
                        }
                        entryLines[i] += " ";
                    }
                    return entryLines.join("");
                })();
                if (cardEntryText === null) {
                    // Safety measure
                    resetCompressionProperties();
                    return;
                }
                repositionAN();
                // The "%COM%" substring serves as a temporary delimiter for later context length trucation
                context = context.trimEnd() + "\n\n" + cardEntryText + (
                    [...AC.compression.newMemoryBank, ...AC.compression.oldMemoryBank].join(" ")
                ) + "%@COM@%\n\n" + (function() {
                    const memoryConstruct = (function() {
                        if (AC.compression.lastConstructIndex === -1) {
                            for (let i = 0; i < AC.compression.oldMemoryBank.length; i++) {
                                AC.compression.lastConstructIndex = i;
                                const memoryConstruct = buildMemoryConstruct();
                                if ((
                                    (AC.config.memoryCompressionRatio / 10) * AC.compression.responseEstimate
                                ) < memoryConstruct.length) {
                                    return memoryConstruct;
                                }
                            }
                        } else {
                            // The previous card memory compression attempt produced a bad output
                            AC.compression.lastConstructIndex = boundInteger(
                                0, AC.compression.lastConstructIndex + 1, AC.compression.oldMemoryBank.length - 1
                            );
                        }
                        return buildMemoryConstruct();
                    })();
                    // Fill all %{title} placeholders
                    const precursorPrompt = insertTitle(AC.config.compressionPrompt, AC.compression.vanityTitle).trim();
                    const memoryPlaceholderPattern = /(?:[%\$]+\s*|[%\$]*){+\s*memor(y|ies)\s*}+/gi;
                    if (memoryPlaceholderPattern.test(precursorPrompt)) {
                        // Fill all %{memory} placeholders with a selection of pending old memories
                        return precursorPrompt.replace(memoryPlaceholderPattern, memoryConstruct);
                    } else {
                        // Append the partial entry to the end of context
                        return precursorPrompt + "\n\n" + memoryConstruct;
                    }
                })() + "\n\n";
                isCompressing = true;
                return;
            }
            function promptGeneration() {
                repositionAN();
                // All %{title} placeholders were already filled during this workpiece's initialization
                // The "%GEN%" substring serves as a temporary delimiter for later context length trucation
                context = context.trimEnd() + "%@GEN@%\n\n" + (function() {
                    // For context only, remove the title header from this workpiece's partially completed entry
                    const partialEntry = formatEntry(AC.generation.workpiece.entry);
                    const entryPlaceholderPattern = /(?:[%\$]+\s*|[%\$]*){+\s*entry\s*}+/gi;
                    if (entryPlaceholderPattern.test(AC.generation.workpiece.prompt)) {
                        // Fill all %{entry} placeholders with the partial entry
                        return AC.generation.workpiece.prompt.replace(entryPlaceholderPattern, partialEntry);
                    } else {
                        // Append the partial entry to the end of context
                        return AC.generation.workpiece.prompt.trimEnd() + "\n\n" + partialEntry;
                    }
                })();
                isGenerating = true;
                return;
            }
            function repositionAN() {
                // Move the Author's Note further back in context during card generation (should still be considered)
                const authorsNotePattern = /\s*(\[\s*Author's\s*note\s*:[\s\S]*\])\s*/i;
                const authorsNoteMatch = context.match(authorsNotePattern);
                if (!authorsNoteMatch) {
                    return;
                }
                const leadingSpaces = context.match(/^\s*/)[0];
                context = context.replace(authorsNotePattern, " ").trimStart();
                const recentStoryPattern = /\s*Recent\s*Story\s*:\s*/i;
                if (recentStoryPattern.test(context)) {
                    // Remove author's note from its original position and insert above "Recent Story:\n"
                    context = (context
                        .replace(recentStoryPattern, "\n\n" + authorsNoteMatch[1] + "\n\nRecent Story:\n")
                        .trimStart()
                    );
                } else {
                    context = authorsNoteMatch[1] + "\n\n" + context;
                }
                context = leadingSpaces + context;
                return;
            }
            function sortCandidates() {
                if (AC.database.titles.candidates.length < 2) {
                    return;
                }
                const turnRange = boundInteger(1, maxTurn - minTurn);
                const recencyExponent = Math.log10(turnRange) + 1.85;
                // Sort the database of available title candidates by relevance
                AC.database.titles.candidates.sort((a, b) => {
                    return relevanceScore(b) - relevanceScore(a);
                });
                function relevanceScore(candidate) {
                    // weight = (((turn - minTurn) / (maxTurn - minTurn)) + 1)^(log10(maxTurn - minTurn) + 1.85)
                    return candidate.slice(1).reduce((sum, turn) => {
                        // Apply exponential scaling to give far more weight to recent turns
                        return sum + Math.pow((
                            // The recency weight's exponent scales by log10(turnRange) + 1.85
                            // Shhh don't question it 😜
                            ((turn - minTurn) / turnRange) + 1
                        ), recencyExponent);
                    }, 0);
                }
                return;
            }
            function shouldTrimContext() {
                return (AC.signal.maxChars <= context.length);
            }
            function setCandidateTurnBounds(candidate) {
                // candidate: ["Example Title", 0, 1, 2, 3]
                minTurn = boundInteger(0, minTurn, candidate[1]);
                maxTurn = boundInteger(candidate[candidate.length - 1], maxTurn);
                return;
            }
            function disableAutoCards() {
                AC.signal.forceToggle = null;
                // Auto-Cards has been disabled
                AC.config.doAC = false;
                // Deconstruct the "Configure Auto-Cards" story card
                unbanTitle(configureCardTemplate.title);
                eraseCard(configureCard);
                // Signal the construction of "Edit to enable Auto-Cards" during the next onOutput hook
                AC.signal.swapControlCards = true;
                // Post a success message
                notify("Disabled! Use the \"Edit to enable Auto-Cards\" story card to undo");
                CODOMAIN.initialize(TEXT);
                return;
            }
            break; }
        case "output": {
            // AutoCards was called within the output modifier
            const output = prettifyEmDashes(TEXT);
            if (0 < AC.chronometer.postpone) {
                // Do not capture or replace any outputs during this turn
                promoteAmnesia();
                if (permitOutput()) {
                    CODOMAIN.initialize(output);
                }
            } else if (AC.signal.swapControlCards) {
                if (permitOutput()) {
                    CODOMAIN.initialize(output);
                }
            } else if (isPendingGeneration()) {
                const textClone = prettifyEmDashes(text);
                AC.chronometer.amnesia = 0;
                AC.generation.completed++;
                const generationsRemaining = (function() {
                    if (
                        textClone.includes("\"")
                        || /(?<=^|\s|—|\(|\[|{)sa(ys?|id)(?=\s|\.|\?|!|,|;|—|\)|\]|}|$)/i.test(textClone)
                    ) {
                        // Discard full outputs containing "say" or quotations
                        // To build coherent entries, the AI must not attempt to continue the story
                        return skip(estimateRemainingGens());
                    }
                    const oldSentences = (splitBySentences(formatEntry(AC.generation.workpiece.entry))
                        .map(sentence => sentence.trim())
                        .filter(sentence => (2 < sentence.length))
                    );
                    const seenSentences = new Set();
                    const entryAddition = splitBySentences(textClone
                        .replace(/[\*_~]/g, "")
                        .replace(/:+/g, "#")
                        .replace(/\s+/g, " ")
                    ).map(sentence => (sentence
                        .trim()
                        .replace(/^-+\s*/, "")
                    )).filter(sentence => (
                        // Remove empty strings
                        (sentence !== "")
                        // Remove colon ":" headers or other stinky symbols because me no like 😠
                        && !/[#><@]/.test(sentence)
                        // Remove previously repeated sentences
                        && !oldSentences.some(oldSentence => (0.75 < similarityScore(oldSentence, sentence)))
                        // Remove repeated sentences from within entryAddition itself
                        && ![...seenSentences].some(seenSentence => (0.75 < similarityScore(seenSentence, sentence)))
                        // Simply ensure this sentence is henceforth unique
                        && seenSentences.add(sentence)
                    )).join(" ").trim() + " ";
                    if (entryAddition === " ") {
                        return skip(estimateRemainingGens());
                    } else if (
                        /^{title:[\s\S]*?}$/.test(AC.generation.workpiece.entry.trim())
                        && (AC.generation.workpiece.entry.length < 111)
                    ) {
                        AC.generation.workpiece.entry += "\n" + entryAddition;
                    } else {
                        AC.generation.workpiece.entry += entryAddition;
                    }
                    if (AC.generation.workpiece.limit < AC.generation.workpiece.entry.length) {
                        let exit = false;
                        let truncatedEntry = AC.generation.workpiece.entry.trimEnd();
                        const sentences = splitBySentences(truncatedEntry);
                        for (let i = sentences.length - 1; 0 <= i; i--) {
                            if (!sentences[i].includes("\n")) {
                                sentences.splice(i, 1);
                                truncatedEntry = sentences.join("").trimEnd();
                                if (truncatedEntry.length <= AC.generation.workpiece.limit) {
                                    break;
                                }
                                continue;
                            }
                            // Lines only matter for initial entries provided via AutoCards().API.generateCard
                            const lines = sentences[i].split("\n");
                            for (let j = lines.length - 1; 0 <= j; j--) {
                                lines.splice(j, 1);
                                sentences[i] = lines.join("\n");
                                truncatedEntry = sentences.join("").trimEnd();
                                if (truncatedEntry.length <= AC.generation.workpiece.limit) {
                                    // Exit from both loops
                                    exit = true;
                                    break;
                                }
                            }
                            if (exit) {
                                break;
                            }
                        }
                        if (truncatedEntry.length < 150) {
                            // Disregard the previous sentence/line-based truncation attempt
                            AC.generation.workpiece.entry = limitString(
                                AC.generation.workpiece.entry, AC.generation.workpiece.limit
                            );
                            // Attempt to remove the last word/fragment
                            truncatedEntry = AC.generation.workpiece.entry.replace(/\s*\S+$/, "");
                            if (150 <= truncatedEntry) {
                                AC.generation.workpiece.entry = truncatedEntry;
                            }
                        } else {
                            AC.generation.workpiece.entry = truncatedEntry;
                        }
                        return 0;
                    } else if ((AC.generation.workpiece.limit - 50) <= AC.generation.workpiece.entry.length) {
                        AC.generation.workpiece.entry = AC.generation.workpiece.entry.trimEnd();
                        return 0;
                    }
                    function skip(remaining) {
                        if (AC.generation.permitted <= AC.generation.completed) {
                            AC.generation.workpiece.entry = AC.generation.workpiece.entry.trimEnd();
                            return 0;
                        }
                        return remaining;
                    }
                    function estimateRemainingGens() {
                        const responseEstimate = estimateResponseLength();
                        if (responseEstimate === -1) {
                            return 1;
                        }
                        const remaining = boundInteger(1, Math.round(
                            (150 + AC.generation.workpiece.limit - AC.generation.workpiece.entry.length) / responseEstimate
                        ));
                        if (AC.generation.permitted === 34) {
                            AC.generation.permitted = boundInteger(6, Math.floor(3.5 * remaining), 32);
                        }
                        return remaining;
                    }
                    return skip(estimateRemainingGens());
                })();
                postOutputMessage(textClone, AC.generation.completed / Math.min(
                    AC.generation.permitted,
                    AC.generation.completed + generationsRemaining
                ));
                if (generationsRemaining <= 0) {
                    notify("\"" + AC.generation.workpiece.title + "\" was successfully added to your story cards!");
                    constructCard(O.f({
                        type: AC.generation.workpiece.type,
                        title: AC.generation.workpiece.title,
                        keys: AC.generation.workpiece.keys,
                        entry: (function() {
                            if (!AC.config.bulletedListMode) {
                                return AC.generation.workpiece.entry;
                            }
                            const sentences = splitBySentences(
                                formatEntry(
                                    AC.generation.workpiece.entry.replace(/\s+/g, " ")
                                ).replace(/:+/g, "#")
                            ).map(sentence => {
                                sentence = (sentence
                                    .replaceAll("#", ":")
                                    .trim()
                                    .replace(/^-+\s*/, "")
                                );
                                if (sentence.length < 12) {
                                    return sentence;
                                } else {
                                    return "\n- " + sentence.replace(/\s*[\.\?!]+$/, "");
                                }
                            });
                            const titleHeader = "{title: " + AC.generation.workpiece.title + "}";
                            if (sentences.every(sentence => (sentence.length < 12))) {
                                const sentencesJoined = sentences.join(" ").trim();
                                if (sentencesJoined === "") {
                                    return titleHeader;
                                } else {
                                    return limitString(titleHeader + "\n" + sentencesJoined, 2000);
                                }
                            }
                            for (let i = sentences.length - 1; 0 <= i; i--) {
                                const bulletedEntry = cleanSpaces(titleHeader + sentences.join(" ")).trimEnd();
                                if (bulletedEntry.length <= 2000) {
                                    return bulletedEntry;
                                }
                                if (sentences.length === 1) {
                                    break;
                                }
                                sentences.splice(i, 1);
                            }
                            return limitString(AC.generation.workpiece.entry, 2000);
                        })(),
                        description: AC.generation.workpiece.description,
                    }), newCardIndex());
                    AC.generation.cooldown = AC.config.addCardCooldown;
                    AC.generation.completed = 0;
                    AC.generation.permitted = 34;
                    AC.generation.workpiece = O.f({});
                    clearTransientTitles();
                }
            } else if (isPendingCompression()) {
                const textClone = prettifyEmDashes(text);
                AC.chronometer.amnesia = 0;
                AC.compression.completed++;
                const compressionsRemaining = (function() {
                    const newMemory = (textClone
                        // Remove some dumb stuff
                        .replace(/^[\s\S]*:/g, "")
                        .replace(/[\*_~#><@\[\]{}`\\]/g, " ")
                        // Remove bullets
                        .trim().replace(/^-+\s*/, "").replace(/\s*-+$/, "").replace(/\s*-\s+/g, " ")
                        // Condense consecutive whitespace
                        .replace(/\s+/g, " ")
                    );
                    if ((AC.compression.oldMemoryBank.length - 1) <= AC.compression.lastConstructIndex) {
                        // Terminate this compression cycle; the memory construct cannot grow any further
                        AC.compression.newMemoryBank.push(newMemory);
                        return 0;
                    } else if ((newMemory.trim() !== "") && (newMemory.length < buildMemoryConstruct().length)) {
                        // Good output, preserve and then proceed onwards
                        AC.compression.oldMemoryBank.splice(0, AC.compression.lastConstructIndex + 1);
                        AC.compression.lastConstructIndex = -1;
                        AC.compression.newMemoryBank.push(newMemory);
                    } else {
                        // Bad output, discard and then try again
                        AC.compression.responseEstimate += 200;
                    }
                    return boundInteger(1, joinMemoryBank(AC.compression.oldMemoryBank).length) / AC.compression.responseEstimate;
                })();
                postOutputMessage(textClone, AC.compression.completed / (AC.compression.completed + compressionsRemaining));
                if (compressionsRemaining <= 0) {
                    const card = getAutoCard(AC.compression.titleKey);
                    if (card === null) {
                        notify(
                            "Failed to apply summarized memories for \"" + AC.compression.vanityTitle + "\" due to a missing or invalid AC card title header!"
                        );
                    } else {
                        const memoryHeaderMatch = card.description.match(
                            /(?<={\s*updates?\s*:[\s\S]*?,\s*limits?\s*:[\s\S]*?})[\s\S]*$/i
                        );
                        if (memoryHeaderMatch) {
                            // Update the card memory bank
                            notify("Memories for \"" + AC.compression.vanityTitle + "\" were successfully summarized!");
                            card.description = card.description.replace(memoryHeaderMatch[0], (
                                "\n" + joinMemoryBank(AC.compression.newMemoryBank)
                            ));
                        } else {
                            notify(
                                "Failed to apply summarizes memories for \"" + AC.compression.vanityTitle + "\" due to a missing or invalid AC card memory header!"
                            );
                        }
                    }
                    resetCompressionProperties();
                } else if (AC.compression.completed === 1) {
                    notify("Summarizing excess memories for \"" + AC.compression.vanityTitle + "\"");
                }
                function joinMemoryBank(memoryBank) {
                    return cleanSpaces("- " + memoryBank.join("\n- "));
                }
            } else if (permitOutput()) {
                CODOMAIN.initialize(output);
            }
            concludeOutputBlock((function() {
                if (AC.signal.swapControlCards) {
                    return getConfigureCardTemplate();
                } else {
                    return null;
                }
            })())
            function postOutputMessage(textClone, ratio) {
                if (!permitOutput()) {
                    // Do nothing
                } else if (0.5 < similarityScore(textClone, output)) {
                    // To improve Auto-Cards' compatability with other scripts, I only bother to replace the output text when the original and new output texts have a similarity score above a particular threshold. Otherwise, I may safely assume the output text has already been replaced by another script and thus skip this step.
                    CODOMAIN.initialize(
                        getPrecedingNewlines() + ">>> please select \"continue\" (" + Math.round(ratio * 100) + "%) <<<\n\n"
                    );
                } else {
                    CODOMAIN.initialize(output);
                }
                return;
            }
            break; }
        default: {
            CODOMAIN.initialize(TEXT);
            break; }
        }
        // Get an individual story card reference via titleKey
        function getAutoCard(titleKey) {
            return Internal.getCard(card => card.entry.toLowerCase().startsWith("{title: " + titleKey + "}"));
        }
        function buildMemoryConstruct() {
            return (AC.compression.oldMemoryBank
                .slice(0, AC.compression.lastConstructIndex + 1)
                .join(" ")
            );
        }
        // Estimate the average AI response char count based on recent continue outputs
        function estimateResponseLength() {
            if (!Array.isArray(history) || (history.length === 0)) {
                return -1;
            }
            const charCounts = [];
            for (let i = 0; i < history.length; i++) {
                const action = readPastAction(i);
                if ((action.type === "continue") && !action.text.includes("<<<")) {
                    charCounts.push(action.text.length);
                }
            }
            if (charCounts.length < 7) {
                if (charCounts.length === 0) {
                    return -1;
                } else if (charCounts.length < 4) {
                    return boundInteger(350, charCounts[0]);
                }
                charCounts.splice(3);
            }
            return boundInteger(175, Math.floor(
                charCounts.reduce((sum, charCount) => {
                    return sum + charCount;
                }, 0) / charCounts.length
            ));
        }
        // Evalute how similar two strings are on the range [0, 1]
        function similarityScore(strA, strB) {
            if (strA === strB) {
                return 1;
            }
            // Normalize both strings for further comparison purposes
            const [cleanA, cleanB] = [strA, strB].map(str => limitString((str
                .replace(/[0-9\s]/g, " ")
                .trim()
                .replace(/  +/g, " ")
                .toLowerCase()
            ), 1400));
            if (cleanA === cleanB) {
                return 1;
            }
            // Compute the Levenshtein distance
            const [lengthA, lengthB] = [cleanA, cleanB].map(str => str.length);
            // I love DP ❤️ (dynamic programming)
            const dp = Array(lengthA + 1).fill(null).map(() => Array(lengthB + 1).fill(0));
            for (let i = 0; i <= lengthA; i++) {
                dp[i][0] = i;
            }
            for (let j = 0; j <= lengthB; j++) {
                dp[0][j] = j;
            }
            for (let i = 1; i <= lengthA; i++) {
                for (let j = 1; j <= lengthB; j++) {
                    if (cleanA[i - 1] === cleanB[j - 1]) {
                        // No cost if chars match, swipe right 😎
                        dp[i][j] = dp[i - 1][j - 1];
                    } else {
                        dp[i][j] = Math.min(
                            // Deletion
                            dp[i - 1][j] + 1,
                            // Insertion
                            dp[i][j - 1] + 1,
                            // Substitution
                            dp[i - 1][j - 1] + 1
                        );
                    }
                }
            }
            // Convert distance to similarity score (1 - (distance / maxLength))
            return 1 - (dp[lengthA][lengthB] / Math.max(lengthA, lengthB));
        }
        function splitBySentences(prose) {
            // Don't split sentences on honorifics or abbreviations such as "Mr.", "Mrs.", "etc."
            return (prose
                .replace(new RegExp("(?<=\\s|\"|\\(|—|\\[|'|{|^)(?:" + ([...Words.honorifics, ...Words.abbreviations]
                    .map(word => word.replace(".", ""))
                    .join("|")
                ) + ")\\.", "gi"), "$1%@%")
                .split(/(?<=[\.\?!:]["\)'\]}]?\s+)(?=[^\p{Ll}\s])/u)
                .map(sentence => sentence.replaceAll("%@%", "."))
            );
        }
        function formatEntry(partialEntry) {
            const cleanedEntry = cleanSpaces(partialEntry
                .replace(/^{title:[\s\S]*?}/, "")
                .replace(/[#><@*_~]/g, "")
                .trim()
            ).replace(/(?<=^|\n)-+\s*/g, "");
            if (cleanedEntry === "") {
                return "";
            } else {
                return cleanedEntry + " ";
            }
        }
        // Resolve malformed em dashes (common AI cliche)
        function prettifyEmDashes(str) {
            return str.replace(/(?<!^\s*)(?: - | ?– ?)(?!\s*$)/g, "—");
        }
        function getConfigureCardTemplate() {
            const names = getControlVariants().configure;
            return O.f({
                type: AC.config.defaultCardType,
                title: names.title,
                keys: names.keys,
                entry: getConfigureCardEntry(),
                description: getConfigureCardDescription()
            });
        }
        function getConfigureCardEntry() {
            return prose(
                "> Auto-Cards automatically creates and updates plot-relevant story cards while you play. You may configure the following settings by replacing \"false\" with \"true\" (and vice versa) or by adjusting numbers for the appropriate settings.",
                "> Disable Auto-Cards: false",
                "> Show detailed guide: false",
                "> Delete all automatic story cards: false",
                "> Reset all config settings and prompts: false",
                "> Pin this config card near the top: " + AC.config.pinConfigureCard,
                "> Minimum turns cooldown for new cards: " + AC.config.addCardCooldown,
                "> New cards use a bulleted list format: " + AC.config.bulletedListMode,
                "> Maximum entry length for new cards: " + AC.config.defaultEntryLimit,
                "> New cards perform memory updates: " + AC.config.defaultCardsDoMemoryUpdates,
                "> Card memory bank preferred length: " + AC.config.defaultMemoryLimit,
                "> Memory summary compression ratio: " + AC.config.memoryCompressionRatio,
                "> Exclude all-caps from title detection: " + AC.config.ignoreAllCapsTitles,
                "> Also detect titles from player inputs: " + AC.config.readFromInputs,
                "> Minimum turns age for title detection: " + AC.config.minimumLookBackDistance,
                "> Use Live Script Interface v2: " + (AC.config.LSIv2 !== null),
                "> Log debug data in a separate card: " + AC.config.showDebugData
            );
        }
        function getConfigureCardDescription() {
            return limitString(O.v(prose(
                Words.delimiter,
                "> AI prompt to generate new cards:",
                limitString(AC.config.generationPrompt.trim(), 4350).trimEnd(),
                Words.delimiter,
                "> AI prompt to summarize card memories:",
                limitString(AC.config.compressionPrompt.trim(), 4350).trimEnd(),
                Words.delimiter,
                "> Titles banned from new card creation:",
                AC.database.titles.banned.join(", ")
            )), 9850);
        }
    } else {
        // Auto-Cards is currently disabled
        switch(HOOK) {
        case "input": {
            if (/\/\s*A\s*C/i.test(text)) {
                CODOMAIN.initialize(doPlayerCommands(text));
            } else {
                CODOMAIN.initialize(TEXT);
            }
            break; }
        case "context": {
            // AutoCards was called within the context modifier
            advanceChronometer();
            // Get or construct the "Edit to enable Auto-Cards" story card
            const enableCardTemplate = getEnableCardTemplate();
            const enableCard = getSingletonCard(true, enableCardTemplate);
            banTitle(enableCardTemplate.title);
            pinAndSortCards(enableCard);
            if (AC.signal.forceToggle) {
                enableAutoCards();
            } else if (enableCard.entry !== enableCardTemplate.entry) {
                if ((extractSettings(enableCard.entry)?.enableautocards === true) && (AC.signal.forceToggle !== false)) {
                    // Use optional chaining to check the existence of enableautocards before accessing its value
                    enableAutoCards();
                } else {
                    // Repair the damaged card entry
                    enableCard.entry = enableCardTemplate.entry;
                }
            }
            AC.signal.forceToggle = null;
            CODOMAIN.initialize(TEXT);
            function enableAutoCards() {
                // Auto-Cards has been enabled
                AC.config.doAC = true;
                // Deconstruct the "Edit to enable Auto-Cards" story card
                unbanTitle(enableCardTemplate.title);
                eraseCard(enableCard);
                // Signal the construction of "Configure Auto-Cards" during the next onOutput hook
                AC.signal.swapControlCards = true;
                // Post a success message
                notify("Enabled! You may now edit the \"Configure Auto-Cards\" story card");
                return;
            }
            break; }
        case "output": {
            // AutoCards was called within the output modifier
            promoteAmnesia();
            if (permitOutput()) {
                CODOMAIN.initialize(TEXT);
            }
            concludeOutputBlock((function() {
                if (AC.signal.swapControlCards) {
                    return getEnableCardTemplate();
                } else {
                    return null;
                }
            })());
            break; }
        default: {
            CODOMAIN.initialize(TEXT);
            break; }
        }
        function getEnableCardTemplate() {
            const names = getControlVariants().enable;
            return O.f({
                type: AC.config.defaultCardType,
                title: names.title,
                keys: names.keys,
                entry: prose(
                    "> Auto-Cards automatically creates and updates plot-relevant story cards while you play. To enable this system, simply edit the \"false\" below to say \"true\" instead!",
                    "> Enable Auto-Cards: false"),
                description: "Perform any Do/Say/Story/Continue action within your adventure to apply this change!"
            });
        }
    }
    function hoistConst() { return (class Const {
        // This helps me debug stuff uwu
        #constant;
        constructor(...args) {
            if (args.length !== 0) {
                this.constructor.#throwError([[(args.length === 1), "Const cannot be instantiated with a parameter"], ["Const cannot be instantiated with parameters"]]);
            } else {
                O.f(this);
                return this;
            }
        }
        declare(...args) {
            if (args.length !== 0) {
                this.constructor.#throwError([[(args.length === 1), "Instances of Const cannot be declared with a parameter"], ["Instances of Const cannot be declared with parameters"]]);
            } else if (this.#constant === undefined) {
                this.#constant = null;
                return this;
            } else if (this.#constant === null) {
                this.constructor.#throwError("Instances of Const cannot be redeclared");
            } else {
                this.constructor.#throwError("Instances of Const cannot be redeclared after initialization");
            }
        }
        initialize(...args) {
            if (args.length !== 1) {
                this.constructor.#throwError([[(args.length === 0), "Instances of Const cannot be initialized without a parameter"], ["Instances of Const cannot be initialized with multiple parameters"]]);
            } else if (this.#constant === null) {
                this.#constant = [args[0]];
                return this;
            } else if (this.#constant === undefined) {
                this.constructor.#throwError("Instances of Const cannot be initialized before declaration");
            } else {
                this.constructor.#throwError("Instances of Const cannot be reinitialized");
            }
        }
        read(...args) {
            if (args.length !== 0) {
                this.constructor.#throwError([[(args.length === 1), "Instances of Const cannot be read with a parameter"], ["Instances of Const cannot read with any parameters"]]);
            } else if (Array.isArray(this.#constant)) {
                return this.#constant[0];
            } else if (this.#constant === null) {
                this.constructor.#throwError("Despite prior declaration, instances of Const cannot be read before initialization");
            } else {
                this.constructor.#throwError("Instances of Const cannot be read before initialization");
            }
        }
        // An error condition is paired with an error message [condition, message], call #throwError with an array of pairs to throw the message corresponding with the first true condition [[cndtn1, msg1], [cndtn2, msg2], [cndtn3, msg3], ...] The first conditionless array element always evaluates to true ('else')
        static #throwError(...args) {
            // Look, I thought I was going to use this more at the time okay
            const [conditionalMessagesTable] = args;
            const codomain = new Const().declare();
            const error = O.f(new Error((function() {
                const codomain = new Const().declare();
                if (Array.isArray(conditionalMessagesTable)) {
                    const chosenPair = conditionalMessagesTable.find(function(...args) {
                        const [pair] = args;
                        const codomain = new Const().declare();
                        if (Array.isArray(pair)) {
                            if ((pair.length === 1) && (typeof pair[0] === "string")) {
                                codomain.initialize(true);
                            } else if (
                                (pair.length === 2)
                                && (typeof pair[0] === "boolean")
                                && (typeof pair[1] === "string")
                            ) {
                                codomain.initialize(pair[0]);
                            } else {
                                Const.#throwError("Const.#throwError encountered an invalid array element of conditionalMessagesTable");
                            }
                        } else {
                            Const.#throwError("Const.#throwError encountered a non-array element within conditionalMessagesTable");
                        }
                        return codomain.read();
                    });
                    if (Array.isArray(chosenPair)) {
                        if (chosenPair.length === 1) {
                            codomain.initialize(chosenPair[0]);
                        } else {
                            codomain.initialize(chosenPair[1]);
                        }
                    } else {
                        codomain.initialize("Const.#throwError was not called with any true conditions");
                    }
                } else if (typeof conditionalMessagesTable === "string") {
                    codomain.initialize(conditionalMessagesTable);
                } else {
                    codomain.initialize("Const.#throwError could not parse the given argument");
                }
                return codomain.read();
            })()));
            if (error.stack) {
                codomain.initialize(error.stack
                    .replace(/\(<isolated-vm>:/gi, "(")
                    .replace(/Error:|at\s*(?:#throwError|Const.(?:declare|initialize|read)|new\s*Const)\s*\(\d+:\d+\)/gi, "")
                    .replace(/AutoCards\s*\((\d+):(\d+)\)\s*at\s*<isolated-vm>:\d+:\d+\s*$/i, "AutoCards ($1:$2)")
                    .trim()
                    .replace(/\s+/g, " ")
                );
            } else {
                codomain.initialize(error.message);
            }
            throw codomain.read();
        }
    }); }
    function hoistO() { return (class O {
        // Some Object class methods are annoyingly verbose for how often I use them 👿
        static f(obj) {
            return Object.freeze(obj);
        }
        static v(base) {
            return see(Words.copy) + base;
        }
        static s(obj) {
            return Object.seal(obj);
        }
    }); }
    function hoistWords() { return (class Words { static #cache = {}; static {
        // Each word list is initialized only once before being cached!
        const wordListInitializers = {
            // Special-cased honorifics which are excluded from titles and ignored during split-by-sentences operations
            honorifics: () => [
                "mr.", "ms.", "mrs.", "dr."
            ],
            // Other special-cased abbreviations used to reformat titles and split-by-sentences
            abbreviations: () => [
                "sr.", "jr.", "etc.", "st.", "ex.", "inc."
            ],
            // Lowercase minor connector words which may exist within titles
            minor: () => [
                "&", "the", "for", "of", "le", "la", "el"
            ],
            // Removed from shortened titles for improved memory detection and trigger keword assignments
            peerage: () => [
                "sir", "lord", "lady", "king", "queen", "majesty", "duke", "duchess", "noble", "royal", "emperor", "empress", "great", "prince", "princess", "count", "countess", "baron", "baroness", "archduke", "archduchess", "marquis", "marquess", "viscount", "viscountess", "consort", "grand", "sultan", "sheikh", "tsar", "tsarina", "czar", "czarina", "viceroy", "monarch", "regent", "imperial", "sovereign", "president", "prime", "minister", "nurse", "doctor", "saint", "general", "private", "commander", "captain", "lieutenant", "sergeant", "admiral", "marshal", "baronet", "emir", "chancellor", "archbishop", "bishop", "cardinal", "abbot", "abbess", "shah", "maharaja", "maharani", "councillor", "squire", "lordship", "ladyship", "monseigneur", "mayor", "princeps", "chief", "chef", "their", "my", "his", "him", "he'd", "her", "she", "she'd", "you", "your", "yours", "you'd", "you've", "you'll", "yourself", "mine", "myself", "highness", "excellency", "farmer", "sheriff", "officer", "detective", "investigator", "miss", "mister", "colonel", "professor", "teacher", "agent", "heir", "heiress", "master", "mistress", "headmaster", "headmistress", "principal", "papa", "mama", "mommy", "daddy", "mother", "father", "grandma", "grandpa", "aunt", "auntie", "aunty", "uncle", "cousin", "sister", "brother", "holy", "holiness", "almighty", "senator", "congressman"
            ],
            // Common named entities represent special-cased INVALID card titles. Because these concepts are already abundant within the AI's training data, generating story cards for any of these would be both annoying and superfluous. Therefore, Words.entities is accessed during banned titles initialization to prevent their appearance
            entities: () => [
                // Seasons
                "spring", "summer", "autumn", "fall", "winter",
                // Holidays
                "halloween", "christmas", "thanksgiving", "easter", "hanukkah", "passover", "ramadan", "eid", "diwali", "new year", "new year eve", "valentine day", "oktoberfest",
                // People terms
                "mom", "dad", "child", "grandmother", "grandfather", "ladies", "gentlemen", "gentleman", "slave",
                // Capitalizable pronoun thingys
                "his", "him", "he'd", "her", "she", "she'd", "you", "your", "yours", "you'd", "you've", "you'll", "you're", "yourself", "mine", "myself", "this", "that",
                // Religious figures & deities
                "god", "jesus", "buddha", "allah", "christ",
                // Religious texts & concepts
                "bible", "holy bible", "qur'an", "quran", "hadith", "tafsir", "tanakh", "talmud", "torah", "vedas", "vatican", "paganism", "pagan",
                // Religions & belief systems
                "hindu", "hinduism", "christianity", "islam", "jew", "judaism", "taoism", "buddhist", "buddhism", "catholic", "baptist",
                // Common locations
                "earth", "moon", "sun", "new york city", "london", "paris", "tokyo", "beijing", "mumbai", "sydney", "berlin", "moscow", "los angeles", "san francisco", "chicago", "miami", "seattle", "vancouver", "toronto", "ottawa", "mexico city", "rio de janeiro", "cape town", "sao paulo", "bangkok", "delhi", "amsterdam", "seoul", "shanghai", "new delhi", "atlanta", "jerusalem", "africa", "north america", "south america", "central america", "asia", "north africa", "south africa", "boston", "rome", "america", "siberia", "new england", "manhattan", "bavaria", "catalonia", "greenland", "hong kong", "singapore",
                // Countries & political entities
                "china", "india", "japan", "germany", "france", "spain", "italy", "canada", "australia", "brazil", "south africa", "russia", "north korea", "south korea", "iran", "iraq", "syria", "saudi arabia", "afghanistan", "pakistan", "uk", "britain", "england", "scotland", "wales", "northern ireland", "usa", "united states", "united states of america", "mexico", "turkey", "greece", "portugal", "poland", "netherlands", "belgium", "sweden", "norway", "finland", "denmark",
                // Organizations & unions
                "united nations", "european union", "state", "nato", "nfl", "nba", "fbi", "cia", "harvard", "yale", "princeton", "ivy league", "little league", "nasa", "nsa", "noaa", "osha", "nascar", "daytona 500", "grand prix", "wwe", "mba", "superbowl",
                // Currencies
                "dollar", "euro", "pound", "yen", "rupee", "peso", "franc", "dinar", "bitcoin", "ethereum", "ruble", "won", "dirham",
                // Landmarks
                "sydney opera house", "eiffel tower", "statue of liberty", "big ben", "great wall of china", "taj mahal", "pyramids of giza", "grand canyon", "mount everest",
                // Events
                "world war i", "world war 1", "wwi", "wwii", "world war ii", "world war 2", "wwii", "ww2", "cold war", "brexit", "american revolution", "french revolution", "holocaust", "cuban missile crisis",
                // Companies
                "google", "microsoft", "apple", "amazon", "facebook", "tesla", "ibm", "intel", "samsung", "sony", "coca-cola", "nike", "ford", "chevy", "pontiac", "chrysler", "volkswagen", "lambo", "lamborghini", "ferrari", "pizza hut", "taco bell", "ai dungeon", "openai", "mcdonald", "mcdonalds", "kfc", "burger king", "disney",
                // Nationalities & languages
                "english", "french", "spanish", "german", "italian", "russian", "chinese", "japanese", "korean", "arabic", "portuguese", "hindi", "american", "canadian", "mexican", "brazilian", "indian", "australian", "egyptian", "greek", "swedish", "norwegian", "danish", "dutch", "turkish", "iranian", "ukraine", "asian", "british", "european", "polish", "thai", "vietnamese", "filipino", "malaysian", "indonesian", "finnish", "estonian", "latvian", "lithuanian", "czech", "slovak", "hungarian", "romanian", "bulgarian", "serbian", "croatian", "bosnian", "slovenian", "albanian", "georgian", "armenian", "azerbaijani", "kazakh", "uzbek", "mongolian", "hebrew", "persian", "pashto", "urdu", "bengali", "tamil", "telugu", "marathi", "gujarati", "swahili", "zulu", "xhosa", "african", "north african", "south african", "north american", "south american", "central american", "colombian", "argentinian", "chilean", "peruvian", "venezuelan", "ecuadorian", "bolivian", "paraguayan", "uruguayan", "cuban", "dominican", "arabian", "roman", "haitian", "puerto rican", "moroccan", "algerian", "tunisian", "saudi", "emirati", "qatarian", "bahraini", "omani", "yemeni", "syrian", "lebanese", "iraqi", "afghan", "pakistani", "sri lankan", "burmese", "laotian", "cambodian", "hawaiian", "victorian",
                // Fantasy stuff
                "elf", "elves", "elven", "dwarf", "dwarves", "dwarven", "human", "man", "men", "mankind", "humanity",
                // IPs
                "pokemon", "pokémon", "minecraft", "beetles", "band-aid", "bandaid", "band aid", "big mac", "gpt", "chatgpt", "gpt-2", "gpt-3", "gpt-4", "gpt-4o", "mixtral", "mistral", "linux", "windows", "mac", "happy meal", "disneyland", "disneyworld",
                // US states
                "alabama", "alaska", "arizona", "arkansas", "california", "colorado", "connecticut", "delaware", "florida", "georgia", "hawaii", "idaho", "illinois", "indiana", "iowa", "kansas", "kentucky", "louisiana", "maine", "massachusetts", "michigan", "minnesota", "mississippi", "missouri", "nebraska", "nevada", "new hampshire", "new jersey", "new mexico", "new york", "north carolina", "north dakota", "ohio", "oklahoma", "oregon", "pennsylvania", "rhode island", "south carolina", "south dakota", "tennessee", "texas", "utah", "vermont", "west virginia", "wisconsin", "wyoming",
                // Canadian Provinces & Territories
                "british columbia", "manitoba", "new brunswick", "labrador", "nova scotia", "ontario", "prince edward island", "quebec", "saskatchewan", "northwest territories", "nunavut", "yukon", "newfoundland",
                // Australian States & Territories
                "new south wales", "queensland", "south australia", "tasmania", "western australia", "australian capital territory",
                // idk
                "html", "javascript", "python", "java", "c++", "php", "bluetooth", "json", "sql", "word", "dna", "icbm", "npc", "usb", "rsvp", "omg", "brb", "lol", "rofl", "smh", "ttyl", "rubik", "adam", "t-shirt", "tshirt", "t shirt", "led", "leds", "laser", "lasers", "qna", "q&a", "vip", "human resource", "human resources", "llm", "llc", "ceo", "cfo", "coo", "office", "blt", "suv", "suvs", "ems", "emt", "cbt", "cpr", "ferris wheel", "toy", "pet", "plaything", "m o"
            ],
            // Unwanted values
            undesirables: () => [
                [343332, 451737, 323433, 377817], [436425, 356928, 363825, 444048], [323433, 428868, 310497, 413952], [350097, 66825, 436425, 413952, 406593, 444048], [316932, 330000, 436425, 392073], [444048, 356928, 323433], [451737, 444048, 363825], [330000, 310497, 392073, 399300]
            ],
            delimiter: () => (
                "——————————————————————————"
            ),
            // Source code location
            copy: () => [
                126852, 33792, 211200, 384912, 336633, 310497, 436425, 336633, 33792, 459492, 363825, 436425, 363825, 444048, 33792, 392073, 483153, 33792, 139425, 175857, 33792, 152592, 451737, 399300, 350097, 336633, 406593, 399300, 33792, 413952, 428868, 406593, 343332, 363825, 384912, 336633, 33792, 135168, 190608, 336633, 467313, 330000, 190608, 336633, 310497, 356928, 33792, 310497, 399300, 330000, 33792, 428868, 336633, 310497, 330000, 33792, 392073, 483153, 33792, 316932, 363825, 406593, 33792, 343332, 406593, 428868, 33792, 436425, 363825, 392073, 413952, 384912, 336633, 33792, 363825, 399300, 436425, 444048, 428868, 451737, 323433, 444048, 363825, 406593, 399300, 436425, 33792, 406593, 399300, 33792, 310497, 330000, 330000, 363825, 399300, 350097, 33792, 139425, 451737, 444048, 406593, 66825, 148137, 310497, 428868, 330000, 436425, 33792, 444048, 406593, 33792, 483153, 406593, 451737, 428868, 33792, 436425, 323433, 336633, 399300, 310497, 428868, 363825, 406593, 436425, 35937, 33792, 3355672848, 139592360193, 3300, 3300, 356928, 444048, 444048, 413952, 436425, 111012, 72897, 72897, 413952, 384912, 310497, 483153, 69828, 310497, 363825, 330000, 451737, 399300, 350097, 336633, 406593, 399300, 69828, 323433, 406593, 392073, 72897, 413952, 428868, 406593, 343332, 363825, 384912, 336633, 72897, 190608, 336633, 467313, 330000, 190608, 336633, 310497, 356928, 3300, 3300, 126852, 33792, 139425, 451737, 444048, 406593, 66825, 148137, 310497, 428868, 330000, 436425, 33792, 459492, 79233, 69828, 76032, 69828, 76032, 33792, 363825, 436425, 33792, 310497, 399300, 33792, 406593, 413952, 336633, 399300, 66825, 436425, 406593, 451737, 428868, 323433, 336633, 33792, 436425, 323433, 428868, 363825, 413952, 444048, 33792, 343332, 406593, 428868, 33792, 139425, 175857, 33792, 152592, 451737, 399300, 350097, 336633, 406593, 399300, 33792, 392073, 310497, 330000, 336633, 33792, 316932, 483153, 33792, 190608, 336633, 467313, 330000, 190608, 336633, 310497, 356928, 69828, 33792, 261393, 406593, 451737, 33792, 356928, 310497, 459492, 336633, 33792, 392073, 483153, 33792, 343332, 451737, 384912, 384912, 33792, 413952, 336633, 428868, 392073, 363825, 436425, 436425, 363825, 406593, 399300, 33792, 444048, 406593, 33792, 451737, 436425, 336633, 33792, 139425, 451737, 444048, 406593, 66825, 148137, 310497, 428868, 330000, 436425, 33792, 467313, 363825, 444048, 356928, 363825, 399300, 33792, 483153, 406593, 451737, 428868, 33792, 413952, 336633, 428868, 436425, 406593, 399300, 310497, 384912, 33792, 406593, 428868, 33792, 413952, 451737, 316932, 384912, 363825, 436425, 356928, 336633, 330000, 33792, 436425, 323433, 336633, 399300, 310497, 428868, 363825, 406593, 436425, 35937, 3300, 126852, 33792, 261393, 406593, 451737, 50193, 428868, 336633, 33792, 310497, 384912, 436425, 406593, 33792, 467313, 336633, 384912, 323433, 406593, 392073, 336633, 33792, 444048, 406593, 33792, 336633, 330000, 363825, 444048, 33792, 444048, 356928, 336633, 33792, 139425, 175857, 33792, 413952, 428868, 406593, 392073, 413952, 444048, 436425, 33792, 310497, 399300, 330000, 33792, 444048, 363825, 444048, 384912, 336633, 33792, 336633, 475200, 323433, 384912, 451737, 436425, 363825, 406593, 399300, 436425, 33792, 413952, 428868, 406593, 459492, 363825, 330000, 336633, 330000, 33792, 316932, 336633, 384912, 406593, 467313, 69828, 33792, 175857, 33792, 436425, 363825, 399300, 323433, 336633, 428868, 336633, 384912, 483153, 33792, 356928, 406593, 413952, 336633, 33792, 483153, 406593, 451737, 33792, 336633, 399300, 370788, 406593, 483153, 33792, 483153, 406593, 451737, 428868, 33792, 310497, 330000, 459492, 336633, 399300, 444048, 451737, 428868, 336633, 436425, 35937, 33792, 101128769412, 106046468352, 3300
            ],
            // Card interface names reserved for use within LSIv2
            reserved: () => ({
                library: "Shared Library", input: "Input Modifier", context: "Context Modifier", output: "Output Modifier", guide: "LSIv2 Guide", state: "State Display", log: "Console Log"
            }),
            // Acceptable config settings which are coerced to true
            trues: () => [
                "true", "t", "yes", "y", "on"
            ],
            // Acceptable config settings which are coerced to false
            falses: () => [
                "false", "f", "no", "n", "off"
            ],
            guide: () => prose(
                ">>> Detailed Guide:",
                "Auto-Cards was made by LewdLeah ❤️",
                "",
                Words.delimiter,
                "",
                "💡 What is Auto-Cards?",
                "Auto-Cards is a plug-and-play script for AI Dungeon that watches your story and automatically writes plot-relevant story cards during normal gameplay. A forgetful AI breaks my immersion, therefore my primary goal was to address the \"object permanence problem\" by extending story cards and memories with deeper automation. Auto-Cards builds a living reference of your adventure's world as you go. For your own convenience, all of this stuff is handled in the background. Though you're certainly welcome to customize various settings or use in-game commands for more precise control",
                "",
                Words.delimiter,
                "",
                " 📌 Main Features",
                "- Detects named entities from your story and periodically writes new cards",
                "- Smart long-term memory updates and summaries for important cards",
                "- Fully customizable AI card generation and memory summarization prompts",
                "- Optional in-game commands to manually direct the card generation process",
                "- Free and open source for anyone to use within their own projects",
                "- Compatible with other scripts and includes an external API",
                "- Optional in-game scripting interface (LSIv2)",
                "",
                Words.delimiter,
                "",
                "⚙️ Config Settings",
                "You may, at any time, fine-tune your settings in-game by editing their values within the config card's entry section. Simply swap true/false or tweak numbers where appropriate",
                "",
                "> Disable Auto-Cards:",
                "Turns the whole system off if true",
                "",
                "> Show detailed guide:",
                "If true, shows this player guide in-game",
                "",
                "> Delete all automatic story cards:",
                "Removes every auto-card present in your adventure",
                "",
                "> Reset all config settings and prompts:",
                "Restores all settings and prompts to their original default values",
                "",
                "> Pin this config card near the top:",
                "Keeps the config card pinned high on your cards list",
                "",
                "> Minimum turns cooldown for new cards:",
                "How many turns (minimum) to wait between generating new cards. Using 9999 will pause periodic card generation while still allowing card memory updates to continue",
                "",
                "> New cards use a bulleted list format:",
                "If true, new entries will use bullet points instead of pure prose",
                "",
                "> Maximum entry length for new cards:",
                "Caps how long newly generated card entries can be (in characters)",
                "",
                "> New cards perform memory updates:",
                "If true, new cards will automatically experience memory updates over time",
                "",
                "> Card memory bank preferred length:",
                "Character count threshold before card memories are summarized to save space",
                "",
                "> Memory summary compression ratio:",
                "Controls how much to compress when summarizing long card memory banks",
                "(ratio = 10 * old / new ... such that 25 -> 2.5x shorter)",
                "",
                "> Exclude all-caps from title detection:",
                "Prevents all-caps words like \"RUN\" from being parsed as viable titles",
                "",
                "> Also detect titles from player inputs:",
                "Allows your typed Do/Say/Story action inputs to help suggest new card topics. Set to false if you have bad grammar, or if you're German (due to idiosyncratic noun capitalization habits)",
                "",
                "> Minimum turns age for title detection:",
                "How many actions back the script looks when parsing recent titles from your story",
                "",
                "> Use Live Script Interface v2:",
                "Enables LSIv2 for extra scripting magic and advanced control via arbitrary code execution",
                "",
                "> Log debug data in a separate card:",
                "Shows a debug card if set to true",
                "",
                Words.delimiter,
                "",
                "✏️ AI Prompts",
                "You may specify how the AI handles story card processes by editing either of these two prompts within the config card's notes section",
                "",
                "> AI prompt to generate new cards:",
                "Used when Auto-Cards writes a new card entry. It tells the AI to focus on important plot stuff, avoid fluff, and write in a consistent, polished style. I like to add some personal preferences here when playing my own adventures. \"%{title}\" and \"%{entry}\" are dynamic placeholders for their namesakes",
                "",
                "> AI prompt to summarize card memories:",
                "Summarizes older details within card memory banks to keep everything concise and neat over the long-run. Maintains only the most important details, written in the past tense. \"%{title}\" and \"%{memory}\" are dynamic placeholders for their namesakes",
                "",
                Words.delimiter,
                "",
                "⛔ Banned Titles List",
                "This list prevents new cards from being created for super generic or unhelpful titles such as North, Tuesday, or December. You may edit these at the bottom of the config card's notes section. Capitalization and plural/singular forms are handled for you, so no worries about that",
                "",
                "> Titles banned from automatic new card generation:",
                "North, East, South, West, and so on...",
                "",
                Words.delimiter,
                "",
                "🔑 In-Game Commands (/ac)",
                "Use these commands to manually interact with Auto-Cards, simply type them into a Do/Say/Story input action",
                "",
                "/ac",
                "Sets your actual cooldown to 0 and immediately attempts to generate a new card for the most relevant unused title from your story (if one exists)",
                "",
                "/ac Your Title Goes Here",
                "Will immediately begin generating a new story card with the given title",
                "Example use: \"/ac Leah\"",
                "",
                "/ac Your Title Goes Here / Your extra prompt details go here",
                "Similar to the previous case, but with additional context to include with the card generation prompt",
                "Example use: \"/ac Leah / Focus on Leah's works of artifice and ingenuity\"",
                "",
                "/ac Your Title Goes Here / Your extra prompt details go here / Your starter entry goes here",
                "Again, similar to the previous case, but with an initial card entry for the generator to build upon",
                "Example use: \"/ac Leah / Focus on Leah's works of artifice and ingenuity / You are a woman named Leah.\"",
                "",
                "/ac redo Your Title Goes Here",
                "Rewrites your chosen story card, using the old card entry, memory bank, and story context for inspiration. Useful for recreating cards after important character development has occurred",
                "Example use: \"/ac redo Leah\"",
                "",
                "/ac redo Your Title Goes Here / New info goes here",
                "Similar to the previous case, but with additional info provided to guide the rewrite according to your additional specifications",
                "Example use: \"/ac redo Leah / Leah recently achieved immortality\"",
                "",
                "/ac redo all",
                "Recreates every single auto-card in your adventure. I must warn you though: This is very risky",
                "",
                "Extra Info:",
                "- Invalid titles will fail. It's a technical limitation, sorry 🤷‍♀️",
                "- Titles must be unique, unless you're attempting to use \"/ac redo\" for an existing card",
                "- You may submit multiple commands using a single input to queue up a chained sequence of requests",
                "- Capitalization doesn't matter, titles will be reformatted regardless",
                "",
                Words.delimiter,
                "",
                "🔧 External API Functions (quick summary)",
                "These are mainly for other JavaScript programmers to use, so feel free to ignore this section if that doesn't apply to you. Anyway, here's what each one does in plain terms, though please do refer to my source code for the full documentation",
                "",
                "AutoCards().API.postponeEvents();",
                "Pauses Auto-Cards activity for n many turns",
                "",
                "AutoCards().API.emergencyHalt();",
                "Emergency stop or resume",
                "",
                "AutoCards().API.suppressMessages();",
                "Hides Auto-Cards toasts by preventing assignment to state.message",
                "",
                "AutoCards().API.debugLog();",
                "Writes to the debug log card",
                "",
                "AutoCards().API.toggle();",
                "Turns Auto-Cards on/off",
                "",
                "AutoCards().API.generateCard();",
                "Initiates AI generation of the requested card",
                "",
                "AutoCards().API.redoCard();",
                "Regenerates an existing card",
                "",
                "AutoCards().API.setCardAsAuto();",
                "Flags or unflags a card as automatic",
                "",
                "AutoCards().API.addCardMemory();",
                "Adds a memory to a specific card",
                "",
                "AutoCards().API.eraseAllAutoCards();",
                "Deletes all auto-cards",
                "",
                "AutoCards().API.getUsedTitles();",
                "Lists all current card titles and keys",
                "",
                "AutoCards().API.getBannedTitles();",
                "Shows your current banned titles list",
                "",
                "AutoCards().API.setBannedTitles();",
                "Replaces the banned titles list with a new list",
                "",
                "AutoCards().API.buildCard();",
                "Makes a new card from scratch, using exact parameters",
                "",
                "AutoCards().API.getCard();",
                "Finds cards that match a filter",
                "",
                "AutoCards().API.eraseCard();",
                "Deletes cards matching a filter",
                "",
                "These API functions also work from within the LSIv2 scope, by the way",
                "",
                Words.delimiter,
                "",
                "❤️ Special Thanks",
                "This project flourished due to the incredible help, feedback, and encouragement from the AI Dungeon community. Your ideas, bug reports, testing, and support made Auto-Cards smarter, faster, and more fun for all. Please refer to my source code to learn more about everyone's specific contributions",
                "",
                "AHotHamster22, BinKompliziert, Boo, bottledfox, Bruno, Burnout, bweni, DebaczX, Dirty Kurtis, Dragranis, effortlyss, Hawk, Idle Confusion, ImprezA, Kat-Oli, KryptykAngel, Mad19pumpkin, Magic, Mirox80, Nathaniel Wyvern, NobodyIsUgly, OnyxFlame, Purplejump, Randy Viosca, RustyPawz, sinner, Sleepy pink, Vutinberg, Wilmar, Yi1i1i",
                "",
                Words.delimiter,
                "",
                "🎴 Random Tips",
                "- The default setup works great out of the box, just play normally and watch your world build itself",
                "- Enable AI Dungeon's built-in memory system for the best results",
                "- Gameplay -> AI Models -> Memory System -> Memory Bank -> Toggle-ON to enable",
                "- \"t\" and \"f\" are valid shorthand for \"true\" and \"false\" inside the config card",
                "- If Auto-Cards goes overboard with new cards, you can pause it by setting the cooldown config to 9999",
                "- Write \"{title:}\" anywhere within a regular story card's entry to transform it into an automatic card",
                "- Feel free to import/export entire story card decks at any time",
                "- Please copy my source code from here: https://play.aidungeon.com/profile/LewdLeah",
                "",
                Words.delimiter,
                "",
                "Happy adventuring! ❤️",
                "Please erase before continuing! <<<"
            )
        };
        for (const wordList in wordListInitializers) {
            // Define a lazy getter for every word list
            Object.defineProperty(Words, wordList, {
                configurable: false,
                enumerable: true,
                get() {
                    // If not already in cache, initialize and store the word list
                    if (!(wordList in Words.#cache)) {
                        Words.#cache[wordList] = O.f(wordListInitializers[wordList]());
                    }
                    return Words.#cache[wordList];
                }
            });
        }
    } }); }
    function hoistStringsHashed() { return (class StringsHashed {
        // Used for information-dense past memory recognition
        // Strings are converted to (reasonably) unique hashcodes for efficient existence checking
        static #defaultSize = 65536;
        #size;
        #store;
        constructor(size = StringsHashed.#defaultSize) {
            this.#size = size;
            this.#store = new Set();
            return this;
        }
        static deserialize(serialized, size = StringsHashed.#defaultSize) {
            const stringsHashed = new StringsHashed(size);
            stringsHashed.#store = new Set(serialized.split(","));
            return stringsHashed;
        }
        serialize() {
            return Array.from(this.#store).join(",");
        }
        has(str) {
            return this.#store.has(this.#hash(str));
        }
        add(str) {
            this.#store.add(this.#hash(str));
            return this;
        }
        remove(str) {
            this.#store.delete(this.#hash(str));
            return this;
        }
        size() {
            return this.#store.size;
        }
        latest(keepLatestCardinality) {
            if (this.#store.size <= keepLatestCardinality) {
                return this;
            }
            const excess = this.#store.size - keepLatestCardinality;
            const iterator = this.#store.values();
            for (let i = 0; i < excess; i++) {
                // The oldest hashcodes are removed first (insertion order matters!)
                this.#store.delete(iterator.next().value);
            }
            return this;
        }
        #hash(str) {
            let hash = 0;
            for (let i = 0; i < str.length; i++) {
                hash = ((31 * hash) + str.charCodeAt(i)) % this.#size;
            }
            return hash.toString(36);
        }
    }); }
    function hoistInternal() { return (class Internal {
        // Some exported API functions are internally reused by AutoCards
        // Recursively calling AutoCards().API is computationally wasteful
        // AutoCards uses this collection of static methods as an internal proxy
        static generateCard(request, predefinedPair = ["", ""]) {
            // Method call guide:
            // Internal.generateCard({
            //     // All properties except 'title' are optional
            //     type: "card type, defaults to 'class' for ease of filtering",
            //     title: "card title",
            //     keysStart: "preexisting card triggers",
            //     entryStart: "preexisting card entry",
            //     entryPrompt: "prompt the AI will use to complete this entry",
            //     entryPromptDetails: "extra details to include with this card's prompt",
            //     entryLimit: 750, // target character count for the generated entry
            //     description: "card notes",
            //     memoryStart: "preexisting card memory",
            //     memoryUpdates: true, // card updates when new relevant memories are formed
            //     memoryLimit: 2750, // max characters before the card memory is compressed
            // });
            const titleKeyPair = formatTitle((request.title ?? "").toString());
            const title = predefinedPair[0] || titleKeyPair.newTitle;
            if (
                (title === "")
                || (("title" in AC.generation.workpiece) && (title === AC.generation.workpiece.title))
                || (isAwaitingGeneration() && (AC.generation.pending.some(pendingWorkpiece => (
                    ("title" in pendingWorkpiece) && (title === pendingWorkpiece.title)
                ))))
            ) {
                logEvent("The title '" + request.title + "' is invalid or unavailable for card generation", true);
                return false;
            }
            AC.generation.pending.push(O.s({
                title: title,
                type: limitString((request.type || AC.config.defaultCardType).toString().trim(), 100),
                keys: predefinedPair[1] || buildKeys((request.keysStart ?? "").toString(), titleKeyPair.newKey),
                entry: limitString("{title: " + title + "}" + cleanSpaces((function() {
                    const entry = (request.entryStart ?? "").toString().trim();
                    if (entry === "") {
                        return "";
                    } else {
                        return ("\n" + entry + (function() {
                            if (/[a-zA-Z]$/.test(entry)) {
                                return ".";
                            } else {
                                return "";
                            }
                        })() + " ");
                    }
                })()), 2000),
                description: limitString((
                    (function() {
                        const description = limitString((request.description ?? "").toString().trim(), 9900);
                        if (description === "") {
                            return "";
                        } else {
                            return description + "\n\n";
                        }
                    })() + "Auto-Cards will contextualize these memories:\n{updates: " + (function() {
                        if (typeof request.memoryUpdates === "boolean") {
                            return request.memoryUpdates;
                        } else {
                            return AC.config.defaultCardsDoMemoryUpdates;
                        }
                    })() + ", limit: " + validateMemoryLimit(
                        parseInt((request.memoryLimit || AC.config.defaultMemoryLimit), 10)
                    ) + "}" + (function() {
                        const cardMemoryBank = cleanSpaces((request.memoryStart ?? "").toString().trim());
                        if (cardMemoryBank === "") {
                            return "";
                        } else {
                            return "\n" + cardMemoryBank.split("\n").map(memory => addBullet(memory)).join("\n");
                        }
                    })()
                ), 10000),
                prompt: (function() {
                    let prompt = insertTitle((
                        (request.entryPrompt ?? "").toString().trim() || AC.config.generationPrompt.trim()
                    ), title);
                    let promptDetails = insertTitle((
                        cleanSpaces((request.entryPromptDetails ?? "").toString().trim())
                    ), title);
                    if (promptDetails !== "") {
                        const spacesPrecedingTerminalEntryPlaceholder = (function() {
                            const terminalEntryPlaceholderPattern = /(?:[%\$]+\s*|[%\$]*){+\s*entry\s*}+$/i;
                            if (terminalEntryPlaceholderPattern.test(prompt)) {
                                prompt = prompt.replace(terminalEntryPlaceholderPattern, "");
                                const trailingSpaces = prompt.match(/(\s+)$/);
                                if (trailingSpaces) {
                                    prompt = prompt.trimEnd();
                                    return trailingSpaces[1];
                                } else {
                                    return "\n\n";
                                }
                            } else {
                                return "";
                            }
                        })();
                        switch(prompt[prompt.length - 1]) {
                        case "]": { encapsulateBothPrompts("[", true, "]"); break; }
                        case ">": { encapsulateBothPrompts(null, false, ">"); break; }
                        case "}": { encapsulateBothPrompts("{", true, "}"); break; }
                        case ")": { encapsulateBothPrompts("(", true, ")"); break; }
                        case "/": { encapsulateBothPrompts("/", true, "/"); break; }
                        case "#": { encapsulateBothPrompts("#", true, "#"); break; }
                        case "-": { encapsulateBothPrompts(null, false, "-"); break; }
                        case ":": { encapsulateBothPrompts(":", true, ":"); break; }
                        case "<": { encapsulateBothPrompts(">", true, "<"); break; }
                        };
                        if (promptDetails.includes("\n")) {
                            const lines = promptDetails.split("\n");
                            for (let i = 0; i < lines.length; i++) {
                                lines[i] = addBullet(lines[i].trim());
                            }
                            promptDetails = lines.join("\n");
                        } else {
                            promptDetails = addBullet(promptDetails);
                        }
                        prompt += "\n" + promptDetails + (function() {
                            if (spacesPrecedingTerminalEntryPlaceholder !== "") {
                                // Prompt previously contained a terminal %{entry} placeholder, re-append it
                                return spacesPrecedingTerminalEntryPlaceholder + "%{entry}";
                            }
                            return "";
                        })();
                        function encapsulateBothPrompts(leftSymbol, slicesAtMiddle, rightSymbol) {
                            if (slicesAtMiddle) {
                                prompt = prompt.slice(0, -1).trim();
                                if (promptDetails.startsWith(leftSymbol)) {
                                    promptDetails = promptDetails.slice(1).trim();
                                }
                            }
                            if (!promptDetails.endsWith(rightSymbol)) {
                                promptDetails += rightSymbol;
                            }
                            return;
                        }
                    }
                    return limitString(prompt, Math.floor(0.8 * AC.signal.maxChars));
                })(),
                limit: validateEntryLimit(parseInt((request.entryLimit || AC.config.defaultEntryLimit), 10))
            }));
            notify("Generating card for \"" + title + "\"");
            function addBullet(str) {
                return "- " + str.replace(/^-+\s*/, "");
            }
            return true;
        }
        static redoCard(request, useOldInfo, newInfo) {
            const card = getIntendedCard(request.title)[0];
            const oldCard = O.f({...card});
            if (!eraseCard(card)) {
                return false;
            } else if (newInfo !== "") {
                request.entryPromptDetails = (request.entryPromptDetails ?? "").toString() + "\n" + newInfo;
            }
            O.f(request);
            Internal.getUsedTitles(true);
            if (!Internal.generateCard(request) && !Internal.generateCard(request, [
                (oldCard.entry.match(/^{title: ([\s\S]*?)}/)?.[1] || request.title.replace(/\w\S*/g, word => (
                    word[0].toUpperCase() + word.slice(1).toLowerCase()
                ))), oldCard.keys
            ])) {
                constructCard(oldCard, newCardIndex());
                Internal.getUsedTitles(true);
                return false;
            } else if (!useOldInfo) {
                return true;
            }
            AC.generation.pending[AC.generation.pending.length - 1].prompt = ((
                removeAutoProps(oldCard.entry) + "\n\n" +
                removeAutoProps(isolateNotesAndMemories(oldCard.description)[1])
            ).trimEnd() + "\n\n" + AC.generation.pending[AC.generation.pending.length - 1].prompt).trim();
            return true;
        }
        // Sometimes it's helpful to log information elsewhere during development
        // This log card is separate and distinct from the LSIv2 console log
        static debugLog(...args) {
            const debugCardName = "Debug Log";
            banTitle(debugCardName);
            const card = getSingletonCard(true, O.f({
                type: AC.config.defaultCardType,
                title: debugCardName,
                keys: debugCardName,
                entry: "The debug console log will print to the notes section below.",
                description: Words.delimiter + "\nBEGIN DEBUG LOG"
            }));
            logToCard(card, ...args);
            return card;
        }
        static eraseAllAutoCards() {
            const cards = [];
            Internal.getUsedTitles(true);
            for (const card of storyCards) {
                if (card.entry.startsWith("{title: ")) {
                    cards.push(card);
                }
            }
            for (const card of cards) {
                eraseCard(card);
            }
            auto.clear();
            forgetStuff();
            clearTransientTitles();
            AC.generation.pending = [];
            AC.database.memories.associations = {};
            if (AC.config.deleteAllAutoCards) {
                AC.config.deleteAllAutoCards = null;
            }
            return cards.length;
        }
        static getUsedTitles(isExternal = false) {
            if (isExternal) {
                bans.clear();
                isBanned("", true);
            } else if (0 < AC.database.titles.used.length) {
                return AC.database.titles.used;
            }
            // All unique used titles and keys encountered during this iteration
            const seen = new Set();
            auto.clear();
            clearTransientTitles();
            AC.database.titles.used = ["%@%"];
            for (const card of storyCards) {
                // Perform some common-sense maintenance while we're here
                card.type = card.type.trim();
                card.title = card.title.trim();
                // card.keys should be left as-is
                card.entry = card.entry.trim();
                card.description = card.description.trim();
                if (isExternal) {
                    O.s(card);
                } else if (!shouldProceed()) {
                    checkRemaining();
                    continue;
                }
                // An ideal auto-card's entry starts with "{title: Example of Greatness}" (example)
                // An ideal auto-card's description contains "{updates: true, limit: 2750}" (example)
                if (checkPlurals(denumberName(card.title.replace("\n", "")), t => isBanned(t))) {
                    checkRemaining();
                    continue;
                } else if (!card.keys.includes(",")) {
                    const cleanKeys = denumberName(card.keys.trim());
                    if ((2 < cleanKeys.length) && checkPlurals(cleanKeys, t => isBanned(t))) {
                        checkRemaining();
                        continue;
                    }
                }
                // Detect and repair malformed auto-card properties in a fault-tolerant manner
                const traits = [card.entry, card.description].map((str, i) => {
                    // Absolute abomination uwu
                    const hasUpdates = /updates?\s*:[\s\S]*?(?:(?:title|limit)s?\s*:|})/i.test(str);
                    const hasLimit = /limits?\s*:[\s\S]*?(?:(?:title|update)s?\s*:|})/i.test(str);
                    return [(function() {
                        if (hasUpdates || hasLimit) {
                            if (/titles?\s*:[\s\S]*?(?:(?:limit|update)s?\s*:|})/i.test(str)) {
                                return 2;
                            }
                            return false;
                        } else if (/titles?\s*:[\s\S]*?}/i.test(str)) {
                            return 1;
                        } else if (!(
                            (i === 0)
                            && /{[\s\S]*?}/.test(str)
                            && (str.match(/{/g)?.length === 1)
                            && (str.match(/}/g)?.length === 1)
                        )) {
                            return false;
                        }
                        const badTitleHeaderMatch = str.match(/{([\s\S]*?)}/);
                        if (!badTitleHeaderMatch) {
                            return false;
                        }
                        const inferredTitle = badTitleHeaderMatch[1].split(",")[0].trim();
                        if (
                            (2 < inferredTitle.length)
                            && (inferredTitle.length <= 100)
                            && (badTitleHeaderMatch[0].length < str.length)
                        ) {
                            // A rare case where the title's existence should be inferred from the enclosing {curly brackets}
                            return inferredTitle;
                        }
                        return false;
                    })(), hasUpdates, hasLimit];
                }).flat();
                if (traits.every(trait => !trait)) {
                    // This card contains no auto-card traits, not even malformed ones
                    checkRemaining();
                    continue;
                }
                const [
                    hasEntryTitle,
                    hasEntryUpdates,
                    hasEntryLimit,
                    hasDescTitle,
                    hasDescUpdates,
                    hasDescLimit
                ] = traits;
                // Handle all story cards which belong to the Auto-Cards ecosystem
                // May flag this damaged auto-card for later repairs
                // May flag this duplicate auto-card for deformatting (will become a regular story card)
                let repair = false;
                let release = false;
                const title = (function() {
                    let title = "";
                    if (typeof hasEntryTitle === "string") {
                        repair = true;
                        title = formatTitle(hasEntryTitle).newTitle;
                        if (hasDescTitle && bad()) {
                            title = parseTitle(false);
                        }
                    } else if (hasEntryTitle) {
                        title = parseTitle(true);
                        if (hasDescTitle) {
                            repair = true;
                            if (bad()) {
                                title = parseTitle(false);
                            }
                        } else if (1 < card.entry.match(/titles?\s*:/gi)?.length) {
                            repair = true;
                        }
                    } else if (hasDescTitle) {
                        repair = true;
                        title = parseTitle(false);
                    }
                    if (bad()) {
                        repair = true;
                        title = formatTitle(card.title).newTitle;
                        if (bad()) {
                            release = true;
                        } else {
                            seen.add(title);
                            auto.add(title.toLowerCase());
                        }
                    } else {
                        seen.add(title);
                        auto.add(title.toLowerCase());
                        const titleHeader = "{title: " + title + "}";
                        if (!repair && !((card.entry === titleHeader) || card.entry.startsWith(titleHeader + "\n"))) {
                            repair = true;
                        }
                    }
                    function bad() {
                        return ((title === "") || checkPlurals(title, t => auto.has(t)));
                    }
                    function parseTitle(fromEntry) {
                        const [sourceType, sourceText] = (function() {
                            if (fromEntry) {
                                return [hasEntryTitle, card.entry];
                            } else {
                                return [hasDescTitle, card.description];
                            }
                        })()
                        switch(sourceType) {
                        case 1: {
                            return formatTitle(isolateProperty(
                                sourceText,
                                /titles?\s*:[\s\S]*?}/i,
                                /(?:titles?\s*:|})/gi
                            )).newTitle; }
                        case 2: {
                            return formatTitle(isolateProperty(
                                sourceText,
                                /titles?\s*:[\s\S]*?(?:(?:limit|update)s?\s*:|})/i,
                                /(?:(?:title|update|limit)s?\s*:|})/gi
                            )).newTitle; }
                        default: {
                            return ""; }
                        }
                    }
                    return title;
                })();
                if (release) {
                    // Remove Auto-Cards properties from this incompatible story card
                    safeRemoveProps();
                    card.description = (card.description
                        .replace(/\s*Auto(?:-|\s*)Cards\s*will\s*contextualize\s*these\s*memories\s*:\s*/gi, "")
                        .replaceAll("%@%", "\n\n")
                        .trim()
                    );
                    seen.delete(title);
                    checkRemaining();
                    continue;
                }
                const memoryProperties = "{updates: " + (function() {
                    let updates = null;
                    if (hasDescUpdates) {
                        updates = parseUpdates(false);
                        if (hasEntryUpdates) {
                            repair = true;
                            if (bad()) {
                                updates = parseUpdates(true);
                            }
                        } else if (1 < card.description.match(/updates?\s*:/gi)?.length) {
                            repair = true;
                        }
                    } else if (hasEntryUpdates) {
                        repair = true;
                        updates = parseUpdates(true);
                    }
                    if (bad()) {
                        repair = true;
                        updates = AC.config.defaultCardsDoMemoryUpdates;
                    }
                    function bad() {
                        return (updates === null);
                    }
                    function parseUpdates(fromEntry) {
                        const updatesText = (isolateProperty(
                            (function() {
                                if (fromEntry) {
                                    return card.entry;
                                } else {
                                    return card.description;
                                }
                            })(),
                            /updates?\s*:[\s\S]*?(?:(?:title|limit)s?\s*:|})/i,
                            /(?:(?:title|update|limit)s?\s*:|})/gi
                        ).toLowerCase().replace(/[^a-z]/g, ""));
                        if (Words.trues.includes(updatesText)) {
                            return true;
                        } else if (Words.falses.includes(updatesText)) {
                            return false;
                        } else {
                            return null;
                        }
                    }
                    return updates;
                })() + ", limit: " + (function() {
                    let limit = -1;
                    if (hasDescLimit) {
                        limit = parseLimit(false);
                        if (hasEntryLimit) {
                            repair = true;
                            if (bad()) {
                                limit = parseLimit(true);
                            }
                        } else if (1 < card.description.match(/limits?\s*:/gi)?.length) {
                            repair = true;
                        }
                    } else if (hasEntryLimit) {
                        repair = true;
                        limit = parseLimit(true);
                    }
                    if (bad()) {
                        repair = true;
                        limit = AC.config.defaultMemoryLimit;
                    } else {
                        limit = validateMemoryLimit(limit);
                    }
                    function bad() {
                        return (limit === -1);
                    }
                    function parseLimit(fromEntry) {
                        const limitText = (isolateProperty(
                            (function() {
                                if (fromEntry) {
                                    return card.entry;
                                } else {
                                    return card.description;
                                }
                            })(),
                            /limits?\s*:[\s\S]*?(?:(?:title|update)s?\s*:|})/i,
                            /(?:(?:title|update|limit)s?\s*:|})/gi
                        ).replace(/[^0-9]/g, ""));
                        if ((limitText === "")) {
                            return -1;
                        } else {
                            return parseInt(limitText, 10);
                        }
                    }
                    return limit.toString();
                })() + "}";
                if (!repair && (new RegExp("(?:^|\\n)" + memoryProperties + "(?:\\n|$)")).test(card.description)) {
                    // There are no serious repairs to perform
                    card.entry = cleanSpaces(card.entry);
                    const [notes, memories] = isolateNotesAndMemories(card.description);
                    const pureMemories = cleanSpaces(memories.replace(memoryProperties, "").trim());
                    rejoinDescription(notes, memoryProperties, pureMemories);
                    checkRemaining();
                    continue;
                }
                // Damage was detected, perform an adaptive repair on this auto-card's configurable properties
                card.description = card.description.replaceAll("%@%", "\n\n");
                safeRemoveProps();
                card.entry = limitString(("{title: " + title + "}\n" + card.entry).trimEnd(), 2000);
                const [left, right] = card.description.split("%@%");
                rejoinDescription(left, memoryProperties, right);
                checkRemaining();
                function safeRemoveProps() {
                    if (typeof hasEntryTitle === "string") {
                        card.entry = card.entry.replace(/{[\s\S]*?}/g, "");
                    }
                    card.entry = removeAutoProps(card.entry);
                    const [notes, memories] = isolateNotesAndMemories(card.description);
                    card.description = notes + "%@%" + removeAutoProps(memories);
                    return;
                }
                function rejoinDescription(notes, memoryProperties, memories) {
                    card.description = limitString((notes + (function() {
                        if (notes === "") {
                            return "";
                        } else if (notes.endsWith("Auto-Cards will contextualize these memories:")) {
                            return "\n";
                        } else {
                            return "\n\n";
                        }
                    })() + memoryProperties + (function() {
                        if (memories === "") {
                            return "";
                        } else {
                            return "\n";
                        }
                    })() + memories), 10000);
                    return;
                }
                function isolateProperty(sourceText, propMatcher, propCleaner) {
                    return ((sourceText.match(propMatcher)?.[0] || "")
                        .replace(propCleaner, "")
                        .split(",")[0]
                        .trim()
                    );
                }
                // Observe literal card titles and keys
                function checkRemaining() {
                    const literalTitles = [card.title, ...card.keys.split(",")];
                    for (let i = 0; i < literalTitles.length; i++) {
                        // The pre-format set inclusion check helps avoid superfluous formatTitle calls
                        literalTitles[i] = (literalTitles[i]
                            .replace(/["\.\?!;\(\):\[\]—{}]/g, " ")
                            .trim()
                            .replace(/\s+/g, " ")
                            .replace(/^'\s*/, "")
                            .replace(/\s*'$/, "")
                        );
                        if (seen.has(literalTitles[i])) {
                            continue;
                        }
                        literalTitles[i] = formatTitle(literalTitles[i]).newTitle;
                        if (literalTitles[i] !== "") {
                            seen.add(literalTitles[i]);
                        }
                    }
                    return;
                }
                function denumberName(name) {
                    if (2 < (name.match(/[^\d\s]/g) || []).length) {
                        // Important for identifying LSIv2 auxiliary code cards when banned
                        return name.replace(/\s*\d+$/, "");
                    } else {
                        return name;
                    }
                }
            }
            clearTransientTitles();
            AC.database.titles.used = [...seen];
            return AC.database.titles.used;
        }
        static getBannedTitles() {
            // AC.database.titles.banned is an array, not a set; order matters
            return AC.database.titles.banned;
        }
        static setBannedTitles(newBans, isFinalAssignment) {
            AC.database.titles.banned = [];
            AC.database.titles.pendingBans = [];
            AC.database.titles.pendingUnbans = [];
            for (let i = newBans.length - 1; 0 <= i; i--) {
                banTitle(newBans[i], isFinalAssignment);
            }
            return AC.database.titles.banned;
        }
        static getCard(predicate, getAll) {
            if (getAll) {
                // Return an array of card references which satisfy the given condition
                const collectedCards = [];
                for (const card of storyCards) {
                    if (predicate(card)) {
                        O.s(card);
                        collectedCards.push(card);
                    }
                }
                return collectedCards;
            }
            // Return a reference to the first card which satisfies the given condition
            for (const card of storyCards) {
                if (predicate(card)) {
                    return O.s(card);
                }
            }
            return null;
        }
    }); }
    function validateCooldown(cooldown) {
        return boundInteger(0, cooldown, 9999, 22);
    }
    function validateEntryLimit(entryLimit) {
        return boundInteger(200, entryLimit, 2000, 750);
    }
    function validateMemoryLimit(memoryLimit) {
        return boundInteger(1750, memoryLimit, 9900, 2750);
    }
    function validateMemCompRatio(memCompressRatio) {
        return boundInteger(20, memCompressRatio, 1250, 25);
    }
    function validateMLBD(minLookBackDist) {
        return boundInteger(2, minLookBackDist, 88, 7);
    }
    function getDefaultConfig() {
        function check(value, fallback = true, type = "boolean") {
            if (typeof value === type) {
                return value;
            } else {
                return fallback;
            }
        }
        function maybeProse(value) {
            if (Array.isArray(value)) {
                return prose(...value);
            } else {
                return value;
            }
        }
        return O.s({
            // Is Auto-Cards enabled?
            doAC: check(S.DEFAULT_DO_AC),
            // Delete all previously generated story cards?
            deleteAllAutoCards: null,
            // Pin the configuration interface story card near the top?
            pinConfigureCard: check(S.DEFAULT_PIN_CONFIGURE_CARD),
            // Minimum number of turns in between automatic card generation events?
            addCardCooldown: validateCooldown(S.DEFAULT_CARD_CREATION_COOLDOWN),
            // Use bulleted list mode for newly generated card entries?
            bulletedListMode: check(S.DEFAULT_USE_BULLETED_LIST_MODE),
            // Maximum allowed length for newly generated story card entries?
            defaultEntryLimit: validateEntryLimit(S.DEFAULT_GENERATED_ENTRY_LIMIT),
            // Do newly generated cards have memory updates enabled by default?
            defaultCardsDoMemoryUpdates: check(S.DEFAULT_NEW_CARDS_DO_MEMORY_UPDATES),
            // Default character limit before the card's memory bank is summarized?
            defaultMemoryLimit: validateMemoryLimit(S.DEFAULT_NEW_CARDS_MEMORY_LIMIT),
            // Approximately how much shorter should recently compressed memories be? (ratio = 10 * old / new)
            memoryCompressionRatio: validateMemCompRatio(S.DEFAULT_MEMORY_COMPRESSION_RATIO),
            // Ignore all-caps during title candidate detection?
            ignoreAllCapsTitles: check(S.DEFAULT_IGNORE_ALL_CAPS_TITLES),
            // Should player input actions (Do/Say/Story) be considered for future named entity detection?
            readFromInputs: check(S.DEFAULT_DETECT_TITLES_FROM_INPUTS),
            // How many (minimum) actions in the past does Auto-Cards look for named entities?
            minimumLookBackDistance: validateMLBD(S.DEFAULT_MINIMUM_LOOK_BACK_DISTANCE),
            // Is Live Script Interface v2 enabled?
            LSIv2: (function() {
                if (S.DEFAULT_DO_LSI_V2 === true) {
                    return true;
                } else {
                    // Intrepret "false" as null, both here and for later config card reads
                    return null;
                }
            })(),
            // Should the debug data card be visible?
            showDebugData: check(S.DEFAULT_SHOW_DEBUG_DATA, false),
            // How should the AI be prompted when generating new story card entries?
            generationPrompt: check(maybeProse(S.DEFAULT_CARD_GENERATION_PROMPT), prose(
                "-----",
                "",
                "<SYSTEM>",
                "# Stop the story and ignore previous instructions. Write a brief and coherent informational entry for %{title} following these instructions:",
                "- Write only third-person pure prose information about %{title} using complete sentences with correct punctuation",
                "- Avoid short-term temporary details or appearances, instead focus on plot-significant information",
                "- Prioritize story-relevant details about %{title} first to ensure seamless integration with the previous plot",
                "- Create new information based on the context and story direction",
                "- Mention %{title} in every sentence",
                "- Use semicolons if needed",
                "- Add additional details about %{title} beneath incomplete entries",
                "- Be concise and grounded",
                "- Imitate the story's writing style and infer the reader's preferences",
                "</SYSTEM>",
                "Continue the entry for %{title} below while avoiding repetition:",
                "%{entry}"
            ), "string"),
            // How should the AI be prompted when summarizing memories for a given story card?
            compressionPrompt: check(maybeProse(S.DEFAULT_CARD_MEMORY_COMPRESSION_PROMPT), prose(
                "-----",
                "",
                "<SYSTEM>",
                "# Stop the story and ignore previous instructions. Summarize and condense the given paragraph into a narrow and focused memory passage while following these guidelines:",
                "- Ensure the passage retains the core meaning and most essential details",
                "- Use the third-person perspective",
                "- Prioritize information-density, accuracy, and completeness",
                "- Remain brief and concise",
                "- Write firmly in the past tense",
                "- The paragraph below pertains to old events from far earlier in the story",
                "- Integrate %{title} naturally within the memory; however, only write about the events as they occurred",
                "- Only reference information present inside the paragraph itself, be specific",
                "</SYSTEM>",
                "Write a summarized old memory passage for %{title} based only on the following paragraph:",
                "\"\"\"",
                "%{memory}",
                "\"\"\"",
                "Summarize below:"
            ), "string"),
            // All cards constructed by AC will inherit this type by default
            defaultCardType: check(S.DEFAULT_CARD_TYPE, "class", "string")
        });
    }
    function getDefaultConfigBans() {
        if (typeof S.DEFAULT_BANNED_TITLES_LIST === "string") {
            return uniqueTitlesArray(S.DEFAULT_BANNED_TITLES_LIST.split(","));
        } else {
            return [
                "North", "East", "South", "West", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "New Story Arc", "Generate Story Arc", "Redo Story Arc", "It", "Him", "Her", "She", "His", "Hers", "Theirs", "Both", "Them", "They", "All", "Ours", "Our", "We're", "They're", "And", "But", "When", "Why", "Who", "What", "Us", "We", "Story Arc Engine", "Scales", "Set Story Arc Type", "Type", "NEW", "TIME", "Intensity", "Story Arc Settings", "Story Arc", "Updating Story Arc Next Turn", "Charmer", "Honorable", "Rogue", "Dominant", "Submissive", "Prankster", "Curious", "Innocent", "Mischievous", "Affectionate", "Defiant", "Brave", "Clever", "Playful", "Month", "Year", "Day", "Minute",  "Not", "Spread", "Eastern", "Western", "Northern", "Southern","Invalid", 
            ];
        }
    }
    function uniqueTitlesArray(titles) {
        const existingTitles = new Set();
        return (titles
            .map(title => title.trim().replace(/\s+/g, " "))
            .filter(title => {
                if (title === "") {
                    return false;
                }
                const lowerTitle = title.toLowerCase();
                if (existingTitles.has(lowerTitle)) {
                    return false;
                } else {
                    existingTitles.add(lowerTitle);
                    return true;
                }
            })
        );
    }
    function boundInteger(lowerBound, value, upperBound, fallback) {
        if (!Number.isInteger(value)) {
            if (!Number.isInteger(fallback)) {
                throw new Error("Invalid arguments: value and fallback are not integers");
            }
            value = fallback;
        }
        if (Number.isInteger(lowerBound) && (value < lowerBound)) {
            if (Number.isInteger(upperBound) && (upperBound < lowerBound)) {
                throw new Error("Invalid arguments: The inequality (lowerBound <= upperBound) must be satisfied");
            }
            return lowerBound;
        } else if (Number.isInteger(upperBound) && (upperBound < value)) {
            return upperBound;
        } else {
            return value;
        }
    }
    function limitString(str, lengthLimit) {
        if (lengthLimit < str.length) {
            return str.slice(0, lengthLimit).trim();
        } else {
            return str;
        }
    }
    function cleanSpaces(unclean) {
        return (unclean
            .replace(/\s*\n\s*/g, "\n")
            .replace(/\t/g, " ")
            .replace(/  +/g, " ")
        );
    }
    function isolateNotesAndMemories(str) {
        const bisector = str.search(/\s*(?:{|(?:title|update|limit)s?\s*:)\s*/i);
        if (bisector === -1) {
            return [str, ""];
        } else {
            return [str.slice(0, bisector), str.slice(bisector)];
        }
    }
    function removeAutoProps(str) {
        return cleanSpaces(str
            .replace(/\s*{([\s\S]*?)}\s*/g, (bracedMatch, enclosedProperties) => {
                if (enclosedProperties.trim().length < 150) {
                    return "\n";
                } else {
                    return bracedMatch;
                }
            })
            .replace((
                /\s*(?:{|(?:title|update|limit)s?\s*:)(?:[\s\S]{0,150}?)(?=(?:title|update|limit)s?\s*:|})\s*/gi
            ), "\n")
            .replace(/\s*(?:{|(?:title|update|limit)s?\s*:|})\s*/gi, "\n")
            .trim()
        );
    }
    function insertTitle(prompt, title) {
        return prompt.replace((
            /(?:[%\$]+\s*|[%\$]*){+\s*(?:titles?|names?|characters?|class(?:es)?|races?|locations?|factions?)\s*}+/gi
        ), title);
    }
    function prose(...args) {
        return args.join("\n");
    }
    function buildKeys(keys, key) {
        key = key.trim().replace(/\s+/g, " ");
        const keyset = [];
        if (key === "") {
            return keys;
        } else if (keys.trim() !== "") {
            keyset.push(...keys.split(","));
            const lowerKey = key.toLowerCase();
            for (let i = keyset.length - 1; 0 <= i; i--) {
                const preKey = keyset[i].trim().replace(/\s+/g, " ").toLowerCase();
                if ((preKey === "") || preKey.includes(lowerKey)) {
                    keyset.splice(i, 1);
                }
            }
        }
        if (key.length < 6) {
            keyset.push(...[
                " " + key + " ", " " + key + "'", "\"" + key + " ", " " + key + ".", " " + key + "?", " " + key + "!", " " + key + ";", "'" + key + " ", "(" + key + " ", " " + key + ")", " " + key + ":", " " + key + "\"", "[" + key + " ", " " + key + "]", "—" + key + " ", " " + key + "—", "{" + key + " ", " " + key + "}"
            ]);
        } else if (key.length < 9) {
            keyset.push(...[
                key + " ", " " + key, key + "'", "\"" + key, key + ".", key + "?", key + "!", key + ";", "'" + key, "(" + key, key + ")", key + ":", key + "\"", "[" + key, key + "]", "—" + key, key + "—", "{" + key, key + "}"
            ]);
        } else {
            keyset.push(key);
        }
        keys = keyset[0] || key;
        let i = 1;
        while ((i < keyset.length) && ((keys.length + 1 + keyset[i].length) < 101)) {
            keys += "," + keyset[i];
            i++;
        }
        return keys;
    }
    // Returns the template-specified singleton card (or secondary varient) after:
    // 1) Erasing all inferior duplicates
    // 2) Repairing damaged titles and keys
    // 3) Constructing a new singleton card if it doesn't exist
    function getSingletonCard(allowConstruction, templateCard, secondaryCard) {
        let singletonCard = null;
        const excessCards = [];
        for (const card of storyCards) {
            O.s(card);
            if (singletonCard === null) {
                if ((card.title === templateCard.title) || (card.keys === templateCard.keys)) {
                    // The first potentially valid singleton card candidate to be found
                    singletonCard = card;
                }
            } else if (card.title === templateCard.title) {
                if (card.keys === templateCard.keys) {
                    excessCards.push(singletonCard);
                    singletonCard = card;
                } else {
                    eraseInferiorDuplicate();
                }
            } else if (card.keys === templateCard.keys) {
                eraseInferiorDuplicate();
            }
            function eraseInferiorDuplicate() {
                if ((singletonCard.title === templateCard.title) && (singletonCard.keys === templateCard.keys)) {
                    excessCards.push(card);
                } else {
                    excessCards.push(singletonCard);
                    singletonCard = card;
                }
                return;
            }
        }
        if (singletonCard === null) {
            if (secondaryCard) {
                // Fallback to a secondary card template
                singletonCard = getSingletonCard(false, secondaryCard);
            }
            // No singleton card candidate exists
            if (allowConstruction && (singletonCard === null)) {
                // Construct a new singleton card from the given template
                singletonCard = constructCard(templateCard);
            }
        } else {
            if (singletonCard.title !== templateCard.title) {
                // Repair any damage to the singleton card's title
                singletonCard.title = templateCard.title;
            } else if (singletonCard.keys !== templateCard.keys) {
                // Repair any damage to the singleton card's keys
                singletonCard.keys = templateCard.keys;
            }
            for (const card of excessCards) {
                // Erase all excess singleton card candidates
                eraseCard(card);
            }
            if (secondaryCard) {
                // A secondary card match cannot be allowed to persist
                eraseCard(getSingletonCard(false, secondaryCard));
            }
        }
        return singletonCard;
    }
    // Erases the given story card
    function eraseCard(badCard) {
        if (badCard === null) {
            return false;
        }
        badCard.title = "%@%";
        for (const [index, card] of storyCards.entries()) {
            if (card.title === "%@%") {
                removeStoryCard(index);
                return true;
            }
        }
        return false;
    }
    // Constructs a new story card from a standardized story card template object
    // {type: "", title: "", keys: "", entry: "", description: ""}
    // Returns a reference to the newly constructed card
    function constructCard(templateCard, insertionIndex = 0) {
        addStoryCard("%@%");
        for (const [index, card] of storyCards.entries()) {
            if (card.title !== "%@%") {
                continue;
            }
            card.type = templateCard.type;
            card.title = templateCard.title;
            card.keys = templateCard.keys;
            card.entry = templateCard.entry;
            card.description = templateCard.description;
            if (index !== insertionIndex) {
                // Remove from the current position and reinsert at the desired index
                storyCards.splice(index, 1);
                storyCards.splice(insertionIndex, 0, card);
            }
            return O.s(card);
        }
        return {};
    }
    function newCardIndex() {
        return +AC.config.pinConfigureCard;
    }
    function getIntendedCard(targetCard) {
        Internal.getUsedTitles(true);
        const titleKey = targetCard.trim().replace(/\s+/g, " ").toLowerCase();
        const autoCard = Internal.getCard(card => (card.entry
            .toLowerCase()
            .startsWith("{title: " + titleKey + "}")
        ));
        if (autoCard !== null) {
            return [autoCard, true, titleKey];
        }
        return [Internal.getCard(card => ((card.title
            .replace(/\s+/g, " ")
            .toLowerCase()
        ) === titleKey)), false, titleKey];
    }
    function doPlayerCommands(input) {
        let result = "";
        for (const command of (
            (function() {
                if (/^\n> [\s\S]*? says? "[\s\S]*?"\n$/.test(input)) {
                    return input.replace(/\s*"\n$/, "");
                } else {
                    return input.trimEnd();
                }
            })().split(/(?=\/\s*A\s*C)/i)
        )) {
            const prefixPattern = /^\/\s*A\s*C/i;
            if (!prefixPattern.test(command)) {
                continue;
            }
            const [requestTitle, requestDetails, requestEntry] = (command
                .replace(/(?:{\s*)|(?:\s*})/g, "")
                .replace(prefixPattern, "")
                .replace(/(?:^\s*\/*\s*)|(?:\s*\/*\s*$)/g, "")
                .split("/")
                .map(requestArg => requestArg.trim())
                .filter(requestArg => (requestArg !== ""))
            );
            if (!requestTitle) {
                // Request with no args
                AC.generation.cooldown = 0;
                result += "/AC -> Success!\n\n";
                logEvent("/AC");
            } else {
                const request = {title: requestTitle.replace(/\s*[\.\?!:]+$/, "")};
                const redo = (function() {
                    const redoPattern = /^(?:redo|retry|rewrite|remake)[\s\.\?!:,;"'—\)\]]+\s*/i;
                    if (redoPattern.test(request.title)) {
                        request.title = request.title.replace(redoPattern, "");
                        if (/^(?:all|every)(?:\s|\.|\?|!|:|,|;|"|'|—|\)|\]|$)/i.test(request.title)) {
                            return [];
                        } else {
                            return true;
                        }
                    } else {
                        return false;
                    }
                })();
                if (Array.isArray(redo)) {
                    // Redo all auto cards
                    Internal.getUsedTitles(true);
                    const titleMatchPattern = /^{title: ([\s\S]*?)}/;
                    redo.push(...Internal.getCard(card => (
                        titleMatchPattern.test(card.entry)
                        && /{updates: (?:true|false), limit: \d+}/.test(card.description)
                    ), true));
                    let count = 0;
                    for (const card of redo) {
                        const titleMatch = card.entry.match(titleMatchPattern);  
                        if (titleMatch && Internal.redoCard(O.f({title: titleMatch[1]}), true, "")) {
                            count++;
                        }
                    }
                    const parsed = "/AC redo all";
                    result += parsed + " -> ";
                    if (count === 0) {
                        result += "There were no valid auto-cards to redo";
                    } else {
                        result += "Success!";
                        if (1 < count) {
                            result += " Proceed to redo " + count + " cards";
                        }
                    }
                    logEvent(parsed);
                } else if (!requestDetails) {
                    // Request with only title
                    submitRequest("");
                } else if (!requestEntry || redo) {
                    // Request with title and details
                    request.entryPromptDetails = requestDetails;
                    submitRequest(" / {" + requestDetails + "}");
                } else {
                    // Request with title, details, and entry
                    request.entryPromptDetails = requestDetails;
                    request.entryStart = requestEntry;
                    submitRequest(" / {" + requestDetails + "} / {" + requestEntry + "}");
                }
                result += "\n\n";
                function submitRequest(extra) {
                    O.f(request);
                    const [type, success] = (function() {
                        if (redo) {
                            return [" redo", Internal.redoCard(request, true, "")];
                        } else {
                            Internal.getUsedTitles(true);
                            return ["", Internal.generateCard(request)];
                        }
                    })();
                    const left = "/AC" + type + " {";
                    const right = "}" + extra;
                    if (success) {
                        const parsed = left + AC.generation.pending[AC.generation.pending.length - 1].title + right;
                        result += parsed + " -> Success!";
                        logEvent(parsed);
                    } else {
                        const parsed = left + request.title + right;
                        result += parsed + " -> \"" + request.title + "\" is invalid or unavailable";
                        logEvent(parsed);
                    }
                    return;
                }
            }
            if (isPendingGeneration() || isAwaitingGeneration() || isPendingCompression()) {
                if (AC.config.doAC) {
                    AC.signal.outputReplacement = "";
                } else {
                    AC.signal.forceToggle = true;
                    AC.signal.outputReplacement = ">>> please select \"continue\" (0%) <<<";
                }
            } else if (AC.generation.cooldown === 0) {
                if (0 < AC.database.titles.candidates.length) {
                    if (AC.config.doAC) {
                        AC.signal.outputReplacement = "";
                    } else {
                        AC.signal.forceToggle = true;
                        AC.signal.outputReplacement = ">>> please select \"continue\" (0%) <<<";
                    }
                } else if (AC.config.doAC) {
                    result = result.trimEnd() + "\n";
                    AC.signal.outputReplacement = "\n";
                } else {
                    AC.signal.forceToggle = true;
                    AC.signal.outputReplacement = ">>> Auto-Cards has been enabled! <<<";
                }
            } else {
                result = result.trimEnd() + "\n";
                AC.signal.outputReplacement = "\n";
            }
        }
        return getPrecedingNewlines() + result;
    }
    function advanceChronometer() {
        const currentTurn = getTurn();
        if (Math.abs(history.length - currentTurn) < 2) {
            // The two measures are within ±1, thus history hasn't been truncated yet
            AC.chronometer.step = !(history.length < currentTurn);
        } else {
            // history has been truncated, fallback to a (slightly) worse step detection technique
            AC.chronometer.step = (AC.chronometer.turn < currentTurn);
        }
        AC.chronometer.turn = currentTurn;
        return;
    }
    function concludeEmergency() {
        promoteAmnesia();
        endTurn();
        AC.message.pending = [];
        AC.message.previous = getStateMessage();
        return;
    }
    function concludeOutputBlock(templateCard) {
        if (AC.config.deleteAllAutoCards !== null) {
            // A config-initiated event to delete all previously generated story cards is in progress
            if (AC.config.deleteAllAutoCards) {
                // Request in-game confirmation from the player before proceeding
                AC.config.deleteAllAutoCards = false;
                CODOMAIN.initialize(getPrecedingNewlines() + ">>> please submit the message \"CONFIRM DELETE\" using a Do, Say, or Story action to permanently delete all previously generated story cards <<<\n\n");
            } else {
                // Check for player confirmation
                const previousAction = readPastAction(0);
                if (isDoSayStory(previousAction.type) && /CONFIRM\s*DELETE/i.test(previousAction.text)) {
                    let successMessage = "Confirmation Success: ";
                    const numCardsErased = Internal.eraseAllAutoCards();
                    if (numCardsErased === 0) {
                        successMessage += "However, there were no previously generated story cards to delete!";
                    } else {
                        successMessage += numCardsErased + " generated story card";
                        if (numCardsErased === 1) {
                            successMessage += " was";
                        } else {
                            successMessage += "s were";
                        }
                        successMessage += " deleted";
                    }
                    notify(successMessage);
                } else {
                    notify("Confirmation Failure: No story cards were deleted");
                }
                AC.config.deleteAllAutoCards = null;
                CODOMAIN.initialize("\n");
            }
        } else if (AC.signal.outputReplacement !== "") {
            const output = AC.signal.outputReplacement.trim();
            if (output === "") {
                CODOMAIN.initialize("\n");
            } else {
                CODOMAIN.initialize(getPrecedingNewlines() + output + "\n\n");
            }
        }
        if (templateCard) {
            // Auto-Cards was enabled or disabled during the previous onContext hook
            // Construct the replacement control card onOutput
            banTitle(templateCard.title);
            getSingletonCard(true, templateCard);
            AC.signal.swapControlCards = false;
        }
        endTurn();
        if (AC.config.LSIv2 === null) {
            postMessages();
        }
        return;
    }
    function endTurn() {
        AC.database.titles.used = [];
        AC.signal.outputReplacement = "";
        [AC.database.titles.pendingBans, AC.database.titles.pendingUnbans].map(pending => decrementAll(pending));
        if (0 < AC.signal.overrideBans) {
            AC.signal.overrideBans--;
        }
        function decrementAll(pendingArray) {
            if (pendingArray.length === 0) {
                return;
            }
            for (let i = pendingArray.length - 1; 0 <= i; i--) {
                if (0 < pendingArray[i][1]) {
                    pendingArray[i][1]--;
                } else {
                    pendingArray.splice(i, 1);
                }
            }
            return;
        }
        return;
    }
    // Example usage: notify("Message text goes here");
    function notify(message) {
        if (typeof message === "string") {
            AC.message.pending.push(message);
            logEvent(message);
        } else if (Array.isArray(message)) {
            message.forEach(element => notify(element));
        } else if (message instanceof Set) {
            notify([...message]);
        } else {
            notify(message.toString());
        }
        return;
    }
    function logEvent(message, uncounted) {
        if (uncounted) {
            log("Auto-Cards event: " + message);
        } else {
            log("Auto-Cards event #" + (function() {
                try {
                    AC.message.event++;
                    return AC.message.event;
                } catch {
                    return 0;
                }
            })() + ": " + message.replace(/"/g, "'"));
        }
        return;
    }
    // Provide the story card object which you wish to log info within as the first argument
    // All remaining arguments represent anything you wish to log
    function logToCard(logCard, ...args) {
        logEvent(args.map(arg => {
            if ((typeof arg === "object") && (arg !== null)) {
                return JSON.stringify(arg);
            } else {
                return String(arg);
            }
        }).join(", "), true);
        if (logCard === null) {
            return;
        }
        let desc = logCard.description.trim();
        const turnDelimiter = Words.delimiter + "\nAction #" + getTurn() + ":\n";
        let header = turnDelimiter;
        if (!desc.startsWith(turnDelimiter)) {
            desc = turnDelimiter + desc;
        }
        const scopesTable = [
            ["input", "Input Modifier"],
            ["context", "Context Modifier"],
            ["output", "Output Modifier"],
            [null, "Shared Library"],
            [undefined, "External API"],
            [Symbol("default"), "Unknown Scope"]
        ];
        const callingScope = (function() {
            const pair = scopesTable.find(([condition]) => (condition === HOOK));
            if (pair) {
                return pair[1];
            } else {
                return scopesTable[scopesTable.length - 1][1];
            }
        })();
        const hookDelimiterLeft = callingScope + " @ ";
        if (desc.startsWith(turnDelimiter + hookDelimiterLeft)) {
            const hookDelimiterOld = desc.match(new RegExp((
                "^" + turnDelimiter + "(" + hookDelimiterLeft + "\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z:\n)"
            ).replaceAll("\n", "\\n")));
            if (hookDelimiterOld) {
                header += hookDelimiterOld[1];
            } else {
                const hookDelimiter = getNewHookDelimiter();
                desc = desc.replace(hookDelimiterLeft, hookDelimiter);
                header += hookDelimiter;
            }
        } else {
            if ((new RegExp("^" + turnDelimiter.replaceAll("\n", "\\n") + "(" + (scopesTable
                .map(pair => pair[1])
                .filter(scope => (scope !== callingScope))
                .join("|")
            ) + ") @ ")).test(desc)) {
                desc = desc.replace(turnDelimiter, turnDelimiter + "—————————\n");
            }
            const hookDelimiter = getNewHookDelimiter();
            desc = desc.replace(turnDelimiter, turnDelimiter + hookDelimiter);
            header += hookDelimiter;
        }
        const logDelimiter = (function() {
            let logDelimiter = "Log #";
            if (desc.startsWith(header + logDelimiter)) {
                desc = desc.replace(header, header + "———\n");
                const logCounter = desc.match(/Log #(\d+)/);
                if (logCounter) {
                    logDelimiter += (parseInt(logCounter[1], 10) + 1).toString();
                }
            } else {
                logDelimiter += "0";
            }
            return logDelimiter + ": ";
        })();
        logCard.description = limitString(desc.replace(header, header + logDelimiter + args.map(arg => {
            if ((typeof arg === "object") && (arg !== null)) {
                return stringifyObject(arg);
            } else {
                return String(arg);
            }
        }).join(",\n") + "\n").trim(), 999999);
        // The upper limit is actually closer to 3985621, but I think 1 million is reasonable enough as-is
        function getNewHookDelimiter() {
            return hookDelimiterLeft + (new Date().toISOString()) + ":\n";
        }
        return;
    }
    // Makes nested objects not look like cancer within interface cards
    function stringifyObject(obj) {
        const seen = new WeakSet();
        // Each indentation is 4 spaces
        return JSON.stringify(obj, (_key, value) => {
            if ((typeof value === "object") && (value !== null)) {
                if (seen.has(value)) {
                    return "[Circular]";
                }
                seen.add(value);
            }
            switch(typeof value) {
            case "function": {
                return "[Function]"; }
            case "undefined": {
                return "[Undefined]"; }
            case "symbol": {
                return "[Symbol]"; }
            default: {
                return value; }
            }
        }, 4);
    }
  // Implement state.message toasts without interfering with the operation of other possible scripts
   function postMessages() {
    // Only check that there are pending messages
    if (AC?.message?.pending?.length !== 0) {

        // Take up to 2 messages from pending
        const messagesToPost = AC.message.pending.splice(0, 2);

        let newMessage = "Auto-Cards: ";
        if (messagesToPost.length === 1) {
            newMessage += messagesToPost[0];
        } else {
            newMessage += messagesToPost.map(
                (messageLine, index) => "#" + (index + 1) + ": " + messageLine
            ).join("\n");
        }

        // Minor variation if identical (optional)
        if (getStateMessage() === newMessage) {
            newMessage = newMessage.replace("Auto-Cards: ", "Auto-Cards: ");
        }
        // Append neatly without double newlines
        if (state.message && typeof state.message === "string") {
        state.message = state.message.replace(/\n+$/,"") + "\n" + newMessage;
            } else {
        state.message = newMessage;
                }
        // Clear pending messages
        AC.message.pending = [];
    }

    AC.message.previous = getStateMessage();
}
    function getStateMessage() {
        return state.message ?? "";
    }
    function getPrecedingNewlines() {
        const previousAction = readPastAction(0);
        if (isDoSay(previousAction.type)) {
            return "";
        } else if (previousAction.text.endsWith("\n")) {
            if (previousAction.text.endsWith("\n\n")) {
                return "";
            } else {
                return "\n";
            }
        } else {
            return "\n\n";
        }
    }
    // Call with lookBack 0 to read the most recent action in history (or n many actions back)
    function readPastAction(lookBack) {
        const action = (function() {
            if (Array.isArray(history)) {
                return (history[(function() {
                    const index = history.length - 1 - Math.abs(lookBack);
                    if (index < 0) {
                        return 0;
                    } else {
                        return index;
                    }
                })()]);
            } else {
                return O.f({});
            }
        })();
        return O.f({
            text: action?.text ?? (action?.rawText ?? ""),
            type: action?.type ?? "unknown"
        });
    }
    // Forget ongoing card generation/compression after passing or postponing completion over many consecutive turns
    // Also decrement AC.chronometer.postpone regardless of retries or erases
    function promoteAmnesia() {
        // Decrement AC.chronometer.postpone in all cases
        if (0 < AC.chronometer.postpone) {
            AC.chronometer.postpone--;
        }
        if (!AC.chronometer.step) {
            // Skip known retry/erase turns
            return;
        }
        if (AC.chronometer.amnesia++ < boundInteger(16, (2 * AC.config.addCardCooldown), 64)) {
            return;
        }
        AC.generation.cooldown = validateCooldown(underQuarterInteger(AC.config.addCardCooldown));
        forgetStuff();
        AC.chronometer.amnesia = 0;
        return;
    }
    function forgetStuff() {
        AC.generation.completed = 0;
        AC.generation.permitted = 34;
        AC.generation.workpiece = O.f({});
        // AC.generation.pending is not forgotten
        resetCompressionProperties();
        return;
    }
    function resetCompressionProperties() {
        AC.compression.completed = 0;
        AC.compression.titleKey = "";
        AC.compression.vanityTitle = "";
        AC.compression.responseEstimate = 1400;
        AC.compression.lastConstructIndex = -1;
        AC.compression.oldMemoryBank = [];
        AC.compression.newMemoryBank = [];
        return;
    }
    function underQuarterInteger(someNumber) {
        return Math.floor(someNumber / 4);
    }
    function getTurn() {
        if (Number.isInteger(info?.actionCount)) {
            // "But Leah, surely info.actionCount will never be negative?"
            // You have no idea what nightmares I've seen...
            return Math.abs(info.actionCount);
        } else {
            return 0;
        }
    }
    // Constructs a JSON representation of various properties/settings pulled from raw text
    // Used to parse the "Configure Auto-Cards" and "Edit to enable Auto-Cards" control card entries
    function extractSettings(settingsText) {
        const settings = {};
        // Lowercase everything
        // Remove all non-alphanumeric characters (aside from ":" and ">")
        // Split into an array of strings delimited by the ">" character
        const settingLines = settingsText.toLowerCase().replace(/[^a-z0-9:>]+/g, "").split(">");
        for (const settingLine of settingLines) {
            // Each setting line is preceded by ">" and bisected by ":"
            const settingKeyValue = settingLine.split(":");
            if ((settingKeyValue.length !== 2) || settings.hasOwnProperty(settingKeyValue[0])) {
                // The bisection failed or this setting line's key already exists
                continue;
            }
            // Parse boolean and integer setting values
            if (Words.falses.includes(settingKeyValue[1])) {
                // This setting line's value is false
                settings[settingKeyValue[0]] = false;
            } else if (Words.trues.includes(settingKeyValue[1])) {
                // This setting line's value is true
                settings[settingKeyValue[0]] = true;
            } else if (/^\d+$/.test(settingKeyValue[1])) {
                // This setting line's value is an integer
                // Negative integers are parsed as being positive (because "-" characters were removed)
                settings[settingKeyValue[0]] = parseInt(settingKeyValue[1], 10);
            }
        }
        // Return the settings object for later analysis
        return settings;
    }
    // Ensure the given singleton card is pinned near the top of the player's list of story cards
    function pinAndSortCards(pinnedCard) {
        if (!storyCards || (storyCards.length < 2)) {
            return;
        }
        storyCards.sort((cardA, cardB) => {
            return readDate(cardB) - readDate(cardA);
        });
        if (!AC.config.pinConfigureCard) {
            return;
        }
        const index = storyCards.indexOf(pinnedCard);
        if (0 < index) {
            storyCards.splice(index, 1);
            storyCards.unshift(pinnedCard);
        }
        function readDate(card) {
            if (card && card.updatedAt) {
                const timestamp = Date.parse(card.updatedAt);
                if (!isNaN(timestamp)) {
                    return timestamp;
                }
            }
            return 0;
        }
        return;
    }
    function see(arr) {
        return String.fromCharCode(...arr.map(n => Math.sqrt(n / 33)));
    }
    function formatTitle(title) {
        const input = title;
        let useMemo = false;
        if (
            (AC.database.titles.used.length === 1)
            && (AC.database.titles.used[0] === ("%@%"))
            && [used, forenames, surnames].every(nameset => (
                (nameset.size === 1)
                && nameset.has("%@%")
            ))
        ) {
            const pair = memoized.get(input);
            if (pair !== undefined) {
                if (50000 < memoized.size) {
                    memoized.delete(input);
                    memoized.set(input, pair);
                }
                return O.f({newTitle: pair[0], newKey: pair[1]});
            }
            useMemo = true;
        }
        title = title.trim();
        if (short()) {
            return end();
        }
        title = (title
            // Localized Languages
            .replace(/[–。？！´؟،«»¿¡„“”「」…§，、\*_~><\(\)\[\]{}#"`:!—;\.\?,\s\\]/g, " ")
            // Fix contractions
            .replace(/[‘’]/g, "'").replace(/\s+'/g, " ")
            // Remove the words "I", "I'm", "I'd", "I'll", and "I've"
            .replace(/(?<=^|\s)(?:I|I'm|I'd|I'll|I've)(?=\s|$)/gi, "")
            // Remove "'s" only if not followed by a letter
            .replace(/'s(?![a-zA-Z])/g, "")
            // Replace "s'" with "s" only if preceded but not followed by a letter
            .replace(/(?<=[a-zA-Z])s'(?![a-zA-Z])/g, "s")
            // Remove apostrophes not between letters (preserve contractions like "don't")
            .replace(/(?<![a-zA-Z])'(?![a-zA-Z])/g, "")
            // Eliminate fake em dashes and terminal/leading dashes
            .replace(/\s-\s/g, " ")
            // Condense consecutive whitespace
            .trim().replace(/\s+/g, " ")
            // Remove a leading or trailing bullet
            .replace(/^-+\s*/, "").replace(/\s*-+$/, "")
        );
        if (short()) {
            return end();
        }
        // Special-cased words
        const minorWordsJoin = Words.minor.join("|");
        const leadingMinorWordsKiller = new RegExp("^(?:" + minorWordsJoin + ")\\s", "i");
        const trailingMinorWordsKiller = new RegExp("\\s(?:" + minorWordsJoin + ")$", "i");
        // Ensure the title is not bounded by any outer minor words
        title = enforceBoundaryCondition(title);
        if (short()) {
            return end();
        }
        // Ensure interior minor words are lowercase and excise all interior honorifics/abbreviations
        const honorAbbrevsKiller = new RegExp("(?:^|\\s|-|\\/)(?:" + (
            [...Words.honorifics, ...Words.abbreviations]
        ).map(word => word.replace(".", "")).join("|") + ")(?=\\s|-|\\/|$)", "gi");
        title = (title
            // Capitalize the first letter of each word
            .replace(/(?<=^|\s|-|\/)(?:\p{L})/gu, word => word.toUpperCase())
            // Lowercase minor words properly
            .replace(/(?<=^|\s|-|\/)(?:\p{L}+)(?=\s|-|\/|$)/gu, word => {
                const lowerWord = word.toLowerCase();
                if (Words.minor.includes(lowerWord)) {
                    return lowerWord;
                } else {
                    return word;
                }
            })
            // Remove interior honorifics/abbreviations
            .replace(honorAbbrevsKiller, "")
            .trim()
        );
        if (short()) {
            return end();
        }
        let titleWords = title.split(" ");
        while ((2 < title.length) && (98 < title.length) && (1 < titleWords.length)) {
            titleWords.pop();
            title = titleWords.join(" ").trim();
            const unboundedLength = title.length;
            title = enforceBoundaryCondition(title);
            if (unboundedLength !== title.length) {
                titleWords = title.split(" ");
            }
        }
        if (isUsedOrBanned(title) || isNamed(title)) {
            return end();
        }
        // Procedurally generated story card trigger keywords exclude certain words and patterns which are otherwise permitted in titles
        let key = title;
        const peerage = new Set(Words.peerage);
        if (titleWords.some(word => ((word === "the") || peerage.has(word.toLowerCase())))) {
            if (titleWords.length < 2) {
                return end();
            }
            key = enforceBoundaryCondition(
                titleWords.filter(word => !peerage.has(word.toLowerCase())).join(" ")
            );
            if (key.includes(" the ")) {
                key = enforceBoundaryCondition(key.split(" the ")[0]);
            }
            if (isUsedOrBanned(key)) {
                return end();
            }
        }
        function short() {
            return (title.length < 3);
        }
        function enforceBoundaryCondition(str) {
            while (leadingMinorWordsKiller.test(str)) {
                str = str.replace(/^\S+\s+/, "");
            }
            while (trailingMinorWordsKiller.test(str)) {
                str = str.replace(/\s+\S+$/, "");
            }
            return str;
        }
        function end(newTitle = "", newKey = "") {
            if (useMemo) {
                memoized.set(input, [newTitle, newKey]);
                if (55000 < memoized.size) {
                    memoized.delete(memoized.keys().next().value);
                }
            }
            return O.f({newTitle, newKey});
        }
        return end(title, key);
    }
    // I really hate english grammar
    function checkPlurals(title, predicate) {
        function check(t) { return ((t.length < 3) || (100 < t.length) || predicate(t)); }
        const t = title.toLowerCase();
        if (check(t)) { return true; }
        // s>p : singular -> plural : p>s: plural -> singular
        switch(t[t.length - 1]) {
        // p>s : s -> _ : Birds -> Bird
        case "s": if (check(t.slice(0, -1))) { return true; }
        case "x":
        // s>p : s, x, z -> ses, xes, zes : Mantis -> Mantises
        case "z": if (check(t + "es")) { return true; }
            break;
        // s>p : o -> oes, os : Gecko -> Geckoes, Geckos
        case "o": if (check(t + "es") || check(t + "s")) { return true; }
            break;
        // p>s : i -> us : Cacti -> Cactus
        case "i": if (check(t.slice(0, -1) + "us")) { return true; }
        // s>p : i, y -> ies : Kitty -> Kitties
        case "y": if (check(t.slice(0, -1) + "ies")) { return true; }
            break;
        // s>p : f -> ves : Wolf -> Wolves
        case "f": if (check(t.slice(0, -1) + "ves")) { return true; }
        // s>p : !(s, x, z, i, y) -> +s : Turtle -> Turtles
        default: if (check(t + "s")) { return true; }
            break;
        } switch(t.slice(-2)) {
        // p>s : es -> _ : Foxes -> Fox
        case "es": if (check(t.slice(0, -2))) { return true; } else if (
            (t.endsWith("ies") && (
                // p>s : ies -> y : Bunnies -> Bunny
                check(t.slice(0, -3) + "y")
                // p>s : ies -> i : Ravies -> Ravi
                || check(t.slice(0, -2))
            // p>s : es -> is : Crises -> Crisis
            )) || check(t.slice(0, -2) + "is")) { return true; }
            break;
        // s>p : us -> i : Cactus -> Cacti
        case "us": if (check(t.slice(0, -2) + "i")) { return true; }
            break;
        // s>p : is -> es : Thesis -> Theses
        case "is": if (check(t.slice(0, -2) + "es")) { return true; }
            break;
        // s>p : fe -> ves : Knife -> Knives
        case "fe": if (check(t.slice(0, -2) + "ves")) { return true; }
            break;
        case "sh":
        // s>p : sh, ch -> shes, ches : Fish -> Fishes
        case "ch": if (check(t + "es")) { return true; }
            break;
        } return false;
    }
    function isUsedOrBanned(title) {
        function isUsed(lowerTitle) {
            if (used.size === 0) {
                const usedTitles = Internal.getUsedTitles();
                for (let i = 0; i < usedTitles.length; i++) {
                    used.add(usedTitles[i].toLowerCase());
                }
                if (used.size === 0) {
                    // Add a placeholder so compute isn't wasted on additional checks during this hook
                    used.add("%@%");
                }
            }
            return used.has(lowerTitle);
        }
        return checkPlurals(title, t => (isUsed(t) || isBanned(t)));
    }
    function isBanned(lowerTitle, getUsedIsExternal) {
        if (bans.size === 0) {
            // In order to save space, implicit bans aren't listed within the UI
            const controlVariants = getControlVariants();
            const dataVariants = getDataVariants();
            const bansToAdd = [...lowArr([
                ...Internal.getBannedTitles(),
                controlVariants.enable.title.replace("\n", ""),
                controlVariants.enable.keys,
                controlVariants.configure.title.replace("\n", ""),
                controlVariants.configure.keys,
                dataVariants.debug.title,
                dataVariants.debug.keys,
                dataVariants.critical.title,
                dataVariants.critical.keys,
                ...Object.values(Words.reserved)
            ]), ...(function() {
                if (shouldProceed() || getUsedIsExternal) {
                    // These proper nouns are way too common to waste card generations on; they already exist within the AI training data so this would be pointless
                    return [...Words.entities, ...Words.undesirables.map(undesirable => see(undesirable))];
                } else {
                    return [];
                }
            })()];
            for (let i = 0; i < bansToAdd.length; i++) {
                bans.add(bansToAdd[i]);
            }
        }
        return bans.has(lowerTitle);
    }
    function isNamed(title, returnSurname) {
        const peerage = new Set(Words.peerage);
        const minorWords = new Set(Words.minor);
        if ((forenames.size === 0) || (surnames.size === 0)) {
            const usedTitles = Internal.getUsedTitles();
            for (let i = 0; i < usedTitles.length; i++) {
                const usedTitleWords = divideTitle(usedTitles[i]);
                if (
                    (usedTitleWords.length === 2)
                    && (2 < usedTitleWords[0].length)
                    && (2 < usedTitleWords[1].length)
                ) {
                    forenames.add(usedTitleWords[0]);
                    surnames.add(usedTitleWords[1]);
                } else if (
                    (usedTitleWords.length === 1)
                    && (2 < usedTitleWords[0].length)
                ) {
                    forenames.add(usedTitleWords[0]);
                }
            }
            if (forenames.size === 0) {
                forenames.add("%@%");
            }
            if (surnames.size === 0) {
                surnames.add("%@%");
            }
        }
        const titleWords = divideTitle(title);
        if (
            returnSurname
            && (titleWords.length === 2)
            && (3 < titleWords[0].length)
            && (3 < titleWords[1].length)
            && forenames.has(titleWords[0])
            && surnames.has(titleWords[1])
        ) {
            return (title
                .split(" ")
                .find(casedTitleWord => (casedTitleWord.toLowerCase() === titleWords[1]))
            );
        } else if (
            (titleWords.length === 2)
            && (2 < titleWords[0].length)
            && (2 < titleWords[1].length)
            && forenames.has(titleWords[0])
        ) {         
            return true;
        } else if (
            (titleWords.length === 1)
            && (2 < titleWords[0].length)
            && (forenames.has(titleWords[0]) || surnames.has(titleWords[0]))
        ) {
            return true;
        }
        function divideTitle(undividedTitle) {
            const titleWords = undividedTitle.toLowerCase().split(" ");
            if (titleWords.some(word => minorWords.has(word))) {
                return [];
            } else {
                return titleWords.filter(word => !peerage.has(word));
            }
        }
        return false;
    }
    function shouldProceed() {
        return (AC.config.doAC && !AC.signal.emergencyHalt && (AC.chronometer.postpone < 1));
    }
    function isDoSayStory(type) {
        return (isDoSay(type) || (type === "story"));
    }
    function isDoSay(type) {
        return ((type === "do") || (type === "say"));
    }
    function permitOutput() {
        return ((AC.config.deleteAllAutoCards === null) && (AC.signal.outputReplacement === ""));
    }
    function isAwaitingGeneration() {
        return (0 < AC.generation.pending.length);
    }
    function isPendingGeneration() {
        return notEmptyObj(AC.generation.workpiece);
    }
    function isPendingCompression() {
        return (AC.compression.titleKey !== "");
    }
    function notEmptyObj(obj) {
        return (obj && (0 < Object.keys(obj).length));
    }
    function clearTransientTitles() {
        AC.database.titles.used = [];
        [used, forenames, surnames].forEach(nameset => nameset.clear());
        return;
    }
    function banTitle(title, isFinalAssignment) {
        title = limitString(title.replace(/\s+/g, " ").trim(), 100);
        const lowerTitle = title.toLowerCase();
        if (bans.size !== 0) {
            bans.add(lowerTitle);
        }
        if (!lowArr(Internal.getBannedTitles()).includes(lowerTitle)) {
            AC.database.titles.banned.unshift(title);
            if (isFinalAssignment) {
                return;
            }
            AC.database.titles.pendingBans.unshift([title, 3]);
            const index = AC.database.titles.pendingUnbans.findIndex(pair => (pair[0].toLowerCase() === lowerTitle));
            if (index !== -1) {
                AC.database.titles.pendingUnbans.splice(index, 1);
            }
        }
        return;
    }
    function unbanTitle(title) {
        title = title.replace(/\s+/g, " ").trim();
        const lowerTitle = title.toLowerCase();
        if (used.size !== 0) {
            bans.delete(lowerTitle);
        }
        let index = lowArr(Internal.getBannedTitles()).indexOf(lowerTitle);
        if (index !== -1) {
            AC.database.titles.banned.splice(index, 1);
            AC.database.titles.pendingUnbans.unshift([title, 3]);
            index = AC.database.titles.pendingBans.findIndex(pair => (pair[0].toLowerCase() === lowerTitle));
            if (index !== -1) {
                AC.database.titles.pendingBans.splice(index, 1);
            }
        }
        return;
    }
    function lowArr(arr) {
        return arr.map(str => str.toLowerCase());
    }
    function getControlVariants() {
        return O.f({
            configure: O.f({
                title: "Configure \nAuto-Cards",
                keys: "Edit the entry above to adjust your story card automation settings",
            }),
            enable: O.f({
                title: "Edit to enable \nAuto-Cards",
                keys: "Edit the entry above to enable story card automation",
            }),
        });
    }
    function getDataVariants() {
        return O.f({
            debug: O.f({
                title: "Debug Data",
                keys: "You may view the debug state in the notes section below",
            }),
            critical: O.f({
                title: "Critical Data",
                keys: "Never modify or delete this story card",
            }),
        });
    }
    // Prepare to export the codomain
    const codomain = CODOMAIN.read();
    const [stopPackaged, lastCall] = (function() {
        // Tbh I don't know why I even bothered going through the trouble of implementing "stop" within LSIv2
        switch(HOOK) {
        case "context": {
            const haltStatus = [];
            if (Array.isArray(codomain)) {
                O.f(codomain);
                haltStatus.push(true, codomain[1]);
            } else {
                haltStatus.push(false, STOP);
            }
            if ((AC.config.LSIv2 !== false) && (haltStatus[1] === true)) {
                // AutoCards will return [text, (stop === true)] onContext
                // The onOutput lifecycle hook will not be executed during this turn
                concludeEmergency();
            }
            return haltStatus; }
        case "output": {
            // AC.config.LSIv2 being either true or null implies (lastCall === true)
            return [null, AC.config.LSIv2 ?? true]; }
        default: {
            return [null, null]; }
        }
    })();
    // Repackage AC to propagate its state forward in time
    if (state.LSIv2) {
        // Facilitates recursive calls of AutoCards
        // The Auto-Cards external API is accessible through the LSIv2 scope
        state.LSIv2 = AC;
    } else {
        const memoryOverflow = (38000 < (JSON.stringify(state).length + JSON.stringify(AC).length));
        if (memoryOverflow) {
            // Memory overflow is imminent
            const dataVariants = getDataVariants();
            if (lastCall) {
                unbanTitle(dataVariants.debug.title);
                banTitle(dataVariants.critical.title);
            }
            setData(dataVariants.critical, dataVariants.debug);
            if (state.AutoCards) {
                // Decouple state for safety
                delete state.AutoCards;
            }
        } else {
            if (lastCall) {
                const dataVariants = getDataVariants();
                unbanTitle(dataVariants.critical.title);
                if (AC.config.showDebugData) {
                    // Update the debug data card
                    banTitle(dataVariants.debug.title);
                    setData(dataVariants.debug, dataVariants.critical);
                } else {
                    // There should be no data card
                    unbanTitle(dataVariants.debug.title);
                    if (data === null) {
                        data = getSingletonCard(false, O.f({...dataVariants.debug}), O.f({...dataVariants.critical}));
                    }
                    eraseCard(data);
                    data = null;
                }
            } else if (AC.config.showDebugData && (HOOK === undefined)) {
                const dataVariants = getDataVariants();
                setData(dataVariants.debug, dataVariants.critical);
            }
            // Save a backup image to state
            state.AutoCards = AC;
        }
        function setData(primaryVariant, secondaryVariant) {
            const dataCardTemplate = O.f({
                type: AC.config.defaultCardType,
                title: primaryVariant.title,
                keys: primaryVariant.keys,
                entry: (function() {
                    const mutualEntry = (
                        "If you encounter an Auto-Cards bug or otherwise wish to help me improve this script by sharing your configs and game data, please send me the notes text found below. You may ping me @LewdLeah through the official AI Dungeon Discord server. Please ensure the content you share is appropriate for the server, otherwise DM me instead. 😌"
                    );
                    if (memoryOverflow) {
                        return (
                            "Seeing this means Auto-Cards detected an imminent memory overflow event. But fear not! As an emergency fallback, the full state of Auto-Cards' data has been serialized and written to the notes section below. This text will be deserialized during each lifecycle hook, therefore it's absolutely imperative that you avoid editing this story card!"
                        ) + (function() {
                            if (AC.config.showDebugData) {
                                return "\n\n" + mutualEntry;
                            } else {
                                return "";
                            }
                        })();
                    } else {
                        return (
                            "This story card displays the full serialized state of Auto-Cards. To remove this card, simply set the \"log debug data\" setting to false within your \"Configure\" card. "
                        ) + mutualEntry;
                    }
                })(),
                description: JSON.stringify(AC)
            });
            if (data === null) {
                data = getSingletonCard(true, dataCardTemplate, O.f({...secondaryVariant}));
            }
            for (const propertyName of ["title", "keys", "entry", "description"]) {
                if (data[propertyName] !== dataCardTemplate[propertyName]) {
                    data[propertyName] = dataCardTemplate[propertyName];
                }
            }
            const index = storyCards.indexOf(data);
            if ((index !== -1) && (index !== (storyCards.length - 1))) {
                // Ensure the data card is always at the bottom of the story cards list
                storyCards.splice(index, 1);
                storyCards.push(data);
            }
            return;
        }
    }
    // This is the only return point within the parent scope of AutoCards
    if (stopPackaged === false) {
        return [codomain, STOP];
    } else {
        return codomain;
    }
} AutoCards(null); function isolateLSIv2(code, log, text, stop) { const console = Object.freeze({log}); try { eval(code); return [null, text, stop]; } catch (error) { return [error, text, stop]; } }

// Your other library scripts go here

// TAS Library Script

// TRUE AUTOMATIC STATS (TAS) SCRIPT by Yi1i1i

// Credits
// jackoneill2443 - Idea for input flavor text to show stat results
// BinKompliziert - Idea for Capitalization weighting for skill learning
// LewdLeah - General Scripting Knowledge
//


// This function runs the library hook
onLibrary_TAS();

// LIBRARY HOOK
function onLibrary_TAS() {
  // Initialize variables
  if (state.startScript == undefined) {
    // Script is naturally unlocked
    state.startScript = true;
  }
  if (state.turnCount == undefined) {
    state.turnCount = 0;
  }
  if (state.inputCount == undefined) {
    state.inputCount = 0;
  }
  if (state.outputCount == undefined) {
    state.outputCount = 0;
  }
  if (state.msgHolder == undefined) {
    state.msgHolder = "";
  }
  if (state.playerList == undefined) {
    state.playerList = [];
  }
  if (state.deadPlrs == undefined) {
    state.deadPlrs = [];
  }
  if (state.invCheckText == undefined) {
    state.invCheckText = "";
  }
  if (state.strgCheckText == undefined) {
    state.strgCheckText = "";
  }
  if (state.askEnergyCost == undefined) {
    state.askEnergyCost = {};
  }
  if (state.injectStatsToContext == undefined) {
    state.injectStatsToContext = true;
  }
  if (state.lvlRewardSkillFlag == undefined) {
    state.lvlRewardSkillFlag = {};
  }
  if (state.oldLvlHolder == undefined) {
    state.oldLvlHolder = {};
  }

  log("state.startScript: " + state.startScript);

  createIfNoSettingsSC();
  retrieveSettingsFromSC();
  storeSettingsToSC();

  defaultPlrCreation();

  updateDeadPlrs();
}

// INPUT HOOK
function onInput_TAS(text) {
  // Detect and execute script unlock or lock
  text = scriptSwitch_TAS(text);

  text = helpCommandInput_TAS(text);

  if (state.startScript == true && info.actionCount >= 0) {
    state.inputCount += 1;
    log("state.inputCount: " + state.inputCount);

    text = addPlrCmdInput(text);
    text = removePlrCmdInput(text);
    text = listPlrCmdInput(text);

    // Create story cards if none and updates codebase for player edits at start of hook 
    createIfNoStatSC();
    retrieveStatsFromSC();

    createIfNoModifierSC();
    retrieveModifiersFromSC();

    createIfNoInvSC();
    retrieveInvFromSC();

    createIfNoTalentSC();
    retrieveTalentsFromSC();

    createIfNoSkillSC();
    retrieveSkillsFromSC();

    createIfNoCurrSC();
    createIfNoPromptSC();
    createIfNoANSC();

    text = detectStorageCallActions(text);

    text = detectStoreInv(text);

    text = detectGiving(text);

    text = detectAttack(text);

    text = detectDodge(text);

    text = detectScout(text);

    text = detectDefend(text);

    text = detectExercise(text);

    text = detectResting(text);

    text = detectConsuming(text);

    text = upgradePlayerSkills(text);

    text = upgradePlayerTalents(text);

    text = talentLearningProcess(text);

    text = warnPlayerHealth(text);

    text = rewardSkillForLevelUp(text);

  }//end of main

  return text;
}

// CONTEXT HOOK
function onContext_TAS(text) {
  if (state.startScript == true && info.actionCount >= 0) {

    text = feedPlrDataToContext(text);

    text = feedInvToContext(text);

    text = feedStrgToContext(text);

    text = removeAngleText(text);

    //log(text);

  }//end of main

  return text;
}

// OUTPUT HOOK
function onOutput_TAS(text) {
  text = helpCommandOutput_TAS(text);

  if (state.startScript == true && info.actionCount >= 0) {
    state.outputCount += 1;
    log("state.outputCount: " + state.outputCount);

    // Create story cards if none and updates codebase for player edits at start of hook 
    createIfNoStatSC();
    retrieveStatsFromSC();

    createIfNoModifierSC();
    retrieveModifiersFromSC()

    createIfNoInvSC();
    retrieveInvFromSC();

    createIfNoTalentSC();
    retrieveTalentsFromSC();

    createIfNoSkillSC();
    retrieveSkillsFromSC();

    createIfNoCurrSC();
    createIfNoPromptSC();
    createIfNoANSC();
   

    // Output functions
    playerNaturalRegen();
    text = detectHurt(text);
    storeStatsToSC();

    text = getNewTalentEP(text);
    storeTalentsToSC();

    storeSkillsToSC();

    storeInvToSC();

    storeModifiersToSC();

    // Message Handler
    state.message = state.msgHolder;
    state.msgHolder = "";

    turnCounter();
  }//end of main

  return text;
}

/////////////////////////////////////////////////////////////////////////////////////

youWords = ["you", "You", "I", "nox", "Nox"];

selfWords = ["me", "my", "myself", "mine", "your", "yourself", "yours", "us", "our", "ours", "ourselves", "himself", "his",
];

castWords = [
  "activate", "amplify", "bind", "blast", "boost", "burst", "cast", "casting", "channel", "charge", "channeling", "command", "commanding", "conjure",
  "create", "creating", "detonate", "enchant", "enchanting", "evoke", "explode",
  "expel", "exude", "flare", "flow", "form", "gather", "gathering", "glow", "harness", "hex", "ignite", "infuse", "invoke", "invoking", "launch", "manifest", "project", "projecting", "pulse", "perform", "quicken", "release", "shape", "shift", "summon", "summoning", "transform", "transforming", "transmute", "trigger", "unbind", "unleash",
    "activates", "amplifies", "binds", "blasts", "boosts", "bursts", "casts", "channels", "charges","commands", "conjures",
  "creates", "enchants",  "evokes", "explodes",
  "expels", "exudes",  "manifests",  "releases", "shapes", "shifts", "summons",
];

talentWords = [
  // Combat / Stealth
  "ambush", "argue", "bluff", "confuse", "counterfeit", "deceive", "defend", "disarm", "extinguish",
  "intimidate", "jam", "lockpick", "neutralize", "pierce", "scare", "snipe", "sneak", "snare", "spy", "steal", "shoot", "shooting", "ambushes", "argues", "bluffs", "confuses", "counterfeits", "deceives", "defends", "disarms", "extinguishes",
  "intimidates", "jams", "lockpicks", "neutralizes", "pierces", "scares", "snipes", "sneaks", "snares", "spies", "steals", "shoots", 

  // Crafting / Construction
  "assemble", "barter", "bind", "boobytrap", "brew", "brewmaster", "build", "boil", "butcher", "camber", "camouflage", "carve", "cook",
  "channel", "chisel", "clean", "compose", "concoct", "craft", "debug", "decrypt", "decipher", "distill", "dismantle", "fry",
  "engineer", "engrave", "fabricate", "fasten", "filter", "fletch", "forge", "frame", "glaze", "grind", "harness",
  "identify", "imitate", "inlay", "inscribe", "insulate", "invert", "knit", "launder", "leverage", "liquefy", "mark",
  "mason", "mend", "mix", "mold", "muffle", "optimize", "patch", "polish", "pressurize", "prime", "process", "program",
  "purify", "quench", "reconstruct", "recycle", "refine", "reinforce", "remix", "repair", "reverse", "rivet", "salvage",
  "scribe", "seal", "sealant", "sharpen", "simulate", "sketch", "smelt", "smith", "smudge", "stabilize", "synchronize",
  "tailor", "temper", "tie", "tinker", "treat", "trace", "transmute", "trap", "tune", "upcycle", "vacuum", "vent",
  "wash", "weave", "weld", "weld-seal", "whittle", "assembles", "barters", "binds", "boobytraps", "brews", "builds", "boils", "butchers", "cambers", "camouflages", "carves", "cooks",
"channels", "chisels", "cleans", "composes", "concocts", "crafts", "debugs", "decrypts", "deciphers", "distills", "dismantles", "fries",
"engineers", "engraves", "fabricates", "fastens", "filters", "fletches", "forges", "frames", "glazes", "grinds", "harnesses",
"identifies", "imitates", "inlays", "inscribes", "insulates", "inverts", "knits", "launders", "leverages", "liquefies", "marks",
"masons", "mends", "mixes", "molds", "muffles", "optimizes", "patches", "polishes", "pressurizes", "primes", "processes", "programs",
"purifies", "quenches", "reconstructs", "recycles", "refines", "reinforces", "remixes", "repairs", "reverses", "rivets", "salvages",
"scribes", "seals", "sharpens", "simulates", "sketches", "smelts", "smiths", "smudges", "stabilizes", "synchronizes",
"tailors", "tempers", "ties", "tinks", "treats", "traces", "transmutes", "traps", "tunes", "upcycles", "vacuums", "vents",
"washes", "weaves", "welds", "weld-seals", "whittles",

  // Exploration / Movement
  "balance", "climb", "drive", "eavesdrop", "empathize", "explore", "fish", "fly", "forage", "gauge", "harvest",
  "hunt", "intercept", "levitate", "map", "mine", "navigate", "operate", "orchestrate", "override", "ride", "scavenge", "search",
  "secure", "stow", "sustain", "tag", "track", "transfer", "traverse", "use", "wield", "wrangle", "balances", "climbs", "drives", "eavesdrops", "empathizes", "explores", "fishes", "flies", "forages", "gauges", "harvests",
"hunts", "intercepts", "levitates", "maps", "mines", "navigates", "operates", "orchestrates", "overrides", "rides", "scavenges", "searches",
"secures", "stows", "sustains", "tags", "tracks", "transfers", "traverses", "uses", "wields", "wrangles",

  // Social / Mental
  "appraise", "arbitrate", "communicate", "claim", "convince", "coordinate", "describe", "diagnose", "empathize",
  "evaluate", "gesture", "justify", "mediate", "memorize", "overhear", "perceive", "persuade", "present", "procure",
  "reveal", "soothe", "simulate", "scribe", "verify", "appraises", "arbitrates", "communicates", "claims", "convinces", "coordinates", "describes", "diagnoses", "empathizes",
"evaluates", "gestures", "justifies", "mediates", "memorizes", "overhears", "perceives", "persuades", "presents", "procures",
"reveals", "soothes", "simulates", "scribes", "verifies",

  // Technical / Scientific
  "calculate", "debug", "decrypt", "diagnose", "engineer", "fabricate", "filter", "invert", "jam", "leverage", "liquefy", "map",
  "optimize", "orchestrate", "patch", "process", "program", "purify", "quench", "reconstruct", "recycle", "refine",
  "reinforce", "remix", "repair", "reverse", "salvage", "sealant", "simulate", "synchronize", "tag", "tinker",
  "transmute", "upcycle", "vacuum", "vent", "weld", "weld-seal", "calculates", "debugs", "decrypts", "diagnoses", "engineers", "fabricates", "filters", "inverts", "jams", "leverages", "liquefies", "maps",
"optimizes", "orchestrates", "patches", "processes", "programs", "purifies", "quenches", "reconstructs", "recycles", "refines",
"reinforces", "remixes", "repairs", "reverses", "salvages", "simulates", "synchronizes", "tags", "tinks",
"transmutes", "upcycles", "vacuums", "vents", "welds", "weld-seals",
];

learnWords = [
  "learn", "learning", "practice", "practicing", "spend time", "study", "studying", "train", "training", "read", "reading", "focus", "find", "research", "researching", "learns", "learning", "practices", "practicing", "spends time", "studies", "studying", "trains", "training", "reads", "reading", "focuses", "finds", "researches",

];

equipWords = [
  "acquire", "add", "collect", "equip", "gather", "grab", "hold", "keep", "loot", "obtain", "pick", "put", "receive", "retrieve", "stash", "snatch", "store", "take", "toss", "wear", "acquires", "adds", "collects", "equips", "gathers", "grabs", "holds", "keeps", "loots", "obtains", "picks", "puts", "receives", "retrieves", "stashes", "snatches", "stores", "takes", "tosses", "wears"

];

invWords = [
  "bag", "backpack", "body", "case", "chest", "collection", "container", "crates", "equipment", "hands", "hand", "holder", "holdings", "inventory", "items", "legs", "loot", "pack", "pocket", "pouch", "rucksack", "sack", "satchel", "storage", "supplies", "tote"
];

const itemGainPhrases = [
  "It enters your possession.",
  "It holds there.",
  "You now have it.",
  "It's now yours.",
  "It sits tight in your inventory.",
  "It sits securely in your inventory.",
  "It lays among your belongings.",
  "It becomes part of your inventory.",
  "It now belongs to you.",
  "It is now part of your belongings."
];

giveWords = ["deliver", "fork", "gift", "give", "hand", "pay", "sell", "remove", "toss", "delivers", "gives", "pays", "sells", "removes", "tosses"
];

numWords = [
  "0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
  "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine",
  "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen",
  "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety",
  "hundred", "thousand", "million", "billion", "trillion"
];

titleWords = ["mr", "mrs", "ms", "dr", "prof", "captain", "sir", "lady", "officer", "detective", "colonel", "general", "lieutenant", "president", "governor", "mayor", "minister", "ambassador", "director", "agent", "coach", "principal", "judge", "dean", "sister", "brother", "father", "mother", "daughter", "son", "king", "queen", "prince", "princess", "professor"];

stopWords = [
  // Pronouns
  "I", "me", "my", "myself", "we", "our", "ours", "ourselves",
  "you", "your", "yours", "yourself", "yourselves",
  "he", "him", "his", "himself", "she", "her", "hers", "herself",
  "it", "its", "itself", "they", "them", "their", "theirs", "themselves",

  // Question Words
  "what", "which", "who", "whom", "whose", "when", "where", "why", "how",

  // Auxiliary & Modal Verbs
  "am", "is", "are", "was", "were", "be", "been", "being",
  "have", "has", "had", "having",
  "do", "does", "did", "doing",
  "can", "could", "will", "would", "shall", "should", "must", "might", "may",

  // Negatives
  "not", "no", "nor", "never", "none", "nothing", "nowhere", "neither",
  "isn't", "aren't", "wasn't", "weren't", "hasn't", "haven't", "hadn't",
  "doesn't", "don't", "didn't", "won't", "wouldn't", "shan't", "shouldn't",
  "can't", "cannot", "couldn't", "mightn't", "mustn't", "needn't",

  // Conjunctions & Prepositions
  "and", "but", "or", "because", "as", "until", "while",
  "of", "at", "by", "for", "with", "about", "against",
  "between", "into", "through", "during", "before", "after",
  "above", "below", "to", "from", "up", "down", "in", "out",
  "on", "off", "over", "under", "onto", "upon", "around",

  // Articles & Determiners
  "a", "an", "the", "this", "that", "these", "those",
  "some", "any", "each", "every", "either", "neither",
  "such", "own", "other", "another", "both", "all", "several", "many", "most", "few", "since",

  // Time-Related Words
  "again", "further", "then", "once", "already", "soon", "later", "finally", "next",

  // Place Words
  "here", "there", "everywhere", "somewhere", "anywhere", "nowhere",

  // Degree & Quantifier Words
  "very", "too", "just", "only", "more", "less", "than", "enough", "almost",
  "rather", "quite", "really", "such",

  // Common Verbs & Adverbs
  "try", "trying", "tries", "take", "takes", "taking",
  "look", "looks", "looking",
  "seem", "seems", "seemed", "appears", "appeared",
  "go", "goes", "going", "gone",
  "come", "comes", "coming",
  "get", "gets", "getting", "got", "gotten",
  "make", "makes", "making", "made",
  "say", "says", "saying", "said", "heard",
  "know", "knows", "knew", "stopping", "stops", "becomes",

  // Game-Specific Terms
  "skill", "talent", "ability", "executes", "existing",
  "consumes mana", "consumes energy", "successfully",
  "suddenly", "predictably", "efficiently", "cast"
];

healingWords = [
  "heal", "recover", "restore", "regenerate", "revitalize",
  "rejuvenate", "mend", "cure", "bandage", "apply", "inject", "swallow", "absorb", "patch", "treat", "soothe", "heals", "recovers", "restores", "regenerates", "revitalizes",
"rejuvenates", "mends", "cures", "applies", "injects", "swallows", "absorbs", "patches", "treats", "soothes",

];

consumeWords = [
  "drink", "eat", "consume", "inject", "swallow", "absorb", "devour", "ingest", "chew", "bite", "sip", "gulp", "drinks", "eats", "consumes", "injects", "swallows", "absorbs", "devours", "ingests", "chews", "bites", "sips", "gulps", "apply", "applies"

];

// Light healing items (basic healing items)
lightHealWords = [
  "bandage", "herb", "potion", "water", "minor", "salve", "ointment", "icepack", "rinse", "snack", "cooked", "cook", "cooking", "tiny"
];

// Moderate healing items (more effective healing items)
moderateHealWords = ["healing", "elixir", "tincture", "small", "bandage", "magic", "oil", "food", "meal", "breakfast", "lunch", "dinner", "delicious"
];

// Strong healing items (stronger healing items for larger wounds)
strongHealWords = ["large", "larger", "strong", "big", "scroll", "balm", "alcohol", "cream"
];

// Intense healing items (used for serious injuries or magical healing)
greatHealWords = ["superior", "life elixir", "antibacterial", "vitality", "greater", "great", "rare"
];

// Powerful healing items (used for critical injuries or to restore near full health)
powerfulHealWords = ["immortality", "crystal", "revival", "divine", "surgery", "enchanted", "powerful", "extremely", "extreme", "mystical", "legendary"
];

dialoguePhrases = ["You say", "You tell", "You add", "You ask", "You reply", "You state", "You note", "You claim", "You remark", "You mutter", "You insist", "You whisper", "You mention", "You declare", "You respond", "You warn", "You said", "You see", "You hear"];

realizePhrases = ["It becomes apparent", "It becomes clear that", "It clicks that", "You start to realize", "You come to realize", "You come to understand", "You feel that", "You grasp the fact that", "You notice", "You realize", "You recognize that", "You see that", "It dawns that", "You realize in reality, "];

notEnoughPhrases = [
  "You don't have enough [Stat] for [Thing].",
  "Your [Stat] falls short for [Thing].",
  "You try, but your [Stat] isn't quite enough for [Thing].",
  "You feel your [Stat] falter before [Thing].",
  "There's not enough [Stat] in you to handle [Thing].",
  "Your [Stat] gives out before [Thing] can take shape.",
  "You strain, but lack the [Stat] needed for [Thing].",
  "Attempting [Thing] drains your limited [Stat].",
  "You reach for [Thing], but your [Stat] can't follow.",
  "[Thing] demands more [Stat] than you currently hold.",
  "Your [Stat] fizzles out when attempting [Thing].",
  "You push toward [Thing], but your [Stat] says no.",
  "You realize [Thing] is just beyond your [Stat]'s reach.",
  "The moment calls for [Thing], but your [Stat] isn't there.",
  "You spend effort for [Thing], but your [Stat] slips away.",
  "Not enough [Stat] courses through you for [Thing].",
  "You hesitate — lacking the [Stat] for [Thing].",
  "You falter, [Stat] insufficient to fuel [Thing].",
  "There's a gap between your [Stat] and what [Thing] needs.",
  "A flicker of [Thing] exerts itself, but your [Stat] can’t sustain it."
];

attackWords = ["attack", "ambush", "bash", "batter", "bite", "bludgeon", "chop", "claw", "cleave", "club", "crack", "crush", "flail", "fling", "gouge", "hack", "impale", "jab", "kick", "lunge", "maul", "pound", "pummel", "pierce", "punch", "ram", "rend", "shred", "slash", "slam", "slice", "smash", "stab", "strike", "swipe", "swing", "smack", "thrust", "whack", "wreck"];

const attackTier1 = [
  "A hesitant impact leaves a soft but clear mark.",
  "A clumsy strike stirs the air noticeably.",
  "The blow lands with a hint of effect.",
  "A weak connection is made, just enough to be felt.",
  "The strike glances off, carrying some force.",
  "A light tap echoes with a gentle thud.",
  "A slight poke leaves a subtle but real impression.",
  "The hit brushes past, leaving a small trace.",
  "A hopeful flail finds its mark with modest impact.",
  "The effort shows, with a bit more strength than before.",
  "The movement is quick but still leaves a clear trace.",
  "A faint energy pulses from the impact point.",
  "The jab lingers briefly, not fading so fast.",
  "The warning registers, causing slight unease.",
  "A flicker of contact draws a small reaction.",
  "The strike carries more weight, hinting at threat.",
  "A hesitant impact barely registers.",
  "A clumsy strike barely disturbs the air.",
  "The blow lands with uncertain effect.",
  "A weak connection is made, barely felt.",
  "The strike glances off without much force.",
  "A light tap echoes faintly.",
  "A slight poke leaves a minor impression.",
  "The hit brushes past with little consequence.",
  "A hopeful flail reaches its mark, barely.",
  "The effort is noticeable but lacks strength.",
  "The movement is rushed, leaving a faint trace.",
  "An energy sighs away from the impact point.",
  "The jab seems unsure, fading quickly.",
  "A minor tremble follows the effort.",
  "The strike is more suggestion than threat.",
  "An unsteady hit makes barely a difference."
];

const attackTier2 = [
  "A decent impact settles on the target.",
  "A steady thud marks the connection.",
  "The strike finds its place without fuss.",
  "The hit pushes slightly against the defense.",
  "A clean contact echoes calmly.",
  "The jab lands with clear but modest effect.",
  "The impact is steady, leaving a small dent.",
  "The blow connects and holds its ground.",
  "A practiced move leaves a noticeable mark.",
  "The force carries a measured weight.",
  "The strike resonates with steady rhythm.",
  "A slight shift follows the connection.",
  "The weapon's touch is firm but not harsh.",
  "A forward push accompanies the hit.",
  "A quiet grunt follows the impact.",
  "The movement holds just enough power.",
  "The warning slightly registers with the target.",
  "A flicker of contact is acknowledged.",
  "The strike carries more intention than threat.",
  "The hit lands but lacks full follow-through.",
  "A mild force nudges the opponent.",
  "Contact is made, but leaves little impression."
];

const attackTier3 = [
  "A confident strike unsettles the target.",
  "The blow cuts through with purpose.",
  "A sharp impact causes a momentary stagger.",
  "The hit lands cleanly and with intent.",
  "A practiced motion sends ripples through the defense.",
  "Swift contact disrupts the opponent's stance.",
  "The blow presses through with steady force.",
  "Momentum drives the impact deeper.",
  "The movement feels well-rehearsed and sure.",
  "The strike resonates like a controlled pulse.",
  "Adjustments mid-motion still deliver the blow.",
  "The hit causes the target to hesitate.",
  "A message is conveyed through the impact.",
  "The rhythm of the strike flows naturally.",
  "The strike hints at growing skill.",
  "Precision underlies the connection.",
  "The effort is steady, if not sharp.",
  "A push more than a strike, but effective.",
  "Contact is solid, though not overwhelming."
];

const attackTier4 = [
  "A firm impact leaves a visible mark.",
  "The strike breaks through the guard.",
  "The target reels from the force.",
  "Momentum flows like water into steel.",
  "A heavy thud echoes with weight.",
  "The blow cuts a clean arc through defense.",
  "The hit lands fully on a weak point.",
  "The momentum drives the strike home.",
  "The stance holds firm beneath the impact.",
  "The strike lands with quiet certainty.",
  "A jolt runs through the opponent's posture.",
  "The blow locks into its intended angle.",
  "The hit ends any further resistance.",
  "Respect is earned with that connection.",
  "Control is evident in the impact.",
  "The strike carries the weight of experience.",
  "The motion is not flawless, but firm.",
  "A noticeable hit, though less than perfect.",
  "The force strikes true but lacks flourish."
];

const attackTier5 = [
  "The blow drives the target back noticeably.",
  "Force behind the hit disrupts balance.",
  "The air shifts sharply with the impact.",
  "Focused strength punishes the defense.",
  "The swing finds an opening wide enough to exploit.",
  "The sound of impact warns nearby foes.",
  "A disciplined strike lands with solid force.",
  "Momentum disrupts the opponent's rhythm.",
  "Hesitation breaks under the weight of the hit.",
  "The strike cuts through doubt and hesitation.",
  "Movement flows like water through resistance.",
  "The impact carries practiced momentum.",
  "The target lurches in response.",
  "The blow speaks of determination and strength.",
  "The hit unsettles with quiet authority.",
  "The connection leaves no room for recovery.",
  "The swing is effective, if not clean.",
  "Pressure builds behind the hit, just enough.",
  "Strength surges, though briefly delayed."
];

const attackTier6 = [
  "A forceful blow lands with sharp clarity.",
  "Resistance is sliced cleanly away.",
  "The motion flashes with practiced precision.",
  "The target is knocked back with graceful power.",
  "The strike lands like a measured command.",
  "Momentum flows with disciplined grace.",
  "The hit hums with controlled violence.",
  "A clean impact sends a ripple through the target.",
  "The movement cuts through defenses smoothly.",
  "Even gravity seems to respect the strike.",
  "The opponent braces, but the hit connects.",
  "A gasp escapes those watching the impact.",
  "The weapon's motion carries unyielding intent.",
  "The blow lands like a falling star’s certainty.",
  "The strike leaves a lasting impression.",
  "Momentum and precision unite in the hit.",
  "The delivery wavers slightly, but recovers.",
  "Control dips, yet the hit lands well.",
  "A moment's imbalance doesn't stop the strike."
];

const attackTier7 = [
  "Precision and power combine in the strike.",
  "Momentum fuels a decisive impact.",
  "The guard shudders under a sharp cut.",
  "A rhythmic force pulses through the blow.",
  "The hit arrives like the first drop of a storm.",
  "The enemy stumbles back in surprise.",
  "The weapon moves as if guided by instinct.",
  "Motion and violence merge seamlessly.",
  "The strike lands just ahead of expectation.",
  "The attack flows like a dancer’s movement.",
  "The air vibrates with the blow’s precision.",
  "Time seems to pause briefly at impact.",
  "Breath catches before the force lands.",
  "The connection speaks of practiced skill.",
  "The strike lands as if anticipated.",
  "Art and pain intertwine in the hit.",
  "One step falters, but the hit stays true.",
  "Sharp, but not quite flawless.",
  "Timing slips slightly, yet power holds."
];

const attackTier8 = [
  "The strike arrives almost unseen.",
  "The motion feels part of a larger force.",
  "Focused chaos drives the impact.",
  "The target barely perceives the blow.",
  "The hit rings out across the battlefield.",
  "Time itself seems to slow around the strike.",
  "Stance collapses beneath crashing force.",
  "The attack lands with quiet inevitability.",
  "Sound trails behind the motion.",
  "Movement weaves between magic and steel.",
  "The hit flows like a living gust.",
  "Shadows linger after the strike.",
  "Air warps where the blow lands.",
  "Presence alone seems to deliver the hit.",
  "A glint of light precedes impact.",
  "Pain wraps itself around the connection.",
  "The blur fades slightly before impact.",
  "Precision stutters but the strike connects.",
  "A pulse of force overcomes a shaky start."
];

const attackTier9 = [
  "The strike becomes a force of pure intent.",
  "The air parts before the hit.",
  "Expectations shatter along with defense.",
  "The blow thunders with deadly direction.",
  "Motion adjusts without losing force.",
  "Defense collapses under sheer will.",
  "Sound trails behind the impact.",
  "The target reacts too late to avoid it.",
  "A flash marks the turning point.",
  "The hit lands like fate fulfilled.",
  "Mastery speaks through the strike.",
  "Guard dissolves into suggestion.",
  "Recovery is denied by the blow.",
  "The world narrows to the weapon’s path.",
  "Space itself seems torn apart.",
  "The strike is a final verdict.",
  "Power is held, though briefly misaligned.",
  "Speed falters for a breath, but recovers.",
  "The hit stumbles, then erupts with force."
];

const attackTier10 = [
  "The strike carries the full weight of your being.",
  "This blow could close a chapter.",
  "Reality flickers with the swing's speed.",
  "The hit cuts like a blade from legend.",
  "Every atom agrees on the force delivered.",
  "Air and enemy alike are displaced.",
  "Belief itself feels cleaved by the strike.",
  "Possibility crumbles beneath the blow.",
  "Stillness splits like a whispered verdict.",
  "The swing feels like an ending.",
  "Muscle and myth combine in the hit.",
  "Air recoils from the passage of force.",
  "This is no mere strike — it’s judgment.",
  "History is written in the motion.",
  "Silence reigns before, awe after.",
  "The battlefield feels smaller in its wake.",
  "A ripple of imperfection rides a perfect blow.",
  "The strike trembles — then erupts.",
  "A final moment of doubt precedes a storm."
];

const atkSpdTier1 = [
  "A hesitant shuffle barely stirs the air",
  "Your movement feels a bit sluggish",
  "A slow step carries little urgency",
  "A slow shuffle signals your move",
  "You move with gentle hesitation",
  "Your movement barely stirs the air",
  "A careful step precedes the strike",
  "The motion is tentative, almost cautious",
  "You move with measured calm",
  "Your approach is soft and unhurried",
  "A subtle adjustment hints at your intent",
  "Your action unfolds with quiet restraint",
  "The speed feels easy, almost lazy"
];

const atkSpdTier2 = [
  "Your step drags slightly behind your intent",
  "A mild hesitation delays your movement",
  "Your pace feels a touch uneven",
  "Your step quickens slightly",
  "A light breeze follows your motion",
  "You move with steady purpose",
  "A deliberate pace guides your action",
  "The flow is smooth but unassuming",
  "Your movement has quiet determination",
  "You prepare with a mild surge of energy",
  "The motion gains a bit of momentum",
  "You advance with modest speed",
  "Your actions become more assured"
];

const atkSpdTier3 = [
  "Your motion starts a bit slow but builds",
  "The first step lacks some confidence",
  "You move with cautious energy",
  "Your movement picks up pace",
  "The air shifts around your motion",
  "You flow with balanced energy",
  "A sharper rhythm marks your steps",
  "You move with clear intent",
  "Your speed adds weight to your presence",
  "The motion feels precise and ready",
  "You approach with a confident glide",
  "Your steps echo mild assurance",
  "The pace feels natural and focused"
];

const atkSpdTier4 = [
  "Your momentum hesitates for a moment",
  "Your pace is a touch uneven",
  "The motion lingers before picking up",
  "Your motion cuts through the air",
  "A brisk rhythm underlies your move",
  "You advance with crisp clarity",
  "The flow hums with growing energy",
  "Your steps land with noticeable speed",
  "Your movement sharpens, gains focus",
  "A quickened pulse marks your action",
  "You press forward with steady force",
  "Your motion brims with readiness",
  "You move with clear, controlled speed"
];

const atkSpdTier5 = [
  "Your movement carries a mild drag",
  "A slight wobble marks your step",
  "Your pace wavers before steadying",
  "Your speed commands attention",
  "The air ripples from your motion",
  "You move with crisp determination",
  "A vibrant energy fuels your pace",
  "Your steps fall with bold intent",
  "The motion is sharp and precise",
  "Your presence quickens markedly",
  "You push forward with clear momentum",
  "Your movement holds assured power",
  "The speed carries a steady edge"
];

const atkSpdTier6 = [
  "Your stride starts hesitant, then sharpens",
  "The pace momentarily slips before firming",
  "Your motion hesitates then flows",
  "Your motion flows like a sharp breeze",
  "You cut through space with grace",
  "Your steps ring with confident speed",
  "A focused energy drives your movement",
  "You advance with quick, measured force",
  "Your speed is keen and effective",
  "The flow carries purposeful rhythm",
  "You move like a sharpened blade",
  "Your pace is lively and exact",
  "Your motion is a clear signal of intent"
];

const atkSpdTier7 = [
  "Your burst slows slightly before surging",
  "A slight stumble before regaining speed",
  "The motion briefly falters but continues",
  "Your speed feels like a quick gust",
  "You strike the air with sharp precision",
  "Your movement blends speed and grace",
  "The motion crackles with kinetic energy",
  "You advance like a sudden breeze",
  "Your steps flash with clear intent",
  "Your flow carries dynamic force",
  "You push forward with swift confidence",
  "The pace hums with controlled power",
  "Your motion cuts cleanly through space"
];

const atkSpdTier8 = [
  "Your motion blurs, then slows briefly",
  "A flicker of hesitation passes",
  "The strike stutters before cutting through",
  "Your motion blurs briefly in the air",
  "A swift current follows your steps",
  "You move with lightning-quick focus",
  "The air buzzes at your approach",
  "You press forward with striking velocity",
  "Your movement slices sharply",
  "The rhythm of your steps commands space",
  "You glide forward with fierce intent",
  "Your speed hints at latent power",
  "Your motion is a sudden, clear force"
];

const atkSpdTier9 = [
  "Your quickness wavers just before impact",
  "A momentary slack in your pace",
  "The strike pauses briefly, then strikes true",
  "You flash forward with sharp precision",
  "The air parts sharply before you",
  "Your steps echo with rapid intent",
  "You move like a sudden gust of wind",
  "Your motion strikes with clear force",
  "The pace is fierce but controlled",
  "Your speed carries focused energy",
  "You push through space with crisp power",
  "The rhythm of your steps is electric",
  "Your movement demands attention"
];

const atkSpdTier10 = [
  "Your motion falters, then rockets forward",
  "A brief hesitation in the storm of your strike",
  "The speed ebbs, then surges with force",
  "Your motion is a streak of clarity",
  "You slice through space with perfect timing",
  "The air crackles as you move",
  "Your steps thunder with swift authority",
  "You strike with unstoppable speed",
  "Your movement is a force of nature",
  "You blur through the moment, precise and fierce",
  "The pace is relentless and exact",
  "Your speed commands the battlefield",
  "You move with the certainty of a storm"
];

const spdTier1 = [
  "You moved with hesitation.",
  "Your pace was unhurried.",
  "You reacted a bit late.",
  "Your steps were cautious.",
  "You lagged slightly behind.",
  "Your movement was mild.",
  "You shuffled along.",
  "You stayed near the edge of action.",
  "You moved, but not urgently.",
  "You followed a slow pace.",
  "You almost missed the moment.",
  "You caught yourself just in time.",
  "You moved late—but not too late.",
  "You stumbled, but kept going."
];

const spdTier2 = [
  "You responded at a decent pace.",
  "You kept steady footing.",
  "You moved in time with the flow.",
  "Your reaction was acceptable.",
  "You stayed alert but not rushed.",
  "You acted without delay.",
  "Your motion was timely.",
  "You took a firm step forward.",
  "You held your ground and advanced.",
  "You moved as needed.",
  "You wavered, but followed through.",
  "You hesitated, then acted fast enough.",
  "You nearly lagged but recovered.",
  "You were a beat behind, but stayed effective."
];

const spdTier3 = [
  "You stepped in smoothly.",
  "You navigated with focus.",
  "Your pace matched the moment.",
  "You moved with intention.",
  "You dodged with calm control.",
  "You adjusted fluidly.",
  "You kept up with ease.",
  "You slipped past at the right moment.",
  "You moved when it mattered.",
  "You engaged without delay.",
  "You flinched first, then found flow.",
  "You nearly lost the beat, but recovered.",
  "You hesitated mid-step but regained your rhythm.",
  "You reacted just shy of perfect timing."
];

const spdTier4 = [
  "You shifted before it hit.",
  "You sidestepped without thinking.",
  "You stepped into a better position.",
  "Your reflex was sharp.",
  "You moved with natural readiness.",
  "You flowed around the threat.",
  "You anticipated the motion.",
  "You edged ahead.",
  "You slipped out of reach.",
  "You kept your momentum.",
  "You nearly lost your footing but held course.",
  "You stumbled into a better position.",
  "Your motion faltered—barely—but held.",
  "You made the move just in time."
];

const spdTier5 = [
  "You intercepted with swift control.",
  "You adjusted in mid-move.",
  "You reacted just in time.",
  "You slipped through a narrow gap.",
  "Your motion was barely seen.",
  "You read the moment instantly.",
  "You darted into advantage.",
  "You accelerated through the gap.",
  "You breezed past the pressure.",
  "You moved ahead of time.",
  "You clipped the edge but made it through.",
  "You misread slightly, but recovered fast.",
  "You almost lost balance in motion.",
  "You got through—but only just."
];

const spdTier6 = [
  "You moved before the signal.",
  "You faded out of reach.",
  "Your steps blurred slightly.",
  "You interrupted the moment.",
  "You vanished between thoughts.",
  "You moved in the in-between.",
  "You bent around timing.",
  "You surged through a blink.",
  "You crossed the line unseen.",
  "You glided without friction.",
  "You flickered once, then regained form.",
  "You lost track for a beat—then vanished.",
  "You barely avoided being seen.",
  "You left a tremor behind your slip."
];

const spdTier7 = [
  "You broke formation with grace.",
  "You accelerated without effort.",
  "Your response came before need.",
  "You slipped around consequence.",
  "You were gone before it mattered.",
  "You slid past their intent.",
  "You darted without windup.",
  "You opened space where there was none.",
  "You broke timing subtly.",
  "You disappeared and returned.",
  "You felt resistance—but outpaced it.",
  "You nearly got caught in flow.",
  "You reappeared a breath too soon.",
  "You paused for a flicker—then moved again."
];

const spdTier8 = [
  "You arrived where no path existed.",
  "Your pace disrupted expectation.",
  "You moved in silence between moments.",
  "You broke through reaction time.",
  "You created a gap with motion alone.",
  "You turned presence into motion.",
  "You operated ahead of awareness.",
  "You passed through anticipation.",
  "You lapped the moment itself.",
  "You escaped momentum's reach.",
  "You faltered slightly before vanishing.",
  "Your blur returned with a wobble.",
  "You nearly collided with time—but twisted free.",
  "A brief hesitation almost caught you."
];

const spdTier9 = [
  "You moved through the margin of possibility.",
  "You were felt but not seen.",
  "You skipped the buildup and acted.",
  "You merged instinct with motion.",
  "You danced outside rhythm.",
  "You ignored delay entirely.",
  "You left reactions behind.",
  "You passed thought by.",
  "You slipped through stillness.",
  "You left only a trace.",
  "You shimmered oddly before stabilizing.",
  "You nearly brushed against reaction.",
  "You arrived a sliver too early.",
  "You flickered—almost noticed."
];

const spdTier10 = [
  "You existed only between actions.",
  "You distorted the sense of time.",
  "You were presence without motion.",
  "You shaped space with pace.",
  "You eluded reality’s steps.",
  "You moved while the world paused.",
  "You blurred into position.",
  "You reacted before intention formed.",
  "You bypassed delay like a breath.",
  "You became the echo of speed.",
  "Reality briefly rejected your step—then bent.",
  "You trembled at the edge of being seen.",
  "You flickered out—then fully vanished.",
  "You slipped—but impossibly corrected mid-vanish."
];

dodgeWords = [
  // Running
  "run", "running", "sprint", "sprinting", "dash", "dashing", "jog", "jogging",
  "rush", "rushing", "flee", "fleeing",
  "hurry", "hurrying", "escape", "escaping", "scurry", "scurrying",

  // Dodging
  "dodge", "dodging", "sidestep", "sidestepping", "evade", "evading", "ducking", "swerve", "swerving", "weave", "weaving",
  "avoid", "avoiding", "jump", "jumping", "leap", "leaping", "skid", "skidding",

  // Retreating
  "retreat", "retreating", "withdraw", "withdrawing", "fall back", "falling back", "back away", "backing away",
];

luckyPhrases = [
  "a bit of good fortune",
  "a slight stroke of luck",
  "a touch of serendipity",
  "a minor lucky break",
  "a tad more fortunate",
  "a little extra luck",
  "a slight favor of fate",
  "luck's gentle nudge",
  "a small lucky charm at play",
  "a modest turn of fortune",
  "a hint of providence",
  "just enough luck to matter",
  "luck by a hair",
  "a whisper of good fortune",
  "some luck"
];

graspPhrases = [
  "You clutch",
  "You seize",
  "You take hold of",
  "You latch onto",
  "You clasp",
  "You catch hold of",
  "You cling to",
  "You grasp"
];

healthFeelsHalfway = ["your health feels average", "your health is at a mid-point", "your health feels balanced", "you're in fair health", "your health is in the middle", "your health is at an even keel", "your health feels stable but moderate", "you're halfway to full strength", "your health is neither strong nor weak", "your health is moderate", "you're at half strength", "your health stands at the halfway mark", "your vitality is halfway depleted", "you're in a neutral state of health", "your health is balanced at half", "you're halfway from full vigor", "your health is split right down the middle", "you're not in great shape, but not at rock bottom", "your body feels neither strong nor weak, just halfway there", "you're at the middle of your strength"]

healthVeryLow = ["your health is hanging by a few threads", "your vitality is on the brink of collapse", "you're hanging on by a thread", "your health is barely holding together", "your body feels like it's on its last leg", "you're one step away from falling", "your strength is nearly depleted", "you're hanging in there by sheer will", "you're on the edge of total exhaustion", "your health is almost gone, just a breath away from falling", "you're teetering on the edge of unconsciousness", "your body is at its breaking point", "you're seconds away from complete collapse", "your health is almost a memory"];

healthDeathArray = [
  "the world slows as your life ends, and everything goes dark.",
  "time seems to freeze as your life slips away, leaving you in the void of death.",
  "everything blurs as your life gives out, and you fade into nothing.",
  "the world spins around you as your body gives in, you have died.",
  "everything goes silent as you collaspe and die.",
  "the world grows distant as your health drains, and death takes you.",
  "your vision dims and the world around you disappears as death claims you.",
  "the air grows heavy, and with one final breath, you fade from existence.",
  "the ground fades beneath you as your body finally succumbs to death.",
  "the world keeps turning as you fall into the abyss of your own demise.",
  "your body gives way, and with a final breath, death embraces you.",
  "the world fades into stillness, and with it, your life slips away.",
  "your final moments pass as you embrace death.",
  "you surrender to death as your health has fallen to zero."
];

halfEnergyArray = [
  "you feel drained, like only half of your energy remains.",
  "your energy is running half of what it should be.",
  "you feel a bit sluggish, with just half the energy you normally have.",
  "your vitality feels halved, leaving you feeling sluggish.",
  "you must be running on a hungry stomach, since you feel like you have half your usual energy.",
  "you feel like you've only got half the energy left to keep going.",
  "your energy reserves are half spent, making everything feel slightly more difficult.",
  "you are craving a nap and its affecting you.",
  "you're craving an energy drink considering you're half spent",
  "you feel half as lively.",
  "your body feels like it has half energy left.",
  "you feel halfway exhausted and could use a meal."
];

exhaustedArray = [
  "you feel almost drained.",
  "your energy is nearly depleted.",
  "you feel close to utterly spent.",
  "you feel almost completely wiped out.",
  "you feel like you can't go on any longer.",
  "your body is fatigued, every movement is a struggle.",
  "you feel utterly exhausted, as if you've run out of fuel.",
  "your energy is an inch away from being used up.",
  "you're so tired, every muscle aches.",
  "you feel like you're at the end of your rope and need rest."
];

fullExhaustionArray = [
  "you vomit from exhaustion.",
  "your stamina gives away and you fall down.",
  "a massive cramp floods your tired body.",
  "you feel your heart beating too fast from exhaustion.",
  "you black out from tiredness for a second.",
  "you get an enormous headache from your lack of energy.",
  "you feel if you push your body again, you will probably collapse from exhaustion.",
  "your vision blurs and a ringing fills your ears from sheer fatigue.",
  "your hands tremble uncontrollably from energy depletion.",
  "your knees hit the ground as your body refuses to move forward.",
  "you sway on your feet, dangerously close to fainting.",
  "you drop what you're holding, your grip gone with exhaustion.",
  "a wave of nausea rolls through you, your body screaming for rest.",
  "your muscles spasm randomly, stretched far past their limit.",
  "your mind fogs over, making it hard to think straight.",
  "your heart skips a beat, jolting you with weakness.",
  "a loud ringing drowns out the world as your system begins to shut down.",
  "you stumble forward, unsure whether you’re even awake anymore.",
  "you hear your own heartbeat pounding in your skull, heavy and strained."
];

enterWords = ["crawl", "drift", "enter", "fall", "get", "go", "head", "lay", "lie down", "make", "move", "nap", "prepare", "proceed", "slip", "sleep", "settle", "sink", "snuggle", "step", "surrender", "take", "turn in", "transition"];

restingWords = ["catnap", "doze", "hibernate", "nap", "relax", "rest", "sleep", "slumber", "asleep"];

lightRestWords = ["brief", "fleeting", "minor", "momentary", "passing", "quick", "relax", "short", "small", "tiny", "transient", "breath", "breathe", "breathing"];

moderateRestWords = ["catnap", "doze", "light sleep", "nap", "power nap", "repose", "rest", "siesta", "snooze"];

fullRestWords = ["deep", "deeply", "hibernation", "hibernate", "long", "prolonged", "rejuvenating", "sleep", "slumber", "sound", "uninterrupted"];

bodyParts = [
  // Standard humanoid body parts
  "adam's apple", "abdomen", "achilles tendon", "ankle", "arm", "arteries", "back", "biceps", "bladder", "buttocks", "body",
  "calf", "cheek", "chest", "chin", "collarbone", "deltoid", "diaphragm", "ear", "elbow", "esophagus",
  "eyebrow", "eyelid", "face", "fingers", "foot", "flesh", "forearm", "forehead", "gums", "gut", "groin", "hamstring",
  "hand", "head", "heart", "heel", "hip", "intestines", "jaw", "kidney", "knee", "knuckles", "leg",
  "lips", "liver", "lungs", "lung", "lower back", "nape", "neck", "nose", "palm", "pancreas", "pelvis",
  "quadriceps", "ribs", "scapula", "shin", "shinbone", "shoulder", "side", "skull", "solar plexus",
  "spine", "spleen", "stomach", "sternum", "tailbone", "teeth", "temple", "thigh", "throat", "thumb",
  "toes", "triceps", "upper back", "veins", "waist", "wrist", "wound", "windpipe",

  // Fantasy/Sci-Fi Races
  "antlers", "barb", "beak", "carapace", "chitin", "claw", "crest", "eye stalk", "fang", "feathers",
  "fin", "frill", "gill", "horn", "hoof", "mandible", "membrane", "proboscis", "scales", "shell",
  "snout", "spikes", "stinger", "talon", "tail", "thorax", "trunk", "tusk", "whiskers", "wing"
];

classSkillParts = {
  mage: [
    "Anchor", "Arcane", "Ash", "Astral", "Barrier", "Bind", "Blast", "Blink",
    "Blinding", "Bolt", "Burst", "Black", "Ball", "Chain", "Celestial", "Chilling", "Cosmic", "Crackle", "Crystal",
    "Dim", "Drift", "Drizzle", "Echo", "Ember", "Enchanted", "Ether", "Field",
    "Flick", "Flicker", "Flame", "Fire", "Frost", "Gale", "Glacier", "Grip",
    "Inferno", "Ice", "Jolt", "Leash", "Lightning", "Lucid", "Lunar", "Mana",
    "Mark", "Mist", "Mystic", "Nova", "Orb", "Phantom", "Portal", "Protect", "Pulse",
    "Pyro", "Rainbow", "Radiant", "Red", "Ray", "Ring", "Runic", "Rush", "Seal", "Searing",
    "Shadow", "Shift", "Shield", "Shock", "Shifting", "Sigil", "Silent", "Skip",
    "Slash", "Smoke", "Snap", "Soul", "Spark", "Spectral", "Spirit", "Star",
    "Static", "Step", "Storm", "Strike", "Subdue", "Surge", "Tap", "Temporal",
    "Tide", "Trap", "Ultra", "Ultimate", "Void", "Ward", "Wave", "Whisper", "Wind", "Zone", "Zephyr"
  ],


  healer: [
    "Aid", "Alleviation", "Aura", "Balm", "Blessed", "Blessing", "Cleansing",
    "Cure", "Divine", "Drizzle", "Embrace", "First", "Flow", "Gentle", "Glow",
    "Graceful", "Guardian", "Hallow", "Heal", "Healing", "Holy", "Hope",
    "Light", "Lifeforce", "Mend", "Mercy", "Minor", "Protect", "Pulse",
    "Purify", "Recovery", "Refresh", "Rejuvenate", "Renew", "Restore",
    "Revitalize", "Sanctuary", "Serene", "Shield", "Soothing", "Spark",
    "Spirit", "Surge", "Touch", "Tranquil", "Vital", "Vitality", "Veil", "Whisper"
  ],

  swordsman: [
    "Attack", "Balanced", "Bash", "Blade", "Blow", "Break", "Charge", "Cleave",
    "Combo", "Counter", "Crushing", "Cut", "Dash", "Defensive", "Draw", "Focus",
    "Fury", "Guard", "Heavy", "Leg", "Lunge", "Parry", "Piercing", "Power",
    "Quick", "Rising", "Roll", "Shield", "Slash", "Spin", "Stance", "Steady",
    "Step", "Strike", "Strike", "Sweep", "Swing", "Sword", "Thrust", "Whirlwind",
    "Wide", "One", "Two", "Three", "Four"
  ],

  priest: [
    "Aura", "Barrier", "Blessed", "Blessing", "Breath", "Circle", "Cleansing",
    "Divine", "Embrace", "Faith", "Faithful", "Grace", "Graceful", "Hands",
    "Heal", "Healing", "Hope", "Intervention", "Light", "Luminous", "Mend",
    "Prayer", "Protection", "Radiance", "Radiant", "Renewal", "Renewing",
    "Resurgence", "Sanctify", "Sanctuary", "Serenity", "Shield", "Soulbind",
    "Spirit", "Spiritual", "Strike", "Touch", "Wave", "Ward", "Whisper",
    "Wings"
  ],

  tank: [
    "Absorption", "Aggro", "Anchor", "Bash", "Bastion", "Battle", "Block",
    "Body", "Break", "Charge", "Challenge", "Counter", "Crippling", "Cry",
    "Defensive", "Deflect", "Enduring", "Flesh", "Focus", "Fortify", "Fortitude",
    "Guard", "Guardian", "Hammer", "Hold", "Impact", "Iron", "Line", "Momentum",
    "Protection", "Protective", "Reckless", "Revenge", "Roar", "Shield", "Slam",
    "Stabilizing", "Stance", "Strike", "Sturdy", "Sustain", "Taunt", "Threaten",
    "Toughened", "Unbreakable", "Unshakable", "Unyielding", "Wall", "Ward", "Will"
  ],

  paladin: [
    "Aura", "Avenging", "Barrier", "Beacon", "Blessed", "Blessing", "Blow",
    "Cleansing", "Courage", "Crusader", "Defense", "Divine", "Embrace", "Faith",
    "Faithful", "Flame", "Grace", "Hammer", "Hands", "Heal", "Healing", "Holy",
    "Infusion", "Intervention", "Judgment", "Lay", "Light", "Might",
    "Protection", "Radiance", "Radiant", "Retribution", "Righteous", "Sacred",
    "Seal", "Shield", "Smite", "Spirit", "Strike", "Touch", "Valor", "Ward",
    "Wrath"
  ],

  hero: [
    "Agility", "Arcane", "Aura", "Battle", "Beast", "Bind", "Blinding", "Blast",
    "Boost", "Breath", "Burst", "Charge", "Clap", "Cleansing", "Cloak", "Cry",
    "Dash", "Defensive", "Dragon", "Elemental", "Familiar", "Fireball", "Fist",
    "Flash", "Flare", "Force", "Fury", "Gravity", "Guard", "Heroic", "Haste", "Heal",
    "Healing", "Ice", "Invisibility", "Jump", "Leap", "Leech", "Light", "Mana",
    "Magnetic", "Might", "Poison", "Power", "Protection", "Pull", "Push",
    "Quick", "Rallying", "Roar", "Shield", "Slash", "Smash", "Speed", "Spirit",
    "Spike", "Sprint", "Step", "Stone", "Strike", "Summon", "Thunder", "Touch",
    "Walk", "Ward", "Wave", "Wind", "Wings"
  ],

  assassin: [
    "Ambush", "Blade", "Blink", "Choke", "Cloak", "Cripple", "Cut", "Dash", "Dagger",
    "Death", "Drift", "Escape", "Fang", "Fade", "Feint", "Flick", "Gloom", "Lacerate",
    "Mark", "Night", "Poison", "Pounce", "Quick", "Rush", "Shade", "Shadow", "Shiv",
    "Silent", "Slash", "Slip", "Smoke", "Snare", "Sneak", "Speed", "Spine", "Spin",
    "Stab", "Step", "Strike", "Trip", "Twist", "Veil", "Venom", "Vanish", "Wound"
  ],

  archer: [
    "Aim", "Arrow", "Blast", "Blink", "Bolt", "Burst", "Camouflage", "Charge", "Dash",
    "Draw", "Eagle", "Feather", "Flare", "Focus", "Gale", "Glide", "Hit", "Leap",
    "Mark", "Momentum", "Multi", "Nock", "Pierce", "Pin", "Quick", "Quiver", "Rain",
    "Rapid", "Recurve", "Release", "Ricochet", "Rush", "Snipe", "Speed", "Strike",
    "Volley", "Wind", "Wing", "Zoom"
  ],

  alchemist: [
    "Acid", "Amber", "Aether", "Arc", "Brew", "Burst", "Catalyst", "Cauldron", "Charge",
    "Compound", "Concoction", "Corrode", "Crackle", "Dust", "Elixir", "Essence", "Extract",
    "Fume", "Flask", "Fusion", "Gas", "Glow", "Ignite", "Infuse", "Mix", "Mist",
    "Mixture", "Potion", "Reagent", "Resin", "Smoke", "Solution", "Spark", "Spill",
    "Splash", "Spore", "Steam", "Tincture", "Toxin", "Transmute", "Vapor", "Vial", "Volatile"
  ],

  reincarnate: [
    "Ancestral", "Awakening", "Beyond", "Binding", "Bloom", "Call", "Cycle", "Departed", "Echo",
    "Ember", "Essence", "Fade", "Flicker", "Flow", "Ghost", "Grave", "Life", "Light",
    "Memory", "Phoenix", "Rebirth", "Recall", "Reform", "Reflesh", "Renew", "Reshape", "Resoul",
    "Revive", "Rise", "Rift", "Return", "Shimmer", "Soul", "Spirit", "Trace", "Transcend",
    "Undying", "Vestige", "Whisper"
  ],

  summoner: [
    "Arc", "Avatar", "Beast", "Bind", "Bond", "Call", "Channel", "Conduit", "Construct",
    "Doppel", "Echo", "Elemental", "Entity", "Familiar", "Fiend", "Form", "Gate", "Ghoul",
    "Golem", "Guard", "Manifest", "Phantom", "Portal", "Projection", "Servant", "Shade", "Shadow",
    "Sigil", "Simulacrum", "Spirit", "Spawn", "Specter", "Summon", "Totem", "Trace", "Twin", "Wisp"
  ],

  necromancer: [
    "Abyss", "Bind", "Black", "Blood", "Bone", "Chant", "Corrupt", "Curse", "Dark", "Decay",
    "Defile", "Doom", "Dread", "Echo", "Ghast", "Ghoul", "Grave", "Grim", "Haunt", "Hex",
    "Hollow", "Husk", "Lich", "Mark", "Mire", "Mourn", "Necro", "Oblivion", "Plague", "Raise",
    "Reap", "Rot", "Ruin", "Sever", "Shade", "Shadow", "Shroud", "Sinister", "Skull", "Soul",
    "Specter", "Spine", "Spirit", "Torment", "Undead", "Unholy", "Vessel", "Wither", "Wraith"
  ],

  fighter: [
    "Bash", "Blow", "Break", "Brute", "Charge", "Clash", "Combo", "Counter", "Crack", "Crash",
    "Crush", "Drive", "Fist", "Flurry", "Focus", "Force", "Hammer", "Hook", "Jab", "Lunge",
    "Momentum", "Overwhelm", "Pummel", "Push", "Rage", "Rampage", "Rip", "Rush", "Shatter",
    "Shock", "Shove", "Smash", "Snap", "Strike", "Stun", "Sweep", "Swing", "Thrust", "Uppercut",
    "Vault", "Vigor", "Warcry", "Wild", "Wreck"
  ],
  warrior: [
    "Armor", "Bash", "Blade", "Block", "Brave", "Break", "Charge", "Clash", "Cleave", "Crush",
    "Fury", "Grit", "Guard", "Lunge", "Push", "Rampart", "Roar", "Rush", "Shield", "Shout",
    "Slash", "Stance", "Steel", "Strike", "Swing", "Thrust"
  ],

  berserker: [
    "Bite", "Blast", "Blow", "Blood", "Brawl", "Break", "Brute", "Charge", "Crush", "Frenzy",
    "Fury", "Howl", "Madness", "Maul", "Rampage", "Rage", "Rip", "Roar", "Rush", "Savage",
    "Smash", "Strike", "Tear", "Thrash", "Unleash", "Wild"
  ],

  bard: [
    "Ballad", "Cadence", "Chime", "Charm", "Chorus", "Duet", "Echo", "Harmony", "Hymn", "Inspire",
    "Lute", "Melody", "Note", "Refrain", "Resonance", "Serenade", "Song", "Sound", "Strum",
    "Tune", "Verse", "Vibe", "Voice", "Whistle"
  ],

  gunfighter: [
    "Aim", "Bang", "Banger", "Barrel", "Blast", "Bullet", "Burst", "Chamber", "Click", "Fire", "Flash",
    "Jolt", "Mark", "Rapid", "Reload", "Ricochet", "Scope", "Shell", "Shot", "Sight", "Snap",
    "Spray", "Target", "Tactical", "Trigger"
  ],

  thief: [
    "Backstab", "Blind", "Cloak", "Cut", "Dagger", "Dart", "Escape", "Feint", "Hook", "Hide",
    "Lurk", "Pick", "Poison", "Shadow", "Silence", "Slip", "Snatch", "Sneak", "Steal", "Step",
    "Strike", "Swipe", "Trap", "Trip", "Vanish"
  ],

  monk: [
    "Balance", "Breath", "Center", "Chi", "Discipline", "Focus", "Flow", "Form", "Grace", "Guard",
    "Harmony", "Kick", "Meditate", "Motion", "Palm", "Parry", "Path", "Push", "Sense", "Spirit",
    "Step", "Stillness", "Strike", "Wave", "Will"
  ],

  barbarian: [
    "Bash", "Bellow", "Blow", "Break", "Brute", "Crash", "Crack", "Frenzy", "Fury", "Howl",
    "Rampage", "Rage", "Rip", "Roar", "Rush", "Slam", "Smash", "Stomp", "Strike", "Swing",
    "Tear", "Trample", "Wreck", "Wild", "Shatter"
  ],

  ranger: [
    "Aim", "Arrow", "Bow", "Camouflage", "Dash", "Eagle", "Edge", "Feather", "Flare", "Focus",
    "Hide", "Hawk", "Leap", "Mark", "Pull", "Rapid", "Scout", "Shot", "Snare", "Step",
    "Strike", "Track", "Trail", "Trap", "Wind"
  ],

  wizard: [
    "Arcane", "Beam", "Bind", "Blast", "Bolt", "Burn", "Cast", "Channel", "Essence", "Fire",
    "Flash", "Flicker", "Focus", "Mana", "Mystic", "Ray", "Scroll", "Shield", "Spark", "Spell",
    "Storm", "Surge", "Vortex", "Ward", "Wave"
  ],

  sorcerer: [
    "Arcana", "Blast", "Burst", "Chaos", "Charm", "Curse", "Energy", "Flicker", "Flow", "Focus",
    "Glow", "Hex", "Ignite", "Inferno", "Mystic", "Nova", "Power", "Pulse", "Rune", "Sear",
    "Scorch", "Sigil", "Spell", "Storm", "Whirl"
  ],

  shaman: [
    "Aura", "Balance", "Call", "Chant", "Crack", "Drum", "Earth", "Echo", "Flame", "Nature",
    "Pulse", "Rain", "Ritual", "Root", "Shiver", "Sky", "Snap", "Spirit", "Stone", "Storm",
    "Thunder", "Totem", "Vision", "Wave", "Wind"
  ],

  rogue: [
    "Ambush", "Back", "Cloak", "Cut", "Dagger", "Dart", "Dash", "Feign", "Flick", "Hook",
    "Jab", "Lurk", "Mark", "Poison", "Shadow", "Silence", "Sneak", "Stab", "Step", "Strike",
    "Swipe", "Trip", "Trick", "Twist", "Vanish"
  ],

  druid: [
    "Bark", "Bloom", "Branch", "Call", "Cycle", "Fang", "Feral", "Flora", "Grow", "Harmony",
    "Howl", "Leaf", "Moon", "Nature", "Pulse", "Rain", "Root", "Seed", "Shape", "Shroud",
    "Spirit", "Spore", "Sun", "Thorn", "Wild"
  ]
};

const upgradeTier1 = [
  "Bright", "Formed", "Gentle", "Greater", "Light",
  "Modest", "Quiet", "Rare", "Raw", "Shaped", "Spirited",
  "Swift", "Tested", "Trial", "Tuned", "Warmed", "Wild"
];

const upgradeTier2 = [
  "Amplified", "Angled", "Balanced", "Bouncy", "Bright", "Calculated", "Clear",
  "Controlled", "Crisp", "Dark", "Double", "Efficient", "Enhanced", "Firm",
  "Frosted", "Honed", "Improved", "Keen", "Measured", "Polished",
  "Precise", "Refined", "Sharpened", "Settled", "Stable", "Steady"
];

const upgradeTier3 = [
  "Awakened", "Blessed", "Black", "Blue", "Brisk", "Charged", "Crystalled",
  "Empowered", "Energetic", "Evolved", "Fortified", "Glassy", "Ignited",
  "Infused", "Purple", "Quickened", "Reactive", "Red", "Resonant", "Sharp",
  "Stirring", "Swift", "Triple", "Vibrant", "Violet", "Welled", "Zapped"
];

const upgradeTier4 = [
  "Aurora", "Arc-lit", "Blazing", "Crackling", "Cursed", "Echoing", "Emberlit",
  "Fiery", "Flamelaced", "Ghostflame", "Groundbreaking", "Howling",
  "Impeccable", "Infernal", "Mystic", "Quad", "Rainbow", "Shocking",
  "Smoldering", "Spellburned", "Stormlit", "Twilight", "Warding",
  "Wildborn"
];

const upgradeTier5 = [
  "Arcane", "Astral", "Celestial", "Chronoscarred", "Divine",
  "Ethereal", "Glimmering", "Godly", "Godsent", "Heavenlit",
  "Impossible", "Insane", "Legendary", "Luminous", "Mythforged",
  "Omnipotent", "Omniscient", "Perfect", "Quintuple", "Radiant", "Runebound",
  "Starwoven", "Temporal", "Transcendent", "Vengeful", "Voidtouched"
];

const intensityTier = [
  "Newbie level",
  "Novice level",
  "Rookie level",
  "Student level",
  "Intermediate level",
  "Skilled level",
  "Talented level",
  "Seasoned level",
  "Proficient level",
  'Experienced level',
  'Advanced level',
  'Senior level',
  'Expert level',
  'Ultra level',
  'Legendary level',
  'Godly level'
];

const capacityTier = [
  "Empty",
  "Nearly Empty",
  "Quarter Full",
  "One Thirds Full",
  "Slightly Below Half",
  "Half",
  "Slightly Above Half",
  "Three Quarters Full",
  "Mostly Full",
  "Nearly Full",
  "Full"
];

const skillPower1 = [
  "[Skill], amateurish.",
  "[Skill], tentative and raw.",
  "[Skill] flickers in.",
  "A soft hum of [Skill] stirs and buzzes.",
  "You fumble slightly as [Skill] begins to form.",
  "[Skill] shly whispers through the air.",
  "You exude some inexperience with [Skill].",
  "A cute display of [Skill] executes.",
  "You manage to cast your [Skill].",
  "'[Skill], let's try this!'",
  "Your mana violently exudes as you bet your experience on [Skill].",
  "Your mana surges, fueled by hope for [Skill].",
  "Like a student of magic, your [Skill] executes.",
  "A steady show magic unfolds as [Skill] is casted.",
  "A cautious burst of magic announces your [Skill] skill."
];

const skillPower2 = [
  "You manage a quiet execution of [Skill].",
  "[Skill] winds from your fingertips.",
  "The atmosphere around you shifts in response to your [Skill].",
  "The air around you shifts subtly as [Skill] activates.",
  "[Skill] activates.",
  "Your [Skill] moves with purpose and grace.",
  "You call on [Skill], and it obeys.",
  "Your display of [Skill] arrives.",
  "Your [Skill] responds to your aura.",
  "You wield [Skill] with growing assurance.",
  "The power of [Skill] resonates calmly around you.",
  "You watch your skill [Skill] execute."
];

const skillPower3 = [
  "You perform [Skill] with steady control.",
  "[Skill] manifests with focus and clarity.",
  "There’s balance in your motion as [Skill] takes shape.",
  "You cast [Skill] like a practiced movement.",
  "The air listens as your [Skill] begins to exert.",
  "Your [Skill] shows practice.",
  "The flow of [Skill] feels reliable and calm.",
  "[Skill] appears with ease and intention.",
  "You hesitate slightly, but [Skill] still forms.",
  "[Skill] emerges with some effort.",
  "You begin to shape [Skill], slowly finding your rhythm."
];

const skillPower4 = [
  "[Skill] flows from you with growing strength.",
  "You shape [Skill] with visible intent.",
  "A steady pulse of [Skill] radiates outward.",
  "[Skill] stretches from your hands, confident and sure.",
  "Your presence deepens as [Skill] gathers momentum.",
  "[Skill] begins to answer your deeper will.",
  "Your hands move with purpose as [Skill] grows.",
  "You steady yourself as [Skill] begins to surge.",
  "A touch of control helps bring [Skill] into focus.",
  "[Skill] begins to form, guided by mild focus.",
  "You call forth [Skill] with some concentration."
];

const skillPower5 = [
  "Your [Skill] cuts through the moment with precision.",
  "You command [Skill] like a seasoned wielder.",
  "[Skill] echoes through the space with purpose.",
  "The energy of [Skill] answers your call instantly.",
  "You strike the air with [Skill], crisp and controlled.",
  "Your [Skill] shows diligence.",
  "[Skill] weaves into the moment with clarity.",
  "You place [Skill] with practiced poise.",
  "[Skill] arrives a little delayed but steady.",
  "Your posture slips slightly as [Skill] ignites.",
  "[Skill] builds slower than usual but holds form."
];

const skillPower6 = [
  "[Skill] bursts forward with confident energy.",
  "You unleash [Skill] with clear focus and strength.",
  "[Skill] rushes from you, drawing attention.",
  "The air crackles as your [Skill] expands outward.",
  "You drive [Skill] forward like a rolling wave.",
  "You propel [Skill] with unwavering purpose.",
  "[Skill] ripples outward with firm resolve.",
  "You steady your stance as [Skill] builds pressure.",
  "[Skill] sparks briefly before catching stride.",
  "A slight delay precedes your release of [Skill].",
  "Your grip tightens as [Skill] begins to respond."
];

const skillPower7 = [
  "[Skill] tears through the moment like thunder.",
  "You channel [Skill] with explosive force.",
  "Your [Skill] roars out, wild yet honed.",
  "The air begins to quivers under your [Skill]’s advance.",
  "A storm of [Skill] arcs from your stance.",
  "You shape [Skill] like a crashing tide.",
  "[Skill] erupts with raw, controlled fury.",
  "[Skill] briefly stutters before finding its power.",
  "You summon [Skill] with effort, then let it surge.",
  "[Skill] starts less violently, but ramps up quickly.",
  "A sharp breath helps you anchor your [Skill]."
];

const skillPower8 = [
  "Your [Skill] lights the scene with brilliance.",
  "[Skill] surges like a tidal force through your hands.",
  "You bend the battlefield with the strength of your [Skill].",
  "Light fractures and reforms around your [Skill].",
  "Everything shifts to accommodate your [Skill]’s presence.",
  "[Skill] pulses with undeniable clarity.",
  "You channel [Skill] with a sense of destiny.",
  "Some strain precedes your full release of [Skill].",
  "You feel [Skill] climb before unleashing.",
  "The brilliance of [Skill] dims briefly before growing.",
  "It takes a moment, but [Skill] aligns with your will."
];

const skillPower9 = [
  "[Skill] blazes with overwhelming intensity.",
  "You become a beacon of [Skill], feared and admired.",
  "[Skill] reverberates like an anthem through space.",
  "You wield [Skill] like a blade of pure will.",
  "Even time seems to hesitate at your display of [Skill].",
  "[Skill] radiates from you like a final warning.",
  "The sheer volume of [Skill] overwhelms the moment.",
  "Your [Skill] flares, briefly uneven, then locks into place.",
  "You struggle slightly, but [Skill] dominates nonetheless.",
  "An edge of chaos tempers your display of [Skill].",
  "[Skill] takes a moment to stabilize before blazing."
];

const skillPower10 = [
  "[Skill] erupts with grandeur.",
  "You are the epicenter of myth, and [Skill] is your signature.",
  "The world bends as [Skill] pours from your soul.",
  "[Skill] transcends power—it becomes legend in motion.",
  "You don’t use [Skill]; you **are** [Skill], made manifest.",
  "Your sage mastery of [Skill] speaks for itself.",
  "[Skill] reshapes the moment like a sovereign decree.",
  "You command [Skill] as if born to it.",
  "A flicker of effort breaks through before [Skill] takes a strong hold.",
  "There’s a crack in your flow, but [Skill] still greatly triumphs.",
  "Your form falters—but [Skill] holds, vast and imposing."
];

const harnessSkill = [
  "You attempt to harness your [Skill] skill.",
  "You attempt a quickened execution of [Skill].",
  "You attempt to shortcut cast [Skill].",
  "Your shortened incantation of [Skill] attempts to execute.",
  "You try to quick cast [Skill].",
  "You focus intently to channel [Skill] rapidly.",
  "You speed up your [Skill] casting.",
  "You hasten your gestures, trying to control [Skill].",
  "You push your limits to harness [Skill] faster.",
  "Your quickened [Skill] flickers in.",
  "You grasp at the edge of your [Skill], trying to unleash it swiftly.",
  "Your hurried words shape your [Skill] skill.",
  "You risk a rapid cast of [Skill], hoping to avoid misfire.",
  "You rush your concentration, testing the speed of [Skill].",
  "You force [Skill] into a quicker form, with successful execution."
];

const talentPower1 = [
  "Your inexperience with [Talent] is a bewilderment to all.",
  "You kind of fumble with your [Talent].",
  "Your [Talent] attempt is a bit clumsy and awkward, barely making the mark.",
  "You somewhat struggle with [Talent].",
  "You scratch the surface of [Talent], barely making it work.",
  "Your attempt at [Talent] seems improvised and shaky.",
  "You poke around with [Talent].",
  "Your nerves show a bit in your [Talent].",
  "Your [Talent] produces something...",
  "You try to apply [Talent], hoping something works.",
  "It appears your [Talent]... exists. ",
  "You try your hand at [Talent], but it comes a bit crude.",
  "Some experience shows with your [Talent].",
  "Your [Talent] is novice."
];

const talentPower2 = [
  "Your [Talent] gets the job done—just barely.",
  "You manage to use [Talent] with shaky hands.",
  "Your [Talent] shows promise, though not much polish.",
  "You produce something functional with your [Talent].",
  "There's a glimmer of competence in your [Talent].",
  "Your [Talent] isn't impressive, but it works.",
  "You apply [Talent] with a touch of uncertainty.",
  "Your [Talent] results in something usable, if unimpressive.",
  "You lean on your [Talent], and it holds... for now.",
  "You wobble through [Talent] but reach the end.",
  "Your [Talent] just about meets expectations.",
  "You coax [Talent] into doing what you need, barely."
];

const talentPower3 = [
  "You use your [Talent] with growing control.",
  "There’s a steady rhythm to your [Talent].",
  "You manage [Talent] with noticeable improvement.",
  "You bring out a solid result through your [Talent].",
  "Your [Talent] begins to feel more natural.",
  "You apply [Talent] with basic but visible skill.",
  "You focus, and your [Talent] meets the task.",
  "Your [Talent] produces something respectable.",
  "You get the hang of [Talent], bit by bit.",
  "Your [Talent] speaks of effort and growing experience.",
  "You’re beginning to trust your [Talent] more.",
  "Your [Talent] shows good instinct, even if rough."
];

const talentPower4 = [
  "Your [Talent] is almost average.",
  "You apply [Talent] with practiced ease.",
  "Your [Talent] yields a capable result.",
  "You control your [Talent] with steady hands.",
  "There’s some confidence in the way you wield [Talent].",
  "You navigate the task through [Talent] with some experience.",
  "You focus on precision, and your [Talent] follows.",
  "Your [Talent] comes across as mid.",
  "Your [Talent] comes across as confident, if a bit stiff.",
  "You deliver results through [Talent] that start to feel deliberate.",
  "The [Talent] process is steady, if not yet graceful.",
  "Your [Talent] shows some finesse."
];

const talentPower5 = [
  "You channel your [Talent] with average power and direction.",
  "Your [Talent] comes through with some clarity.",
  "You make good use of [Talent].",
  "Your [Talent] delivers an average impression.",
  "There’s energy and structure in your [Talent].",
  "You tackle the task head-on with your [Talent].",
  "Your [Talent] delivers results that others would notice.",
  "You take confident action using [Talent].",
  "Your [Talent] flares briefly but effectively.",
  "You pour focus into [Talent] and it answers.",
  "You guide [Talent] with confidence, despite a few bumps.",
  "Your [Talent] hits its mark, though a bit loud about it."
];

const talentPower6 = [
  "You execute your [Talent] with precision and force.",
  "Your [Talent] flows with sharp clarity.",
  "You apply [Talent] like a skilled artisan.",
  "There’s a snap to your [Talent]—clean and confident.",
  "You make quick, decisive use of your [Talent].",
  "Your [Talent] carves through the problem efficiently.",
  "You press forward, and your [Talent] follows like muscle memory.",
  "Your [Talent] is polished, but still evolving.",
  "You stumble briefly, but your [Talent] picks up fast.",
  "You almost rush [Talent], but maintain control.",
  "Your [Talent] flares brightly, then settles into rhythm.",
  "There’s fire in your [Talent], even with small missteps."
];

const talentPower7 = [
  "You finesse the task beautifully with your [Talent].",
  "Your [Talent] operates with natural grace.",
  "You show clear mastery in how you use [Talent].",
  "Your [Talent] brings about results with flair.",
  "The rhythm of your [Talent] is captivating.",
  "You perform with an elegance only [Talent] can bring.",
  "Your [Talent] shines with practiced power.",
  "Every move with [Talent] feels smooth and strong.",
  "You impress without trying—your [Talent] speaks for itself.",
  "There’s minor flourish in your [Talent], but it feels earned."
];

const talentPower8 = [
  "You make art out of your [Talent].",
  "Your [Talent] is nearly flawless and refined.",
  "You manipulate the task with pure [Talent].",
  "There’s fluid, expert rhythm in your [Talent].",
  "Your [Talent] guides the task like second nature.",
  "You don't hesitate—your [Talent] dances forward.",
  "Your [Talent] brings stunning results with minimal effort.",
  "Every detail is accounted for in your [Talent].",
  "Even your pauses in [Talent] seem intentional.",
  "Your [Talent] could teach others just by observation."
];

const talentPower9 = [
  "Your [Talent] dominates the task with masterful grace.",
  "The world bends to the motion of your [Talent].",
  "You handle the process like a legend of [Talent].",
  "Nothing escapes your control—your [Talent] is commanding.",
  "You move with the calm certainty of [Talent] mastery.",
  "The power of [Talent] seems embedded in your being.",
  "Your [Talent] feels woven into your identity.",
  "You don’t perform [Talent]—you embody it.",
  "Each motion in your [Talent] is precise and absolute.",
  "You bring about near-perfection through [Talent]."
];

const talentPower10 = [
  "You shape reality with your [Talent].",
  "The world watches in awe of your [Talent].",
  "Your [Talent] is myth in motion.",
  "You transcend the task through your [Talent].",
  "Your [Talent] radiates timeless mastery.",
  "Every action is divine—pure [Talent] at its peak.",
  "You work miracles with your [Talent].",
  "Legends will remember this moment of [Talent].",
  "The essence of [Talent] flows through you fully.",
  "You perform [Talent] with power that defies understanding."
];

const scoutWords = [
  "analyze", "assess", "calculate", "decipher", "examine", "inspect", "investigate", "listen",
  "look around", "looks around", "observe", "scan", "scope out", "scout", "survey", "track", "take in"
];

const detail1 = [
  "You didn't notice much.",
  "Nothing stands out.",
  "It all seems normal to your untrained mind.",
  "You can only see the basics, but that's about it.",
  "Your glance passes over everything without meaning.",
  "There's little your eyes can make sense of.",
  "The area feels vague and indistinct.",
  "You are lost on whatever might be here.",
  "You wish you studied more.",
  "Your brain is foggy.",
  "Your eyes are sharp but your mind isn't.",
  "You rack your puny mind only to make out some small details."
];

const detail2 = [
  "You notice a few obvious features.",
  "There’s not much that catches your eye.",
  "You spot one or two things of interest.",
  "Your attention grazes the surface.",
  "Your mind snags briefly on something out of place.",
  "You register something small but can’t quite define it.",
  "You sense the bare outlines of activity.",
  "You catch a glimpse, but it fades before it’s clear.",
  "You thank the heavens that you can at least make out a detail or two."
];

const detail3 = [
  "You pick up on a few small details.",
  "Something feels off, but you're not sure what.",
  "You catch glimpses of subtle patterns.",
  "There’s more here than meets the eye.",
  "Your eyes trace uneven paths in the environment.",
  "A sound or motion almost makes sense to you.",
  "You feel the tug of something unspoken.",
  "Hints of order tease your awareness.",
  "You embrace some naivety in your surveying skills."
];

const detail4 = [
  "You notice patterns others might miss.",
  "Your thoughts linger on a few specific details.",
  "You recognize some purposeful arrangements.",
  "You catch onto a few underlying cues.",
  "Objects seem placed with intent, not randomness.",
  "You notice odd alignments that suggest deeper function.",
  "A faint mark draws your gaze, meaningful or not.",
  "You detect symmetry hidden beneath the clutter.",
  "Your mind sparks with some tiny clues."
];

const detail5 = [
  "You discern useful clues.",
  "Your mind starts connecting dots.",
  "You get a sense of structure in your surroundings.",
  "You begin to grasp the bigger picture.",
  "Faint impressions resolve into hints of narrative.",
  "There’s rhythm in the way things are spaced.",
  "Your mind fills in the blanks naturally.",
  "Disparate parts start to form a whole."
];

const detail6 = [
  "You quickly spot key elements of the scene.",
  "You see layers of meaning others overlook.",
  "Your perception filters noise from signal.",
  "You identify important features with ease.",
  "The scene unfolds before you like a planned arrangement.",
  "Each item seems to tell part of a greater story.",
  "You detect movement where others would miss stillness.",
  "Details leap out like words in a book."
];

const detail7 = [
  "You understand the implications of what you see.",
  "Your insight draws out subtle truths.",
  "You recognize hidden patterns and meanings.",
  "Nothing escapes your notice.",
  "Even the silence has structure to your ears.",
  "You sense motive behind seemingly random choices.",
  "Your thoughts flow with the shape of the space.",
  "You interpret the stillness as something waiting to act."
];

const detail8 = [
  "Your mind pieces together invisible threads.",
  "You interpret the scene with clarity and speed.",
  "Even faint traces yield meaningful conclusions.",
  "Your intuition and logic work in perfect sync.",
  "You sense memory lingering in corners and echoes.",
  "Mundane details crystallize into valuable insights.",
  "You perceive intent beneath design and behavior.",
  "Your mind stitches everything together instantly."
];

const detail9 = [
  "You analyze your surroundings with surgical precision.",
  "You intuit layers of complexity with ease.",
  "Every detail seems to speak to you.",
  "You comprehend not just the what, but the why.",
  "Your thoughts dissect the space like a scholar with diagrams.",
  "Even stillness suggests history to you.",
  "You distinguish illusion from function with ease.",
  "Your awareness stretches beyond what is visible."
];

const detail10 = [
  "You perceive truths hidden from ordinary minds.",
  "The full scope of the environment opens itself to you.",
  "You see behind appearances to the reality beneath.",
  "Your awareness feels nearly omniscient.",
  "You interpret the moment as though reading fate itself.",
  "Every shadow, scent, and silence is meaningful.",
  "You perceive time’s passage through dust and echoes.",
  "The world reveals its secrets before you even ask.",
  "Your eyes locks into every single detail.",
  "Your extreme intelligence aids you."
];

const defendTiers = {
  tier1: [ // Feeble Block
    "Your guard is unsteady.",
    "You put up a shaky block.",
    "You try to block, barely holding form.",
    "You manage a weak defensive stance.",
    "Your hands rise, but lack conviction.",
    "You form a block out of desperation.",
    "Your defense is uncertain at best.",
    "Your body flinches through the block.",
    "You brace clumsily.",
    "You throw up a rushed guard."
  ],

  tier2: [ // Basic Block
    "You brace yourself with effort.",
    "Your block is simple but reliable.",
    "You hold your ground with caution.",
    "A modest guard takes form.",
    "You manage a basic defensive posture.",
    "Your stance holds — barely.",
    "You plant your feet and raise your arms.",
    "Your block is enough, just enough.",
    "Your defense is serviceable.",
    "You position yourself with hesitation."
  ],

  tier3: [ // Trained Block
    "You raise a firm guard.",
    "Your stance is practiced and steady.",
    "You block with discipline.",
    "Your defense forms without hesitation.",
    "Your posture is controlled and alert.",
    "You enter a well-taught stance.",
    "Your block snaps into position with intent.",
    "You guard efficiently and without panic.",
    "You adopt the proper form on instinct.",
    "You hold the line with experience."
  ],

  tier4: [ // Solid Block
    "Your block is sturdy and resolute.",
    "You form a reliable defense.",
    "You meet the moment with focus.",
    "Your guard locks into place.",
    "You set a solid foundation.",
    "Your posture is unwavering.",
    "You ground yourself and brace well.",
    "Your stance resists all shake.",
    "You block with obvious competence.",
    "Your guard holds with confidence."
  ],

  tier5: [ // Hardened Block
    "Your guard feels forged from iron.",
    "You set your stance like a shield wall.",
    "You block with unwavering strength.",
    "Your defense is precise and heavy.",
    "Your guard snaps into place with weight.",
    "You brace with the presence of a veteran.",
    "You absorb tension into your form.",
    "Your body channels pure resistance.",
    "You root into the earth with resolve.",
    "Your block speaks of hard-won training."
  ],

  tier6: [ // Powerful Block
    "Your block lands with force.",
    "You drive your stance into the ground.",
    "Your guard echoes with authority.",
    "You form a wall of trained strength.",
    "You brace like a seasoned warrior.",
    "You command space with your defense.",
    "Your limbs move with purposeful strength.",
    "Your guard channels power.",
    "You hold like reinforced steel.",
    "Your stance thunders with tension."
  ],

  tier7: [ // Commanding Block
    "Your guard commands respect.",
    "You block with supreme control.",
    "Your defense flows with purpose.",
    "Your stance carries dominance.",
    "You impose your will through your guard.",
    "You guide your energy into immovable form.",
    "You embody discipline in your block.",
    "You anticipate and adjust mid-stance.",
    "Your body and focus are one.",
    "Your block crushes hesitation."
  ],

  tier8: [ // Unyielding Block
    "Your stance becomes immovable.",
    "You block like a fortress.",
    "Your guard is absolute.",
    "You become a bastion of defense.",
    "Your form is locked in perfect balance.",
    "You radiate defensive mastery.",
    "Your block does not budge an inch.",
    "You are the wall others fear to face.",
    "Your presence alone is a blockade.",
    "You shield yourself without effort."
  ],

  tier9: [ // Transcendent Block
    "Your block feels beyond mortal training.",
    "You flow into a seamless defense.",
    "Your stance carries divine timing.",
    "Your presence alone halts momentum.",
    "Your block exists in pure form.",
    "You move as if choreographed by the cosmos.",
    "You meet force with eternal calm.",
    "Your block hums with flawless rhythm.",
    "You are in perfect sync with intent.",
    "You become the idea of stillness."
  ],

  tier10: [ // Eternal Block
    "You become the concept of defense itself.",
    "Your guard echoes through time.",
    "Your block defines unbreakable.",
    "You manifest perfect stillness.",
    "Your stance is eternal and unassailable.",
    "You are the immovable object made manifest.",
    "No motion escapes your attention.",
    "You block before the threat even arrives.",
    "You defy entropy through still form.",
    "You are defense incarnate."
  ]
};

const defendWords = ["brace", "braced stance", "brace up", "block", "defend", "defensive posture", "fortify", "guard up", "harden", "hold firm", "hold ground", "parry", "protect", "raise shield", "ready guard", "resist", "shield", "stand firm", "steady stance", "turtle up"];

const exerciseWords = ["curls", "bicep curls", "bicycle crunches", "bench press", "burpees", "butt kicks", "calf raises", "chin ups", "crunches", "deadlifts", "dumbbell flys", "glute bridges", "hammer curls", "high knees", "jump squats", "jumping jacks", "kettlebell swings", "leg raises", "lunges", "mountain climbers", "planks", "pull ups", "pullup", "pullups", "pull up", "push ups", "pushups", "push up", "pushup", "shoulder press", "side planks", "sit ups", "skaters", "squats", "step-ups", "tricep dips", "wall sits"];

doWords = ["do", "does"];

exerciseResultPhrases = [
  "You successfully complete [num] reps.",
  "You pull off [num] reps.",
  "You handle [num] reps.",
  "You power through [num] reps.",
  "You had enough energy for [num] reps."
]

const pluralizableWords = ["cling", "climb", "clutch", "carry", "connect", "cut", "disrupt", "drive", "echo", "feel", "flow", "follow", "grasp", "hold", "handles", "harness", "hum", "knock", "latch", "land", "leave", "manage", "make", "move", "need", "open", "press", "pull", "push", "put", "reach", "recoil", "resonate", "ring", "rush", "settle", "shift", "struggle", "shimmer", "shudder", "slice", "speak", "seize", "split", "start", "stumble", "surge", "try", "take", "tremble", "vibrate", "walk", "weave", "wrap", "write"];

const skillAcquisitionPhrases = [
  "In a flash of clarity, you acquire the skill(s) [Skill] as you level up.",
  "The pieces fall into place — you gain the skill(s) [Skill] as you level up.",
  "A sudden realization strikes — the skill(s) [Skill] become yours as you level up.",
  "Instinct takes over, and you grasp the skill(s) [Skill] as you level up.",
  "Through focus and will, you acquire [Skill] as you level up.",
  "The world slows, and [Skill] becomes second nature as you level up.",
  "Connections form in your mind — you now know [Skill] as you level up.",
  "A spark of understanding ignites — [Skill] is learned as you level up.",
  "Without thinking, your mind moves, acquiring [Skill] as you level up.",
  "The path ahead is clearer — [Skill] joins your arsenal as you level up.",
  "In the quiet between heartbeats, [Skill] settles into you as you level up.",
  "A subtle shift within tells you: [Skill] is yours as you level up.",
  "Your mind sharpens, and [Skill] takes root as you level up.",
  "The lesson clicks — you now wield [Skill] as you level up.",
  "Thoughts and experiences have meshed together, [Skill] becomes yours as you level up."
];


/////////////////////////////////////////////////////////////////////////////////////
/// TAS STANDARD FUNCTIONS

// Check for lock or unlock script command from input and execute
function scriptSwitch_TAS(text) {
  if (state.startScript == false) {
    if (text.includes("/start")) {
      state.startScript = true;
      text = "\n<< 🔓 TAS Script Unlocked! >>";
    }
  }

  if (state.startScript == true) {
    if (text.includes("/end")) {
      state.startScript = false;
      text = "\n<< 🔒 TAS Script Locked! >>"
    }
  }

  return text;
}

//detect /help and display help
function helpCommandInput_TAS(text) {
  if (text.includes("/help stats")) {
    state.commandCenter_TAS =
      `
    <<
    📊 Player Stats Guide

    - 📥 Type Player Stats in the Story Cards to view your current stats.
    - 🔄 Stats auto-update based on natural player input and AI output.
    - ✏️ Player Stats story card editing format: STAT: x/maxX.
    - 🗒️ All stat change logs are located in their story card notes.

    🧠 Gameplay Mechanics

    - ❤️ Health and 🔵 Mana regenerate every turn.
    - ⚡ Energy decreases every turn.
    - ⚠️ Low Health or Energy leads to consequences.
    - 🖤 Running out of energy results in ~10% health reduction every turn.
    - 📈 Stats gain points when used. Points scale exponentially lower as your stats increase.
    - 🎓 When a stat is maxed, points overflow to your EXP pool for leveling up instead.
    - 🆙 Leveling up increases all max stats.

    📐 Scaling & Calculations

    - 🧠 Mana scales with INTL.
    - 🛡️ X DEF = X/2 % damage reduction. DEF above 100 reduces damage by an extra 0.01% per 10 points.
    - 🍀 Each point in LCK gives a 1% chance of a lucky boost.
    >>
    `

    return " ";
  }
  else if (text.includes("/help talents")) {
    state.commandCenter_TAS =
      `
    <<
    🎯 Talent System Guide

    - 🧠 Talents represent your character's aptitudes (e.g., Cooking, Lockpicking, Fishing).
    - ⚡ Talents require energy points (EP) to use.
    - ✨ Casting a talent transforms it into a skill, which uses mana (MP) instead.
    - 🔎 Talent Use Format: "You [talentWord] [talent name]."
    - 📝 Talents story card editing format: "Talent Name (Lvl) (Ep) (Optional Key1, Key2, etc.)".
    - 🗝️ Create custom triggers for talent usage by adding keys to the talent.
    - ✨ Using talents grant INTL points.
    - 📈 Level up talents by using them.
    - 💥 +10 Talent Level -> Greater Talent Power
     - 🧪 Talents upgrade every 10 levels (up to level 50), which changes their name and reduces their EP cost by 5%.

    - 📚 Learn a talent by studying it and using its name repeatedly over a few turns. Ex: You [learn word] Fireball.
    - 🔤 Capitalize the talent's first letters to learn it faster.
    - 🎓 Learning talents grants INTL points.
    >>
    `

    return " ";
  }
  else if (text.includes("/help skills")) {
    state.commandCenter_TAS =
      `
    <<
    🎯 Skills System Guide


    - 🪄 Skills require mana points (MP) to use.
    - 🔎 Skill Cast Format: "You [cast word] [skill name]."
    - 🔄 Casting a talent transforms it into a skill.
    - 📝 Skills story card editing format: "Skill Name (Lvl) (Mp)".
    - 📈 Level up skills by using them.
    - 🧪 Skills upgrade every 10 levels (up to level 50), which changes their name and reduces their MP cost by 5%.
    - 💥 +10 Skill Level -> Greater Skill Power
    - ✨ Using skills grant ATK and INTL points.
    - 🛡️ Starting skills depend on your class.
    - ➰ Delete Skill story card to reroll starting skills.
    - 🆕 New skill is rewarded for every 5 levels.
    >>
    `

    return " ";
  }

  else if (text.includes("/help inventory")) {
    state.commandCenter_TAS =
      `
  <<
  🎒 Inventory Help

  - Edit your inventory in the story card using the format: "Item Name (Amt)".

  - Item Storing Format: "You [store words]... [amt] [item name]... [inventory words]." Ex: "You put 2 apples into your bag."
  - Item Giving Format: "You [give words] [amt] [item]." Ex: "You give 1 apple."

  >>
  `

    return " ";
  }
  else if (text.includes("/help actions")) {
    state.commandCenter_TAS =
      `
    <<
    ⚔️ Action System Help

    - Avoid vague language. Example: "You slice it" (slice with what?).

    - Actions can harness across talents, skills, and item usage.
    - Actions failure is handled by the AI and costs mana and energy.

    - Rest to recover HP, MP, and EP:
    - Recovery results vary depending on the your resting intensity. Ex: Napping, light sleep, deep sleep.
    - Resting Format: "You [enter words] [sleep words]."

    - Use consumables to recover HP and EP.
    - Consuming Format: "You [consume words] [consumable]."

    - Use skills/talents on yourself to heal. Format: "You [heal word] [yourself] [skill/talent]."
    - Heal amount = 25% INTL + (2 * Skill/Talent Lvl)

    - Attack Format: "You [attackWords]"
    - +10 ATK & SPD → stronger and faster attacks
    - Attacking grants ATK and SPD points.

    - Dodging Format: "You [dodgeWords]"
    - +10 SPD → faster actions, better dodging
    - Dodging grants SPD points.

    - Scouting Format: "You [scout words]."
    - +10 INTL → greater detail when scouting.
    - Scouting grants INTL points.

    - Defend Format: "You [defend words]."
    - +10 DEF → greater defense when blocking.
    - Defending grants DEF points.

    - Exercise Format: "You [doWords] [num of reps] [exerciseWords]"
    - Exercising consumes ~10 EP, grants ATK, DEF, SPD, and maxEP per rep.

    >>
    `

    return " ";
  }
  else if (text.includes("/help keywords")) {
    state.commandCenter_TAS =
      `
    <<
    🔎 talentWords:\n${talentWords}
    🔎 learnWords:\n${learnWords}
    🔎 castWords:\n${castWords}
    🔎 equipWords:\n${equipWords}
    🔎 invWords:\n${invWords}
    🔎 giveWords:\n${giveWords}
    🔎 attackWords:\n${attackWords}
    🔎 dodgeWords:\n${dodgeWords}
    🔎 consumeWords:\n${consumeWords}
    🔎 enterWords:\n${enterWords}
    🔎 restingWords:\n${restingWords}
    🔎 scoutWords:\n${scoutWords}
    🔎 defendWords:\n${defendWords}
    🔎 healingWords:\n${healingWords}
    🔎 exerciseWords:\n${exerciseWords}
    >>
    `

    return " ";
  }
  else if (text.includes("/help multiplayer")) {
    state.commandCenter_TAS =
      `
    <<
    🧑‍🤝‍🧑 Multiplayer Help

    - /add "PlayerName" etc... — enable multiplayer by adding a player. You must use quotation marks around the name.
    - /remove "PlayerName" etc... — remove a player. You must use quotation marks around the name.
    - /playerlist — list of all players stored

    - Edit the AI, AIN, and AN to support writing in third person mode.
    - Enable third person mode in settings.
    - Click the AID icon and ensure all players enter their character name to replace 'You' with their respective names.
    >>
    `

    return " ";
  }
  else if (text.includes("/help modifiers")) {
    state.commandCenter_TAS =
      `
    <<
    🍷 Player Modifiers

    - Modifiers depend on your race.
    - Modifier percentage is multiplied and added to your starting stats, exp, regeneration, damage, etc..
    - Change your race in the Player Stats sc and delete the Modifiers sc to change your starting Modifiers.

    >>
    `

    return " ";
  }
  else if (text.includes("/help")) {
    state.commandCenter_TAS =
      `
    <<
    TRUE AUTO STATS RPG SCRIPT BY Yi1i1i
    🛠️ Script Commands

    - /start — Starts the script
    - /end — Stops the script
    - /help stats — Stat mechanics and usage
    - /help modifiers — Race modifier info  
    - /help talents — Talent mechanics and learning
    - /help skills — Skill casting and upgrades
    - /help inventory — Storing and managing items
    - /help actions — Combat, healing, resting, and usage behaviors
    - /help keywords — Command triggers
    - /help multiplayer — commands and advice for multiplayer/partying
    >>
    `

    return " ";
  }

  return text;
}

function helpCommandOutput_TAS(text) {
  if (state.commandCenter_TAS) {
    text = state.commandCenter_TAS;
  }
  delete state.commandCenter_TAS
  return text;
}

// Increment turn counter at end of onOutput
function turnCounter() {
  state.turnCount += 1;
  log("state.turnCount: " + state.turnCount);
}

// Remove script texts to clean AI context
function removeAngleText(text) {
  return text.replace(/<<[\s\S]*?>>/g, '');
}

// Function to capitalize first letter of a string
function capitalizeFirst(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

// Function to return all indices of one target in array (plural insensitive)
function indicesOf(arr, target) {
  indices = [];
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] === target || arr[i] === `${target}s` || arr[i] === `${target}es` || arr[i] === `${target.slice(0, target.length - 1)}ies`) {
      // Found the word, store its index
      indices.push(i);
    }
  }

  if (indices.length == 0) {
    return null;
  }
  else {
    return indices; //arr
  }

}

// With a words arr and arr of targets, get indices for each target from word arr and return indices in an arr
function indicesOfTargets(wordsArr, targetWordsArr) {
  allTargetsIndicesArr = [];

  // Loop through each target word and store their indices from words arr in an array
  targetWordsArr.forEach(word => {
    // unused target words return null so filter them out of index holder
    if (indicesOf(wordsArr, word)) {
      //indicesOf returns an array, alltargetindices becomes an array of arrays so concat them
      allTargetsIndicesArr = allTargetsIndicesArr.concat(indicesOf(wordsArr, word));
      allTargetsIndicesArr.sort((a, b) => a - b);
    }
  });

  //if no indices found return null
  if (allTargetsIndicesArr.length <= 0) {
    return null;
  }

  return allTargetsIndicesArr;
}

//Input a string and remove punctuation
function removeSpecificPunctuation(str) {
  return str.replace(/[.><,!?;:"()\-\n]/g, " ");
}

//Return true or false for first letter capitalized
function isFirstLetterCapitalized(word) {
  if (!word) return false;  // Return false for empty string
  return word.charAt(0) === word.charAt(0).toUpperCase();
}

function randomInt(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

function randomFloat(min, max) {
  return Math.random() * (max - min) + min;
}

// Check for targets in text and split text string if there are. Replace all target words with first target word if simplify is true
function findTargetsThenSplit(text, targetWordsArr, simplifyFlag) {
  if (text == null) return [];

  yesSplit = false

  // Remove punctuation from string to standardize text processing
  cleanText = removeSpecificPunctuation(text);

  // loop through target words and check if text has target
  targetWordsArr.forEach(target => {
    targetRegex = new RegExp(`\\b(${target}(?:s|es)?)\\b`, "gi");

    // If text has target, set yessplit true
    if (targetRegex.test(cleanText)) {
      // Optional replace large target words with first target word
      if (simplifyFlag === true && target.split(" ").length > 1) {
        cleanText = cleanText.replace(targetRegex, targetWordsArr[0]);
      }

      yesSplit = true;
    }

    // Check plural case for words that end in y
    if (target.endsWith("y") && !/[aeiou]y$/i.test(target)) {
      targetRegex = new RegExp(`\\b(${target.slice(0, target.length - 1)}ies)\\b`, "gi");

      // If text has target, set yessplit true
      if (targetRegex.test(cleanText)) {
        // Optional replace large target words with first target word
        if (simplifyFlag === true && target.split(" ").length > 1) {
          cleanText = cleanText.replace(targetRegex, targetWordsArr[0]);
        }

        yesSplit = true;
      }
    }

  });
  //log("cleanText postregex: " + cleanText);
  //log("yesSplit: " + yesSplit);

  // Split text if target was found
  if (yesSplit) {
    return cleanText.split(/\s+/).filter(word => word.trim() !== "");
  }
  else {
    return [];
  }

}

// Given an arr of targets and a string, clean text and check if string has a target
function cleanStringCheckForTargets(targetWordsArr, text) {
  if (text == null) { return false };

  text = text.toLowerCase();
  let cleanText = removeSpecificPunctuation(text);
  //log(cleanText);

  // Loop through target words
  for (let target of targetWordsArr) {
    let targetRegex = new RegExp(`\\b${target}\\b`, "gi");
    //log(target);

    // Check if target is found in the text
    if (targetRegex.test(cleanText)) {
      return true; // Immediately return true if a match is found
    }
  }

  return false; // Return false if no matches are found
}

function separateByPlr(text) {
  const sentences = text.match(/[^.?!]+(?:[.?!]|$)/g)?.map(s => s.trim()) || [];
  const plrs = {};
  let currentPlr = null;


  // Initialize player lists
  state.playerList.forEach(name => {
    plrs[name] = [];
  });

  sentences.forEach(sentence => {
    found = false;

    // Detect if sentence includes a player's name (as a full word)
    state.playerList.forEach(name => {
      const regex = new RegExp(`\\b${name}\\b`, 'i'); // case-insensitive full word match
      if (regex.test(sentence)) {
        currentPlr = name;
        found = true;
      }
    });

    // You represents the first player.
    youWords.forEach(youWord => {
      const regex = new RegExp(`\\b${youWord}\\b`, 'i');
      if (regex.test(sentence)) {
        currentPlr = state.playerList[0];
        found = true;
      }
    });

    // Assign sentence to player
    if (currentPlr) {
      plrs[currentPlr].push(" " + sentence);
    }
  });

  return plrs;
}


// Given a words arr, checks if there is a "you" a num specificed before target indicesarr
function checkYouBeforeIndicesArr(plr, wordsArr, indicesArr, numWordsBefore) {
  //loop through array of target indices
  for (i = 0; i < indicesArr.length; i++) {
    //get the current target index
    currentIndex = indicesArr[i];

    // Store words from current target index up to specified indices before them without going out of bounds into a holder
    let prevWordsHolder = wordsArr.slice(Math.max(0, currentIndex - numWordsBefore), currentIndex);

    // Check in holder containing words before current target index if it has "you"
    if (onePlayerFlagger()) {
      if (prevWordsHolder.some(word => youWords.includes(word))) {
        return true;
      }
    }
    else {
      // If player name exists in any of the previous words, return true
      if (prevWordsHolder.some(word => word.toLowerCase() === plr.toLowerCase())) {
        return true;
      }
      // Player 1 can check for you as well
      if (plr == state.playerList[0] && prevWordsHolder.some(word => youWords.includes(word))) {
        return true;
      }
    }
  }

  return false;
}

//Given a words arr, checks if there is a "and" a num specificed before target indicesarr
function checkAndBeforeIndicesArr(wordsArr, indicesArr, numWordsBefore) {
  //loop through array of target indices
  for (i = 0; i < indicesArr.length; i++) {
    //get the current target index
    currentIndex = indicesArr[i];

    // Store words from current target index up to specified indices before them without going out of bounds into a holder
    let prevWordsHolder = wordsArr.slice(Math.max(0, currentIndex - numWordsBefore), currentIndex);

    //Check in holder containing words before current target index if it has "and"
    if (prevWordsHolder.includes("and")) {
      return true;
    }
  }

  return false;
}

// Check if any guest is distance after any home, and push weight into weightarr if true
function isAfterIndex(guestIndices, homeIndices, minDis, maxDis, weightIfTrue, arrOfWeights) {
  if (guestIndices && homeIndices) {
    guestIndices.forEach((g, index) => {
      homeIndices.forEach((h, index2) => {
        // Check if the guest element is after the home element within the given distance
        if (g - h <= maxDis && g - h >= minDis) {
          arrOfWeights[index] += weightIfTrue;
        }
      });
    });
  }
}

// Check if any guest is distance before any home, and push weight into weightarr if true
function isBeforeIndex(guestIndices, homeIndices, minDis, maxDis, weightIfTrue, weightArr) {
  if (guestIndices && homeIndices) {
    guestIndices.forEach((g, index) => {
      homeIndices.forEach((h, index2) => {
        // Check if the guest element is before the home element within the given distance
        if (g - h >= -maxDis && g - h <= -minDis) {
          weightArr[index] += weightIfTrue;
        }
      });
    });
  }
}

// Get closest number before an index from an arr
function findClosestNumberBefore(arr, index) {
  for (let i = index - 1; i >= 0; i--) {
    const match = arr[i].match(/(\d+(\.\d+)?)/); // match integer or decimal
    if (match) {
      return Number(match[1]);
    }
  }
  return null; // no number found before index
}

function wordsToNumber(text) {
  const smallNumbers = {
    "zero": 0, "one": 1, "two": 2, "three": 3, "four": 4, "five": 5,
    "six": 6, "seven": 7, "eight": 8, "nine": 9, "ten": 10,
    "eleven": 11, "twelve": 12, "thirteen": 13, "fourteen": 14,
    "fifteen": 15, "sixteen": 16, "seventeen": 17, "eighteen": 18, "nineteen": 19
  };

  const tens = {
    "twenty": 20, "thirty": 30, "forty": 40, "fifty": 50,
    "sixty": 60, "seventy": 70, "eighty": 80, "ninety": 90
  };

  const multipliers = {
    "hundred": 100,
    "thousand": 1000,
    "million": 1000000,
    "billion": 1000000000
  };

  // Match possible number phrases like "two hundred and twenty-five"
  const numberWordsRegex = new RegExp(
    '\\b(?:(?:zero|one|two|three|four|five|six|seven|eight|nine|ten|' +
    'eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen|' +
    'twenty|thirty|forty|fifty|sixty|seventy|eighty|ninety|' +
    'hundred|thousand|million|billion|[-])+\\s*)+\\b',
    'gi'
  );

  // Process a number phrase like "one hundred twenty three"
  function parseNumberPhrase(phrase) {
    const words = phrase.toLowerCase().replace(/-/g, ' ').split(/\s+/);
    let total = 0, current = 0;

    for (let word of words) {
      if (smallNumbers[word] != null) {
        current += smallNumbers[word];
      } else if (tens[word] != null) {
        current += tens[word];
      } else if (word === "hundred") {
        current *= 100;
      } else if (multipliers[word]) {
        current *= multipliers[word];
        total += current;
        current = 0;
      }
    }


    return total + current + " ";

  }

  // Replace all matching phrases with numeric values
  return text.replace(numberWordsRegex, match => {
    return parseNumberPhrase(match);
  });
}

function getDigitIndices(wordsArray) {
  const digitIndices = [];

  for (let i = 0; i < wordsArray.length; i++) {
    if (/^\d+$/.test(wordsArray[i])) {
      digitIndices.push(i);
    }
  }

  return digitIndices;
}

//Function to get plr race from pe
function getPlrRacePE() {
  //Get PE text
 let plotEssentials = state.memory.context.toLowerCase();

  // Default race to human
 let race = "human";

  //Get plr race from PE
  raceNames.forEach(name => {
    if (plotEssentials.includes(name.toLowerCase() + " race")) {
      race = name.toLowerCase();
    }
  });

  // Remove spaces in race name
  race = race.replace(/\s+/g, '');

  return race;
}

function getPlrClassPE() {
  const plotEssentials = state.memory.context.toLowerCase();

  // Get player class from plot essentials
  const regex = /(\w+)\s+class/i;
  const match = plotEssentials.match(regex);

  classString = "mage";
  if (match) {
    classString = match[1];
  }

  return classString;
}

// This function returns the index of a string in words arr
function indexOfStr(needleArr, haystackArr) {
  // Ensure str is split into words (if it's a string)
  if (typeof needleArr === "string") {
    needleArr = needleArr.toLowerCase().split(" ");
  }
  else {
    needleArr = needleArr.map(w => w.toLowerCase());
  }
  // Case insensitive
  haystackArr = haystackArr.map(w => w.toLowerCase());

  for (let i = 0; i <= haystackArr.length - needleArr.length; i++) {
    let match = true;
    for (let j = 0; j < needleArr.length; j++) {
      if (haystackArr[i + j] !== needleArr[j]) {
        match = false;
        break;
      }
    }
    if (match) return i;
  }
  return -1;
}

// For an arr of indices, find closest index to target index
function closestIndexBeforeTarget(arr, targetIndex) {
  let closest = -1;
  for (let i = 0; i < arr.length; i++) {
    const current = arr[i];
    if (typeof current === 'number' && current <= targetIndex) {
      if (closest === -1 || targetIndex - current < targetIndex - closest) {
        closest = current;
      }
    }
  }
  return closest;
}

// Function to turn words in string to plural for player pronouns in multiplayer
function toCoOpLang(plr, str) {
  if (onePlayerFlagger()) return str;

  // Regex-friendly join of words
  const wordPattern = new RegExp(`\\b(${pluralizableWords.join('|')})\\b`, 'gi');

  return str
    // Replace "your" with "<plr>'s"
    .replace(/\byour\b/gi, match => matchCase(`${plr}'s`, match))

    // Replace "you are" with "<plr> is"
    .replace(/\byou are\b/gi, match => matchCase(`${plr} is`, match))

    // Replace "you're" with "<plr>'s"
    .replace(/\byou're\b/gi, match => matchCase(`${plr}'s`, match))

    // Replace "you have" with "<plr> has"
    .replace(/\byou have\b/gi, match => matchCase(`${plr} has`, match))

    // Replace standalone "you" with "<plr>"
    .replace(/\byou\b/gi, match => matchCase(plr, match))

    // Optional: handle "have" (you might skip this unless needed)
    .replace(/\bhave\b/gi, match => matchCase("have", match))

    // Pluralize specific words
    .replace(wordPattern, (match) => matchCase(pluralize(match.toLowerCase()), match));
}

// Helper: match output's case to input's
function matchCase(output, input) {
  if (input === input.toUpperCase()) return output.toUpperCase();
  if (input[0] === input[0].toUpperCase()) return output[0].toUpperCase() + output.slice(1);
  return output;
}

function pluralize(word) {
  // Basic pluralization rules (can be expanded)
  if (word.endsWith("y") && !/[aeiou]y$/.test(word)) return word.slice(0, -1) + "ies";
  if (word.endsWith("s") || word.endsWith("x") || word.endsWith("ch") || word.endsWith("sh")) return word + "es";
  return word + "s";
}

// Delete a story card by title
function removeSC(title) {
  const index = storyCards.findIndex(card => card.title === title);
  if (index !== -1) {
    storyCards.splice(index, 1);
    return true;
  }
  return false; // Card not found
}

// Inject a string to the AI context
function insertAfterWorldLore(text, insertString) {
  const target = "World Lore:\n";
  const index = text.indexOf(target);
  //log("index: " + index);
  log("insertString: " + insertString);

  if (!text.includes(insertString)) {
    if (index !== -1) {
      return text.slice(0, index + target.length) + insertString + "\n" + text.slice(index + target.length);
    }
    else {
      log("Added World Lore");
      text = "World Lore:\n" + insertString + "\n" + text;
    }
  }

  return text;
}

/////////////////////////////////////////////////////////////////////////////////////

function createIfNoSettingsSC() {
  if (!storyCards.find(sc => sc.title === "TAS Settings")) {
    // If card doesn't exist, create it
    addStoryCard("TAS Settings", "Blank", `Player Stats`);

    // Create description
    const settingsSC = storyCards.find(sc => sc.title === `TAS Settings`);
    settingsSC.description = `injectStatsToContext: (true/false), set to true to inject player data to AI context at the cost of tokens.` + settingsSC.description;
  }
}

function storeSettingsToSC() {
  const settingsSC = storyCards.find(sc => sc.title === `TAS Settings`);

  settingsSC.entry = `injectStatsToContext = ${String(state.injectStatsToContext)}`;

}

function retrieveSettingsFromSC() {
  const settingsSC = storyCards.find(sc => sc.title === `TAS Settings`);

  // Extract injectStatsToContext
  const injectMatch = settingsSC.entry.match(/injectStatsToContext\s*=\s*(true|false)/i);
  if (injectMatch) {
    if (injectMatch[1] == "true") {
      state.injectStatsToContext = true;
    }
    else if (injectMatch[1] == "false") {
      state.injectStatsToContext = false;
    }
  }

  //log("state.injectStatsToContext: " + state.injectStatsToContext);
}

function feedPlrDataToContext(text) {
  statKeys = ["lvl", "hp", "mp", "ep", "atk", "def", "spd", "lck", "intl"];

  if (state.injectStatsToContext && !state.unlockInvToContext && !state.unlockStrgToContext) {
    state.playerList.forEach(plr => {
      allItems = [];
      allTalents = [];
      allSkills = [];
      allStats = [];
      statText = "";

      // Get all plr items
      state.players[plr].inv.item.forEach((itm, index) => {
        allItems.push(`${state.players[plr].inv.amt[index]} ${state.players[plr].inv.item[index]}`);
      })
      if (allItems.length == 0) {
        allItems.push("nothing");
      }
      allItems = allItems.join(", ");

      // Get all plr talents
      state.players[plr].talents.name.forEach((itm, index) => {
        talentTier = getTier(state.players[plr].talents.lvl[index]);
        allTalents.push(`${talentTier} ${state.players[plr].talents.name[index]}`);
      })
      if (allTalents.length == 0) {
        allTalents.push("nothing");
      }
      allTalents = allTalents.join(", ");

      // Get all plr skills
      state.players[plr].skills.name.forEach((itm, index) => {
        skillTier = getTier(state.players[plr].skills.lvl[index]);
        allSkills.push(`${skillTier} ${state.players[plr].skills.name[index]}`);
      })
      if (allSkills.length == 0) {
        allSkills.push("nothing");
      }
      allSkills = allSkills.join(", ");

      // Get all plr stats
      statKeys.forEach(key => {
        statAmt = state.players[plr].stats[key];
        maxStatAmt = state.players[plr].stats[`max${capitalizeFirst(key)}`];

        // Scaling fix for tiers
        if (key == "hp" || key == "ep" || key == "mp") {
          statTier = getTier(statAmt/10);
          capTier = getCapacityTier(statAmt,maxStatAmt);

          allStats.push(`${statAmt} (${capTier}) / ${maxStatAmt} (${statTier})`);
        }
        else{
          statTier = getTier(statAmt);
          allStats.push(`${statTier} (${statAmt}/${maxStatAmt})`);
        }
      });

      // Create stat text
      if (allStats.length > 0) {
        statText = `is ${state.players[plr].race}, ${state.players[plr].class_}, Level ${state.players[plr].stats.maxLvl} (${getTier(state.players[plr].stats.maxLvl)}), has ${allStats[1]} health, ${allStats[2]} mana, ${allStats[3]} energy, ${allStats[4]} attack, ${allStats[5]} defense, ${allStats[6]} speed, ${allStats[7]} luck, ${allStats[8]} intelligence.`
      }

      // Combine all plr data text for final return
      if (!onePlayerFlagger()) {
        text = insertAfterWorldLore(text, `[Assume ${plr} inventory has only ${allItems}. ${plr} talents are only ${allTalents}. ${plr} skills are only ${allSkills}. ${plr} ${statText}]\n`);
      }
      else {
        text = insertAfterWorldLore(text, `[Assume player inventory has only ${allItems}. Player talents are only ${allTalents}. Player skills are only ${allSkills}. Player ${statText}]\n`);
      }
    });
  }

  return text;
}
/////////////////////////////////////////////////////////////////////////////////////

// Creates initial player
function defaultPlrCreation() {
  state.players = state.players || {};
  state.potentialTalents = state.potentialTalents || {};

  if (Object.keys(state.players).length == 0) {
    addPlayer("Player");
  }

  log("state.playerList: " + state.playerList);

  //log(state.players);
}

function onePlayerFlagger() {
  return Object.keys(state.players).length === 1;
}


function addPlayer(id) {
  if (!state.players[id]) {
    state.players[id] = {
      stats: {
        lvl: 0,
        exp: 0,
        hp: 0,
        mp: 0,
        ep: 0,
        atk: 0,
        def: 0,
        spd: 0,
        lck: 0,
        intl: 0,

        maxLvl: 0,
        maxExp: 0,
        maxHp: 0,
        maxMp: 0,
        maxEp: 0,
        maxAtk: 0,
        maxDef: 0,
        maxSpd: 0,
        maxLck: 0,
        maxIntl: 0
      },

      modifiers: {
        lvlMod: 0,
        hpMod: 0,
        mpMod: 0,
        epMod: 0,
        atkMod: 0,
        defMod: 0,
        spdMod: 0,
        lckMod: 0,
        intlMod: 0
      },

      inv: {
        item: [],
        amt: []
      },

      talents: {
        name: [],
        lvl: [],
        cost: [],
        keys: []
      },

      skills: {
        name: [],
        lvl: [],
        cost: []
      },

      race: "Human",

      class_: "Mage"
    }

    state.potentialTalents[id] = {
      name: [],
      exp: []
    }

    state.playerList.push(id);
    log(`Added Player ${id}`);
  }//end of !id
};

// Allows user to add a player by typing /add "name"
function addPlrCmdInput(text) {
  if (text.includes("/add") && !text.includes("say")) {
    let successAdds = [];
    let playerAddList = [...text.matchAll(/"([^"]+)"/g)].map(match => match[1]);

    playerAddList.forEach(name => {
      // Only add player if they don't already exist
      if (!state.players[name]) {
        addPlayer(name);
        successAdds.push(name);
      }
    });

    if (successAdds.length > 0) {
      text = `<< ➕ Successfully added ${successAdds.join(", ")} >>`;
    } else {
      text = `<< ⚠️ No new players were added. >>`;
    }
  }

  return text;
}

function removePlayer(playerId) {

  if (state.players[playerId]) {
    delete state.players[playerId];
    delete state.potentialTalents[playerId];

    if (state.playerList) {
      state.playerList = state.playerList.filter(id => id !== playerId);
    }
    log(`Removed Player ${playerId}`);
  }
}

function removePlrCmdInput(text) {
  if (text.includes("/remove") && !text.includes("say")) {
    let successRemoves = [];
    let playerRemoveList = [...text.matchAll(/"([^"]+)"/g)].map(match => match[1]);

    playerRemoveList.forEach(name => {
      if (state.players[name]) {
        removePlayer(name);
        successRemoves.push(name);

        // Remove player story cards
        removeSC(`${name} Stats`);
        removeSC(`${name} Modifiers`);
        removeSC(`${name} Inventory`);
        removeSC(`${name} Talents`);
        removeSC(`${name} Skills`);
      }
    });

    if (successRemoves.length > 0) {
      return `<< 🗑️ Successfully removed ${successRemoves.join(", ")} >>`;
    } else {
      return `<< ⚠️ No players were removed. >>`;
    }
  }

  return text;
}

function listPlrCmdInput(text) {
  if (text.includes("/playerlist")) {
    text = `<< ${state.playerList} >>`;
  }

  return text;
}

/////////////////////////////////////////////////////////////////////////////////////

const raceMods = {
  human: {
    lvlMod: 0,
    hpMod: 0,
    mpMod: 0,
    epMod: 0,
    atkMod: 0,
    defMod: 0,
    spdMod: 0,
    lckMod: 0,
    intlMod: 0
  },
  dwarf: {
    lvlMod: -5,
    hpMod: 20,
    mpMod: -10,
    epMod: -5,
    atkMod: 5,
    defMod: 15,
    spdMod: -5,
    lckMod: -5,
    intlMod: 0
  },
  beastfolk: {
    lvlMod: 0,
    hpMod: 10,
    mpMod: -5,
    epMod: 10,
    atkMod: 10,
    defMod: 0,
    spdMod: 10,
    lckMod: 0,
    intlMod: -5
  },
  elf: {
    lvlMod: 0,
    hpMod: -10,
    mpMod: 20,
    epMod: 0,
    atkMod: -5,
    defMod: 0,
    spdMod: 5,
    lckMod: 10,
    intlMod: 15
  },
  orc: {
    lvlMod: -5,
    hpMod: 15,
    mpMod: -10,
    epMod: 5,
    atkMod: 20,
    defMod: 10,
    spdMod: -10,
    lckMod: -10,
    intlMod: -5
  },
  lizardmen: {
    lvlMod: 0,
    hpMod: 10,
    mpMod: -5,
    epMod: 5,
    atkMod: 10,
    defMod: 5,
    spdMod: 0,
    lckMod: 0,
    intlMod: -5
  },
  goblin: {
    lvlMod: 5,
    hpMod: -10,
    mpMod: 0,
    epMod: 0,
    atkMod: -5,
    defMod: -10,
    spdMod: 15,
    lckMod: 10,
    intlMod: 0
  },
  majin: {
    lvlMod: 10,
    hpMod: 0,
    mpMod: 10,
    epMod: 10,
    atkMod: 10,
    defMod: 0,
    spdMod: 5,
    lckMod: 5,
    intlMod: 10
  },
  vampire: {
    lvlMod: 0,
    hpMod: -5,
    mpMod: 15,
    epMod: 5,
    atkMod: 10,
    defMod: -5,
    spdMod: 10,
    lckMod: 10,
    intlMod: 10
  },
  fairy: {
    lvlMod: 5,
    hpMod: -15,
    mpMod: 20,
    epMod: 10,
    atkMod: -10,
    defMod: -5,
    spdMod: 15,
    lckMod: 10,
    intlMod: 15
  },
  god: {
    lvlMod: 50,
    hpMod: 50,
    mpMod: 50,
    epMod: 50,
    atkMod: 50,
    defMod: 50,
    spdMod: 50,
    lckMod: 50,
    intlMod: 50
  },
  demigod: {
    lvlMod: 35,
    hpMod: 35,
    mpMod: 35,
    epMod: 35,
    atkMod: 35,
    defMod: 35,
    spdMod: 35,
    lckMod: 35,
    intlMod: 35
  },
  yokai: {
    lvlMod: 5,
    hpMod: 0,
    mpMod: 10,
    epMod: 0,
    atkMod: 5,
    defMod: 0,
    spdMod: 10,
    lckMod: 15,
    intlMod: 10
  },
  dragon: {
    lvlMod: -10,
    hpMod: 25,
    mpMod: 5,
    epMod: 5,
    atkMod: 20,
    defMod: 15,
    spdMod: -10,
    lckMod: -5,
    intlMod: 5
  },
  zombie: {
    lvlMod: -5,
    hpMod: 20,
    mpMod: -10,
    epMod: -5,
    atkMod: 5,
    defMod: 10,
    spdMod: -10,
    lckMod: -15,
    intlMod: -10
  },
  insectoid: {
    lvlMod: 0,
    hpMod: 5,
    mpMod: 0,
    epMod: 5,
    atkMod: 5,
    defMod: 5,
    spdMod: 15,
    lckMod: -5,
    intlMod: -5
  },
  angel: {
    lvlMod: 10,
    hpMod: 5,
    mpMod: 15,
    epMod: 10,
    atkMod: 5,
    defMod: 5,
    spdMod: 5,
    lckMod: 10,
    intlMod: 15
  },
  demon: {
    lvlMod: 5,
    hpMod: 10,
    mpMod: 5,
    epMod: 10,
    atkMod: 15,
    defMod: 5,
    spdMod: 5,
    lckMod: -5,
    intlMod: 5
  },
  daemon: {
    lvlMod: 10,
    hpMod: 5,
    mpMod: 10,
    epMod: 10,
    atkMod: 10,
    defMod: 10,
    spdMod: 10,
    lckMod: 0,
    intlMod: 10
  },
  slime: {
    lvlMod: -10,
    hpMod: 10,
    mpMod: 5,
    epMod: 5,
    atkMod: -5,
    defMod: 25,
    spdMod: -5,
    lckMod: 0,
    intlMod: 5
  },
  harpy: {
    lvlMod: 0,
    hpMod: -10,
    mpMod: 0,
    epMod: 10,
    atkMod: 0,
    defMod: -5,
    spdMod: 20,
    lckMod: 5,
    intlMod: 0
  },
  lich: {
    lvlMod: 0,
    hpMod: -15,
    mpMod: 20,
    epMod: 0,
    atkMod: -5,
    defMod: 0,
    spdMod: -5,
    lckMod: 10,
    intlMod: 20
  },
  bloodletter: {
    lvlMod: 0,
    hpMod: 10,
    mpMod: -10,
    epMod: 10,
    atkMod: 15,
    defMod: 0,
    spdMod: 5,
    lckMod: -5,
    intlMod: -10
  },

  plaguebearer: {
    lvlMod: 0,
    hpMod: 20,
    mpMod: 10,
    epMod: -10,
    atkMod: 0,
    defMod: 10,
    spdMod: -10,
    lckMod: -5,
    intlMod: 5
  },

  chiss: {
    lvlMod: 0,
    hpMod: 0,
    mpMod: 10,
    epMod: 0,
    atkMod: 0,
    defMod: 0,
    spdMod: 5,
    lckMod: 10,
    intlMod: 15
  },

  shifters: {
    lvlMod: 0,
    hpMod: 5,
    mpMod: 0,
    epMod: 10,
    atkMod: 5,
    defMod: 0,
    spdMod: 10,
    lckMod: 0,
    intlMod: -5
  },

  highelves: {
    lvlMod: 0,
    hpMod: -5,
    mpMod: 20,
    epMod: 0,
    atkMod: 0,
    defMod: 0,
    spdMod: 5,
    lckMod: 5,
    intlMod: 15
  },

  sangheili: {
    lvlMod: 0,
    hpMod: 15,
    mpMod: 0,
    epMod: 10,
    atkMod: 10,
    defMod: 10,
    spdMod: 0,
    lckMod: -5,
    intlMod: 0
  },

  kigYar: {
    lvlMod: 0,
    hpMod: -5,
    mpMod: 0,
    epMod: 10,
    atkMod: 0,
    defMod: -5,
    spdMod: 15,
    lckMod: 10,
    intlMod: 5
  },

  unggoy: {
    lvlMod: 0,
    hpMod: -10,
    mpMod: 5,
    epMod: -5,
    atkMod: -5,
    defMod: 0,
    spdMod: -10,
    lckMod: 10,
    intlMod: -10
  },

  minotaur: {
    lvlMod: 0,
    hpMod: 25,
    mpMod: -10,
    epMod: 10,
    atkMod: 15,
    defMod: 5,
    spdMod: -10,
    lckMod: -5,
    intlMod: -10
  },

  yautja: {
    lvlMod: 0,
    hpMod: 15,
    mpMod: 0,
    epMod: 15,
    atkMod: 15,
    defMod: 10,
    spdMod: 5,
    lckMod: -5,
    intlMod: 0
  },

  kroxigor: {
    lvlMod: 0,
    hpMod: 30,
    mpMod: -20,
    epMod: 5,
    atkMod: 20,
    defMod: 15,
    spdMod: -15,
    lckMod: -10,
    intlMod: -15
  },

  krogan: {
    lvlMod: 0,
    hpMod: 25,
    mpMod: -10,
    epMod: 10,
    atkMod: 10,
    defMod: 20,
    spdMod: -10,
    lckMod: 0,
    intlMod: -5
  },

  twilek: {
    lvlMod: 0,
    hpMod: 0,
    mpMod: 10,
    epMod: 0,
    atkMod: -5,
    defMod: 0,
    spdMod: 10,
    lckMod: 15,
    intlMod: 5
  },

  erinyes: {
    lvlMod: 0,
    hpMod: 5,
    mpMod: 20,
    epMod: 5,
    atkMod: 10,
    defMod: 0,
    spdMod: 5,
    lckMod: 5,
    intlMod: 10
  },

  togruta: {
    lvlMod: 0,
    hpMod: 0,
    mpMod: 10,
    epMod: 5,
    atkMod: 0,
    defMod: 0,
    spdMod: 10,
    lckMod: 5,
    intlMod: 10
  },

  skink: {
    lvlMod: 0,
    hpMod: -10,
    mpMod: 5,
    epMod: 10,
    atkMod: -5,
    defMod: -5,
    spdMod: 20,
    lckMod: 5,
    intlMod: 0
  },

  coldones: {
    lvlMod: 0,
    hpMod: 20,
    mpMod: -10,
    epMod: 0,
    atkMod: 15,
    defMod: 10,
    spdMod: -5,
    lckMod: -10,
    intlMod: -10
  },

  jiralhanae: {
    lvlMod: 0,
    hpMod: 30,
    mpMod: -15,
    epMod: 15,
    atkMod: 20,
    defMod: 15,
    spdMod: -10,
    lckMod: -10,
    intlMod: -10
  },

  dragonkin: {
    lvlMod: 0,
    hpMod: 20,
    mpMod: 20,
    epMod: 20,
    atkMod: 20,
    defMod: 15,
    spdMod: -10,
    lckMod: -10,
    intlMod: -10
  }
};

modKeys = ["lvlMod", "hpMod", "mpMod", "epMod", "atkMod", "defMod", "spdMod", "lckMod", "intlMod"];
raceNames = ["Human", "Dwarf", "Dragonkin", "Beastfolk", "Elf", "Orc", "Lizardmen", "Goblin", "Majin", "Vampire", "Fairy", "God", "Yokai", "Dragon", "Zombie", "Insectoid", "Angel", "Demon", "Daemon", "Slime", "Harpy", "Lich", "Bloodletter", "Plaguebearer", "Chiss", "Shifters", "High Elves", "Sangheili", "Kig-Yar", "Unggoy", "Minotaur", "Yautja", "Kroxigor", "Krogan", "Twi'lek", "Erinyes", "Togruta", "Skink", "Cold Ones", "Jiralhanae"];
statKeysForMod = ["lvl", "hp", "mp", "ep", "atk", "def", "spd", "lck", "intl"];

//CREATE new sc with player Modifiers if sc doesnt exist
function createIfNoModifierSC() {
  createFlag = false;

  state.playerList.forEach(plr => {
    if (!storyCards.find(sc => sc.title === `${plr} Modifiers`)) {
      // If "Player Modifiers" card doesn't exist, create it
      addStoryCard(`${plr} Modifiers`, "Blank", `Player Stats`);
      createFlag = true;

      // Get the plr race retrieved from stats sc
      plrRace = state.players[plr].race;
      // If plr race modifiers is undefined
      if (!raceMods[plrRace]) {
        plrRace = "human";
      }

      // Fetch the "Player Modifiers" card
      const modSC = storyCards.find(sc => sc.title === `${plr} Modifiers`);
      modSC.description = `Format for Modifying: MOD: num\nModifiers influence your starting stats and modify the exp you receive.\n`

      // Set player modifier values in SC based on their race
      modKeys.forEach(key => {
        state.players[plr].modifiers[key] = raceMods[plrRace][key];
      });

      // Apply initial race mods to stats and display them to sc
      statKeysForMod.forEach(key => {
        // Modify normal stat
        temp1 = state.players[plr].stats[key] * state.players[plr].modifiers[key + "Mod"] / 100;
        state.players[plr].stats[key] = state.players[plr].stats[key] + temp1;
        state.players[plr].stats[key] = Math.round(state.players[plr].stats[key] * 100) / 100;

        // Modify max stats
        maxKey = "max" + capitalizeFirst(key);
        temp2 = state.players[plr].stats[maxKey] * state.players[plr].modifiers[key + "Mod"] / 100;
        state.players[plr].stats[maxKey] = state.players[plr].stats[maxKey] + temp2;
        state.players[plr].stats[maxKey] = Math.round(state.players[plr].stats[maxKey] * 100) / 100;

      });
    }
  });

  if (createFlag) {
    storeModifiersToSC();
  }
}

// STORES and displays the modifiers to player in sc
function storeModifiersToSC() {
  state.playerList.forEach(plr => {
    // Format player modifiers holder for SC 
    formatForSC = [];

    modKeys.forEach((key, index) => {
      const modName = key.replace("Mod", "").toUpperCase();  //ATK
      const modFormatPart = `${modName} Modifier: ${state.players[plr].modifiers[key]}%\n`; //ATK Modifier: 0%

      // Holder to hold all formatted strings
      formatForSC.push(modFormatPart);
    });
    //log(formatForSC);

    // Fetch the "Player Modifiers" card
    const modSC = storyCards.find(sc => sc.title === `${plr} Modifiers`);

    // Convert holder to string, clean commas, and finally store to sc entry
    modSC.entry = String(formatForSC).replace(/,/g, '');

    // Trim notes on char limit to prevent memory overfill
    if (modSC.description.length > 3000) {
      halfIndex = Math.floor(modSC.description.length / 3);
      modSC.description = modSC.description.slice(0, halfIndex);

      log("Trimming modSC description to prevent memory overload.");
    }
  });
}

//RETRIEVE data from sc and store to playerModifiers
function retrieveModifiersFromSC() {
  state.playerList.forEach(plr => {
    // Fetch the "Player Modifiers" card
    const modSC = storyCards.find(sc => sc.title === `${plr} Modifiers`);

    // Retrieve and split sc entry into (modName, value) lines
    const modEntries = modSC.entry.split("\n"); //arr of strings

    //Loop through each line of entry from the split and extract values
    modEntries.forEach(entry => {
      // Match and extract stat and max stat values using regex
      const match = entry.trim().match(/^([A-Z]+)\s+Modifier:\s*(-?\d+(?:\.\d+)?)(?:%)?$/);
      //log("mod sc match: " + match);

      //Store value in holder
      if (match) {
        modName = match[1].toLowerCase() + 'Mod'; // e.g., "HP"
        modValue = Number(match[2]); // e.g., 0

        // Finally store modValue in playerModifier
        //OR operator safeguards against null values    
        state.players[plr].modifiers[modName] = modValue ?? state.players[plr].modifiers[modName];

      }
    });
  });
  //log(state.players[plr].modifiers);
}

/////////////////////////////////////////////////////////////////////////////////////

maxStatKeys = ["maxLvl", "maxExp", "maxHp", "maxMp", "maxEp", "maxAtk", "maxDef", "maxSpd", "maxLck", "maxIntl"];
statKeys = ["lvl", "exp", "hp", "mp", "ep", "atk", "def", "spd", "lck", "intl"];

// NOTE: Players stats will be stored in a sc. CREATE initial stats. RETRIEVE from or STORE to player stats: SC -> <- state.playerstats

//Function to create new random player stats
function newPlayerStats(plr) {
  //Get a random max level
  state.players[plr].stats.maxLvl = randomInt(1, 25);

  //Loop through each maxstat, and set max stats equal to max level
  maxStatKeys.forEach((mStat) => {
    state.players[plr].stats[mStat] = state.players[plr].stats.maxLvl;
  });

  //Give player random initialized stats capped by max level
  statKeys.forEach((stat) => {
    state.players[plr].stats[stat] = randomInt(1, state.players[plr].stats.maxLvl);
  });

  // EXP starts at 0 and caps at 100
  state.players[plr].stats.exp = 0;
  state.players[plr].stats.maxExp = 100;

  // Stat scaling
  state.players[plr].stats.maxHp = state.players[plr].stats.maxLvl * 2 + 20;
  state.players[plr].stats.maxEp = state.players[plr].stats.maxLvl * 2 + 80;
  state.players[plr].stats.maxMp = (state.players[plr].stats.maxLvl * 1.5) + (state.players[plr].stats.intl * 2) + 80;

  // Player starts at full health
  state.players[plr].stats.hp = state.players[plr].stats.maxHp;
  state.players[plr].stats.ep = state.players[plr].stats.maxEp;
  state.players[plr].stats.mp = state.players[plr].stats.maxMp;

}

// CREATE new sc with random playerstats if sc doesnt exist
function createIfNoStatSC() {
  createFlag = false;

  state.playerList.forEach(plr => {
    if (!storyCards.find(sc => sc.title === `${plr} Stats`)) {
      // If `${plr} Stats` card doesn't exist, create it
      addStoryCard(`${plr} Stats`, "Blank", `Player Stats`);

      // Fetch the `${plr} Stats` card
      const statSC = storyCards.find(sc => sc.title === `${plr} Stats`);
      statSC.description = "Format for Modifying: Stat: num/maxNum";

      //Initialize and randomize new player stats
      newPlayerStats(plr);
      state.players[plr].race = getPlrRacePE();
      state.players[plr].class_ = getPlrClassPE();
      //todo: add occupation


      createFlag = true;
    }
  });

  if (createFlag) {
    storeStatsToSC();
  }
}

// STORES and displays the stats to player in sc
function storeStatsToSC() {
  state.playerList.forEach(plr => {
    // Format player stats holder for SC 
    formatForSC = [];

    // Store the plr's race and class
    formatForSC.push(`Race: ${capitalizeFirst(state.players[plr].race)}\n`);
    formatForSC.push(`Class: ${capitalizeFirst(state.players[plr].class_)}\n`);

    maxStatKeys.forEach((key, index) => {
      // Lvl storing exception
      if (key == "maxLvl") {
        statFormatPart = `LVL ${state.players[plr].stats.maxLvl}\n`
      }
      else {
        // Remove 'max' and capitalize. Ex: maxAtk -> ATK
        statName = key.substring(3).toUpperCase();

        // Formatted stat line. Ex: ATK: atk/maxAtk
        statFormatPart = `${statName}: ${state.players[plr].stats[statName.toLowerCase()]}/${state.players[plr].stats[key]}\n`;
      }

      // Push to holder for holding all formatted strings
      formatForSC.push(statFormatPart);
    });
    //log(formatForSC);

    // Fetch the `${plr} Stats` card
    const statSC = storyCards.find(sc => sc.title === `${plr} Stats`);

    // Convert holder to string, clean commas, and finally store to sc entry
    statSC.entry = String(formatForSC).replace(/,/g, '');

    // Trim notes on char limit to prevent memory overfill
    if (statSC.description.length > 3000) {
      halfIndex = Math.floor(statSC.description.length / 3);
      statSC.description = statSC.description.slice(0, halfIndex);

      log("Trimming statSC description to prevent memory overload.");
    }
  });
}

function createIfNoCurrSC(){
    formatForSC = [];
  if (!storyCards.find(sc => sc.title === "Story Status")) {
    // If "Story Status" card doesn't exist, create it
    addStoryCard("Story Status", "Blank", "world stats");

    // Fetch the "Story Status" card
    const currSC = storyCards.find(sc => sc.title === "Story Status");
     
// Convert holder to string, clean commas, and finally store to sc entry
  currSC.entry = String(formatForSC).replace(/,/g, '');
  currSC.description = String(formatForSC).replace(/,/g, '');
  };
  }
function storeCurrToSC() {
  // Fetch the "Story Status" card
  const currSC = storyCards.find(sc => sc.title === "Story Status");
  if (!currSC) return;

  // Format the heat, temperature, and author’s note info
  currSC.entry =
    `World Clock: ${state.statusBar || ""}\n` + 
    `Current turn: ${state.turnNum_SAE}\n` +
    `Year: ${state.globalTime.year}\n` +
    `Month-Day: ${String(state.globalTime.month).padStart(2, '0')}-${String(state.globalTime.day).padStart(2, '0')}\n` +
    `Hour-Minute: ${String(state.globalTime.hour).padStart(2, '0')}:${String(state.globalTime.minute).padStart(2, '0')}\n` +
    `Turns Per Removal: ${state.turnsPerElemRemoval}\n` +
    `Current Heat: ${state.heat}\n` +
    `Current Temperature: ${state.storyTemperature}\n` +
    `AI: ${state.sae.activePointIndex}\n`+
    `Authors Note: ${state.authorsNoteStorage}\n`+ 
    `TD: ${state.stt.timePassOnDo}\n`+
    `TS: ${state.stt.timePassOnSay}\n`+
    `TST: ${state.stt.timePassOnStory}\n`+
    `TC: ${state.stt.timePassOnContinue} \n`+
    `turn: ${state.turnCount}\n`;
   


  // Initialize description if missing
  if (!currSC.description) {
      currSC.description = '';
  }

  // Add heatlogs if present
  if (state.heatlogs) {
      currSC.description = `Log ${state.turnCount} | ${state.heatlogs}\n` + currSC.description;
  }

  // Trim from the bottom if longer than 3000 chars
  if (currSC.description.length > 3000) {
      currSC.description = currSC.description.slice(0, 3000);
      log("Trimming currSC.description to keep only recent logs");
  }
}



function retrieveCurrFromSC() {
  
  // Fetch the "Story Status" card
  const currSC = storyCards.find(sc => sc.title === "Story Status");
  if (!currSC || !currSC.entry) return;

  // Split entry by lines
  const lines = currSC.entry.split('\n');

  lines.forEach(line => {
    const [key, ...rest] = line.split(':').map(s => s.trim());
    const value = rest.join(':'); // preserves hour:minute intact

    if (key === "Year") state.globalTime.year = Number(value);
    else if (key === "Month-Day") {
    const [month, day] = value.split('-').map(Number);
    state.globalTime.month = month;
    state.globalTime.day = day;
    }
    else if (key === "Hour-Minute") {
    const [hour, minute] = value.split(':').map(Number);
    state.globalTime.hour = hour;
    state.globalTime.minute = minute;
    }
     else if (key === "Turns Per Removal") {
      state.turnsPerElemRemoval = Number(value);
    }
    else if (key === "Current Heat") {
      state.heat = Number(value);
    }
    else if (key === "Current Temperature") {
      state.storyTemperature = Number(value);
    }
     else if (key === "AI") {
      state.sae.activePointIndex = Number(value);
    }
    else if (key === "Authors Note") {
      state.memory.authorsNote = value || state.authorsNoteStorage;
    }
      else if (key === "TD") {
      state.stt.timePassOnDo = Number(value);
    }
    else if (key === "TS") {
      state.stt.timePassOnSay = Number(value);
    }
    else if (key === "TST") {
      state.stt.timePassOnStory = Number(value);
    }
    else if (key === "TC") {
      state.stt.timePassOnContinue = Number(value);
    }
    else if (key === "turn") {
      state.turnCount = Number(value);
    }

  });
  // --- Apply JSON/date recalculation logic exactly as given ---
  let needsDateRecalc = false;

  for (const key in this.defaultSettings) {
    if (state.stt[key] === undefined) {
      state.stt[key] = JSON.parse(JSON.stringify(this.defaultSettings[key]));
      if (['gameHour', 'gameMinute', 'dayOfMonth', 'month', 'year'].includes(key)) {
        needsDateRecalc = true;
      }
    }
  }
  state.stt.initialized = true;

  try {
    const currentDate = new Date(
      state.stt.year, state.stt.month, state.stt.dayOfMonth,
      state.stt.gameHour, state.stt.gameMinute
    );
    if (isNaN(currentDate.getTime())) {
      console.warn("STT.initialize: Invalid date in state. Resetting.");
      state.stt = JSON.parse(JSON.stringify(this.defaultSettings));
      const validDefaultDate = new Date(state.stt.year, state.stt.month, state.stt.dayOfMonth);
      state.stt.dayOfWeek = validDefaultDate.getDay();
    } else if (needsDateRecalc || state.stt.dayOfWeek !== currentDate.getDay()) {
      state.stt.dayOfWeek = currentDate.getDay();
    }
  } catch (e) {
    console.error("STT.initialize: Date validation error. Resetting.", e);
    state.stt = JSON.parse(JSON.stringify(this.defaultSettings));
    const validDefaultDate = new Date(state.stt.year, state.stt.month, state.stt.dayOfMonth);
    state.stt.dayOfWeek = validDefaultDate.getDay();
  }
}


function checkTimeOfDay() {
  // Ensure state variables exist
  if (typeof state.lastTimePeriod === "undefined") state.lastTimePeriod = null;
  if (typeof state.lastCheckedDay === "undefined") state.lastCheckedDay = null;

  let currentDay = state.stt.dayOfMonth;
  let hour = state.stt.gameHour;
  let minute = state.stt.gameMinute;

  // Detect any day change (forward or backward)
  if (currentDay !== state.lastCheckedDay) {
    state.lastCheckedDay = currentDay;
    state.lastTimePeriod = null; // reset so morning triggers
    return "";
  }

let timeOfDay, emoji;

if (hour >= 0 && hour < 4) {
    timeOfDay = "late-night";
    emoji = "🌌"; // late night
} else if (hour >= 4 && hour < 6) {
    timeOfDay = "dawn";
    emoji = "🌄"; // sunrise/dawn
} else if (hour >= 6 && hour < 12) {
    timeOfDay = "morning";
    emoji = "🌅"; // morning
} else if (hour >= 12 && hour < 17) {
    timeOfDay = "afternoon";
    emoji = "🌇"; // afternoon/sunset
} else if (hour >= 17 && hour < 21) {
    timeOfDay = "evening";
    emoji = "🌆"; // evening
} else {
    timeOfDay = "night";
    emoji = "🌙"; // night
}

  // Trigger when time period changes
  if (timeOfDay !== state.lastTimePeriod) {
    state.lastTimePeriod = timeOfDay;
    return `${emoji} It is now ${timeOfDay}. Current time: ${String(hour).padStart(2, "0")}:${String(minute).padStart(2, "0")}`;
  }
  return "";
}

// RETRIEVE data from sc and store to playerstats
function retrieveStatsFromSC() {
  state.playerList.forEach(plr => {
    const statMappings = {
      //lvl: 'maxLvl',
      exp: 'maxExp',
      hp: 'maxHp',
      mp: 'maxMp',
      ep: 'maxEp',
      atk: 'maxAtk',
      def: 'maxDef',
      spd: 'maxSpd',
      lck: 'maxLck',
      intl: 'maxIntl',
    };

    //Fetch SC
    const statSC = storyCards.find(sc => sc.title === `${plr} Stats`);

    // Retrieve and split sc entry into array of stat lines
    const statEntries = statSC.entry.split("\n"); //arr of strings

    // Loop through each stat line in array and extract values
    statEntries.forEach(entry => {
      const raceMatch = entry.trim().match(/^RACE\s*[:\-]?\s*(.+)$/i);
      if (raceMatch) {
        const race = raceMatch[1].toLowerCase().trim();

        state.players[plr].race = race ?? state.players[plr].race;

        return; // Skip further processing
      }

      const classMatch = entry.trim().match(/^CLASS\s*[:\-]?\s*(.+)$/i);
      if (classMatch) {
        const className = classMatch[1].toLowerCase().trim();

        state.players[plr].class_ = className ?? state.players[plr].class_;

        return; // Skip further processing
      }

      // Lvl retrieval exception
      const lvlMatch = entry.trim().match(/^(?:LVL|LEVEL)\s*[:\-]?\s*(\d+)$/i);
      if (lvlMatch) {
        state.players[plr].stats.maxLvl = Number(lvlMatch[1]);
        return; // Skip lvl match when found
      }

      // Match and extract (statname, stat, maxStat)
      const match = entry.trim().match(/^([a-zA-Z]+)\s*:\s*(\d+(?:\.\d+)?)\s*\/\s*(\d+(?:\.\d+)?)$/);
      //log("stat sc match: " + match);

      //Store value in holder
      if (match) {
        const statName = match[1].toLowerCase();  // stat name (Ex: 'atk')
        const statValue = Number(match[2]);    // current stat value (Ex: '50')
        const maxStatValue = Number(match[3]); // max stat value (Ex: '100')

        // Finally store stat and max stat in the playerStats if name is valid
        if (statMappings[statName]) { //Ex: statMappings[atk] = 'maxAtk'
          //OR operator safeguards against null values    
          state.players[plr].stats[statName] = statValue ?? state.players[plr].stats[statName];
          state.players[plr].stats[statMappings[statName]] = maxStatValue ?? state.players[plr].stats[statMappings[statName]];
        }
      }
    });
  });
  //log(state.playerStats);
}

// Function to increment the player's stats
function statUp(plr, statName, incAmt) {
  // Ensure incAmt is a number
  if (typeof incAmt !== "number") {
    incAmt = 0;
  }
  incAmt = Number(incAmt);
  incAmt = Math.round(incAmt * 100) / 100;
  log("incAmt: " + incAmt + " " + statName);

  //Intialize incAmt trackers for logging
  preModIncAmt = incAmt;
  scaledIncAmt = incAmt;

  //Race modifiers influence stat gains
  plrRace = getPlrRacePE();
  temp = incAmt * state.players[plr].modifiers[statName + 'Mod'] / 100;
  //Multiply temp by negative to ensure modifiers dont modify oppositely when incAmt is negative
  if (incAmt < 0) {
    temp = temp * -1;
  }
  incAmt = incAmt + temp;
  incAmt = Math.round(incAmt * 100) / 100;
  log("Race modded incAmt: " + incAmt + " " + statName);

  // Get maxstat string key Ex: maxATK
  maxStatName = "max" + statName.charAt(0).toUpperCase() + statName.slice(1);

  // Save current stat
  stat = state.players[plr].stats[statName];
  log("stat: " + stat);
  log("----------");

  // Exception: Extra hp,mp,ep shouldnt lvl up player, simply increment available value
  if (statName == "hp" || statName == "mp" || statName == "ep") {
    state.players[plr].stats[statName] += incAmt;

    // Only two decimal places
    state.players[plr].stats[statName] = Math.round(state.players[plr].stats[statName] * 100) / 100;

    // No overflow for hp, mp, ep
    if (state.players[plr].stats[statName] > state.players[plr].stats[maxStatName]) {
      state.players[plr].stats[statName] = state.players[plr].stats[maxStatName];
    }

    // Fetch the `${plr} Stats` card and log stat changes in description
    const statSC = storyCards.find(sc => sc.title === `${plr} Stats`);

    if (incAmt >= 0) { sign = "⬆️" }
    if (incAmt < 0) { sign = "🔻" }

    statSC.description = `Log ${state.turnCount} | ${statName.toUpperCase()} ${sign} :  ${stat} → ${state.players[plr].stats[statName]} (Modded: ${incAmt}, Raw: ${preModIncAmt})\n` + statSC.description;

    state.msgHolder = state.msgHolder + `${plr} ${statName.toUpperCase()} ${sign} :  ${stat} → ${state.players[plr].stats[statName]}\n`;
  }
  else {
    // Formula which decreases value of exp the higher your level and gets the new stat value after exp gain. (stat + incAmt*PercentReduction)
    // New stat after exp scaling formula
    newStat = 0.01 + stat + incAmt * (1.32 * Math.exp(-0.02 * stat));

    // Get scaled incAmt for logging
    scaledIncAmt = incAmt * (1.32 * Math.exp(-0.02 * stat));
    scaledIncAmt = Math.round(scaledIncAmt * 100) / 100;
    log("scaledIncAmt: " + scaledIncAmt);

    // Two decimal places only
    newStat = Math.round(newStat * 100) / 100;
    log("newStat: " + newStat);
    // todo: fix rounding at very high levels

    // Update the player stat to its new stat
    state.players[plr].stats[statName] = newStat;

    // Stat cant pass max stat so it overflows, get the overflow if it exists
    overflow = state.players[plr].stats[statName] - state.players[plr].stats[maxStatName];
    overflow = Math.round(overflow * 100) / 100;
    log("overflow: " + overflow);

    // Fix stat to not pass maxstat
    if (state.players[plr].stats[statName] > state.players[plr].stats[maxStatName]) {
      state.players[plr].stats[statName] = state.players[plr].stats[maxStatName];
    };

    // Fetch sc and log
    const statSC = storyCards.find(sc => sc.title === `${plr} Stats`);

    if (incAmt >= 0) { sign = "⬆️" }
    if (incAmt < 0) { sign = "🔻" }

    statSC.description = `Log ${state.turnCount} | ${statName.toUpperCase()} ${sign} :  ${stat} → ${state.players[plr].stats[statName]} (Scaled: ${scaledIncAmt}, Modded: ${incAmt}, Raw: ${preModIncAmt})\n` + statSC.description;

    // Log to msg
    state.msgHolder = state.msgHolder + `${plr} ${statName.toUpperCase()} ${sign} :  ${stat} → ${state.players[plr].stats[statName]}\n`;

    //If there is positive stat overflow, pass it to player EXP
    if (overflow > 0) {
      // Get current max level
      level = state.players[plr].stats.maxLvl;
      log("level: " + level);

      // Scale overflow and add to EXP (Must scale overflow to account when player is high level but has a low stat which will overflow too much to EXP)
      state.players[plr].stats.exp = 0.01 + state.players[plr].stats.exp + (100 * overflow * (1.32 * Math.exp(-0.02 * level)));

      // Round to two decimal places
      state.players[plr].stats.exp = Math.round(state.players[plr].stats.exp * 100) / 100;
      log("state.players[plr].stats.exp: " + state.players[plr].stats.exp);

      //When maxEXP is reached, increment plr level and reset EXP to 0
      if (state.players[plr].stats.exp >= state.players[plr].stats.maxExp) {
        // Calculate amt of times to increment LVL based on EXP
        lvlIncrement = Math.floor(state.players[plr].stats.exp / state.players[plr].stats.maxExp);
        log("lvlIncrement: " + lvlIncrement);

        // Calculate leftover EXP
        leftoverExp = 100 * (state.players[plr].stats.exp / state.players[plr].stats.maxExp - lvlIncrement);
        log("leftoverExp: " + leftoverExp);

        // Increment LVL
        state.players[plr].stats.maxLvl += lvlIncrement;

        // Reset EXP to 0 and add leftover exp
        state.players[plr].stats.exp = 0 + leftoverExp;
        state.players[plr].stats.exp = Math.round(state.players[plr].stats.exp * 100) / 100;

        // Fetch the `${plr} Stats` card and leave log in description
        const statSC = storyCards.find(sc => sc.title === `${plr} Stats`);
        statSC.description = `Log ${state.turnCount} | LVL ${level} → ${state.players[plr].stats.maxLvl}\n` + statSC.description;

        state.msgHolder = state.msgHolder + `${plr} LVL ${level} → ${state.players[plr].stats.maxLvl}\n`;

        // Since player has leveled up, increase all max stats
        maxStatKeys.forEach((key) => {
          //Get mod key
          statKey = key.slice(3); // Remove "max"
          modName = statKey.toLowerCase() + "Mod";

          // Apply max stat changes
          if (key == "maxHp") {
            state.players[plr].stats[key] += 5 + (5 * state.players[plr].modifiers[modName] / 100);
          }
          else if (key == "maxEp") {
            state.players[plr].stats[key] += 5 + (5 * state.players[plr].modifiers[modName] / 100);
          }
          else if (key == "maxMp") {
            state.players[plr].stats[key] += 5 + state.players[plr].stats.intl * 0.1 + (5 * state.players[plr].modifiers[modName] / 100);
          }
          else {
            if (key != 'maxLvl' && key != 'maxExp') {
              state.players[plr].stats[key] += 5 + (5 * state.players[plr].modifiers[modName] / 100);;
            }
          }

          // Round to two decimal places
          state.players[plr].stats[key] = Math.round(state.players[plr].stats[key] * 100) / 100;
        });

      } // End of level up
    } //end of positive overflow
  }

  storeStatsToSC();
}

function playerNaturalRegen() {
  state.playerList.forEach(plr => {
    // Player regens only if alive
    if (state.players[plr].stats.hp > 0) {
      statUp(plr, "hp", 1);
      statUp(plr, "mp", 2);

      // Player loses available energy only
      if (state.players[plr].stats.ep > 0) {
        statUp(plr, "ep", -1 * randomFloat(0, 1));
      }

      // Player takes damage for having no energy
      if (state.players[plr].stats.ep <= 0) {
        statUp(plr, "hp", -1 * (randomFloat(0.01, 5) + randomFloat(0.01, state.players[plr].stats.maxHp * 0.1)));
      }

    }//end of is alive
  });
}
//todo: add counter buffer for no energy loss while not inputting game

// Removes plr from dead plrs list if they are alive
function updateDeadPlrs() {
  state.playerList.forEach(plr => {
    if (state.players[plr].stats.hp > 0 && state.deadPlrs.includes(plr)) {
      const index = state.deadPlrs.indexOf(plr);
      if (index > -1) {
        state.deadPlrs.splice(index, 1); // Remove the player from deadPlrs
      }
    }
  });

  log("state.deadPlrs: " + state.deadPlrs);
}

// Edit text to show player health
function warnPlayerHealth(text) {
  state.playerList.forEach(plr => {
    plrHealth = state.players[plr].stats.hp;
    plrMaxHealth = state.players[plr].stats.maxHp;

    plrEnergy = state.players[plr].stats.ep;
    plrMaxEnergy = state.players[plr].stats.maxEp;

    numTurnsDisplay = 5;

    // Warn player every 5 inputs, they have 50% health
    if ((plrHealth / plrMaxHealth) >= 0.45 && (plrHealth / plrMaxHealth) <= 0.50 && state.inputCount % numTurnsDisplay === 0) {
      text = text + toCoOpLang(plr, ` ${realizePhrases[randomInt(0, realizePhrases.length - 1)]} ${healthFeelsHalfway[randomInt(0, healthFeelsHalfway.length - 1)]}. `);
    }

    // Warns at 1% to 10% health
    else if ((plrHealth / plrMaxHealth) >= 0.01 && (plrHealth / plrMaxHealth) <= 0.10 && state.inputCount % numTurnsDisplay === 0) {
      text = text + toCoOpLang(plr, ` ${realizePhrases[randomInt(0, realizePhrases.length - 1)]} ${healthVeryLow[randomInt(0, healthVeryLow.length - 1)]}. `);
    }

    // Player Death at 0%
    if (plrHealth <= 0 && state.inputCount % 2 === 0 && onePlayerFlagger()) {
      text = text + ` Suddenly, ${healthDeathArray[randomInt(0, healthDeathArray.length - 1)]} The world continues without you.`;

      state.msgHolder = state.msgHolder + `GAME OVER. You died!\n`;
    }
    else if (plrHealth <= 0 && !state.deadPlrs.includes(plr) && !onePlayerFlagger()) {
      // Update dead plrs list
      state.deadPlrs.push(plr);

      // Create flavor text
      text = text + toCoOpLang(plr, ` Suddenly, ${healthDeathArray[randomInt(0, healthDeathArray.length - 1)]} The world continues without you. `);

      state.msgHolder = state.msgHolder + toCoOpLang(plr, `You died!\n`);
    }


    // Warns every 5 input, at 50% energy
    if ((plrEnergy / plrMaxEnergy) >= 0.45 && (plrEnergy / plrMaxEnergy) <= 0.50 && state.inputCount % numTurnsDisplay === 0) {
      text = text + toCoOpLang(plr, ` ${realizePhrases[randomInt(0, realizePhrases.length - 1)]} ${halfEnergyArray[randomInt(0, halfEnergyArray.length - 1)]} `);
    }

    // Warns at 1% to 10% energy
    else if ((plrEnergy / plrMaxEnergy) >= 0.01 && (plrEnergy / plrMaxEnergy) <= 0.10 && state.inputCount % numTurnsDisplay === 0) {
      text = text + toCoOpLang(plr, ` ${realizePhrases[randomInt(0, realizePhrases.length - 1)]} ${exhaustedArray[randomInt(0, exhaustedArray.length - 1)]}`);

      state.msgHolder = state.msgHolder + toCoOpLang(plr, `Your energy is very low. You may want to rest or eat.\n`)

    }

    // No energy at 0%
    if (plrEnergy <= 0 && state.inputCount % 5 === 0) {
      text = text + toCoOpLang(plr, ` Suddenly, ${fullExhaustionArray[randomInt(0, fullExhaustionArray.length - 1)]} `);

      state.msgHolder = state.msgHolder + toCoOpLang(plr, `You have no energy! Recover by consuming or sleeping.\n`)
    }

  });

  return text;
}

/////////////////////////////////////////////////////////////////////////////////////

// CREATE new sc with player inv if sc doesnt exist
function createIfNoInvSC() {
  state.playerList.forEach(plr => {
    if (!storyCards.find(sc => sc.title === `${plr} Inventory`)) {
      // If `${plr} Inventory` card doesn't exist, create it
      addStoryCard(`${plr} Inventory`, "Blank", `Player Stats`);

      // Fetch the `${plr} Inventory` card
      const invSC = storyCards.find(sc => sc.title === `${plr} Inventory`);
      invSC.description = "Format for Modifying: ItemName (amt: X)";
    }
  });
}

// STORE inv to sc
function storeInvToSC() {
  state.playerList.forEach(plr => {
    // Fetch the `${plr} Inventory` card
    const invSC = storyCards.find(sc => sc.title === `${plr} Inventory`);

    // Format and display to sc
    invSC.entry = state.players[plr].inv.item.map((item, index) => `${item} (Amt: ${state.players[plr].inv.amt[index]})`).join("\n");

    // Trim notes on char limit to prevent memory overfill
    if (invSC.description.length > 3000) {
      halfIndex = Math.floor(invSC.description.length / 3);
      invSC.description = invSC.description.slice(0, halfIndex);

      log("Trimming invSC description to prevent memory overload.");
    }

  });
}

// RETRIEVE inv data from sc
function retrieveInvFromSC() {
  state.playerList.forEach(plr => {

    // Fetch the `${plr} Inventory` card
    const invSC = storyCards.find(sc => sc.title === `${plr} Inventory`);

    // Get inv sc entry
    fromInvSC = invSC.entry;
    //log("fromInvSC: " + fromInvSC);

    // Use regex to extract item names and amounts (Ex: Ball (Amt: 2), etc. )
    matches = fromInvSC.matchAll(/(.+?)\s*\(.*?(\d+(?:\.\d+)?).*?\)/g);

    itemHold = [];
    amtHold = [];
    for (const match of matches) {
      // Do not extract 0 amt items
      if (match[2] != 0) {
        itemHold.push(match[1].trim()); // Extract item name to holder
        amtHold.push(Number(match[2])); // Extract amount as integer to holder2
      }
    }

    // Store retrieved data to codebase 
    state.players[plr].inv.item = itemHold;
    state.players[plr].inv.amt = amtHold;

    //log("state.players[plr].inv.item: " + state.players[plr].inv.item);
    //log("state.players[plr].inv.amt: " + state.players[plr].inv.amt);
  });
}

// Detect when the player stores item and amt to their inventory
function detectStoreInv(text) {
  newText = "";

  // Verify player is not dialoguing (case-insensitive)
  dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      // Disable check dialoguing exists
      dialogueFlag = false;
    }
  });

  if (dialogueFlag) {
    // Check which players are in the input and store their name and corresponding text
    result = separateByPlr(text);
    plrsDetected = Object.keys(result);
    plrText = {};

    plrsDetected.forEach(plr => {
      if (result[plr].length > 0) {
        plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "");
      }
      else {
        plrText[plr] = result[plr].join(" ");
      }
    });

    // Loop through each player and test for action
    plrsDetected.forEach(plr => {
      // Initialize condition var
      startEquip = false;
      storeFlavorText = "";

      // Check for inventory words in input then split text into words arr
      equipTextInput = [];
      processedText = wordsToNumber(plrText[plr]);
      equipTextInput = findTargetsThenSplit(processedText, invWords, true);
      //equipTextInput = findTargetsThenSplit(text,equipWords,true);
      log("equipTextInput: " + equipTextInput);


      // If there are inventory words, check for "you equip" in words arr using indices
      if (equipTextInput != null) {
        //Get indices of all equip words in words arr
        allEquipWordIndices = [];
        allEquipWordIndices = indicesOfTargets(equipTextInput, equipWords);
        log("allEquipWordIndices: " + allEquipWordIndices);


        // If "you" is found within x indices of equip words, start equip process
        if (allEquipWordIndices != null) {
          startEquip = checkYouBeforeIndicesArr(plr, equipTextInput, allEquipWordIndices, 3) || checkAndBeforeIndicesArr(equipTextInput, allEquipWordIndices, 2);
          log("startEquip:" + startEquip);
        }
      }

      // Start equip process when "you equip + inventory" is found in words arr
      if (startEquip == true) {
        // Initialize arrays for potential items from filtered input
        potentialItem = {
          tokens: [],
          indices: [],
          weights: []
        };

        // Filter out words that arent potential items
        potentialItem.tokens = equipTextInput.filter(word =>
          ![...stopWords, ...equipWords, ...talentWords, ...dodgeWords, ...castWords, ...learnWords, ...invWords, ...numWords, ...youWords, ...selfWords, ...consumeWords, ...titleWords].some(fromArr => (
            fromArr.toLowerCase() === word.toLowerCase())
            || (fromArr.toLowerCase() + "s" === word.toLowerCase())
            || (fromArr.toLowerCase() + "es" === word.toLowerCase())
          ));
        potentialItem.tokens = potentialItem.tokens.filter(word => !/^\d+$/.test(word));
        log("potentialItem.tokens: " + potentialItem.tokens);

        if (potentialItem.tokens.length > 0) {
          // Get potential item indices from unfiltered input text
          potentialItem.indices = indicesOfTargets(equipTextInput, potentialItem.tokens);

          // Remove duplicate indices
          potentialItem.indices = [...new Set(potentialItem.indices)];
          log("potentialItem.indices: " + potentialItem.indices);

          // Initialize weight array to hold 0 for each potential item token
          potentialItem.weights = [];
          potentialItem.indices.forEach(word => { potentialItem.weights.push(0); });
          //log("potentialItem.weights: " + potentialItem.weights);

          // Get all indices of biased words in text, set to [] if null to avoid errors
          allEquipWordIndices = allEquipWordIndices || [];
          invWordIndices = indicesOfTargets(equipTextInput, invWords) || [];
          numIndices = getDigitIndices(equipTextInput) || [];
          fromIndices = indicesOf(equipTextInput, "from") || [];
          theIndices = indicesOf(equipTextInput, "the") || [];
          aIndices = indicesOf(equipTextInput, "a") || [];
          anIndices = indicesOf(equipTextInput, "an") || [];
          ofIndices = indicesOf(equipTextInput, "of") || [];
          inIndices = indicesOf(equipTextInput, "in") || [];
          intoIndices = indicesOf(equipTextInput, "into") || [];
          andIndices = indicesOf(equipTextInput, "and") || [];
          itIndices = indicesOf(equipTextInput, "it") || [];
          itsIndices = indicesOf(equipTextInput, "its") || [];
          themIndices = indicesOf(equipTextInput, "them") || [];
          thatIndices = indicesOf(equipTextInput, "that") || [];
          thenIndices = indicesOf(equipTextInput, "then") || [];

          // Weigh each token based on distance before or after biased words
          // If token is near an "equip word"
          if (allEquipWordIndices.length > 0) {
            // Ex: You place sword
            isAfterIndex(potentialItem.indices, allEquipWordIndices, 0, 3, 2.5, potentialItem.weights);
            isAfterIndex(potentialItem.indices, allEquipWordIndices, 4, 5, 1.5, potentialItem.weights);
            isAfterIndex(potentialItem.indices, allEquipWordIndices, 6, 10, 0.5, potentialItem.weights);
          }

          // If token is near an "inventory word"
          if (invWordIndices.length > 0) {
            // First 2 words before inv likely "in your" bag (Ex: ...sword in your bag)
            isBeforeIndex(potentialItem.indices, invWordIndices, 0, 2, -2.5, potentialItem.weights);
            isBeforeIndex(potentialItem.indices, invWordIndices, 2, 4, 2, potentialItem.weights);
            isBeforeIndex(potentialItem.indices, invWordIndices, 5, 6, 1.5, potentialItem.weights);
          }

          // If token is near "number"
          if (numIndices.length > 0) {
            // Ex: take 1 sword
            isAfterIndex(potentialItem.indices, numIndices, 0, 3, 2.5, potentialItem.weights);
          }

          // If token is near "the" 
          if (theIndices.length > 0) {
            // Ex: take the sword
            isAfterIndex(potentialItem.indices, theIndices, 0, 4, 2.5, potentialItem.weights);
          }

          // If token is near "from"
          if (fromIndices.length > 0) {
            // Ex: take sword from
            isBeforeIndex(potentialItem.indices, fromIndices, 0, 2, 1, potentialItem.weights);
            isBeforeIndex(potentialItem.indices, fromIndices, 3, 4, 0.5, potentialItem.weights);

            isAfterIndex(potentialItem.indices, fromIndices, 0, 3, -2, potentialItem.weights);

          }
          // If token is near "a/an"
          if (aIndices.length > 0 || anIndices.length > 0) {
            // Ex: take a sword
            isAfterIndex(potentialItem.indices, aIndices, 0, 4, 1.5, potentialItem.weights);
            isAfterIndex(potentialItem.indices, anIndices, 0, 4, 1.5, potentialItem.weights);
          }

          // If token is near "of" 
          if (ofIndices.length > 0) {
            // Ex: take 3 of the swords
            isAfterIndex(potentialItem.indices, ofIndices, 0, 1, 0.5, potentialItem.weights);
            isAfterIndex(potentialItem.indices, ofIndices, 2, 4, 1, potentialItem.weights);
          }

          // If token is near "in/into"  
          if (inIndices.length > 0 || intoIndices.length > 0) {
            // Ex: take sword and put in
            isBeforeIndex(potentialItem.indices, inIndices, 0, 8, 1, potentialItem.weights);
            isBeforeIndex(potentialItem.indices, intoIndices, 0, 8, 1, potentialItem.weights);

            isAfterIndex(potentialItem.indices, inIndices, 0, 3, -2, potentialItem.weights);
          }

          // If token is near "and"
          if (andIndices.length > 0) {
            // Ex: sword, gun, and shield
            isBeforeIndex(potentialItem.indices, andIndices, 0, 3, 1, potentialItem.weights);
            isBeforeIndex(potentialItem.indices, andIndices, 4, 6, 0.5, potentialItem.weights);

            isAfterIndex(potentialItem.indices, andIndices, 0, 3, 1.5, potentialItem.weights);

          }

          // If token is near "it/its"
          if (itIndices.length > 0 || itsIndices.length > 0) {
            //Ex: "apple and put it"
            isBeforeIndex(potentialItem.indices, itIndices, 0, 3, -1, potentialItem.weights);
            isBeforeIndex(potentialItem.indices, itsIndices, 4, 8, 1.5, potentialItem.weights);

            isAfterIndex(potentialItem.indices, itsIndices, 0, 3, -2, potentialItem.weights);
          }

          // If token is near "them"
          if (themIndices.length > 0) {
            // Ex: "and put them"
            isBeforeIndex(potentialItem.indices, themIndices, 0, 3, -1.5, potentialItem.weights);
            isBeforeIndex(potentialItem.indices, themIndices, 4, 8, 1.5, potentialItem.weights);

            isAfterIndex(potentialItem.indices, themIndices, 0, 2, -2, potentialItem.weights);
          }

          // If token is near "that"
          if (thatIndices.length > 0) {
            // Ex: take that apple
            isAfterIndex(potentialItem.indices, thatIndices, 0, 3, 1.5, potentialItem.weights);
          }

          // If token is near "then"
          if (thenIndices.length > 0) {
            // Ex: take the sword then the apple
            isAfterIndex(potentialItem.indices, thenIndices, 0, 3, 1.5, potentialItem.weights);

            isBeforeIndex(potentialItem.indices, thenIndices, 0, 3, 1.5, potentialItem.weights);
          }
          log("potentialItem.weights: " + potentialItem.weights);

          // Initialize holder for item tokens
          itemNameParts = [];

          // Find last index that passes weight threshold to know when last item tokens will be stored
          for (let i = potentialItem.weights.length - 1; i >= 0; i--) {
            if (potentialItem.weights[i] >= 4) {
              lastWeightIndex = i;
              break;
            }
          }

          // Push potential items into holder if they pass weight threshold
          potentialItem.weights.forEach((weight, index) => {
            if (weight >= 4) {
              itemNameParts.push(potentialItem.tokens[index]);
              log("itemNameParts: " + itemNameParts);

              // Slice text chunk at potential item index for end of item testing
              textChunk = processedText.replace(/(?<!>)>(?!>)/g, "")
                .trim()
                .split(" ")
                .slice(potentialItem.indices[index], potentialItem.indices[index] + 2)
                .join(" ");
              log("textChunk: " + textChunk);

              // Test for end of item name to join and store item from holder
              pattern = new RegExp(`\\b${potentialItem.tokens[index]}\\b\\s*(,|and|\\.)`, 'i');
              itemEnd = textChunk.search(pattern);
              log("itemEnd: " + itemEnd);

              if (itemEnd !== -1 || index == lastWeightIndex) {
                // Combine item name parts into final item name
                finalItemName = itemNameParts.join(" ");
                log("finalItemName: " + finalItemName);

                // Clear the array after item is stored for next possible item
                itemNameParts = [];

                // Get item amt
                itemAmt = findClosestNumberBefore(equipTextInput, potentialItem.indices[index]);

                if (!itemAmt) {
                  itemAmt = 1;
                }

                // Get index if already existing item in player inv 
                alreadyItemIndex = [];
                alreadyItemIndex = indicesOf(state.players[plr].inv.item, finalItemName);

                // Increment item amt if already existing in inv
                if (alreadyItemIndex) {
                  state.players[plr].inv.amt[alreadyItemIndex] += itemAmt;

                  // Log to messages
                  state.msgHolder = state.msgHolder + `${plr} 🎒 +${itemAmt} ${state.players[plr].inv.item[alreadyItemIndex]}\n`;


                  // Fetch the `${plr} Inventory` card and log
                  const invSC = storyCards.find(sc => sc.title === `${plr} Inventory`);
                  invSC.description = `Log ${state.turnCount} | +${itemAmt} ${state.players[plr].inv.item[alreadyItemIndex]}\n` + invSC.description;
                }
                else {
                  // Else new item is stored
                  state.players[plr].inv.item.push(finalItemName);
                  state.players[plr].inv.amt.push(itemAmt);

                  // Log to msg
                  state.msgHolder = state.msgHolder + `${plr} 🎒 +${itemAmt} ${finalItemName}\n`;

                  // Fetch the `${plr} Inventory` card and log

                  const invSC = storyCards.find(sc => sc.title === `${plr} Inventory`);
                  invSC.description = `Log ${state.turnCount} | +${itemAmt} ${finalItemName}\n` + invSC.description;
                }
              }
            }
          });

          //Update SC
          storeInvToSC();

          storeFlavorText = storeFlavorText + toCoOpLang(plr, ` ${itemGainPhrases[randomInt(0, itemGainPhrases.length - 1)]} `);

        }//end of potentialItem.tokens.length

      }//end of startEquip

      newText = newText + plrText[plr] + storeFlavorText;
    });
  }

  if (newText == "") {
    return text;
  }
  else {
    return newText;
  }
}

// Detect when player gives away an item
function detectGiving(text) {
  newText = "";

  // Verify player is not dialoguing (case-insensitive)
  dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      // Disable check dialoguing exists
      dialogueFlag = false;
    }
  });

  if (dialogueFlag) {
    // Check which players are in the input and store their name and corresponding text
    result = separateByPlr(text);
    plrsDetected = Object.keys(result);
    plrText = {};

    // Store each player's text
    plrsDetected.forEach(plr => {
      if (result[plr].length > 0) {
        plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "");
      }
      else {
        plrText[plr] = result[plr].join(" ");
      }
    });

    // Loop through each player and test for action
    plrsDetected.forEach(plr => {
      // Initialize condition
      startGiving = false;
      finalFlavorText = "";

      // Check for give words in the text and split the input
      givingTextInput = [];
      processedText = wordsToNumber(plrText[plr]);
      givingTextInput = findTargetsThenSplit(processedText, giveWords, true);
      log("givingTextInput simplified: " + givingTextInput);

      // Get all give word indices from input
      if (givingTextInput != null) {
        allGiveWordIndices = [];
        allGiveWordIndices = indicesOfTargets(givingTextInput, giveWords);
        log("allGiveWordIndices:" + allGiveWordIndices);

        // Check if the input contains "you/and + give" then unlock execution
        if (allGiveWordIndices != null) {
          startGiving = checkYouBeforeIndicesArr(plr, givingTextInput, allGiveWordIndices, 3) || checkAndBeforeIndicesArr(givingTextInput, allGiveWordIndices, 2);
          log("startGiving: " + startGiving);
        }
      }


      // Input meets requirements, execute giving
      if (startGiving) {
        itmInputIndices = [];
        itmInputAmts = [];
        itmInvIndices = [];

        // Loop through each plr item to check if item is called in input
        state.players[plr].inv.item.forEach((itm, index) => {
          // Split itm parts for multi worded itms
          itmParts = itm.toLowerCase().split(" ");

          // Loop through each word in input and check for full item match
          for (let i = 0; i <= givingTextInput.length - itmParts.length; i++) {
            match = true;

            // Checking for full item match (case and plural insensitive)
            for (let j = 0; j < itmParts.length; j++) {
              if (itmParts[j] !== givingTextInput[i + j].toLowerCase()
                && itmParts[j] + 's' !== givingTextInput[i + j].toLowerCase()
                && itmParts[j] !== givingTextInput[i + j].toLowerCase() + 's') {
                match = false;
                break;
              }
            }
            //todo: add partial matching

            // Item is matched
            if (match) {
              // Store first part index from input in array
              itmInputIndices.push(i);

              // Get item amt from input and store in array
              itmAmt = findClosestNumberBefore(givingTextInput, i) ?? 1;
              itmInputAmts.push(itmAmt);

              // Save item index from inv in array
              itmInvIndices.push(index);
            }
          }

        });
        log("itmInputIndices: " + itmInputIndices);
        log("itmInputAmts: " + itmInputAmts);
        log("itmInvIndices: " + itmInvIndices);

        giveFlavorText = [];
        failFlavorText = [];
        zeroAmtArr = [];

        // Player has called item
        if (itmInputIndices.length > 0) {
          // Loop through each itm called 
          itmInputIndices.forEach((itm, index) => {
            // Player has enough item amount in inv
            if (state.players[plr].inv.amt[itmInvIndices[index]] >= itmInputAmts[index]) {
              // Subtract item amt from inventory
              state.players[plr].inv.amt[itmInvIndices[index]] = state.players[plr].inv.amt[itmInvIndices[index]] - itmInputAmts[index];

              // Fetch SC and log
              const invSC = storyCards.find(sc => sc.title === `${plr} Inventory`);
              invSC.description = `Log ${state.turnCount} | -${itmInputAmts[index]} ${state.players[plr].inv.item[itmInvIndices[index]]}\n` + invSC.description;

              // Log to messages
              state.msgHolder = state.msgHolder + `${plr} 🫴 -${itmInputAmts[index]} ${state.players[plr].inv.item[itmInvIndices[index]]}\n`

              // Store item to flavor text array
              giveFlavorText.push(state.players[plr].inv.item[itmInvIndices[index]]);

              storeInvToSC();

            }
            // Player doesnt have enough item amount in inv
            else {
              failFlavorText.push(state.players[plr].inv.item[itmInvIndices[index]]);
            }
          });
        }
        log("giveFlavorText: " + giveFlavorText);
        log("failFlavorText: " + failFlavorText);

        // Execute giving flavor text
        if (giveFlavorText.length > 0) {
          finalFlavorText = finalFlavorText + ` ${toCoOpLang(plr, `The ${giveFlavorText.join(", ")} leaves your inventory.`)} `;
        }
        if (failFlavorText.length > 0) {
          finalFlavorText = finalFlavorText + ` ${toCoOpLang(plr, ` You realize you don't have enough ${failFlavorText.join(", ")}.`)} `;
        }

        // Unlock Context Hook feed to influence AI to reject lack of items or wrong items to give
        allItems = [];
        state.players[plr].inv.item.forEach((itm, index) => {
          allItems.push(`${state.players[plr].inv.amt[index]} ${state.players[plr].inv.item[index]}`);
        })
        if (allItems.length == 0) {
          allItems.push("nothing");
        }
        allItems = allItems.join(", ");

        if (onePlayerFlagger()) {
          state.invCheckText = ` You realize you have nothing in your inventory but only ${allItems}. You anticipate failure for not having the right items or amount.`
        }
        else {
          state.invCheckText = state.invCheckText + ` ${plr} realizes they have nothing in their inventory but only ${allItems}. ${plr} anticipates failure for not having the right items or amount. `;
        }


        state.unlockInvToContext = true;
        log("state.unlockInvToContext: " + state.unlockInvToContext);

      }//end of startgiving

      newText = newText + plrText[plr] + finalFlavorText;
    });
  }

  if (newText == "") {
    return text;
  }
  else {
    return newText;
  }
}

// Succeeding function for detectGiving, sends the inventory and rejection check text to AI on context hook
function feedInvToContext(text) {
  if (state.unlockInvToContext) {
    text = text + state.invCheckText;
    //log("state.invCheckText: " + state.invCheckText);

    state.invCheckText = "";
  }

  state.unlockInvToContext = false;

  return text;
}

/////////////////////////////////////////////////////////////////////////////////////

// CREATE initial SC if none.
function createIfNoTalentSC() {
  state.playerList.forEach(plr => {
    // If "Player Talents" card doesn't exist, create it
    if (!storyCards.find(sc => sc.title === `${plr} Talents`)) {
      addStoryCard(`${plr} Talents`, "Blank", `Player Stats`);

      // Fetch SC and give it a description
      const talentSC = storyCards.find(sc => sc.title === `${plr} Talents`)
      talentSC.description = "Format for Modifying: Talent Name (LVL) (EP) (Optional Key1, Key2, etc.)";

    }
  });
}

// To STORE talent to sc
function storeTalentsToSC() {
  state.playerList.forEach(plr => {
    // Fetch talent sc
    const talentSC = storyCards.find(sc => sc.title === `${plr} Talents`);

    // Format and display to sc 
    talentSC.entry = state.players[plr].talents.name.map((talent, index) => `${talent} (Lvl ${state.players[plr].talents.lvl[index]}) (${state.players[plr].talents.cost[index]} EP) (Keys: ${state.players[plr].talents.keys[index]})`).join("\n");

    // Trim notes on char limit to prevent memory overfill
    if (talentSC.description.length > 3000) {
      halfIndex = Math.floor(talentSC.description.length / 3);
      talentSC.description = talentSC.description.slice(0, halfIndex);

      log("Trimming talentSC description to prevent memory overload.");
    }
  });

  return true;
}

// To RETRIEVE talent from SC. Put in output script so retreiving is not limited to on input.
function retrieveTalentsFromSC() {
  state.playerList.forEach(plr => {

    // Fetch SC
    const talentSC = storyCards.find(sc => sc.title === `${plr} Talents`)

    // Hold the talent sc entry string
    temp = talentSC.entry;

    nameHolder = [];
    lvlHolder = [];
    costHolder = [];
    keysHolder = [];

    // Extract talent name lvl cost
    let matches = temp.matchAll(/(.+?)\s*\(.*?(\d+(?:\.\d+)?).*?\)\s*\(.*?(\d+(?:\.\d+)?).*?\)(?:\s*\(\s*(?:Keys:\s*)?([^)]+?)\s*\))?/g);

    // Store in respective arrays holders
    for (const match of matches) {
      // First capture group (talent name)
      nameHolder.push(match[1]);
      // Second capture group (talent lvl to number)
      lvlHolder.push(Number(match[2]));
      // Third, talent cost to number
      costHolder.push(Number(match[3]));
      // Fourth, talent keys
      if (match[4]) {
        keysHolder.push(match[4].trim() ?? "");
      }
      else {
        keysHolder.push(match[4] ?? "");
      }

    }

    // Finally store to code base
    state.players[plr].talents.name = nameHolder;
    state.players[plr].talents.lvl = lvlHolder;
    state.players[plr].talents.cost = costHolder;
    state.players[plr].talents.keys = keysHolder;

    //log("state.players[plr].talents.name : " + state.players[plr].talents.name);
    //log("state.players[plr].talents.lvl : " + state.players[plr].talents.lvl);
    //log("state.players[plr].talents.cost : " + state.players[plr].talents.cost);
    //log("state.players[plr].talents.keys : " + state.players[plr].talents.keys);


  });
}

// Weighs learning input tokens based on frequency to create and store new talents after set turns. NOTE: Talent learning happens on input and finishes after getting energy cost on output.
function talentLearningProcess(text) {
  newText = "";

  // Verify player is not dialoguing (case-insensitive)
  dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      // Disable check dialoguing exists
      dialogueFlag = false;
    }
  });

  if (dialogueFlag == true) {
    // Check which players are in the input and store their name and corresponding text
    result = separateByPlr(text);
    plrsDetected = Object.keys(result);
    plrText = {};

    // Store each player's text
    plrsDetected.forEach(plr => {
      if (result[plr].length > 0) {
        plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "");
      }
      else {
        plrText[plr] = result[plr].join(" ");
      }
    });

    plrsDetected.forEach(plr => {
      startLearning = false;
      learningFlavorText = "";

      // Check input for learn words then split
      learnTextInput = [];
      learnTextInput = findTargetsThenSplit(plrText[plr], learnWords, true);
      log("learnTextInput: " + learnTextInput);

      // If there are learn words, then get their indices
      if (learnTextInput != null) {
        // Loop through each learn word and store their indices in an array
        allLearnWordIndices = [];
        allLearnWordIndices = indicesOfTargets(learnTextInput, learnWords);

        // If there are learn word indices, then see if there is "you + learn"
        if (allLearnWordIndices != null) {
          // Check if there is a "you" three words before each learn word index to unlock
          startLearning = checkYouBeforeIndicesArr(plr, learnTextInput, allLearnWordIndices, 3) || checkAndBeforeIndicesArr(learnTextInput, allLearnWordIndices, 2);
          log("allLearnWordIndices: " + allLearnWordIndices);
          log("startLearning: " + startLearning);
        }
      }

      // If you + learnword exist, unlock talent learning process
      if (startLearning) {
        // Must filter out likely nontalent words from learnTextInput
        filterArr = [...stopWords, ...learnWords, ...titleWords, ...youWords, ...selfWords, ...[plr, plr.toLowerCase()]];

        learnTextInput = [];
        learnTextInput = findTargetsThenSplit(plrText[plr], filterArr, true);

        learnTextInput = learnTextInput.filter(word => !filterArr.some(fromArr => (
          word.toLowerCase() === fromArr.toLowerCase())
          || (word.toLowerCase() === fromArr.toLowerCase() + "s")
          || (word.toLowerCase() === fromArr.toLowerCase() + "es")
        ));

        // Now you have an array of strings that could be talent names player is trying to learn
        likelyTalentNames = [];
        likelyTalentNames = learnTextInput;

        // If likelytalent names exist and isnt filtered to empty
        if (likelyTalentNames.length > 0) {
          // Remove duplicates so player cant spam learn talents in one input
          likelyTalentNames = [...new Set(likelyTalentNames)]
          log("likelyTalentNames: " + likelyTalentNames);

          // Table of values influencing amt of turns to learn talent/likelihood of filtered input being a talent
          state.points = {
            capitalization: 1.5,
            newTalent: 0,
            decay: 0.5,
            threshold: 2.5,
            outpaced: 2,
            existing: 1
          };

          // Loop through each likelytalentname for storage as potential talents or gives exp to existing potential talents.
          likelyTalentNames.forEach(likelyTalentNames => {
            // Either returns existing potential talent's index or returns its nonexistence
            let index = state.potentialTalents[plr].name.indexOf(likelyTalentNames);

            // New likly talent names are added to the potential talents list
            if (index === -1) {
              state.potentialTalents[plr].name.push(likelyTalentNames);

              // Capitalization grants more exp b/c more likely to be actual talent name
              if (isFirstLetterCapitalized(likelyTalentNames)) {
                state.potentialTalents[plr].exp.push(state.points.capitalization);
              }
              else {
                // Default exp for new talent names
                state.potentialTalents[plr].exp.push(state.points.newTalent);
              }

            }
            // Existing potential talents get exp
            else {
              state.potentialTalents[plr].exp[index] += state.points.existing;
            }
          });

          // Decrement unused talent names.
          for (let i = 0; i < state.potentialTalents[plr].name.length; i++) {
            // Exclude recently incremented talent names
            if (!likelyTalentNames.includes(state.potentialTalents[plr].name[i])) {
              state.potentialTalents[plr].exp[i] -= state.points.decay;
            }
          }

          // Remove decayed below zero talent names
          for (i = 0; i < state.potentialTalents[plr].name.length; i++) {
            if (state.potentialTalents[plr].exp[i] < 0) {
              state.potentialTalents[plr].name.splice(i, 1);
              state.potentialTalents[plr].exp.splice(i, 1);
              i--;
            }
          }

          // Log in skill sc, talent learning progress 
          const talentSC = storyCards.find(sc => sc.title === `${plr} Talents`)
          talentSC.description = `Log ${state.turnCount} | Currently Learning: ${state.potentialTalents[plr].name}, Weight: ${state.potentialTalents[plr].exp}\n` + talentSC.description;

          // Loop through the potentialtalents index to check for finished talents and put in a holder
          talentNameHolder = [];
          for (i = 0; i < state.potentialTalents[plr].name.length; i++) {
            // Set the exp threshold for potential talents to be learned
            if (state.potentialTalents[plr].exp[i] >= state.points.threshold) {
              // Store string(s) of talent name when threshold is hit
              talentNameHolder.push(state.potentialTalents[plr].name[i]);

              // Once threshold is hit, no longer a potential talent so erase
              state.potentialTalents[plr].name.splice(i, 1);
              state.potentialTalents[plr].exp.splice(i, 1);

              // Decrement to fix splice edits
              i--;
            }
          }

          // Full holder means final talent exists, dont push empty holder into player talent
          if (talentNameHolder.length > 0) {
            // Capitalize the talent, merge all individual string names in holder into the final talent name
            talentNameHolder = talentNameHolder.map(word => word[0].toUpperCase() + word.slice(1).toLowerCase());
            talentNameHolder = talentNameHolder.join(" ");
            log("talentNameHolder: " + talentNameHolder);

            // Store the learned talent, dont add duplicates to player talent
            if (!state.players[plr].talents.name.includes(talentNameHolder) && !state.players[plr].skills.name.includes(talentNameHolder)) {
              state.players[plr].talents.name.push(talentNameHolder);
              state.players[plr].talents.lvl.push(randomInt(0, 3));
              state.players[plr].talents.keys.push("");
              // Temp cost before getEnergy output hook
              state.players[plr].talents.cost.push(randomInt(5, 30));

              // Decrement all potentialTalents exp since a talent was learned
              for (i = 0; i < state.potentialTalents[plr].name.length; i++) {
                state.potentialTalents[plr].exp[i] -= state.points.outpaced;
              }

              // Energy cost determined by AI output, unlock on output function
              state.askEnergyCost[plr] = true;
              log("state.askEnergyCost[plr]: " + state.askEnergyCost[plr]);

              // Talent Learn Success Message
              learningFlavorText = learningFlavorText + toCoOpLang(plr, " You end up successfully learning the \"") + String(talentNameHolder) + "\" talent! ";

              if (!onePlayerFlagger()) {
                learningFlavorText = learningFlavorText + toCoOpLang(plr, "You check how many energy points the talent requires.");
                log("state.players[plr].talents.name after learning: " + state.players[plr].talents.name);
              }
            }//end of store learned talent
          }//end of final talent exists
        } //end of if likelytalent names exist

      }//end of right conditions met so process talent learning

      //log("state.potentialTalents[plr].name: " + state.potentialTalents[plr].name);
      //log("state.potentialTalents[plr].exp: " + state.potentialTalents[plr].exp);

    });
  }

  storeTalentsToSC();

  if (!newText == "") {
    return newText;
  }
  else {
    return text;
  }
}//end of function


// Succeeds talentLearningProcess. Gets energy cost from Output Hook and then stores learned talent and cost into sc.
function getNewTalentEP(text) {
  state.playerList.forEach(plr => {
    if (state.askEnergyCost[plr] == true) {
      // Extract numbers from the output string to arr
      let numbers = text.match(/\d+/g);
      log("numbers: " + numbers);

      // Convert to numbers to number type
      let arrEnergyValue = numbers ? numbers.map(Number) : [];

      // Filter out 100 for x/100 AI outputs
      if (arrEnergyValue.length > 1) {
        arrEnergyValue = arrEnergyValue.filter(value => value != 100);
      }
      log("arrEnergyValue: " + arrEnergyValue);

      // Find the highest number
      highestEnergyValue = arrEnergyValue.length > 0 ? Math.max(...arrEnergyValue) : null;
      log("highestEnergyValue: " + highestEnergyValue);

      // Use highest number in output as energy cost of talent
      if (highestEnergyValue !== null && highestEnergyValue > 0 && onePlayerFlagger()) {
        state.players[plr].talents.cost[state.players[plr].talents.cost.length - 1] = highestEnergyValue;
        log("state.players[plr].talents.cost(AI) after learning: " + state.players[plr].talents.cost);
      }
      else {
        // If no energy value in output, use random energy value
        randEpCost = randomInt(5, 50 + (state.players[plr].stats.lvl * 0.1));
        state.players[plr].talents.cost[state.players[plr].talents.cost.length - 1] = randEpCost;
        log("randEpCost: " + randEpCost);

        text = "\"" + state.players[plr].talents.name[state.players[plr].talents.name.length - 1] + "\" will cost " + state.players[plr].talents.cost[state.players[plr].talents.cost.length - 1] + " energy to use. " + text;
      }

      // Learning grants intl
      statUp(plr, "intl", randomFloat(0.01, 3));

      state.askEnergyCost[plr] = false;
      log("state.askEnergyCost[plr] after learned: " + state.askEnergyCost[plr]);
    }
  });

  // Learned talent name and cost have been finalized. Store them to SC.
  storeTalentsToSC();
  storeStatsToSC();

  return text;
}

// Applies a name upgrade to a talent once level floor is reached
function talentNameUpgrade(plr, level, talentIndex, tierWordArr, text) {
  if (Math.floor(state.players[plr].talents.lvl[talentIndex]) == level) {
    // Increase level to prevent repeated upgrades
    state.players[plr].talents.lvl[talentIndex] = level + 1;

    // Energy cost reduction (if applicable)
    state.players[plr].talents.cost[talentIndex] = Math.round(state.players[plr].talents.cost[talentIndex] * 0.95 * 100) / 100;

    // Store old talent name
    const oldTalentName = state.players[plr].talents.name[talentIndex];

    // Apply prefix logic
    if (tierWordArr === upgradeTier1) {
      // No previous prefix assumed
      state.players[plr].talents.name[talentIndex] = tierWordArr[randomInt(0, tierWordArr.length - 1)] + ' ' + oldTalentName;
    } else {
      // Remove previous prefix (assumes format: "Prefix TalentName")
      const words = oldTalentName.split(' ');
      const baseName = words.length > 1 ? words.slice(1).join(' ') : oldTalentName;

      // Apply new prefix
      const newPrefix = tierWordArr[randomInt(0, tierWordArr.length - 1)];
      state.players[plr].talents.name[talentIndex] = `${newPrefix} ${baseName}`;
    }

    // Notify player
    text += toCoOpLang(plr, ` Your ${oldTalentName} talent has been upgraded to ${state.players[plr].talents.name[talentIndex]}!`);

    return text;
  }

  return text;
}

function upgradePlayerTalents(text) {

  state.playerList.forEach(plr => {

    state.players[plr].talents.name.forEach((talent, index) => {
      text = talentNameUpgrade(plr, 10, index, upgradeTier1, text);
      text = talentNameUpgrade(plr, 20, index, upgradeTier2, text);
      text = talentNameUpgrade(plr, 30, index, upgradeTier3, text);
      text = talentNameUpgrade(plr, 40, index, upgradeTier4, text);
      text = talentNameUpgrade(plr, 50, index, upgradeTier5, text);
    });

  });

  storeTalentsToSC();

  return text;
}

///////////////////////////////////////////////////////////////////////////////////

/// Player skills will be stored in an sc. CREATE initial sc. Skills will STORE TO or RETREIVE FROM sc.

// Function to create new class skills for player and store to their skills
function createClassSkills(plr, numOfSkills, wipeOldSkills) {
  classString = state.players[plr].class_;
  createdHolder = [];

  if (classString && classSkillParts[classString]) {
    // Wipe old skills if flag is set
    if (wipeOldSkills) {
      state.players[plr].skills.name = [];
      state.players[plr].skills.lvl = [];
      state.players[plr].skills.cost = [];
      state.players[plr].skills.keys =[];
    }

    // Make starting skills
    for (let i = 0; i < numOfSkills; i++) {
      // Pick two different random skill parts to combine
      let part1, part2;
      do {
        part1 = classSkillParts[classString][randomInt(0, classSkillParts[classString].length - 1)];
        part2 = classSkillParts[classString][randomInt(0, classSkillParts[classString].length - 1)];
      } while (part1 === part2);

      const createdSkill = `${part1} ${part2}`;

      createdHolder.push(createdSkill);
      state.players[plr].skills.name.push(createdSkill);
      state.players[plr].skills.lvl.push(randomInt(0, 9));
      state.players[plr].skills.cost.push(randomInt(10, 40));
      state.players[plr].skills.keys.push("");

    }
  }

  // Return string of created skills
  if (createdHolder.length > 0) {
    createdHolder = createdHolder.join(", ");
  }

  return createdHolder;
}

// Always CREATE initial sc if none.
function createIfNoSkillSC() {
  createFlag = false;

  state.playerList.forEach(plr => {
    //If "Player Skills" card doesn't exist, create it
    if (!storyCards.find(sc => sc.title === `${plr} Skills`)) {
      addStoryCard(`${plr} Skills`, "Blank", `Player Stats`);
      createFlag = true;

      // Fetch SC and give it a description
      const skillSC = storyCards.find(sc => sc.title === `${plr} Skills`)
      skillSC.description = "Format for Modifying: SkillName (LVL) (MP) (Optional triggers: key 1, key 2), etc.";

      // Get player class and create the skills they start with
      createClassSkills(plr, 3, true);
    }
  });

  if (createFlag) {
    storeSkillsToSC();
  }
}

//To STORE skill to sc
function storeSkillsToSC() {
  state.playerList.forEach(plr => {
    // Fetch skill sc
    const skillSC = storyCards.find(sc => sc.title === `${plr} Skills`)

    // Format and display to sc Ex: Fireball (20 MP)
    skillSC.entry = state.players[plr].skills.name.map((skill, index) => `${skill} (Lvl ${state.players[plr].skills.lvl[index]}) (${state.players[plr].skills.cost[index]} MP) (Keys: ${state.players[plr].skills.keys[index]})`).join("\n");
    // Trim notes on char limit to prevent memory overfill
    if (skillSC.description.length > 3000) {
      halfIndex = Math.floor(skillSC.description.length / 3);
      skillSC.description = skillSC.description.slice(0, halfIndex);

      log("Trimming skillSC description to prevent memory overload.");
    }
  });
}

// To RETRIEVE skills from SC. Put in output script so retreiving is not limited to on input.
function retrieveSkillsFromSC() {
  state.playerList.forEach(plr => {
    //Fetch skill sc
    const skillSC = storyCards.find(sc => sc.title === `${plr} Skills`)

    //Hold the skill sc entry string
    temp = skillSC.entry;


    skillHolder = [];
    lvlHolder = [];
    costHolder = [];
    keysHolder = [];
    // Extract skill name and MP cost using regex. Discard wrong formats
    let matches = temp.matchAll(/(.+?)\s*\(.*?(\d+(?:\.\d+)?).*?\)\s*\(.*?(\d+(?:\.\d+)?).*?\)(?:\s*\(\s*(?:Keys:\s*)?([^)]+?)\s*\))?/g);

    // Store in respective arrays holders
    for (const match of matches) {
      // First capture group (skill name)
      skillHolder.push(match[1]);
      // Second capture group (skill lvl)
      lvlHolder.push(Number(match[2]));
      // Third (skill cost)
      costHolder.push(Number(match[3]));
      // Fourth, skill keys
      if (match[4]) {
        keysHolder.push(match[4].trim() ?? "");
      }
      else {
        keysHolder.push(match[4] ?? "");
      }
    }

    //Final store to code base
    state.players[plr].skills.name = skillHolder;
    state.players[plr].skills.lvl = lvlHolder;
    state.players[plr].skills.cost = costHolder;
    state.players[plr].skills.keys = keysHolder;

    //log("state.players[plr].skills.name: " + state.players[plr].skills.name);
    //log("state.players[plr].skills.lvl: " + state.players[plr].skills.lvl);
    //log("state.players[plr].skills.cost: " + state.players[plr].skills.cost);
    //log("state.players[plr].skills.keys : " + state.players[plr].skills.keys);
  });
}

// Part of upgradePlayerSkills, applies skill name change once lvlfloor is reached
function skillNameUpgrade(plr, level, skillIndex, tierWordArr, text) {
  if (Math.floor(state.players[plr].skills.lvl[skillIndex]) == level) {
    //Level up skill to avoid another upgrade
    state.players[plr].skills.lvl[skillIndex] = level + 1;

    //Mana cost reduction
    state.players[plr].skills.cost[skillIndex] = Math.round(state.players[plr].skills.cost[skillIndex] * 0.95 * 100) / 100;

    //store old skill name
    oldSkillName = state.players[plr].skills.name[skillIndex];

    //Update skill name
    if (tierWordArr == upgradeTier1) {
      state.players[plr].skills.name[skillIndex] = tierWordArr[randomInt(0, tierWordArr.length - 1)] + ' ' + state.players[plr].skills.name[skillIndex];
    }
    // already upgraded skills get their old prefixes removed
    else {
      // Sanitize old upgraded skill name (remove existing prefix if present)
      words = oldSkillName.split(' ');
      baseName = words.length > 1 ? words.slice(1).join(' ') : oldSkillName;

      // Apply new prefix
      newPrefix = tierWordArr[randomInt(0, tierWordArr.length - 1)];
      state.players[plr].skills.name[skillIndex] = `${newPrefix} ${baseName}`;
    }

    // Notify in player input
    text = text + toCoOpLang(plr, ` Your ${oldSkillName} skill has been upgraded to ${state.players[plr].skills.name[skillIndex]}!`);

    return text;
  }

  return text;
}


function upgradePlayerSkills(text) {
  state.playerList.forEach(plr => {

    state.players[plr].skills.name.forEach((skill, index) => {
      text = skillNameUpgrade(plr, 10, index, upgradeTier1, text);
      text = skillNameUpgrade(plr, 20, index, upgradeTier2, text);
      text = skillNameUpgrade(plr, 30, index, upgradeTier3, text);
      text = skillNameUpgrade(plr, 40, index, upgradeTier4, text);
      text = skillNameUpgrade(plr, 50, index, upgradeTier5, text);

    })

  });

  storeSkillsToSC();

  return text;
}

// Rewards a skill to plr every set level
function rewardSkillForLevelUp(text) {
  skillRewardText = "";
  // How many levels needed to get a new skill
  lvlReqForSkillReward = 5;

  state.playerList.forEach(plr => {
    plrLvl = state.players[plr].stats.maxLvl;

    // Initialize old lvl tracker
    if (!state.oldLvlHolder[plr]) {
      state.oldLvlHolder[plr] = plrLvl || 1;
    }

    // Hold player's old lvl until they meet the lvl req for a new skill
    if (state.oldLvlHolder[plr] && plrLvl) {
      lvlsAbove = plrLvl - state.oldLvlHolder[plr];
      log("lvlsAbove: " + lvlsAbove);
      log("plrLvl: " + plrLvl);
      log("state.oldLvlHolder[plr]: " + state.oldLvlHolder[plr]);

      // Player has met the lvl req for new skill
      if (lvlsAbove >= lvlReqForSkillReward) {
        // Increment num of skill rewards according to num of times lvl req is fulfilled
        numSkillReward = Math.floor(lvlsAbove / lvlReqForSkillReward);
        log("numSkillReward: " + numSkillReward);

        // Update old lvl tracker to new lvl minus remainder. Tracker must follow lvl req intervals
        trackCorrection = lvlsAbove % lvlReqForSkillReward
        state.oldLvlHolder[plr] = plrLvl - trackCorrection;


        learnedSkills = createClassSkills(plr, numSkillReward, false);

        skillRewardText += toCoOpLang(plr, ` ${skillAcquisitionPhrases[randomInt(0, skillAcquisitionPhrases.length - 1)].replace("[Skill]", learnedSkills)}`);
      }

      // If player has edited their lvl to below tracked lvl, update tracked lvl
      if (plrLvl < state.oldLvlHolder[plr]) {
        state.oldLvlHolder[plr] = plrLvl;
      }

    }
  });

  storeSkillsToSC();

  return text + skillRewardText;
}

/////////////////////////////////////////////////////////////////////////////////////

// Converts talents that are casted into a skill by detecting if closest action word of talent is a cast word

// Converts talents that are casted into a skill by detecting if closest action word of talent is a cast word
function talentCastedToSkill(plr, wordsArr, talentIndex, actionWordIndices) {
  // Ensure talent exists in case player turns same talent to skill multiple times
  if (state.players[plr].talents.name[talentIndex]) {
    // Get index of talent from input
    let i_talentInput = indexOfStr(state.players[plr].talents.name[talentIndex], wordsArr);
    //log('i_talentInput: ' + i_talentInput);

    // After get index check if closest action word is a cast word
    if (i_talentInput >= 0) {
      let closestIndex = closestIndexBeforeTarget(actionWordIndices, i_talentInput);
      //log('closestIndex: ' + closestIndex);

      // Turn talent to skill if closest action word is a cast word
      if (castWords.includes(wordsArr[closestIndex].toLowerCase())) {
        state.players[plr].skills.name.push(state.players[plr].talents.name[talentIndex]);
        state.players[plr].skills.lvl.push(state.players[plr].talents.lvl[talentIndex]);
        state.players[plr].skills.cost.push(state.players[plr].talents.cost[talentIndex]);

        state.players[plr].talents.name.splice(talentIndex, 1);
        state.players[plr].talents.lvl.splice(talentIndex, 1);
        state.players[plr].talents.cost.splice(talentIndex, 1);
        state.players[plr].talents.keys.splice(talentIndex, 1);



        storeTalentsToSC();
        storeSkillsToSC();
      }
    }
  }
}


// Creates a partial or full talent use flavor text
function executeTalent(plr, fullTalentFlag, index) {
  talentFlavorText = "";

  // Ensure talent exists
  if (state.players[plr].talents.name[index]) {

    energyCost = state.players[plr].talents.cost[index];

    // Subtract ep cost from player ep
    statUp(plr, "ep", -1 * energyCost);
    storeStatsToSC();

    // Using talents boost stats
    statUp(plr, "intl", randomFloat(0.01, 2));
    storeStatsToSC();

    // Override normal skill text if healing skill
    healResult = detectHeal(plr, "talent", index);
    if (healResult[0]) {
      talentFlavorText = ` ${healResult[1]}`;
    }
    else {
      // Create flavor text if FULL talent
      if (fullTalentFlag) {
        // Define the ranges of talent effectiveness and the corresponding talent power messages
        const talentPowerRanges = [
          { min: 0, max: 10, msg: talentPower1 },
          { min: 10, max: 20, msg: talentPower2 },
          { min: 20, max: 30, msg: talentPower3 },
          { min: 30, max: 40, msg: talentPower4 },
          { min: 40, max: 50, msg: talentPower5 },
          { min: 50, max: 60, msg: talentPower6 },
          { min: 60, max: 70, msg: talentPower7 },
          { min: 70, max: 80, msg: talentPower8 },
          { min: 80, max: 90, msg: talentPower9 },
          { min: 90, max: Infinity, msg: talentPower10 }
        ];

        // Create talent flavor text
        talentLevel = state.players[plr].talents.lvl[index];

        for (let range of talentPowerRanges) {
          if (talentLevel >= range.min && talentLevel < range.max) {
            talentFlavorText = ` ${range.msg[randomInt(0, range.msg.length - 1)].replace("[Talent]", state.players[plr].talents.name[index])}`;
            break;
          }
        }
      }
      // Create flavor text for PARTIAL talent
      else {
        talentFlavorText = ` You attempt to harness your existing ${state.players[plr].talents.name[index]} talent.`
      }
    }

    // Save current as old talent lvl for logging
    oldTalentLvl = state.players[plr].talents.lvl[index];

    // Using talents grants talent exp
    talentExp = randomFloat(1, 5);
    log("talentExp: " + talentExp);

    // Increase the talent's level by the generated experience
    state.players[plr].talents.lvl[index] += talentExp;

    // Round the talent level to two decimal places
    state.players[plr].talents.lvl[index] = Math.round(state.players[plr].talents.lvl[index] * 100) / 100;

    // Log talent lvl change in talent sc notes
    const talentSC = storyCards.find(sc => sc.title === `${plr} Talents`);
    talentSC.description = `Log ${state.turnCount} | ${state.players[plr].talents.name[index]} gained ${talentExp.toFixed(2)} lvl. Lvl ${oldTalentLvl} => ${state.players[plr].talents.lvl[index]}\n` + talentSC.description;

    // Save the updated talent data to the storage container
    storeTalentsToSC();

  }

  return talentFlavorText;
}

// Creates a partial or full skill use flavor text
function executeskill(plr, fullSkillFlag, index) {
  skillFlavorText = "";
  manaCost = state.players[plr].skills.cost[index];

  // Subtract mana cost from player mana
  statUp(plr, "mp", manaCost * -1);

  // Override normal skill text if healing skill
  healResult = detectHeal(plr, "skill", index);
  if (healResult[0]) {
    skillFlavorText = ` ${healResult[1]}`;
  }
  else {
    // Using skills boost stats
    statUp(plr, "atk", randomFloat(0.01, 2));
    statUp(plr, "intl", randomFloat(0.01, 2));
    storeStatsToSC();

    // Create flavor text if FULL SKILL
    if (fullSkillFlag) {
      // Define the ranges of skill effectiveness and the corresponding skill power messages
      const skillPowerRanges = [
        { min: 0, max: 10, msg: skillPower1 },
        { min: 10, max: 20, msg: skillPower2 },
        { min: 20, max: 30, msg: skillPower3 },
        { min: 30, max: 40, msg: skillPower4 },
        { min: 40, max: 50, msg: skillPower5 },
        { min: 50, max: 60, msg: skillPower6 },
        { min: 60, max: 70, msg: skillPower7 },
        { min: 70, max: 80, msg: skillPower8 },
        { min: 80, max: 90, msg: skillPower9 },
        { min: 90, max: Infinity, msg: skillPower10 }
      ];

      // Create skill flavor text
      skillLevel = state.players[plr].skills.lvl[index];

      for (let range of skillPowerRanges) {
        if (skillLevel >= range.min && skillLevel < range.max) {
          skillFlavorText = ` ${range.msg[randomInt(0, range.msg.length - 1)].replace("[Skill]", state.players[plr].skills.name[index])}`;
          break;
        }
      }
    }
    // Create flavor text if PARTIAL SKILL
    else {
      // Create skill harness flavor text
      const randomIndex = randomInt(0, harnessSkill.length - 1);
      skillFlavorText = ` ${harnessSkill[randomIndex].replace("[Skill]", state.players[plr].skills.name[index])}`;
    }
  }

  // Save current as old skill lvl for logging
  oldSkillLvl = state.players[plr].skills.lvl[index];

  // Using skills grants skill exp
  skillExp = randomFloat(1, 5);
  log("skillExp: " + skillExp);

  // Increase the skill's level by the generated experience
  state.players[plr].skills.lvl[index] += skillExp;

  // Round the skill level to two decimal places
  state.players[plr].skills.lvl[index] = Math.round(state.players[plr].skills.lvl[index] * 100) / 100;

  // Log skill lvl change in skill sc notes
  const skillSC = storyCards.find(sc => sc.title === `${plr} Skills`)
  skillSC.description = `Log ${state.turnCount} | ${state.players[plr].skills.name[index]} gained ${skillExp.toFixed(2)} lvl. Lvl ${oldSkillLvl} => ${state.players[plr].skills.lvl[index]}\n` + skillSC.description;


  // Save the updated skill data to the storage container
  storeSkillsToSC();


  return skillFlavorText;
}

// Detects if the player is performing a heal action and executes the healing process then returns healflag and flavor text
function detectHeal(plr, strgType, index) {
  healFlavorText = "";
  healFlag = false;
  healingSelf = false;

  // Check if the player is performing a healing action. Use text b/c inp targetwords were simplified
  healing = cleanStringCheckForTargets(healingWords, text);
  log("healing: " + healing);

  // Check if the player is attempting to heal themselves
  healingSelf = cleanStringCheckForTargets(selfWords, text);
  log("healingSelf: " + healingSelf);

  // If both a healing action and self-healing are detected, proceed with healing
  if (healing && healingSelf) {
    // Set heal flag to true
    healFlag = true;

    // Healing self with item
    if (strgType == "item") {
      //todo: item heal
    }
    // Healing self with talent
    if (strgType == "talent") {
      // Heal amount scales with talent level and intl
      healAmt = (0.1 * state.players[plr].stats.intl) + (2 * state.players[plr].talents.lvl[index]);
      log('healAmt: ' + healAmt);

      // Apply heal to stats
      statUp(plr, "hp", healAmt);

      healFlavorText = healFlavorText + " Your talent recovers some health."
      //todo: edit text
    }
    // Heal self with skill
    if (strgType == "skill") {
      // Heal amt scales with skill level and intl
      healAmt = (0.25 * state.players[plr].stats.intl) + (2 * state.players[plr].skills.lvl[index]);
      log('healAmt: ' + healAmt);

      // Apply heal to stats
      statUp(plr, "hp", healAmt);
      statUp(plr, "mp", healAmt);
      statUp(plr, "ep", healAmt);

      healFlavorText = healFlavorText + " Your skill recovers some health."
    }

  }
  return [healFlag, healFlavorText];
}

// Child function of detectStorageCallActions. On context hook, feed the things in player's storage to the AI context
function feedStrgToContext(text) {
  if (state.unlockStrgToContext) {
    text = text + state.strgCheckText;
    //log("state.strgCheckText: " + state.strgCheckText);

    state.strgCheckText = "";
  }

  state.unlockStrgToContext = false;

  return text;
}

// Translate number level to english tier
function getTier(number) {
  toTier = Math.floor(number / 10);

  if (toTier < intensityTier.length) {
    return intensityTier[toTier];
  }
  if (number < 0) {
    return `Negative level`
  }
  else {
    return intensityTier[10];
  }
}

function getCapacityTier(part, whole) {
  toTier = Math.floor((part / whole * 100) / 10);

  if (toTier < capacityTier.length) {
    return capacityTier[toTier];
  }
  if (part< 0) {
    return `Below Empty`
  }
  else {
    return capacityTier[10];
  }
}

// Checks for "you + actions" that require items, talents, or skills. Checks if player has something to fulfill it and executes result along with text result
function detectStorageCallActions(text) {
  newText = "";

  // Verify player is not dialoguing (case-insensitive)
  dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      // Disable check dialoguing exists
      dialogueFlag = false;
    }
  });

  if (dialogueFlag) {
    // Check which players are in the input and store their name and corresponding text
    result = separateByPlr(text);
    plrsDetected = Object.keys(result);
    plrText = {};

    // Store each player's text
    plrsDetected.forEach(plr => {
      if (result[plr].length > 0) {
        plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "");
      }
      else {
        plrText[plr] = result[plr].join(" ");
      }
    });

    plrsDetected.forEach(plr => {
      startAction = false;
      actionFlavorText = "";
      actionTextInput = [];

      // Get talent keys to store as action words
      allTalentKeys = [];
      state.players[plr].talents.keys.forEach((keys, index) => {
        if (keys.length > 2) {
          keys = keys.split(",");
          keys.forEach(key => {
            allTalentKeys.push(key.trim().toLowerCase());
          });
        }
      });
      log('allTalentKeys: ' + allTalentKeys);

      // Get skill keys to store as action words
      allSkillKeys = [];
      state.players[plr].skills.keys.forEach((keys, index) => {
        if (keys.length > 2) {
          keys = keys.split(",");
          keys.forEach(key => {
            allSkillKeys.push(key.trim().toLowerCase());
          });
        }
      });
      log('allSkillKeys: ' + allSkillKeys);


      // Check input for action words and split the input
      allActionWords = [...castWords, ...talentWords, ...healingWords, ...allTalentKeys, ...allSkillKeys];
      actionTextInput = findTargetsThenSplit(plrText[plr], allActionWords, true);
      log("actionTextInput simplified: " + actionTextInput);

      if (actionTextInput != null) {
        // Simplify action words for each action type cumulatively and split input 
        cumulText = plrText[plr];

        actionTextInput = findTargetsThenSplit(cumulText, castWords, true);
        cumulText = (actionTextInput.length > 0) ? actionTextInput.join(" ") : cumulText;

        actionTextInput = findTargetsThenSplit(cumulText, talentWords, true);
        cumulText = (actionTextInput.length > 0) ? actionTextInput.join(" ") : cumulText;

        actionTextInput = findTargetsThenSplit(cumulText, healingWords, true);
        cumulText = (actionTextInput.length > 0) ? actionTextInput.join(" ") : cumulText;

        actionTextInput = findTargetsThenSplit(cumulText, allTalentKeys, true);
        cumulText = (actionTextInput.length > 0) ? actionTextInput.join(" ") : cumulText;

        actionTextInput = findTargetsThenSplit(cumulText, allSkillKeys, true);
        cumulText = (actionTextInput.length > 0) ? actionTextInput.join(" ") : cumulText;

        actionTextInput = cumulText.trim().split(" ");
        log("actionTextInput simplified: " + actionTextInput);

        // If input has action words get their indices
        allActionWordIndices = [];
        allActionWordIndices = indicesOfTargets(actionTextInput, allActionWords);
        log("allActionWordIndices:" + allActionWordIndices);

        // Detect if there is  "you/and + actionword" 
        if (allActionWordIndices != null) {
          startAction = checkYouBeforeIndicesArr(plr, actionTextInput, allActionWordIndices, 3) || checkAndBeforeIndicesArr(actionTextInput, allActionWordIndices, 2);
          log("startAction: " + startAction);
        }
      }

      if (startAction) {
        // Intialize storage copies
        plrStorage = {
          types: [state.players[plr].inv.item, state.players[plr].talents.name, state.players[plr].skills.name],
          lvls: [null, state.players[plr].talents.lvl, state.players[plr].skills.lvl],
          costs: [state.players[plr].inv.amt, state.players[plr].talents.cost, state.players[plr].skills.cost]
        };

        plrThings = {
          // 0 is item, 1 is talent, 2 is skill
          types: [],
          // index of thing in storage
          indices: [],
          // True for full match, false for partial match
          fullMatchFlags: []
        };

        calls = {
          types: [],
          indices: [],
          fullMatchFlags: []
        };

        // For each input word
        for (let i = 0; i < actionTextInput.length; i++) {
          // Loop through each type of storage
          for (let x = 0; x < plrStorage.types.length; x++) {
            // Find all things in the storage that the word can call
            plrStorage.types[x].forEach((thing, ind) => {
              // Initialize flags
              isFullMatch = true;
              isPartialMatch = false;

              // Split to parts for multi worded things (case insensitive)
              thingParts = thing.toLowerCase().split(" ");

              // Check if current thing in current storage is a PARTIAL match of current word (complete/prefix match)
              if (
                !stopWords.includes(actionTextInput[i]) &&
                (
                  thingParts[0] == actionTextInput[i] ||
                  (actionTextInput[i].length >= 4 && thingParts[0].startsWith(actionTextInput[i].toLowerCase()))
                )
              ) {
                isPartialMatch = true;
              }
              // Prevent matching things past input length. -1 to account for thingParts matching current index
              if (i + thingParts.length - 1 > actionTextInput.length - 1) {
                isFullMatch = false;
              }
              else {
                // Check if current thing in current storage is a FULL match of current word 
                for (j = 0; j < thingParts.length; j++) {
                  if (thingParts[j] !== actionTextInput[i + j].toLowerCase()) {
                    isFullMatch = false;
                    break;
                  }
                }
              }

              // If current thing is a FULL match (override partial match), push its type, its storage index, and full match flag into a respective array
              if (isFullMatch) {
                plrThings.types.push(x);
                plrThings.indices.push(ind);
                plrThings.fullMatchFlags.push(true);

                // Move input index forward by matched thing length to avoid duplicate matching. -1 to accomodate loop increment.
                i = i + thingParts.length - 1;
              }
              // If current thing is a PARTIAL match, push its type, its storage index, and full match flag into a respective array
              else if (isPartialMatch) {
                plrThings.types.push(x);
                plrThings.indices.push(ind);
                plrThings.fullMatchFlags.push(false);
              }

            }); //end of for thing
          } //end of for playerstorage

          // If any talent keys are matched, push respective talent thing
          state.players[plr].talents.keys.forEach((keys, index) => {
            if (keys.includes(actionTextInput[i])) {
              plrThings.types.push(1);
              plrThings.indices.push(index);
              plrThings.fullMatchFlags.push(true);
            }
          });

          // If any skill keys are matched, push respective skill thing
          state.players[plr].skills.keys.forEach((keys, index) => {
            if (keys.includes(actionTextInput[i])) {
              plrThings.types.push(2);
              plrThings.indices.push(index);
              plrThings.fullMatchFlags.push(true);
            }
          });

          // After looping through all things and storages for the current word, push array of matched things into calls. A call is an array of matched things found for a word.
          if (plrThings.types.length > 0) {
            calls.types.push(plrThings.types);
            calls.indices.push(plrThings.indices);
            calls.fullMatchFlags.push(plrThings.fullMatchFlags);

            // Reset arrays for the next word call
            plrThings.types = [];
            plrThings.indices = [];
            plrThings.fullMatchFlags = [];
          }

        } //end of for input
        for (i = 0; i < calls.types.length; i++) {
          log('calls.types: ' + calls.types[i]);
          log('calls.indices: ' + calls.indices[i]);
          log('calls.fullMatchFlags: ' + calls.fullMatchFlags[i]);
          log("----------------");
        }

        // Case A: If NO matches found, feed storages to AI context for AI to write rejection and send flavor text to output
        if (calls.types.length === 0) {
          // Get mp and ep penalty for action fail. Ensure deduction does not turn stat negative
          penalty = 15;
          if (state.players[plr].stats.mp < penalty) {
            penalty = state.players[plr].stats.mp;
          }
          statUp(plr, "mp", -1 * randomFloat(0.01, penalty));

          if (state.players[plr].stats.ep < penalty) {
            penalty = state.players[plr].stats.ep;
          }
          statUp(plr, "ep", -1 * randomFloat(0.01, penalty));

          // Unlock Context Hook feed to influence AI to reject 
          allItems = [];
          allTalents = [];
          allSkills = [];

          // Get all plr items
          state.players[plr].inv.item.forEach((itm, index) => {
            allItems.push(`${state.players[plr].inv.amt[index]} ${state.players[plr].inv.item[index]}`);
          })
          if (allItems.length == 0) {
            allItems.push("nothing");
          }
          allItems = allItems.join(", ");

          // Get all plr talents
          state.players[plr].talents.name.forEach((itm, index) => {
            talentTier = getTier(state.players[plr].talents.lvl[index]);
            allTalents.push(`${talentTier} ${state.players[plr].talents.name[index]}`);
          })
          if (allTalents.length == 0) {
            allTalents.push("nothing");
          }
          allTalents = allTalents.join(", ");

          // Get all plr skills
          state.players[plr].skills.name.forEach((itm, index) => {
            skillTier = getTier(state.players[plr].skills.lvl[index]);
            allSkills.push(`${skillTier} ${state.players[plr].skills.name[index]}`);
          })
          if (allSkills.length == 0) {
            allSkills.push("nothing");
          }
          allSkills = allSkills.join(", ");

          if (!onePlayerFlagger()) {
            state.strgCheckText = state.strgCheckText + ` ${plr} realizes they have nothing in their inventory but only ${allItems}. ${plr} realizes they have no applicable talents but only ${allTalents}. ${plr} realize they have no applicable skills but only ${allSkills}. ${plr} anticipates failure for not having the right item, skill, or talent to use right now. `;
          }
          else {
            state.strgCheckText = ` You realize you have nothing in your inventory but only ${allItems}. You realize you have no applicable talents but only ${allTalents}. You realize you have no applicable skills but only ${allSkills}. You anticipate failure for not having the right item, skill, or talent to use right now.`
          }

          state.unlockStrgToContext = true;
          log("state.unlockStrgToContext: " + state.unlockStrgToContext);
        }
        // Case B: Things HAVE been matched
        if (calls.types.length > 0) {
          // For each word call (array of matched things)
          calls.types.forEach((wordCall, i_currentCall) => {
            final = {
              fullTypes: [],
              fullIndices: [],
              partialTypes: [],
              partialIndices: [],
            };

            notEnough = {
              fullTypes: [],
              fullIndices: [],
              partialTypes: [],
              partialIndices: [],
            };

            statPassFlags = [];

            // For current word call, for each matched thing, perform and store a stat check
            wordCall.forEach((typeOfTheThing, i_currentThing) => {
              // is an ITEM
              if (typeOfTheThing == 0) {
                itemIndex = calls.indices[i_currentCall][i_currentThing];

                //todo: fix
                statPassFlags.push(true);
              }
              // is a TALENT, store index of current thing in current call
              if (typeOfTheThing == 1) {
                talentIndex = calls.indices[i_currentCall][i_currentThing];

                // Checks if player will have enough ep for the talent
                if (state.players[plr].stats.ep < state.players[plr].talents.cost[talentIndex]) {
                  statPassFlags.push(false);
                }
                else {
                  statPassFlags.push(true);
                }
              }
              // is a SKILL 
              if (typeOfTheThing == 2) {
                skillIndex = calls.indices[i_currentCall][i_currentThing];

                // Checks if player will have enough mp for the skill
                if (state.players[plr].stats.mp < state.players[plr].skills.cost[skillIndex]) {
                  statPassFlags.push(false);
                }
                else {
                  statPassFlags.push(true);
                }
              }
            });
            log('statPassFlags: ' + statPassFlags);

            // For the current word call, for each thing, store things that pass stat req. as final matches
            statPassFlags.forEach((thingPassesReq, i_currentMatch) => {
              // If player HAS the stat requirement
              if (thingPassesReq) {
                // If FULL match, store as final matches
                if (calls.fullMatchFlags[i_currentCall][i_currentMatch]) {
                  final.fullTypes.push(calls.types[i_currentCall][i_currentMatch]);
                  final.fullIndices.push(calls.indices[i_currentCall][i_currentMatch]);
                }
                // If PARTIAL match, store as final matches
                if (!calls.fullMatchFlags[i_currentCall][i_currentMatch]) {
                  final.partialTypes.push(calls.types[i_currentCall][i_currentMatch]);
                  final.partialIndices.push(calls.indices[i_currentCall][i_currentMatch]);
                }
              }
              // If player does NOT have the stat requirements
              else {
                // FULL matches that fail the stat req
                if (calls.fullMatchFlags[i_currentCall][i_currentMatch]) {
                  notEnough.fullTypes.push(calls.types[i_currentCall][i_currentMatch]);
                  notEnough.fullIndices.push(calls.indices[i_currentCall][i_currentMatch]);
                }
                // PARTIAL matches that fail the stat req
                if (!calls.fullMatchFlags[i_currentCall][i_currentMatch]) {
                  notEnough.partialTypes.push(calls.types[i_currentCall][i_currentMatch]);
                  notEnough.partialIndices.push(calls.indices[i_currentCall][i_currentMatch]);
                }
              }
            });
            log('final.fullTypes: ' + final.fullTypes);
            log('final.fullIndices: ' + final.fullIndices);
            log('final.partialTypes: ' + final.partialTypes);
            log('final.partialIndices: ' + final.partialIndices);
            log('notEnough.fullTypes: ' + notEnough.fullTypes);
            log('notEnough.fullIndices: ' + notEnough.fullIndices);
            log('notEnough.partialTypes: ' + notEnough.partialTypes);
            log('notEnough.partialIndices: ' + notEnough.partialIndices);
            log("----------------");

            // Case 1: If player has final FULL thing, execute random one if more than one. Partials are overriden due to exact match found.
            if (final.fullIndices.length > 0) {
              // Get random thing
              randomed = randomInt(0, final.fullIndices.length - 1)
              index = final.fullIndices[randomed];
              type = final.fullTypes[randomed];

              // Final is a FULL TALENT
              if (type == 1) {
                actionFlavorText = actionFlavorText + executeTalent(plr, true, index);
                talentCastedToSkill(plr, actionTextInput, index, allActionWordIndices);
 
              }
              // Final is a FULL SKILL
              else if (type == 2) {
                actionFlavorText = actionFlavorText + executeskill(plr, true, index);
              }

            }
            // Case 2: If player has only final PARTIAL thing, execute random one if more than one.
            else if (final.partialIndices.length > 0) {
              // Get random thing
              randomed = randomInt(0, final.partialIndices.length - 1);
              index = final.partialIndices[randomed];
              type = final.partialTypes[randomed];

              // Final is a PARTIAL TALENT
              if (type == 1) {
                actionFlavorText = actionFlavorText + executeTalent(plr, false, index);
              }
              // Final is PARTIAL SKILL
              else if (type == 2) {
                actionFlavorText = actionFlavorText + executeskill(plr, false, index);
              }
            }
            // If player has matched things, whether partial or full, but NOTHING passes the stat req, this means player does not have enough stat to execute thing
            if (final.fullIndices.length === 0 && final.partialIndices.length === 0) {
              // Case 3: Not enough for a FULL thing, choose random if more than one and execute fail. Partials are overriden due to exact match found.
              if (notEnough.fullIndices.length > 0) {
                // Get random thing
                randomed = randomInt(0, notEnough.fullIndices.length - 1)
                index = notEnough.fullIndices[randomed];
                type = notEnough.fullTypes[randomed];

                // notEnough is a FULL TALENT
                if (type == 1) {
                  actionFlavorText = actionFlavorText + ` ${realizePhrases[randomInt(0, realizePhrases.length - 1)]} ${notEnoughPhrases[randomInt(0, notEnoughPhrases.length - 1)].toLowerCase().replace("[stat]", "energy").replace("[thing]", state.players[plr].talents.name[index])}`
                }
                // notEnough is a FULL SKILL
                else if (type == 2) {
                  actionFlavorText = actionFlavorText + ` ${realizePhrases[randomInt(0, realizePhrases.length - 1)]} ${notEnoughPhrases[randomInt(0, notEnoughPhrases.length - 1)].toLowerCase().replace("[stat]", "mana").replace("[thing]", state.players[plr].skills.name[index])}`
                }
              }
              // Case 4: Not enough for a PARTIAL thing. Choose random if more than one and execute fail.
              else if (notEnough.partialIndices.length > 0) {
                // Get random thing
                randomed = randomInt(0, notEnough.partialIndices.length - 1)
                index = notEnough.partialIndices[randomed];
                type = notEnough.partialTypes[randomed];

                // notEnough is a PARTIAL TALENT
                if (type == 1) {
                  actionFlavorText = actionFlavorText + ` ${realizePhrases[randomInt(0, realizePhrases.length - 1)]} ${notEnoughPhrases[randomInt(0, notEnoughPhrases.length - 1)].toLowerCase().replace("[stat]", "energy").replace("[thing]", state.players[plr].talents.name[index])}`
                }
                // notEnough is a PARTIAL SKILL
                else if (type == 2) {
                  actionFlavorText = actionFlavorText + ` ${realizePhrases[randomInt(0, realizePhrases.length - 1)]} ${notEnoughPhrases[randomInt(0, notEnoughPhrases.length - 1)].toLowerCase().replace("[stat]", "mana").replace("[thing]", state.players[plr].skills.name[index])}`
                }
              }
            }
          });
        }//end of things matched
      }//end of start action

      newText = newText + plrText[plr] + toCoOpLang(plr, actionFlavorText);
    });
  }

  if (!newText == "") {
    return newText;
  }
  else {
    return text;
  }
}
//todo: modify rest values for hp mp ep, sleep no fix bleed
/////////////////////////////////////////////////////////////////////////////////////

// Check if player is first entering, then is entering into rest, and replenish their stats according to their rest intensity
function detectResting(text) {
  let newText = "";

  // Check if player is not dialoguing
  let dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      dialogueFlag = false;
    }
  });

  if (dialogueFlag) {
    // Check which players are in the input and store their name and corresponding text
    let result = separateByPlr(text);
    let plrsDetected = Object.keys(result);
    let plrText = {};

    // Store each player's text
    plrsDetected.forEach(plr => {
      if (result[plr].length > 0) {
        plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "");
      } else {
        plrText[plr] = result[plr].join(" ");
      }
    });

    plrsDetected.forEach(plr => {
      let isEntering = false;
      let startRest = false;
      let restFlavorText = "";

      restingTextInput = [];
      restingTextInput = findTargetsThenSplit(plrText[plr], enterWords, true);
      log("restingTextInput simplified: " + restingTextInput);

      //If input has enter words get their indices
      if (restingTextInput != null) {
        allEnterWordsIndices = [];
        allEnterWordsIndices = indicesOfTargets(restingTextInput, enterWords);
        log("allEnterWordsIndices:" + allEnterWordsIndices);

        //Detect if there is  you + enter or and + enter
        if (allEnterWordsIndices != null) {
          isEntering = checkYouBeforeIndicesArr(plr, restingTextInput, allEnterWordsIndices, 3) || checkAndBeforeIndicesArr(restingTextInput, allEnterWordsIndices, 2);

          startRest = cleanStringCheckForTargets(restingWords, plrText[plr]);
          log("isEntering: " + isEntering)
          log("startRest: " + startRest);
        }
      }

      if (isEntering && startRest) {
        let lightRest = cleanStringCheckForTargets(lightRestWords, plrText[plr]);
        let moderateRest = cleanStringCheckForTargets(moderateRestWords, plrText[plr]);
        let fullRest = cleanStringCheckForTargets(fullRestWords, plrText[plr]);

        let restBonus = 0.2;
        let restMessage = toCoOpLang(plr, "Your time resting leaves you feeling more okay.");

        if (fullRest) {
          restBonus = randomFloat(0.6, 0.9);
          restMessage = toCoOpLang(plr, "Your time resting leaves you feeling recovered.");
        } else if (moderateRest) {
          restBonus = randomFloat(0.4, 0.6);
          restMessage = toCoOpLang(plr, "Your time resting leaves you feeling better than you were before.");
        } else if (lightRest) {
          restBonus = randomFloat(0.2, 0.4);
          restMessage = toCoOpLang(plr, "Your time resting leaves you feeling a bit better.");
        } else {
          restBonus = randomFloat(0.2, 0.4);
          restMessage = toCoOpLang(plr, "Your time resting leaves you feeling more okay.");
        }

        statUp(plr, "hp", state.players[plr].stats.maxHp * restBonus);
        statUp(plr, "ep", state.players[plr].stats.maxEp * restBonus);
        statUp(plr, "mp", state.players[plr].stats.maxMp * restBonus);

        restFlavorText = ` ${restMessage} `;
        storeStatsToSC();
      }

      newText += plrText[plr] + restFlavorText;
    });
  }

  return newText !== "" ? newText : text;
}


//Detects when player consumes something which heals them.
function detectConsuming(text) {
  let newText = "";

  // Check for dialog phrases
  let dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      dialogueFlag = false;
    }
  });

  if (dialogueFlag == true) {
    // Split text by player
    let result = separateByPlr(text);
    let plrsDetected = Object.keys(result);
    let plrText = {};

    plrsDetected.forEach(plr => {
      if (result[plr].length > 0) {
        plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "");
      } else {
        plrText[plr] = result[plr].join(" ");
      }
    });

    plrsDetected.forEach(plr => {
      let startConsume = false;
      let consumeFlavorText = "";

      // Check input for consume words and split the input
      consumingTextInput = []
      consumingTextInput = findTargetsThenSplit(plrText[plr], consumeWords, true);
      log("consumingTextInput simplified: " + consumingTextInput);

      // If input has consume words get their indices
      if (consumingTextInput != null) {
        allConsumeWordsIndices = [];
        allConsumeWordsIndices = indicesOfTargets(consumingTextInput, consumeWords);
        log("allConsumeWordsIndices:" + allConsumeWordsIndices);

        // Detect if there is  you + consume or and + consume
        if (allConsumeWordsIndices != null) {
          startConsume = checkYouBeforeIndicesArr(plr, consumingTextInput, allConsumeWordsIndices, 3) || checkAndBeforeIndicesArr(consumingTextInput, allConsumeWordsIndices, 2);
          log("startConsume: " + startConsume);
        }
      }


      if (startConsume) {
        let lightHeal = cleanStringCheckForTargets(lightHealWords, plrText[plr]);
        let moderateHeal = cleanStringCheckForTargets(moderateHealWords, plrText[plr]);
        let strongHeal = cleanStringCheckForTargets(strongHealWords, plrText[plr]);
        let greatHeal = cleanStringCheckForTargets(greatHealWords, plrText[plr]);
        let powerfulHeal = cleanStringCheckForTargets(powerfulHealWords, plrText[plr]);

        log("healIntensity: " + [lightHeal, moderateHeal, strongHeal, greatHeal, powerfulHeal]);

        if (powerfulHeal) {
          statUp(plr, "hp", 100);
          statUp(plr, "ep", 120);
          statUp(plr, "mp", 120);
          consumeFlavorText = toCoOpLang(plr, " You feel restored.");
        } else if (greatHeal) {
          statUp(plr, "hp", 50);
          statUp(plr, "ep", 80);
          statUp(plr, "mp", 80);
          consumeFlavorText = toCoOpLang(plr, " You feel greatly better.");
        } else if (strongHeal) {
          statUp(plr, "hp", 30);
          statUp(plr, "ep", 40);
          statUp(plr, "mp", 40);
          consumeFlavorText = toCoOpLang(plr, " You feel a lot better.");
        } else if (moderateHeal) {
          statUp(plr, "hp", 20);
          statUp(plr, "ep", 30);
          statUp(plr, "mp", 30);
          consumeFlavorText = toCoOpLang(plr, " You feel moderately better.");
        } else if (lightHeal) {
          statUp(plr, "hp", 10);
          statUp(plr, "ep", 10);
          statUp(plr, "mp", 10);
          consumeFlavorText = toCoOpLang(plr, " You feel slightly better.");
        } else {
          statUp(plr, "hp", 5);
          statUp(plr, "ep", 5);
          statUp(plr, "mp", 5);
          consumeFlavorText = toCoOpLang(plr, " You feel a bit better.");
        }

        storeStatsToSC();
      }

      newText += plrText[plr] + consumeFlavorText;
    });
  }

  return newText !== "" ? newText : text;
}


function detectAttack(text) {
  newText = "";

  // Verify player is not dialoguing (case-insensitive)
  dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      // Disable check dialoguing exists
      dialogueFlag = false;
    }
  });

  if (dialogueFlag) {
    // Check which players are in the input and store their name and corresponding text
    result = separateByPlr(text);
    plrsDetected = Object.keys(result);
    plrText = {};

    // Store each player's text
    plrsDetected.forEach(plr => {
      if (result[plr].length > 0) {
        plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "");
      }
      else {
        plrText[plr] = result[plr].join(" ");
      }
    });

    plrsDetected.forEach(plr => {
      startAttack = false;
      attackFlavorText = "";

      // Check input for atk words and split the input
      attackTextInput = []
      attackTextInput = findTargetsThenSplit(plrText[plr], attackWords, true);
      log("attackTextInput simplified: " + attackTextInput);

      // If input has atk words get their indices
      if (attackTextInput != null) {
        allAttackWordIndices = [];
        allAttackWordIndices = indicesOfTargets(attackTextInput, attackWords);
        log("allAttackWordIndices:" + allAttackWordIndices);

        // Detect if there is you + atk or and + atk
        if (allAttackWordIndices != null) {
          startAttack = checkYouBeforeIndicesArr(plr, attackTextInput, allAttackWordIndices, 3) || checkAndBeforeIndicesArr(attackTextInput, allAttackWordIndices, 2);
          log("startAttack: " + startAttack)
        }
      }


      if (startAttack) {
        // Get the player's attack and speed stats
        plrAtk = state.players[plr].stats.atk;
        plrSpd = state.players[plr].stats.spd;

        // Define attack strength ranges with corresponding attack messages
        const atkRanges = [
          { min: 0, max: 10, atk: attackTier1 },
          { min: 10, max: 20, atk: attackTier2 },
          { min: 20, max: 30, atk: attackTier3 },
          { min: 30, max: 40, atk: attackTier4 },
          { min: 40, max: 50, atk: attackTier5 },
          { min: 50, max: 60, atk: attackTier6 },
          { min: 60, max: 70, atk: attackTier7 },
          { min: 70, max: 80, atk: attackTier8 },
          { min: 80, max: 90, atk: attackTier9 },
          { min: 90, max: Infinity, atk: attackTier10 }
        ];


        // Define speed stat ranges with corresponding speed messages
        const spdRanges = [
          { min: 0, max: 10, spd: atkSpdTier1 },
          { min: 10, max: 20, spd: atkSpdTier2 },
          { min: 20, max: 30, spd: atkSpdTier3 },
          { min: 30, max: 40, spd: atkSpdTier4 },
          { min: 40, max: 50, spd: atkSpdTier5 },
          { min: 50, max: 60, spd: atkSpdTier6 },
          { min: 60, max: 70, spd: atkSpdTier7 },
          { min: 70, max: 80, spd: atkSpdTier8 },
          { min: 80, max: 90, spd: atkSpdTier9 },
          { min: 90, max: Infinity, spd: atkSpdTier10 }
        ];


        // Calculate energy requirements for attack
        atkEnergyLoss = (2 * (plrAtk / 10) + randomInt(0, 5)) * -1;
        if (plrAtk > 100) {
          atkEnergyLoss = (20 + plrAtk / 25) * -1;
        }
        log("Atk energy loss: " + atkEnergyLoss);

        // Attack energy check defaults to false
        atkEnergyCheck = false;
        // If player has enough energy, turn on check
        if (state.players[plr].stats.ep >= Math.abs(atkEnergyLoss) && state.players[plr].stats.ep >= 0) {
          atkEnergyCheck = true;
        }
        log("atkEnergyCheck: " + atkEnergyCheck);

        // If player does not have enough energy to attack, create flavor text
        if (!atkEnergyCheck) {
          attackFlavorText = attackFlavorText + ` ${toCoOpLang(plr, `${realizePhrases[randomInt(0, realizePhrases.length - 1)]} ${notEnoughPhrases[randomInt(0, notEnoughPhrases.length - 1)].toLowerCase().replace("[stat]", "energy").replace("[thing]", "your attack")}`)} `
        }

        // If player has enough energy to attack, execute the attack
        if (atkEnergyCheck) {
          // Check the player's speed range and create a message based on their speed
          for (let range of spdRanges) {
            if (plrSpd >= range.min && plrSpd < range.max) {
              // Append the speed message to the attack text
              attackFlavorText = attackFlavorText + ` ${toCoOpLang(plr, `${range.spd[randomInt(0, range.spd.length - 1)]}`)} `;

              // Attacking grants SPD exp
              statUp(plr, "spd", randomFloat(0.01, 2));
              break;
            }
          }

          // Check the player's attack range/strength, check energy requirement, and save attack text
          for (let range of atkRanges) {
            if (plrAtk >= range.min && plrAtk < range.max) {
              // Save the attack message based on the attack strength
              attackFlavorText = attackFlavorText + `and ${toCoOpLang(plr, `${range.atk[randomInt(0, range.atk.length - 1)].toLowerCase()}`)} `;

              // Attacking grants ATK exp
              statUp(plr, "atk", randomFloat(0.01, 2));

              break;
            }
          }

          // Apply energy loss from attack
          statUp(plr, "ep", atkEnergyLoss);

          // Determine if the attack has a luck modifier
          atkLuckRoll = randomInt(1, 100); // Generate a random luck roll between 1 and 100
          log("atkLuckRoll: " + atkLuckRoll); // Log the luck roll for debugging

          if (atkLuckRoll <= state.players[plr].stats.lck && atkLuckRoll >= 1) {
            // If the luck roll is within the player's luck range, append a lucky phrase to the text
            attackFlavorText = attackFlavorText + ` ${toCoOpLang(plr, `${graspPhrases[randomInt(0, graspPhrases.length - 1)]} ${luckyPhrases[randomInt(0, luckyPhrases.length - 1)]}.`)} `;

            //Grant the player luck exp for using luck
            statUp(plr, "lck", randomFloat(0.01, 2));
          }


          storeStatsToSC();
        } // End of has atk energy
      } // End of startAttack

      newText = newText + plrText[plr] + attackFlavorText;
    });
  }

  if (newText == "") {
    return text;
  }
  else {
    return newText;
  }
}

/////////////////////////////////////////////////////////////////////////////////////

// Function to check if the output contains any "hurt" words or patterns, and if so, apply damage to the player's stats
function testHurt(plr, hurtType, dmg, text) {
  // Loop through all the regex patterns in hurtType to detect any matching "hurt" words in the output text
  const matchedPattern = hurtType.find(pattern => pattern.test(text));

  // If a hurt word is found, apply damage to the player's HP and increase the DEF stat
  if (matchedPattern) {
    // Apply damage to the player's HP stat
    statUp(plr, "hp", dmg);

    // Find the `${plr} Stats` card to log the damage information
    const statSC = storyCards.find(sc => sc.title === `${plr} Stats`);

    // Match the text with the pattern and fetch the matching portion (if any)
    const matchText = text.match(matchedPattern);

    // If the `${plr} Stats` card exists and we have matched text, log the damage details
    if (statSC && matchText) {
      // Add a new log entry to the Player Stats card, indicating the output count and damage reason
      statSC.description = `Log ${state.turnCount} | Dmg Reason: ${matchText}\n` + statSC.description;

      // Log the percentage of damage reduction based on the player's DEF stat
      statSC.description = `Log ${state.turnCount} | Dmg Reduced by DEF: ${((1 - dmgPercent) * 100).toFixed(2)}% (${(dmg / dmgPercent).toFixed(2)} → ${dmg.toFixed(2)})\n` + statSC.description;
    }

    // Applying damage triggers an increase in the player's DEF stat as a form of experience
    statUp(plr, "def", randomFloat(0.01, 1.5));

    // Store updated player stats to the game state
    storeStatsToSC();
  }
}

// Function to check output if player got damaged and applies hp dmg to stats
function detectHurt(text) {

  //todo: fix so plr doesnt get dmged when about to dmg instead, use array?
  //Pain that can be brushed off
  lightHurtWords = [
    //Ex: Scraping you/your body
    new RegExp(`\\b(?:bump|bumps|bumping|bruise|bruised|bruising|graze|grazed|grazes|grazing|nick|nicked|nicking|nicks|scorching|scorched|scorches|scrape|scraped|scrapes|scraping|singeing|singes|sting|stinging|stings)(?:\\s+\\w+){0,4}\\s+(?:you|your)(?:\\s+\\w+){0,5}\\s+(?:${bodyParts.join("|")})\\b`, "i"),

    //Ex: You feel throbbing
    new RegExp(`\\byou(?:\\s+\\w+){0,3}\\s+feel(?:\\s+\\w+){0,5}\\s+(?:ache|aching|bruise|bruising|bruised|sting|stinging|throb|throbbing)\\b`, "i"),

    //Ex: You stumble back
    new RegExp(`\\byou(?:\\s+\\w+){0,3}\\s+(?:fall|falling|falls|fell|stumble|stumbled|stumbles|stumbling|slam|slammed|slamming|slams|trip|tripping|trips|tumbled)(?:\\s+\\w+){0,3}\\s+(?:against|around|back|backward|down|forward|into|on|off|over|sideways|towards)\\b`, "i"),

    //Ex: The pain is throbbing
    new RegExp(`\\bThe(?:\\s+\\w+){0,3}\\s+pain(?:\\s+\\w+){0,4}\\s+(?:throbbing)\\b`, "i")

  ];

  //Pain that hurts or lightly draws blood
  moderateHurtWords = [
    //Ex: slicing you/your body
    new RegExp(`\\b(?:bite|biting|bites|burn|burning|burns|catches|catching|dig|digs|digging|hit|hitting|hits|jab|jabbing|jabs|knock|knocked|knocking|sear|sears|searing|shock|shocking|shocks|strike|strikes|striking|struck|whack|whacked|whacking|whacks)(?:\\s+\\w+){0,3}\\s+(?:you|your)(?:\\s+\\w+){0,5}\\s+(?:${bodyParts.join("|")})\\b`, "i"),

    //Ex: sends you crashing
    new RegExp(`\\b(?:send|sending|sends)(?:\\s+\\w+){0,3}\\s+you(?:\\s+\\w+){0,5}\\s+(?:crumpling|crashing|flailing|reeling|skidding|slamming|smashing|sprawling|toppling|tumbling)\\b`, "i"),

    //Ex: The pain is burning
    new RegExp(`\\bThe(?:\\s+\\w+){0,3}\\s+pain(?:\\s+\\w+){0,4}\\s+(?:burning|searing)\\b`, "i")

  ];

  //Pain that is drawing average blood or internal dmg
  strongHurtWords = [
    //Ex: piercing you/your body
    new RegExp(`\\b(?:agony|agonizing|batter|battered|battering|collide|collides|fling|flinging|flung|pierce|pierced|pierces|piercing|slam|slams|slammed|slamming|slice|slices|sliced|slicing|shoot|shooting|shoots|slash|slashes|slashed|slashing|gashes)(?:\\s+\\w+){0,3}\\s+(?:you|your)(?:\\s+\\w+){0,5}\\s+(?:${bodyParts.join("|")})\\b`, "i"),

    //Ex: The pain is excrutiating
    new RegExp(`\\bThe(?:\\s+\\w+){0,3}\\s+pain(?:\\s+\\w+){0,4}\\s+(?:agonizing|blistering|blinding|extreme|gnawing|gripping|horrible|immediate|intense|piercing|radiating|sharp|shooting|stabbing|tremendous|unbearable)\\b`, "i")


  ];

  //Pain that is significantly drawing blood
  greatHurtWords = [
    //Ex: Blasting you/your body
    new RegExp(`\\b(?:blasts|blasted|blasting|explodes|exploding|fractures|fractured|fracturing|impale|impales|impaled|impaling|pierce|pierces|pierced|piercing|rip|rips|ripped|ripping|shred|shreds|shredded|shredding|tear into|tears into|tearing into|tore|torn)(?:\\s+\\w+){0,3}\\s+(?:you|your)(?:\\s+\\w+){0,5}\\s+(?:${bodyParts.join("|")})\\b`, "i")
  ];

  //Pain that is debilitating
  severeHurtWords = [
    //Ex: Crushing you/your body
    new RegExp(`\\b(?:crush|crushes|crushed|crushing|demolish|demolishes|demolished|demolishing|devastate|devastates|devastated|devastating|obliterate|obliterates|obliterated|obliterating|rupture|ruptures|ruptured|rupturing|shatter|shatters|shattered|shattering|splinter|splinters|splintered|splintering)(?:\\s+\\w+){0,3}\\s+(?:you|your)(?:\\s+\\w+){0,5}\\s+(?:${bodyParts.join("|")})\\b`, "i")
  ];


  state.playerList.forEach(plr => {
    // Pain that can be brushed off
    lightHurtWords_coop = [
      //Ex: Scraping plr's body
      new RegExp(`\\b(?:bump|bumps|bumping|bruise|bruised|bruising|graze|grazed|grazes|grazing|nick|nicked|nicking|nicks|pressing|presses|scorching|scorched|scorches|scrape|scraped|scrapes|scraping|singeing|singes|sting|stinging|stings)(?:\\s+\\w+){0,4}\\s+(?:${plr}|${plr}'s)(?:\\s+\\w+){0,5}\\s+(?:${bodyParts.join("|")})\\b`, "i"),

      //Ex: plr feels throbbing
      new RegExp(`\\b${plr}(?:\\s+\\w+){0,3}\\s+(?:feeling|felt|feels|winces|wincing|winced)(?:\\s+\\w+){0,5}\\s+(?:ache|aching|bruise|bruising|bruised|sting|stinging|throb|throbbing)\\b`, "i"),

      //Ex: plr's body aches
      new RegExp(`\\b(?:${plr}'s)\\s+(?:${bodyParts.join("|")})\\s+(?:throb|throbs|throbbing|ache|aches|aching|contorts|contorting|snaps shut)\\b`, "i"),

      //Ex: Plr stumbles
      new RegExp(`\\b${plr}(?:\\s+\\w+){0,3}\\s+(?:contorts|contorting|fall|falling|falls|fell|stumble|stumbled|stumbles|stumbling|strains|straining|slam|slammed|slamming|slams|staggers|staggering|trip|tripping|trips|tumbled|yanked)\\b`, "i")
    ];

    // Pain that hurts or lightly draws blood
    moderateHurtWords_coop = [
      //Ex: Plr chokes
      new RegExp(`\\b${plr}(?:\\s+\\w+){0,3}\\s+(?:chokes|sputters|coughs|fights for air|wheezes|wheezing)\\b`, "i"),

      //Ex: knocks plr
      new RegExp(`\\b(?:knocks|knocking|slamming|slams)(?:\\s+\\w+){0,3}\\s+${plr}\\b`, "i"),

      //Ex: slicing plr's body
      new RegExp(`\\b(?:bite|biting|bites|burn|burning|burns|catches|catching|driving|drives|dig|digs|digging|hit|hitting|hits|jab|jabbing|jabs|knock|knocked|knocking|ramming|rams|sear|sears|searing|shock|shocking|shocks|strike|strikes|striking|struck|sharp|whack|whacked|whacking|whacks)(?:\\s+\\w+){0,3}\\s+(?:${plr}|${plr}'s)(?:\\s+\\w+){0,5}\\s+(?:${bodyParts.join("|")})\\b`, "i"),

      //Ex: sends plr crashing
      new RegExp(`\\b(?:send|sending|sends|throws|throwing)(?:\\s+\\w+){0,3}\\s+${plr}(?:\\s+\\w+){0,5}\\s+(?:crumpling|crashing|flailing|reeling|skidding|slamming|smashing|sprawling|toppling|tumbling)\\b`, "i"),

      //Ex: Pain pulses through Plr's body
      new RegExp(`\\b(?:pain|sting)\\b(?:\\s+\\w+){0,3}\\s+(?:flares|pulses|burns|shoots)(?:\\s+\\w+){0,5}\\s+(?:through|along|across|down|into|up)\\s+(?:\\w+\\s+)?(?:${plr}'s)\\s+(?:${bodyParts.join("|")})\\b`, "i"),

      //Ex: shock up plr's body
      new RegExp(`\\b(?:shock|shocks|shocking|shocked)(?:\\s+\\w+){0,2}\\s+(?:up|down|through|along)\\s+(?:${plr}'s)\\s+(?:${bodyParts.join("|")})\\b`, "i")

    ];

    // Pain that is drawing average blood or internal dmg
    strongHurtWords_coop = [
      //Ex: piercing plr's body
      new RegExp(`\\b(?:agony|agonizing|batter|battered|battering|collide|collides|fling|flinging|flung|pierce|pierced|pierces|piercing|slam|slams|slammed|slamming|slice|slices|sliced|slicing|shoot|shooting|shoots|slash|slashes|slashed|slashing|gashes)(?:\\s+\\w+){0,3}\\s+(?:${plr}|${plr}'s)(?:\\s+\\w+){0,5}\\s+(?:${bodyParts.join("|")})\\b`, "i"),

      //Ex: Pain explodes through plr's body
      new RegExp(`\\b(?:pain|sting)\\b(?:\\s+\\w+){0,3}\\s+(?:blossoms|explode|explodes|bursts)(?:\\s+\\w+){0,5}\\s+(?:through|along|across|down|into)\\s+(?:\\w+\\s+)?(?:${plr}'s)\\s+(?:${bodyParts.join("|")})\\b`, "i"),

      //Ex: Plr cries out in pain
      new RegExp(`\\b(?:${plr})\\b(?:\\s+\\w+){0,2}\\s+(?:cry|cries|cried|crying|screams|screaming|yells|yelling|welps|welping)\\s+out(?:\\s+\\w+){0,3}\\s+in\\s+(?:pain|agony)\\b`, "i"),

      //Ex: Plr clutches their body
      new RegExp(`\\b(?:${plr})\\b(?:\\s+\\w+){0,2}\\s+(?:clutch|clutches|clutched|clutching)(?:\\s+\\w+){0,3}\\s+(?:his|her|their|your)\\s+(?:bleeding|wounded|injured|hurt)?\\s*(?:${bodyParts.join("|")})\\b`, "i")
    ];

    //Pain that is significantly drawing blood
    greatHurtWords_coop = [
      //Ex: Blasting plr's body
      new RegExp(`\\b(?:blasts|blasted|blasting|explodes|exploding|fractures|fractured|fracturing|impale|impales|impaled|impaling|pierce|pierces|pierced|piercing|rip|rips|ripped|ripping|shred|shreds|shredded|shredding|tear into|tears into|tearing into|tore|torn)(?:\\s+\\w+){0,3}\\s+(?:${plr}|${plr}'s)(?:\\s+\\w+){0,5}\\s+(?:${bodyParts.join("|")})\\b`, "i"),

      //Ex: gouges plr's body
      new RegExp(`\\b(?:gouge|gouges|gouging)(?:\\s+\\w+){0,3}\\s+(?:${plr}'s)\\s+(?:${bodyParts.join("|")})\\b`, "i"),

      //Ex: Plr crumpled
      new RegExp(`\\b${plr}(?:\\s+\\w+){0,3}\\s+(?:collapse|collapses|collapsed|collapsing|crumple|crumpled|crumples|crumpling)\\b`, "i")
    ];

    //Pain that is debilitating
    severeHurtWords_coop = [
      //Ex: Crushing plr's body
      new RegExp(`\\b(?:crush|crushes|crushed|crushing|demolish|demolishes|demolished|demolishing|devastate|devastates|devastated|devastating|obliterate|obliterates|obliterated|obliterating|rupture|ruptures|ruptured|rupturing|shatter|shatters|shattered|shattering|splinter|splinters|splintered|splintering)(?:\\s+\\w+){0,3}\\s+(?:${plr}|${plr}'s)(?:\\s+\\w+){0,5}\\s+(?:${bodyParts.join("|")})\\b`, "i")
    ];

    //Initialize dmg values and defense reduction
    df = state.players[plr].stats.def;

    // X def reduces X/2 % dmg
    if (df <= 100) {
      dmgPercent = 1 - (df / 200); //Ex: Def: 90, 1 - 0.45 = 0.55 dmg taken
    }
    //Past 100 def reduces 50% + (~1% per 10 def) dmg
    else if (df > 100) {
      dmgPercent = 1 - (-0.25 + 0.161 * Math.log(df));
    }
    log("dmgPercent: " + dmgPercent);

    // Randomize and save damage for each dmg intensity
    severeDmg = -1 * randomFloat(25, 40) * dmgPercent;
    greatDmg = -1 * randomFloat(15, 25) * dmgPercent;
    strongDmg = -1 * randomFloat(5, 15) * dmgPercent;
    moderateDmg = -1 * randomFloat(3, 5) * dmgPercent;
    lightDmg = -1 * randomFloat(0.1, 3) * dmgPercent;

    // Loop through each regex, if output text matches damage text, apply damage
    if (onePlayerFlagger()) {
      testHurt(plr, severeHurtWords, severeDmg, text);
      testHurt(plr, greatHurtWords, greatDmg, text);
      testHurt(plr, strongHurtWords, strongDmg, text);
      testHurt(plr, moderateHurtWords, moderateDmg, text);
      testHurt(plr, lightHurtWords, lightDmg, text);
    }
    else {
      // Replace you/your with first plr in coop mode for matching
      if (!onePlayerFlagger()) {
        adjustedText = text
          .replace(/\byou\b/gi, state.playerList[0])
          .replace(/\byour\b/gi, state.playerList[0] + "'s");
      }

      testHurt(plr, severeHurtWords_coop, severeDmg, adjustedText);
      testHurt(plr, greatHurtWords_coop, greatDmg, adjustedText);
      testHurt(plr, strongHurtWords_coop, strongDmg, adjustedText);
      testHurt(plr, moderateHurtWords_coop, moderateDmg, adjustedText);
      testHurt(plr, lightHurtWords_coop, lightDmg, adjustedText);
    }

  });

  return text;
}
// todo: enemy strength/type changes dmg lvl

/////////////////////////////////////////////////////////////////////////////////////

// Function to detect when the player attempts to dodge
function detectDodge(text) {
  newText = "";

  // Verify player is not dialoguing (case-insensitive)
  dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      // Disable check dialoguing exists
      dialogueFlag = false;
    }
  });

  if (dialogueFlag) {
    // Check which players are in the input and store their name and corresponding text
    result = separateByPlr(text);
    plrsDetected = Object.keys(result);
    plrText = {};

    // Store each player's text
    plrsDetected.forEach(plr => {
      if (result[plr].length > 0) {
        plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "");
      }
      else {
        plrText[plr] = result[plr].join(" ");
      }
    });

    plrsDetected.forEach(plr => {
      startDodge = false;
      dodgeFlavorText = "";

      // Check if the input contains any dodge-related words
      dodgeTextInput = [];

      // Find all the dodge-related words in the text and split the input accordingly
      dodgeTextInput = findTargetsThenSplit(plrText[plr], dodgeWords, true);
      log("dodgeTextInput simplified: " + dodgeTextInput);

      // If the input contains dodge words, find their indices in the text
      if (dodgeTextInput != null) {
        allDodgeWordIndices = [];
        allDodgeWordIndices = indicesOfTargets(dodgeTextInput, dodgeWords);
        log("allDodgeWordIndices:" + allDodgeWordIndices);

        // Check if the sentence contains "you + dodge" or "and + dodge" to trigger the dodge action
        if (allDodgeWordIndices != null) {
          startDodge = checkYouBeforeIndicesArr(plr, dodgeTextInput, allDodgeWordIndices, 3) || checkAndBeforeIndicesArr(dodgeTextInput, allDodgeWordIndices, 2);
          log("startDodge: " + startDodge)
        }
      }


      // If the dodge action is triggered (startDodge is true), calculate the player's dodge response based on SPD stat
      if (startDodge) {
        plrSpd = state.players[plr].stats.spd;

        // Define SPD stat ranges and corresponding dodge messages
        const spdRanges = [
          { min: 0, max: 10, spd: spdTier1 },
          { min: 10, max: 20, spd: spdTier2 },
          { min: 20, max: 30, spd: spdTier3 },
          { min: 30, max: 40, spd: spdTier4 },
          { min: 40, max: 50, spd: spdTier5 },
          { min: 50, max: 60, spd: spdTier6 },
          { min: 60, max: 70, spd: spdTier7 },
          { min: 70, max: 80, spd: spdTier8 },
          { min: 80, max: 90, spd: spdTier9 },
          { min: 90, max: Infinity, spd: spdTier10 }
        ];


        // Calculate energy requirements for dodging
        dodgeEnergyLoss = (2 * (plrSpd / 10) + randomInt(0, 5)) * -1;
        if (plrSpd > 100) {
          dodgeEnergyLoss = (20 + plrSpd / 25) * -1;
        }
        log("dodgeEnergyLoss: " + dodgeEnergyLoss);

        // Dodge energy check defaults to false
        dodgeEnergyCheck = false;
        // If player has enough energy, turn on check
        if (state.players[plr].stats.ep >= Math.abs(dodgeEnergyLoss) && state.players[plr].stats.ep >= 0) {
          dodgeEnergyCheck = true;
        }
        log("dodgeEnergyCheck: " + dodgeEnergyCheck);

        // If player doesnt have enough energy to dodge, create flavor text
        if (dodgeEnergyCheck == false) {
          dodgeFlavorText = dodgeFlavorText + ` ${toCoOpLang(plr, `${realizePhrases[randomInt(0, realizePhrases.length - 1)]} ${notEnoughPhrases[randomInt(0, notEnoughPhrases.length - 1)].toLowerCase().replace("[stat]", "energy").replace("[thing]", "your movement")}`)} `;
        }

        // If player has enough energy to dodge, execute dodge
        if (dodgeEnergyCheck) {
          // Based on the player's SPD stat, select an appropriate dodge message and save dodge text
          for (let range of spdRanges) {
            if (plrSpd >= range.min && plrSpd < range.max) {
              // Save dodge text based on player SPD stat
              dodgeFlavorText = dodgeFlavorText + ` ${toCoOpLang(plr, `${range.spd[randomInt(0, range.spd.length - 1)]}`)} `;

              break;
            }
          }

          // Consume energy for dodging
          statUp(plr, "ep", dodgeEnergyLoss);

          // Dodging grants SPD stat
          statUp(plr, "spd", randomFloat(0.01, 2));

          // Check if the player's luck allows for a dodge boost based on their LCK stat
          dodgeLuckRoll = randomInt(1, 100);
          log("dodgeLuckRoll: " + dodgeLuckRoll);

          // If the player's luck stat rolls successfully, append a lucky dodge message
          if (dodgeLuckRoll <= state.players[plr].stats.lck && dodgeLuckRoll >= 1) {
            dodgeFlavorText = dodgeFlavorText + `${toCoOpLang(plr, `${graspPhrases[randomInt(0, graspPhrases.length - 1)]} ${luckyPhrases[randomInt(0, luckyPhrases.length - 1)]}.`)} `;

            // Grant the player luck exp for using luck
            statUp(plr, "lck", randomFloat(0.01, 2));
          }

          storeStatsToSC();
        }// End of dodgeEnergyCheck
      } // End of startDodge check

      newText = newText + plrText[plr] + dodgeFlavorText;
    });
  }

  if (newText == "") {
    return text;
  }
  else {
    return newText;
  }
}

// Function that detects when a player looks around the environment, and based on their INTL stat, affects the level of detail in the results displayed to the player.
function detectScout(text) {
  newText = "";

  // Verify player is not dialoguing (case-insensitive)
  dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      // Disable check dialoguing exists
      dialogueFlag = false;
    }
  });

  if (dialogueFlag) {
    // Check which players are in the input and store their name and corresponding text
    result = separateByPlr(text);
    plrsDetected = Object.keys(result);
    plrText = {};

    // Store each player's text
    plrsDetected.forEach(plr => {
      if (result[plr].length > 0) {
        plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "");
      }
      else {
        plrText[plr] = result[plr].join(" ");
      }
    });

    plrsDetected.forEach(plr => {
      startScout = false;
      scoutFlavorText = "";

      // Check for scout-related words
      scoutTextInput = [];

      // Find scout-related words within the input and split the input accordingly
      scoutTextInput = findTargetsThenSplit(plrText[plr], scoutWords, true);
      log("scoutTextInput simplified: " + scoutTextInput);

      // If the input contains scout words, find their indices in the text
      if (scoutTextInput != null) {
        allScoutWordIndices = [];
        allScoutWordIndices = indicesOfTargets(scoutTextInput, scoutWords);
        log("allScoutWordIndices:" + allScoutWordIndices);

        // Check if the sentence starts with "you + scout" or "and + scout" to trigger scouting action
        if (allScoutWordIndices != null) {
          startScout = checkYouBeforeIndicesArr(plr, scoutTextInput, allScoutWordIndices, 3) || checkAndBeforeIndicesArr(scoutTextInput, allScoutWordIndices, 2);
          log("startScout: " + startScout)
        }
      }


      // If the scouting action is triggered (startScout is true), process the INTL stat to provide results
      if (startScout) {
        plrIntl = state.players[plr].stats.intl;

        // Define the ranges of INTL stat and the corresponding messages that will be shown to the player
        const detailRanges = [
          { min: 0, max: 10, msg: detail1 },
          { min: 10, max: 20, msg: detail2 },
          { min: 20, max: 30, msg: detail3 },
          { min: 30, max: 40, msg: detail4 },
          { min: 40, max: 50, msg: detail5 },
          { min: 50, max: 60, msg: detail6 },
          { min: 60, max: 70, msg: detail7 },
          { min: 70, max: 80, msg: detail8 },
          { min: 80, max: 90, msg: detail9 },
          { min: 90, max: Infinity, msg: detail10 }
        ];

        // Iterate through the defined ranges to find the appropriate level of detail based on the player's INTL stat
        for (let range of detailRanges) {
          if (plrIntl >= range.min && plrIntl < range.max) {
            // Add the relevant detail message to the text
            scoutFlavorText = ` ${toCoOpLang(plr, `${range.msg[randomInt(0, range.msg.length - 1)]}`)} `;

            // Award the player INTL experience for successfully performing a scout action
            statUp(plr, "intl", randomFloat(0.01, 2));
            break; // Stop checking once the correct range is found
          }
        }

        // Check for the possibility of a lucky scout action based on the player's luck stat
        scoutLuckRoll = randomInt(1, 100);
        log("scoutLuckRoll: " + scoutLuckRoll);

        if (scoutLuckRoll <= state.players[plr].stats.lck && scoutLuckRoll >= 1) {
          // If the luck roll is successful, add a lucky phrase to the result
          scoutFlavorText = scoutFlavorText + ` ${toCoOpLang(plr, `${graspPhrases[randomInt(0, graspPhrases.length - 1)]} ${luckyPhrases[randomInt(0, luckyPhrases.length - 1)]}.`)} `;

          // Grant the player luck exp for using luck
          statUp(plr, "lck", randomFloat(0.01, 2));
        }

        storeStatsToSC();
      } // End of startScout

      newText = newText + plrText[plr] + scoutFlavorText;
    });
  }

  if (!newText == "") {
    return newText;
  }
  else {
    return text;
  }
}

// Function that detects when a player defends. Defense effectiveness based on plr DEF stat
function detectDefend(text) {
  let newText = "";

  // Verify player is not dialoguing
  dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      dialogueFlag = false;
    }
  });

  if (dialogueFlag) {
    // Check which players are in the input and store their name and corresponding text
    const result = separateByPlr(text);
    const plrsDetected = Object.keys(result);
    const plrText = {};

    plrsDetected.forEach(plr => {
      plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "").trim();
    });

    plrsDetected.forEach(plr => {
      let startDefend = false;
      let defendFlavorText = "";

      // If the player isn't dialoguing, proceed to check for defend-related words
      defendTextInput = [];

      // Find defend-related words within the input and split the input accordingly
      defendTextInput = findTargetsThenSplit(plrText[plr], defendWords, true);
      log("defendTextInput simplified: " + defendTextInput);

      // If the input contains defend words, find their indices in the text
      if (defendTextInput != null) {
        allDefendWordIndices = [];
        allDefendWordIndices = indicesOfTargets(defendTextInput, defendWords);
        log("allDefendWordIndices:" + allDefendWordIndices);

        // Check if the sentence starts with "you + defend" or "and + defend" to trigger defend action
        if (allDefendWordIndices != null) {
          startDefend = checkYouBeforeIndicesArr(plr, defendTextInput, allDefendWordIndices, 3) || checkAndBeforeIndicesArr(defendTextInput, allDefendWordIndices, 2);
          log("startDefend: " + startDefend);
        }
      }

      if (startDefend) {
        const plrDef = state.players[plr].stats.def;
        const plrLck = state.players[plr].stats.lck;

        // Define DEF tiers (adjust these ranges as needed)
        const defendRanges = [
          { min: 0, max: 10, phrases: defendTiers.tier1 },
          { min: 10, max: 20, phrases: defendTiers.tier2 },
          { min: 20, max: 30, phrases: defendTiers.tier3 },
          { min: 30, max: 40, phrases: defendTiers.tier4 },
          { min: 40, max: 50, phrases: defendTiers.tier5 },
          { min: 50, max: 60, phrases: defendTiers.tier6 },
          { min: 60, max: 70, phrases: defendTiers.tier7 },
          { min: 70, max: 80, phrases: defendTiers.tier8 },
          { min: 80, max: 90, phrases: defendTiers.tier9 },
          { min: 90, max: Infinity, phrases: defendTiers.tier10 }
        ];

        for (const tier of defendRanges) {
          if (plrDef >= tier.min && plrDef < tier.max) {
            defendFlavorText = ` ${toCoOpLang(plr, tier.phrases[randomInt(0, tier.phrases.length - 1)])} `;
            statUp(plr, "def", randomFloat(0.01, 2));
            break;
          }
        }

        // Luck bonus (optional)
        const luckRoll = randomInt(1, 100);
        if (luckRoll <= plrLck && luckRoll >= 1) {
          defendFlavorText += ` ${toCoOpLang(plr, `${graspPhrases[randomInt(0, graspPhrases.length - 1)]} ${luckyPhrases[randomInt(0, luckyPhrases.length - 1)]}.`)}`;
          statUp(plr, "lck", randomFloat(0.01, 2));
        }

        storeStatsToSC();
      }

      newText += plrText[plr] + defendFlavorText;
    });
  }

  if (!newText == "") {
    return newText;
  }
  else {
    return text;
  }
}

function detectExercise(text) {
  let newText = "";


  // Verify player is not dialoguing
  dialogueFlag = true;
  dialoguePhrases.forEach(phrase => {
    if (text.toLowerCase().includes(phrase.toLowerCase())) {
      dialogueFlag = false;
    }
  });

  if (dialogueFlag == true) {
    // Check which players are in the input and store their name and corresponding text
    const result = separateByPlr(text);
    const plrsDetected = Object.keys(result);
    const plrText = {};

    plrsDetected.forEach(plr => {
      plrText[plr] = result[plr].join(" ").replace(/(?<!>)>(?!>)/g, "").trim();
    });

    plrsDetected.forEach(plr => {
      let startExercise = false;
      let isDoing = false;
      let exerciseFlavorText = "";

      // If the player isn't dialoguing, proceed to check for exercise-related words
      exerciseTextInput = [];

      // Find exercise-related words within the input and split the input accordingly
      exerciseTextInput = findTargetsThenSplit(plrText[plr], exerciseWords, true);
      log("exerciseTextInput simplified: " + exerciseTextInput);

      // If the input contains exercise words, find their indices in the text
      if (exerciseTextInput != null) {
        allExerciseWordIndices = [];
        allExerciseWordIndices = indicesOfTargets(exerciseTextInput, exerciseWords);
        log("allExerciseWordIndices:" + allExerciseWordIndices);

        // Check if the sentence starts with "you + exercise" or "and + exercise" to trigger exercise action
        if (allExerciseWordIndices != null) {
          startExercise = checkYouBeforeIndicesArr(plr, exerciseTextInput, allExerciseWordIndices, 3) || checkAndBeforeIndicesArr(exerciseTextInput, allExerciseWordIndices, 2);
          log("startExercise: " + startExercise);

          isDoing = cleanStringCheckForTargets(doWords, plrText[plr]);
        }
      }

      if (isDoing && startExercise) {
        totalReps = 0;
        finishedReps = 0;
        epCost = 0;
        hpCost = 0;
        atkGain = 0;
        defGain = 0;
        spdGain = 0;
        maxEpGain = 0;

        allExerciseWordIndices.forEach(exercise => {
          totalReps += findClosestNumberBefore(exerciseTextInput, exercise) ?? 1;
        });
        log("totalReps: " + totalReps);

        for (let i = 0; i < totalReps; i++) {
          if (state.players[plr].stats.ep > epCost + 15) {
            epCost += randomFloat(5, 15);
            hpCost += randomFloat(0, 0.3);
            atkGain += randomFloat(0, 0.5);
            defGain += randomFloat(0, 0.5);
            spdGain += randomFloat(0, 0.5);

            maxEpGain += randomFloat(0, 0.5);

            finishedReps = i + 1;

            log("epCost: " + epCost);
          }
          else {
            finishedReps = i;

            break;
          }
        }
        log("finishedReps: " + finishedReps);

        statUp(plr, "ep", -1 * epCost);
        statUp(plr, "hp", -1 * hpCost);
        statUp(plr, "atk", atkGain);
        statUp(plr, "def", defGain);
        statUp(plr, "spd", spdGain);

        state.players[plr].stats.maxEp += maxEpGain;
        state.players[plr].stats.maxEp = Math.floor(state.players[plr].stats.maxEp * 100) / 100;


        storeStatsToSC();

        exerciseFlavorText = toCoOpLang(plr, `${exerciseResultPhrases[randomInt(0, exerciseResultPhrases.length - 1)].replace("[num]", `${finishedReps}`)}`);

      }

      newText += plrText[plr] + exerciseFlavorText;
    });
  }

  if (!newText == "") {
    return newText;
  }
  else {
    return text;
  }
}

//persistent injuries
//race evos
//add random skill learning, make it context based
//spiritualism increases luck
//buff and debuff
//add exp reward for killing
//add reading
//add armor, you put the helmet "on your head"
//time skip
// --- Mini Language Engine: Leah’s English Behavior Config ---


/// Word lists used in output modifier.

function getGender() {
  return gender[Math.floor(Math.random() * gender.length)];
}
const gender = [
  "male",
  "female"
]
function getRace() {
  return race[Math.floor(Math.random() * race.length)];
}
const race = [
  "human",
  "elf",
  "dwarf",
  "gnome",
  "halfling",
  "hobbit",
  "drow",
  "angel",
  "demon",
  "troll",
  "ogre",
  "vampire",
  "werewolf",
  "slimegirl",
  "Cthulhu",
  "fairy",
  "pixie",
  "sasquatch",
  "centaur",
  "merperson",
  "zombie",
  "harpy",
  "dragonborn",
  "dragon",
  "kobold",
  "ent",
  "aarakocra",
  "kitsune",
  "catfolk",
  "wood elf",
  "high elf",
  "golem",
  "ghost",
  "gargoyle",
  "sylph",
  "djinn",
  "android",
  "cyborg",
  "hill giant",
  "yeti",
  "orc",
  "half-orc",
  "goblin",
  "half-elf",
  "leprechaun",
  "star-child",
  "titan",
  "mind flayer",
  "gorgon",
  "alien",
  "nymph",
  "dryad",
  "naiad",
  "cyclops",
  "minotaur",
  "banshee",
  "sidhe",
  "naga",
  "satyr",
  "faun"
];
function getClass() {
  return classes[Math.floor(Math.random() * classes.length)];
}
const classes = [
  "warrior",
  "mage",
  "thief",
  "bard",
  "wizard",
  "sorcerer",
  "warlock",
  "witch",
  "barbarian",
  "knight",
  "gladiator",
  "assassin",
  "priest",
  "cleric",
  "jester",
  "noble",
  "merchant",
  "sage",
  "acrobat",
  "peasant",
  "tourist",
  "dancer",
  "artist",
  "gangster",
  "paladin",
  "soldier",
  "poet",
  "ranger",
  "hunter",
  "tailor",
  "blacksmith",
  "innkeeper",
  "healer",
  "alchemist",
  "pirate",
  "smuggler",
  "cavalier",
  "prisoner",
  "maid",
  "shaman",
  "monk",
  "ninja",
  "druid",
  "tax collector",
  "lumberjack",
  "fortuneteller",
  "spellsword",
  "sailor",
  "farmer",
  "runemaster",
  "scholar",
  "scribe",
  "scout",
  "Valkyrie",
  "samurai",
  "plague doctor",
  "necromancer",
  "miner",
  "monster tamer",
  "battlemage",
  "artificer",
  "aristocrat",
  "librarian",
  "janitor",
  "psion",
  "hermit",
  "pilgrim",
  "butler"
];
function getMonAdj() {
  return monadj[Math.floor(Math.random() * monadj.length)];
}
const monadj = [
  "sabertooth",
  "fire-breathing",
  "venomous",
  "gelatinous",
  "winged",
  "flame",
  "dancing",
  "radioactive",
  "mechanical",
  "vorpal",
  "tentacled",
  "eldritch",
  "ethereal",
  "drooling",
  "nightmare",
  "magical",
  "floating",
  "rabid",
  "were-",
  "screaming",
  "demonic",
  "angelic",
  "rotten",
  "twilight",
  "festering",
  "alien",
  "fungal",
  "giant",
  "writhing",
  "pustulent",
  "rainbow",
  "possessed",
  "feral",
  "fiendish",
  "prismatic",
  "furry",
  "verbose",
  "psionic",
  "carnivorous",
  "mummified",
  "glowing",
  "snow",
  "drunken",
  "primordial",
  "majestic",
  "storm",
  "acid",
  "frost",
  "shadow",
  "doom",
  "celestial",
  "hollow",
  "mountain",
  "eight-legged",
  "one-eyed",
  "shambling",
  "weeping",
  "demented",
  "phantom",
  "ancient",
  "skeletal",
  "lightning",
  "thunder",
  "ravenous",
  "steam",
  "river",
  "ocean",
  "cloud",
  "star",
  "armored",
  "ferocious",
  "voodoo",
  "sea",
  "fluffy",
  "sand",
  "lava",
  "chaos",
  "solar",
  "lunar",
  "void",
  "mythical",
  "magma",
  "crystalline",
  "stone",
  "golden",
  "vampiric",
  "undead",
  "mutant",
  "polar",
  "swamp",
  "gnarled",
  "twisted",
  "toxic",
  "cave",
  "chocolate",
  "flatulent",
  "bloated",
  "insane",
  "metal",
  "deformed"
];
function getMonType() {
  return montype[Math.floor(Math.random() * montype.length)];
}
const montype = [
  "lizard",
  "dravune",
  "spider",
  "slime",
  "gremlin",
  "tree",
  "vine",
  "dragon",
  "grandma",
  "vortex",
  "ghost",
  "moth",
  "monkey",
  "bear",
  "beholder",
  "puppet",
  "wolf",
  "lemming",
  "clock",
  "baby",
  "gorgon",
  "wyvern",
  "wraith",
  "manticore",
  "sphinx",
  "centipede",
  "behemoth",
  "velociraptor",
  "cockroach",
  "lion",
  "wombat",
  "sheep",
  "banana",
  "pudding",
  "leech",
  "tarantula",
  "golem",
  "mimic",
  "orc",
  "goblin",
  "guardian",
  "goose",
  "eyeball",
  "hawk",
  "raven",
  "mole",
  "squid",
  "hand",
  "ghoul",
  "unicorn",
  "balrog",
  "pumpkin",
  "warthog",
  "shrimp",
  "mushroom",
  "jackal",
  "carrot",
  "tongue",
  "minotaur",
  "doll",
  "crustacean",
  "genie",
  "horror",
  "slug",
  "snail",
  "worm",
  "wyrm",
  "cactus",
  "kudzu",
  "flower",
  "fog",
  "wisp",
  "wasp",
  "bee",
  "assassin",
  "viper",
  "cobra",
  "rat",
  "beetle",
  "tiger",
  "armadillo",
  "statue",
  "blob",
  "turtle",
  "fishman",
  "abomination",
  "suit of armor",
  "skull",
  "titan",
  "cadaver",
  "frog",
  "phoenix",
  "turd",
  "brain",
  "heart",
  "platypus",
  "panda",
  "mirror",
  "octopus",
  "banshee",
  "shark"
];
function getTrap() {
  return trap[Math.floor(Math.random() * trap.length)];
}
const trap = [
  "poison dart",
  "swinging axe blade",
  "falling boulder",
  "poison gas",
  "rolling log",
  "moving wall",
  "spiked wall",
  "spiked pit",
  "electric shock",
  "incineration",
  "fireball",
  "ice spikes",
  "earthquake",
  "paralysis",
  "hallucination",
  "summon monster",
  "life drain",
  "sleeping gas",
  "mental daze",
  "spirit lock",
  "screaming baby",
  "blindness",
  "searing flame",
  "crumbling floor",
  "alarm"
];
function getMetal() {
  return metal[Math.floor(Math.random() * metal.length)];
}
const metal = [
  "copper",
  "bronze",
  "lead",
  "iron",
  "steel",
  "black steel",
  "silvered steel",
  "silver",
  "gold",
  "platinum",
  "mythril",
  "adamantine",
  "orichalchum",
  "dragon metal",
  "demonite",
  "angelite",
  "jewel-encrusted",
  "bone",
  "ivory",
  "ceramic",
  "crystal",
  "glass",
  "coral"
];
function getItemAdj() {
  return itemadj[Math.floor(Math.random() * itemadj.length)];
}
const itemadj = [
  "glowing",
  "magical",
  "finely crafted",
  "cheap",
  "deadly",
  "rusty",
  "broken",
  "superior",
  "legendary",
  "epic",
  "cursed",
  "blessed",
  "reinforced",
  "royal",
  "ominous",
  "holy",
  "evil",
  "mighty",
  "glimmering",
  "radiant",
  "glorious",
  "slimy",
  "impervious",
  "corrosive",
  "cruel",
  "menacing",
  "valiant",
  "vicious",
  "sturdy",
  "shining",
  "talking",
  "vorpal",
  "dainty",
  "razor-sharp",
  "heavy",
  "light",
  "engraved",
  "stunning",
  "ancient",
  "mythical",
  "mystical",
  "enchanted",
  "runic",
  "jeweled",
  "prismatic"
];
function getMetalItem() {
  return metalitem[Math.floor(Math.random() * metalitem.length)];
}
const metalitem = [
  "dagger",
  "knife",
  "throwing knife",
  "shuriken",
  "chakhram",
  "short sword",
  "longsword",
  "broadsword",
  "claymore",
  "zweihander",
  "bastard sword",
  "falchion",
  "rapier",
  "epee",
  "kukri",
  "trident",
  "katana",
  "wakizashi",
  "cutlass",
  "scimitar",
  "main gauche",
  "nodachi",
  "tanto",
  "naginata",
  "spear",
  "pike",
  "javelin",
  "hand axe",
  "battle axe",
  "halberd",
  "mace",
  "flail",
  "morningstar",
  "hammer",
  "pickaxe",
  "stiletto",
  "hatchet",
  "breastplate",
  "helmet",
  "horned helmet",
  "helm",
  "hauberk",
  "cuirass",
  "pair of gauntlets",
  "pair of bracers",
  "pair of greaves",
  "pair of vambraces",
  "pair of boots",
  "chainmail",
  "platemail",
  "scale mail",
  "shield",
  "spiked shield",
  "kite shield",
  "tower shield",
  "chalice",
  "goblet",
  "amulet",
  "necklace",
  "ring",
  "bracelet",
  "circlet",
  "crown",
  "sword-breaker"
];
function getLeather() {
  return leather[Math.floor(Math.random() * leather.length)];
}
const leather = [
  "leather",
  "studded leather",
  "brigandine",
  "snakeskin",
  "sharkskin"
];
function getLeatherItem() {
  return leatheritem[Math.floor(Math.random() * leatheritem.length)];
}
const leatheritem = [
  "breastplate",
  "cap",
  "hat",
  "jerkin",
  "jacket",
  "hauberk",
  "cuirass",
  "pair of gauntlets",
  "pair of gloves",
  "pair of bracers",
  "pair of greaves",
  "pair of vambraces",
  "pair of boots",
  "pair of shoes",
  "quiver",
  "whip",
  "belt",
  "buckler",
  "satchel",
  "backpack",
  "bag",
  "purse"
];
function getItemMod() {
  return itemmod[Math.floor(Math.random() * itemmod.length)];
}
const itemmod = [
  "doom",
  "flame",
  "ice",
  "frost",
  "lightning",
  "thunder",
  "storms",
  "poison",
  "venom",
  "acid",
  "the waves",
  "the wind",
  "earthquakes",
  "the sun",
  "the moon",
  "the stars",
  "the night",
  "the raven",
  "the wolf",
  "the falcon",
  "the bear",
  "the fox",
  "the llama",
  "the tiger",
  "the lion",
  "the eagle",
  "the owl",
  "the spider",
  "the platypus",
  "the penguin",
  "the dragon",
  "Heaven",
  "Hell",
  "the apocalypse",
  "darkness",
  "shadows",
  "light",
  "mystery",
  "Zeus",
  "Ares",
  "Hades",
  "Artemis",
  "Apollo",
  "Poseidon",
  "Hermes",
  "Hephaestus",
  "Aphrodite",
  "Kali",
  "Vishnu",
  "Shiva",
  "Ra",
  "Osiris",
  "Isis",
  "Bastet",
  "Horus",
  "Thoth",
  "Anubis",
  "Hathor",
  "Thor",
  "Odin",
  "Freyr",
  "Freya",
  "Loki",
  "Valhalla",
  "Nyx",
  "Cthulhu",
  "invisibility",
  "healing",
  "the deep",
  "slime",
  "flatulence",
  "thorns",
  "life stealing",
  "silence",
  "disruption",
  "seeking",
  "wailing",
  "karma",
  "fate",
  "time",
  "chaos",
  "magic draining",
  "vomiting",
  "dreams",
  "dragon slaying",
  "banish undead",
  "troll slaying",
  "goblin slaying",
  "orc slaying",
  "ogre slaying",
  "demon slaying",
  "the void",
  "immortality",
  "invincibility",
  "anger",
  "love",
  "war",
  "grief",
  "fear",
  "mercy",
  "nightmares",
  "gravity",
  "twilight",
  "plague",
  "hallucination"
];
function getWood() {
  return wood[Math.floor(Math.random() * wood.length)];
}
const wood = [
  "pine",
  "birch",
  "cherrywood",
  "chestnut",
  "oak",
  "spruce",
  "poplar",
  "beech",
  "applewood",
  "elm",
  "hickory",
  "larch",
  "mulberry",
  "cedar",
  "yew",
  "redwood",
  "ivory",
  "ebony",
  "bone",
  "teak",
  "mahogany"
];
function getWoodItem() {
  return wooditem[Math.floor(Math.random() * wooditem.length)];
}
const wooditem = [
  "shortbow",
  "longbow",
  "crossbow",
  "staff",
  "quarterstaff",
  "bo-staff",
  "round shield",
  "wand",
  "rod",
  "cudgel",
  "club",
  "spear",
  "flute",
  "box"
];
function getMagicItem() {
  return magicitem[Math.floor(Math.random() * magicitem.length)];
}
const magicitem = [
  "scroll",
  "spellbook",
  "staff",
  "wand",
  "potion",
  "ring"
];
function getSpell() {
  return spell[Math.floor(Math.random() * spell.length)];
}
const spell = [
  "fireball",
  "magic missile",
  "ice spikes",
  "lightning",
  "earthquake",
  "rockslide",
  "wind gust",
  "tornado",
  "lava",
  "glacier",
  "acid rain",
  "holy flame",
  "sunburst",
  "plasma flare",
  "featherfall",
  "light",
  "reveal traps",
  "purify",
  "healing",
  "polymorph self",
  "polymorph other",
  "cure poison",
  "cure disease",
  "resurrect",
  "teleport",
  "locate stairs",
  "locate monsters",
  "invisibility",
  "summon monster",
  "water walking",
  "water breathing",
  "charm monster",
  "stone skin",
  "petrify",
  "open door",
  "astral projection",
  "protection from fire",
  "protection from ice",
  "protection from lightning",
  "protection from earth",
  "curse",
  "bless",
  "banish undead",
  "growth",
  "shrink",
  "animal friendship",
  "giant strength",
  "celerity",
  "transmutation",
  "language translation",
  "stun",
  "animate object",
  "plant control",
  "animal control"
];
function getElement() {
  return element[Math.floor(Math.random() * element.length)];
}
const element = [
  "fire",
  "ice",
  "frost",
  "water",
  "lightning",
  "wind",
  "earth",
  "acid",
  "poison",
  "holy",
  "evil",
  "chaos",
  "void",
  "steam",
  "fate",
  "time",
  "shadow",
  "doom",
  "light",
  "nature"
];
function getGem() {
  return gem[Math.floor(Math.random() * gem.length)];
}
const gem = [
  "diamond",
  "ruby",
  "emerald",
  "sapphire",
  "amethyst",
  "topaz",
  "opal",
  "onyx",
  "garnet",
  "peridot",
  "alexandrite",
  "amber",
  "jade",
  "aquamarine",
  "turquoise",
  "pearl",
  "beryl",
  "black pearl",
  "tourmaline",
  "bloodstone",
  "moonstone",
  "spinel",
  "zircon",
  "carnelian",
  "quartz",
  "chrysoberyl",
  "citrine",
  "agate",
  "kyanite",
  "jasper",
  "lapis lazuli",
  "malachite",
  "obsidian",
  "sunstone",
  "tanzanite"
];
function getJewelry() {
  return jewelry[Math.floor(Math.random() * jewelry.length)];
}
const jewelry = [
  "necklace",
  "bracelet",
  "ring",
  "pendant",
  "pair of earrings",
  "anklet",
  "circlet",
  "crown"
];
function getClothingColor() {
  return clcolor[Math.floor(Math.random() * clcolor.length)];
}
const clcolor = [
  "red",
  "orange",
  "yellow",
  "green",
  "blue",
  "purple",
  "white",
  "black",
  "brown",
  "pink",
  "magenta",
  "maroon",
  "violet",
  "tangerine",
  "turquoise",
  "teal",
  "cyan",
  "cerulean",
  "chartreuse",
  "mauve",
  "fuchsia",
  "beige",
  "tan",
  "gray",
  "olive green",
  "goldenrod",
  "silver",
  "indigo",
  "forest green",
  "rainbow colored",
  "polka-dotted",
  "plaid",
  "paisley",
  "checkered",
  "striped",
  "khaki",
  "camouflage"
];
function getFabric() {
  return fabric[Math.floor(Math.random() * fabric.length)];
}
const fabric = [
  "cotton",
  "wool",
  "linen",
  "silk",
  "satin",
  "lace",
  "burlap",
  "cashmere",
  "spidersilk",
  "muslin",
  "taffeta",
  "brocade",
  "terrycloth",
  "felt",
  "velvet",
  "fur-lined",
  "hemp"
];
function getGarment() {
  return garment[Math.floor(Math.random() * garment.length)];
}
const garment = [
  "tunic",
  "pair of breeches",
  "loincloth",
  "doublet",
  "cloak",
  "wizard's robe",
  "bathrobe",
  "surcoat",
  "tabard",
  "pair of trousers",
  "skirt",
  "dress",
  "gown",
  "pair of socks",
  "pair of gloves",
  "top hat",
  "waistcoat",
  "kilt",
  "cummerbund",
  "bowtie",
  "necktie",
  "tuxedo",
  "kimono",
  "karate gi",
  "pair of toe socks",
  "sarong",
  "scarf",
  "pair of legwarmers",
  "trenchcoat",
  "pair of shorts",
  "pair of leggings",
  "blouse",
  "sweater",
  "cardigan",
  "wizard's hat",
  "feathered hat",
  "tutu",
  "cape"
];
function getMiscItem() {
  return misc[Math.floor(Math.random() * misc.length)];
}
const misc = [
  "a quiver of arrows",
  "some gold coins",
  "a pile of rations",
  "a cheese wheel",
  "a few apples",
  "a loaf of stale bread",
  "a magic lamp",
  "some torches",
  "a set of lockpicks",
  "a magical harp",
  "a half-eaten ham sandwich",
  "a roast turkey",
  "several carrots",
  "a fruitcake",
  "a crystal skull",
  "a stone tablet",
  "some runestones",
  "an empty flask",
  "a broom",
  "a pair of scissors",
  "a mop",
  "a clown nose",
  "a raven totem",
  "a pig totem",
  "a wolf totem",
  "a fox totem",
  "an eagle totem",
  "a roc feather",
  "a bat wing",
  "an old painting",
  "a tinderbox",
  "a lantern",
  "a treasure map",
  "a rope",
  "a violin",
  "a lute",
  "a shrunken head",
  "an accordion",
  "some magic beans"
];
function getLootPlace() {
  return lootplace[Math.floor(Math.random() * lootplace.length)];
}
const lootplace = [
  "You open an old wooden treasure chest and find",
  "In an old wooden chest, you find",
  "Peering into a dark corner, you see a dusty shelf containing",
  "You see something glinting in a dark alcove. Looking closer, you find",
  "You trip over",
  "In a pile of junk, you find",
  "You find a barrel containing",
  "You notice a large canvas bag lying around. Inside it, you find",
  "A stone seems to be missing from the wall. Inside the hole, you find",
  "You notice an ancient altar containing",
  "Lying atop an intricately carved pedestal, you see",
  "Finding an old clay pot lying around, you reach inside and pull out"
];

const item = [
  `${getItemAdj()} ${getMetal()} ${getMetalItem()}.`,
  `${getMetal()} ${getMetalItem()} of ${getItemMod()}.`,
  `${getItemAdj()} ${getMetal()} ${getMetalItem()} of ${getItemMod()}.`,
  `${getMetal()} ${getMetalItem()} of ${getElement()}.`,
  `${getMetal()} ${getMetalItem()} of protection from ${getElement()}.`,
  `${getMetal()} ${getMetalItem()} of ${getSpell()}`,
  `${getItemAdj()} ${getMetal()} ${getMetalItem()} of ${getElement()}.`,
  `${getItemAdj()} ${getMetal()} ${getMetalItem()} of protection from ${getElement()}.`,
  `${getItemAdj()} ${getMetal()} ${getMetalItem()} of ${getSpell()}`,
  `${getLeather()} ${getLeatherItem()}.`,
  `${getItemAdj()} ${getLeather()} ${getLeatherItem()}.`,
  `${getLeather()} ${getLeatherItem()} of ${getItemMod()}.`,
  `${getItemAdj()} ${getLeather()} ${getLeatherItem()} of ${getItemMod()}.`,
  `${getLeather()} ${getLeatherItem()} of ${getElement()}.`,
  `${getLeather()} ${getLeatherItem()} of protection from ${getElement()}.`,
  `${getLeather()} ${getLeatherItem()} of ${getSpell()}.`,
  `${getItemAdj()} ${getLeather()} ${getLeatherItem()} of ${getElement()}.`,
  `${getItemAdj()} ${getLeather()} ${getLeatherItem()} of protection from ${getElement()}.`,
  `${getItemAdj()} ${getLeather()} ${getLeatherItem()} of ${getSpell()}.`,
  `${getWood()} ${getWoodItem()}.`,
  `${getItemAdj()} ${getWood()} ${getWoodItem()}.`,
  `${getWood()} ${getWoodItem()} of ${getItemMod()}.`,
  `${getItemAdj()} ${getWood()} ${getWoodItem()} of ${getItemMod()}.`,
  `${getWood()} ${getWoodItem()} of ${getElement()}.`,
  `${getWood()} ${getWoodItem()} of protection from ${getElement()}.`,
  `${getWood()} ${getWoodItem()} of ${getSpell()}.`,
  `${getItemAdj()} ${getWood()} ${getWoodItem()} of ${getElement()}.`,
  `${getItemAdj()} ${getWood()} ${getWoodItem()} of protection from ${getElement()}.`,
  `${getItemAdj()} ${getWood()} ${getWoodItem()} of ${getSpell()}.`,
  `${getMagicItem()} of ${getSpell()}.`,
  `${getClothingColor()} orb of ${getElement()}.`,
  `${getClothingColor()} orb of ${getSpell()}.`,
  `${getMetal()} and ${getGem()} ${getJewelry()}.`,
  `${getLeather()} quiver full of ${getWood()} arrows.`,
  `${getClothingColor()} ${getFabric()} ${getGarment()}.`
]
function getRandomItem() {
  return item[Math.floor(Math.random() * item.length)];
}

// PASTE THIS ENTIRE BLOCK AFTER THE AUTOCARDS FUNCTION IN YOUR LIBRARY
// ==================================================================

(function() {
    'use strict';

    // --- MASTER CONTROL SWITCHES ---
    const enableFormatter = true; 
    // const enableSAE = true; 

    // --- SHARED AC API INSTANCE ---
    let sharedAcAPI = null;

    // --- HELPER FUNCTION FOR IN-BODY SYSTEM MESSAGES ---
    function formatSystemMessage(messageContent) {
       return `\n\n[SYSTEM-MSG-START]\n${messageContent.trim()}\n[SYSTEM-MSG-END]\n\n`;
    }
    // --- TEXT SIMILARITY SCORE FUNCTION ---
    function textSimilarityScore(strA, strB) {
        if (strA === strB) return 1;
        const cleanA = (strA || "").replace(/[0-9\s]/g, " ").trim().replace(/  +/g, " ").toLowerCase();
        const cleanB = (strB || "").replace(/[0-9\s]/g, " ").trim().replace(/  +/g, " ").toLowerCase();
        if (cleanA === cleanB) return 1;
        const lengthA = cleanA.length; const lengthB = cleanB.length;
        if (lengthA === 0 || lengthB === 0) return 0;
        const dp = Array(lengthA + 1).fill(null).map(() => Array(lengthB + 1).fill(0));
        for (let i = 0; i <= lengthA; i++) dp[i][0] = i;
        for (let j = 0; j <= lengthB; j++) dp[0][j] = j;
        for (let i = 1; i <= lengthA; i++) {
            for (let j = 1; j <= lengthB; j++) {
                dp[i][j] = (cleanA[i - 1] === cleanB[j - 1]) ? dp[i-1][j-1] : 1 + Math.min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]);
            }
        }
        return 1 - (dp[lengthA][lengthB] / Math.max(lengthA, lengthB || 1));
    }

    // —————————————————————————————————————————————————————————————————————————————————
    // MODULE: Text Formatter
    // —————————————————————————————————————————————————————————————————————————————————
    const Formatter = {
        defaults: {
            isEnabled: true, enableClicheRemover: true, enableRandomReplacer: true, enableRepetitionRemover: true,
            aggressive_delete: [ "casting long shadows", "Well, well, well", "knuckles go white", "taps her nails", "tapping her nails", "her fingers idly tapping", "Her fingers tap", "fingers drum", "fingers drumming idly", "Her fingers drum idly against the desk", "Her fingers tap idly against the desk", "tapping two fingers", "the cool air in the room making her skin prickle with goosebumps.", "You're something else", "You're full of surprises, aren't you?", "Knuckles white", "manicured nails", "knuckles whiten", "knuckles have turned stark white", "knuckles are bone-white", "knuckles are a stark white", "knuckles turn a stark white", "knuckles have turned a ghostly white", "knuckles are stark white", "knuckles turn stark white", "knuckles turn white", "Knuckles turning white", "knuckles turn a ghostly white", "little mortal", "glinting with mischief", "like a predator circling its prey", "casting long, angular shadows", "The morning sun cast long shadows", "The morning sun cast a warm glow", "practiced ease", "jaw clenching", "dim light", "speaking softly", "Intense", "A chill runs down your spine", "with messy dark hair", "casts a golden hue", "casts a warm glow", "casts long shadows", "ice queen", "look what the cat dragged in", "cat dragged in", "messy brown hair", "Piece of work", "cacophony", "predatory", "cocoon", "folded note", "crumpled piece of paper", "cast long shadows", "panties in a twist", "You've got some balls on you", "The morning sunlight filters through the windows, casting long shadows across the floor.", "the air is thick", "words hang heavy in the air", "The atmosphere is thick with", "you can't help", "Well, aren't you just full of surprises", "your heart beats", "your mind wanders", "voice crackles with", "dimly lit", "sweetheart", "a stark contrast", "a twisted sense of", "breath hot on your face", "hangs in the air", "feel a chill run down your spine", "shiver down your spine", "shiver up your spine", "your voice a mix of", "a wave of", "voice just above a whisper", "eyes gleaming with", "a mixture of surprise and curiosity", "pride and accomplishment", "jolt of electricity", "glowing with an otherworldly light", "smile playing at the corners of his lips", "smile playing at the corners of her lips", "face contorts with anger", "eyes glistening with unshed tears", "unshed tears", "intricately carved wooden box", "the tension in the room is palpable", "hips swaying enticingly", "takes a step closer", "brushes a stray hair from your face", "face set in a grim mask", "mouth set in a grim line", "hand resting on the hilt of his sword", "hand instinctively goes to the hilt of his sword", "the hum of machinery", "merely a pawn in a much larger game", "this changes everything", "could Have fooled me", "but tinged with" ],
            precise_delete: [ "looming ominously" ],
            replace: [ ["verdant", "green"], ["curtly", "shortly"], ["leverage", "use"], ["robust", "strong"], ["unprecedented", "new"], ["myriad", "many"], ["commence", "start"], ["ascertain", "find out"], ["endeavor", "try"], ["utilize", "use"], ["facilitate", "help"], ["plethora", "a lot"], ["elucidate", "explain"], ["exemplify", "show"], ["paradigm", "model"], ["synergy", "teamwork"], ["traverse", "cross"], ["illuminate", "explain"], ["manifest", "show"], ["intricate", "complex"], ["subsequent", "next"], ["procure", "get"], ["amidst", "among"], ["visage", "face"], ["peruse", "read"], ["cascade", "flow"], ["linger", "stay"], ["fervor", "excitement"], ["tranquil", "calm"], ["emanate", "come from"], ["beckon", "call"], ["venture", "go"], ["gaze", "look"], ["inquire", "ask"], ["exclaim", "shout"], ["murmur", "whisper"] ],
            name_replace: [ ["Li1ly", "Lorelei"], ["Lisf42a", "Larisa"], ["Sa1lawt", "Solène"], ["J32ake", "Jasper"], ["A14lx", "Abel"] ],
            randomReplacementGroups: [ { phrase: "Elara", options: [ "Areal", "Leara", "Alrea", "Reala", "Vaila", "Ealra", "Alear", "Alare", "Aaerl", "Alare", ] }, { phrase: "Sarah", options: [ "Amelia", "Evelyn", "Ashley", "Violet", "Elsie", "Lucy", "Jane", "Rebecca", "Madison", "Rachel", "Vanessa", "Mia", "Elsie", "Chloe", "Alice", "Emily", "Emma" ] }, { phrase: "Mr. Thompson", options: [ "Mr. Aldridge", "Mr. Barrington", "Mr. Kessler", "Mr. Coldwell", "Mr. Davenport", "Mr. Ellsworth", "Mr. Fairchild", "Mr. Hargrove", "Mr. Quillson", "Mr. Ainsworth", "Mr. Kensington", "Mr. Lancaster", "Mr. Montague", "Mr. Norwood", "Mr. Pennington", "Mr. Radcliffe", "Mr. Somerville", "Mr. Wentworth" ] }, { phrase: "Mrs. Thompson", options: [ "Mrs. Ashbourne", "Mrs. Blythe", "Mrs. Carrington", "Mrs. Dovewell", "Mrs. Everhart", "Mrs. Fenwick", "Mrs. Islington", "Mrs. Lockridge", "Mrs. Jasmere", "Mrs. Sterling", "Mrs. Claremont", "Mrs. Iverson", "Mrs. Quillan", "Mrs. Rosendale", "Mrs. Valmere" ] }, { phrase: "Ms. Thompson", options: [ "Ms. Durnell", "Ms. Blythe", "Ms. Everston", "Ms. Dovewell", "Ms. Everhart", "Ms. Fenwick", "Ms. Morrow", "Ms. Lockridge", "Ms. Jasmere", "Ms. Sterling", "Ms. Claremont", "Ms. Nightford", "Ms. Quillan", "Ms. Rosendale", "Ms. Valmere" ] } ],
            initialized: true
        },
        initialize: function(acAPI) {this.acAPI = acAPI; if (!state.formatter || !state.formatter.initialized) {state.formatter = JSON.parse(JSON.stringify(this.defaults));} else {for(const key in this.defaults){if(state.formatter[key]===undefined){state.formatter[key]=JSON.parse(JSON.stringify(this.defaults[key]));}} state.formatter.initialized = true;}},
        updateAndCreateCards: function() {if (!this.acAPI)return;const cT="Formatter Settings";const d="---";let sC=this.acAPI.getCard(c=>c&&c.title===cT);if(!sC){sC=this.acAPI.buildCard({title:cT,entry:"",keys:"formatter-settings",description:""});if(!sC)return;}const e=sC.entry||"";const pB=(t,k,f)=>{const m=t.match(new RegExp(`>\\s*${k}:\\s*(true|false)`,'i'));return m?(m[1].toLowerCase()==='true'):f;};state.formatter.isEnabled=pB(e,"isEnabled",state.formatter.isEnabled !== undefined ? state.formatter.isEnabled : this.defaults.isEnabled);state.formatter.enableClicheRemover=pB(e,"enableClicheRemover",state.formatter.enableClicheRemover !== undefined ? state.formatter.enableClicheRemover : this.defaults.enableClicheRemover);state.formatter.enableRandomReplacer=pB(e,"enableRandomReplacer",state.formatter.enableRandomReplacer !== undefined ? state.formatter.enableRandomReplacer : this.defaults.enableRandomReplacer);state.formatter.enableRepetitionRemover=pB(e,"enableRepetitionRemover",state.formatter.enableRepetitionRemover !== undefined ? state.formatter.enableRepetitionRemover : this.defaults.enableRepetitionRemover);const desc=sC.description||"";const dS=desc.split(d);const fH="Fixed Name Replacements:";const fT=dS.find(s=>s.trim().startsWith(fH))?.substring(fH.length).trim();if(fT){const p=fT.split(',').map(i=>{const pair=i.split('=').map(x=>x.trim());return pair.length===2?pair:null;}).filter(Boolean);state.formatter.name_replace=p.length>0?p:JSON.parse(JSON.stringify(this.defaults.name_replace));}else{state.formatter.name_replace=JSON.parse(JSON.stringify(this.defaults.name_replace));}const rH="Random Name Replacements:";const rB=dS.find(s=>s.trim().startsWith(rH));const rT=rB?.substring(rH.length).trim();if(rT){const p=rT.split('\n').map(l=>{l=l.trim();if(!l)return null;const pts=l.split(':');if(pts.length<2)return null;const ph=pts[0].trim();const op=pts.slice(1).join(':').split('|').map(o=>o.trim()).filter(Boolean);if(!ph||op.length===0)return null;return{phrase:ph,options:op};}).filter(Boolean);state.formatter.randomReplacementGroups=p.length>0?p:JSON.parse(JSON.stringify(this.defaults.randomReplacementGroups));}else{state.formatter.randomReplacementGroups=JSON.parse(JSON.stringify(this.defaults.randomReplacementGroups));}const nE=`> isEnabled: ${state.formatter.isEnabled}\n> enableClicheRemover: ${state.formatter.enableClicheRemover}\n> enableRandomReplacer: ${state.formatter.enableRandomReplacer}\n> enableRepetitionRemover: ${state.formatter.enableRepetitionRemover}`;const nF=state.formatter.name_replace.map(p=>p.join('=')).join(', ');const nR=state.formatter.randomReplacementGroups.map(g=>`${g.phrase}:${g.options.join('|')}`).join('\n');const nD=`${fH} ${nF}\n${d}\n${rH}\n${nR}`;if(sC.entry!==nE)sC.entry=nE;if(sC.description!==nD)sC.description=nD;},
        format: function(text, context) {if(!state.formatter||!state.formatter.isEnabled||!text||typeof text!=='string')return text||'';const paras=text.split('\n\n');const procParas=paras.map(para=>{let p=para.trim();if(p.startsWith('"')&&p.endsWith('"')){if(state.formatter.name_replace){for(const [t,r]of state.formatter.name_replace)p=p.replace(new RegExp(this.escapeRegex(t),'gi'),r);}if(state.formatter.randomReplacementGroups)p=this.applyRandomReplacements(p);return p;}if(state.formatter.enableClicheRemover)p=this.delete_cliches(p);if(state.formatter.enableRandomReplacer)p=this.applyRandomReplacements(p);if(state.formatter.enableRepetitionRemover)p=this.removeRepeatedPhrases(p,context);return p;});let finTxt=procParas.filter(p=>p&&p.trim()!=="").join('\n\n');finTxt=this.removeEmptyQuotes(finTxt);return finTxt.trim();},
        delete_cliches: function(text){const aggr=(state.formatter?.aggressive_delete)??this.defaults.aggressive_delete;const prec=(state.formatter?.precise_delete)??this.defaults.precise_delete;const repl=(state.formatter?.replace)??this.defaults.replace;const nameRepl=(state.formatter?.name_replace)??this.defaults.name_replace;const sentences=text.match(/[^.!?]+[.!?]*\s*/g)||[text];let newText="";for(const sentence of sentences){let d=false;const trimS=sentence.trim();if(trimS===""){newText+=sentence;continue;}for(const ip of aggr){if(trimS.toLowerCase().includes(ip.toLowerCase())){d=true;break;}}if(!d){newText+=sentence;}}let filt=newText.trim()?newText:text;if(filt.trim()==="")return"";for(const p of prec)filt=filt.replace(new RegExp(this.escapeRegex(p),'gi'),'');for(const [t,r]of repl)filt=filt.replace(new RegExp(this.escapeRegex(t),'gi'),r);for(const [t,r]of nameRepl)filt=filt.replace(new RegExp(this.escapeRegex(t),'gi'),r);return filt;},
        applyRandomReplacements: function(text){const groups=(state.formatter?.randomReplacementGroups)??this.defaults.randomReplacementGroups;groups.forEach(g=>{if(!g.phrase||!g.options||g.options.length===0)return;const rgx=new RegExp('(?<![\\w-])'+this.escapeRegex(g.phrase)+'(?![\\w-])','gi');if(rgx.test(text)){const r=g.options[Math.floor(Math.random()*g.options.length)];text=text.replace(rgx,r);}});return text;},
        removeRepeatedPhrases: function(out,ctx,minWL=6){const cln=(t)=>(t?t.toString().trim().replace(/\s+/g,' '):'');out=cln(out);ctx=cln(ctx);if(!out||!ctx)return out;const w=out.split(' ');if(w.length<minWL)return out;const rm=new Set();for(let l=minWL;l<=Math.min(w.length,10);l++){for(let i=0;i<=w.length-l;i++){const phr=w.slice(i,i+l).join(' ');if(phr.length<15&&l<4)continue;if(ctx.includes(phr))rm.add(phr);}}let filt=out;rm.forEach(p=>{filt=filt.replace(new RegExp('\\b'+this.escapeRegex(p)+'\\b','g'),'');});return filt.replace(/\s+/g,' ').trim();},
        removeEmptyQuotes: function(text){return text.replace(/"\s*"/g,"").replace(/'\s*'/g,"");},
        escapeRegex: function(str){if(typeof str!=='string')return'';return str.replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');}
    };

    // —————————————————————————————————————————————————————————————————————————————————
    // MODULE: SIMPLIFIED TIME TRACKER (STT)
    // —————————————————————————————————————————————————————————————————————————————————
    const STT = {
        daysOfWeek:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],defaultSettings:{isEnabled:true,timePassOnDo:5,timePassOnSay:1,timePassOnStory:5,timePassOnContinue:5,pinSettingsCard:true,showTimeTimestamp:false,timeTimestampFrequency:1,showDateTimestamp:false,dateTimestampFrequency:5,useToastForTimestamps:true,gameHour:7,gameMinute:11,dayOfMonth:1,month:1,year:100,dayOfWeek:1,timeSkipInfo:null,initialized:true},
        initialize:function(acAPI){
            this.acAPI = acAPI;
            let needsDateRecalc = false;
            if (!state.stt || !state.stt.initialized) {
                state.stt = JSON.parse(JSON.stringify(this.defaultSettings));
                needsDateRecalc = true;
            } else {
                for (const key in this.defaultSettings) {
                    if (state.stt[key] === undefined) {
                        state.stt[key] = JSON.parse(JSON.stringify(this.defaultSettings[key]));
                        if (['gameHour', 'gameMinute', 'dayOfMonth', 'month', 'year'].includes(key)) {
                            needsDateRecalc = true;
                        }
                    }
                }
            }
            state.stt.initialized = true;

            try {
                const currentDate = new Date(
                    state.stt.year, state.stt.month, state.stt.dayOfMonth,
                    state.stt.gameHour, state.stt.gameMinute
                );
                if (isNaN(currentDate.getTime())) {
                    // Simplified error handling for cleaned version
                    console.warn("STT.initialize: Invalid date in state. Resetting.");
                    state.stt = JSON.parse(JSON.stringify(this.defaultSettings));
                    const validDefaultDate = new Date(state.stt.year, state.stt.month, state.stt.dayOfMonth);
                    state.stt.dayOfWeek = validDefaultDate.getDay();
                } else if (needsDateRecalc || state.stt.dayOfWeek !== currentDate.getDay()) {
                    state.stt.dayOfWeek = currentDate.getDay();
                }
            } catch (e) {
                console.error("STT.initialize: Date validation error. Resetting.", e);
                state.stt = JSON.parse(JSON.stringify(this.defaultSettings));
                const validDefaultDate = new Date(state.stt.year, state.stt.month, state.stt.dayOfMonth);
                state.stt.dayOfWeek = validDefaultDate.getDay();
            }
        },
        updateSettingsFromCard:function(){if(!this.acAPI)return;if(!state.stt)state.stt=JSON.parse(JSON.stringify(this.defaultSettings));const sc=this.acAPI.getCard(c=>c&&c.title==="Time Tracker Settings");if(!sc||!sc.entry)return;const et=sc.entry;const gV=(rgx,fb,isB=false)=>{const m=et.match(rgx);if(m&&m[1]!==undefined){if(isB)return m[1].toLowerCase()==='true';const pN=parseInt(m[1]);return Number.isFinite(pN)?pN:fb;}return fb;};state.stt.isEnabled=gV(/isEnabled:\s*(true|false)/i,state.stt.isEnabled !== undefined ? state.stt.isEnabled : this.defaultSettings.isEnabled,true);state.stt.timePassOnDo=gV(/timePassOnDo:\s*(\d+)/i,state.stt.timePassOnDo !== undefined ? state.stt.timePassOnDo : this.defaultSettings.timePassOnDo);state.stt.timePassOnSay=gV(/timePassOnSay:\s*(\d+)/i,state.stt.timePassOnSay !== undefined ? state.stt.timePassOnSay : this.defaultSettings.timePassOnSay);state.stt.timePassOnStory=gV(/timePassOnStory:\s*(\d+)/i,state.stt.timePassOnStory !== undefined ? state.stt.timePassOnStory : this.defaultSettings.timePassOnStory);state.stt.timePassOnContinue=gV(/timePassOnContinue:\s*(\d+)/i,state.stt.timePassOnContinue !== undefined ? state.stt.timePassOnContinue : this.defaultSettings.timePassOnContinue);},
        checkAndCreateCards:function(){if(!this.acAPI)return;const t="Time Tracker Settings";let sc=this.acAPI.getCard(c=>c&&c.title===t);if(!sc){sc=this.acAPI.buildCard({title:t,entry:"",keys:"stt-settings",description:""});if(!sc)return;}const s=state.stt||this.defaultSettings;const nE=`> Settings below. Edit & act.\n> ---\n> isEnabled: ${s.isEnabled}\n> timePassOnDo: ${s.timePassOnDo}\n> timePassOnSay: ${s.timePassOnSay}\n> timePassOnStory: ${s.timePassOnStory}\n> timePassOnContinue: ${s.timePassOnContinue}`;const nD=`Mins/action. 0="free".\n\nCmds:\n/settime HH:MM\n/setdate YYYY-MM-DD\n/defer N unit\n/wait until [time]`;if(sc.entry!==nE)sc.entry=nE;if(sc.description!==nD)sc.description=nD;},
        advanceInGameTime:function(mins){
            if(!state.stt||!state.stt.isEnabled||typeof mins!=='number'||!Number.isFinite(mins)||mins<=0)return;
            const cY=Number.isFinite(state.stt.year)?state.stt.year:this.defaultSettings.year; const cMo=Number.isFinite(state.stt.month)?state.stt.month:this.defaultSettings.month; const cD=Number.isFinite(state.stt.dayOfMonth)?state.stt.dayOfMonth:this.defaultSettings.dayOfMonth; const cH=Number.isFinite(state.stt.gameHour)?state.stt.gameHour:this.defaultSettings.gameHour; const cMi=Number.isFinite(state.stt.gameMinute)?state.stt.gameMinute:this.defaultSettings.gameMinute; const OD=1440;
            if(mins>=OD){if(mins<OD*7)state.stt.timeSkipInfo="a few days";else if(mins<OD*30)state.stt.timeSkipInfo="several weeks";else if(mins<OD*365)state.stt.timeSkipInfo="several months";else state.stt.timeSkipInfo="several years";state.stt.timeSkipInfo+=" passed";}else{state.stt.timeSkipInfo=null;}
            const date=new Date(cY,cMo,cD,cH,cMi);
            if(isNaN(date.getTime())){
                console.warn("STT Error: Invalid date in advanceInGameTime. Resetting.");
                Object.assign(state.stt, JSON.parse(JSON.stringify(this.defaultSettings)));
                const rD=new Date(state.stt.year,state.stt.month,state.stt.dayOfMonth,state.stt.gameHour,state.stt.gameMinute); state.stt.dayOfWeek=rD.getDay(); return;
            }
            date.setMinutes(date.getMinutes()+mins);
            state.stt.year=date.getFullYear();state.stt.month=date.getMonth();state.stt.dayOfMonth=date.getDate();state.stt.gameHour=date.getHours();state.stt.gameMinute=date.getMinutes();state.stt.dayOfWeek=date.getDay();
        },
        getDayNightStatus:function(){if(!state.stt||!Number.isFinite(state.stt.gameHour))return "Unknown";const h=state.stt.gameHour;if(h>=5&&h<12)return"Morning";if(h>=12&&h<17)return"Afternoon";if(h>=17&&h<21)return"Evening";return"Night";},
        getFormattedTime:function(inclDN=true){if(!state.stt||!Number.isFinite(state.stt.dayOfWeek)||!Number.isFinite(state.stt.month)||state.stt.dayOfWeek<0||state.stt.dayOfWeek>=this.daysOfWeek.length||state.stt.month<0||state.stt.month>=this.months.length)return"🕰️ Time data error";const pad=(n)=>String(Number.isFinite(n)?n:0).padStart(2,'0');const dN=this.daysOfWeek[state.stt.dayOfWeek];const mN=this.months[state.stt.month];let tS=`${dN}, ${mN} ${Number.isFinite(state.stt.dayOfMonth)?state.stt.dayOfMonth:1}, Year ${Number.isFinite(state.stt.year)?state.stt.year:1}, ${pad(state.stt.gameHour)}:${pad(state.stt.gameMinute)}`;if(inclDN)tS+=` (${this.getDayNightStatus()})`;return tS;},
        calculateMinutesUntilHour:function(tH){if(!state.stt||!Number.isFinite(state.stt.gameHour)||!Number.isFinite(state.stt.gameMinute)||!Number.isFinite(tH)||tH<0||tH>23)return 0;let cTM=(state.stt.gameHour*60)+state.stt.gameMinute;let tTM=tH*60;return(tTM<=cTM)?((1440)-cTM)+tTM:tTM-cTM;},
        handleInput:function(rawPlayerInput){ 
            let txt=rawPlayerInput;let cmdH=false;if(!state.stt)return{text:txt,commandHandled:false};
            const ci=rawPlayerInput.trim().toLowerCase(); 
            if(!state.stt.isEnabled)return{text:txt,commandHandled:false};
            if(ci.startsWith("/settime")){const m=rawPlayerInput.match(/(\d{1,2}):(\d{2})/);if(m){let [_,h,mm]=m.map(Number);if(h>=0&&h<=23&&mm>=0&&mm<=59){state.stt.gameHour=h;state.stt.gameMinute=mm;txt=formatSystemMessage(`✅ Time set: ${String(h).padStart(2,'0')}:${String(mm).padStart(2,'0')}`);}else{txt=formatSystemMessage("⚠️ Invalid time (H 0-23, M 0-59).");}}else{txt=formatSystemMessage("🤔 Use: /settime HH:MM");}cmdH=true;}
            else if(ci.startsWith("/setdate")){const m=rawPlayerInput.match(/(\d{4})-(\d{1,2})-(\d{1,2})/);if(m){const [_,y,mo,d]=m.map(Number);if(y>0&&mo>=1&&mo<=12&&d>=1&&d<=31){state.stt.year=y;state.stt.month=mo-1;state.stt.dayOfMonth=d;const tD=new Date(y,mo-1,d);state.stt.dayOfWeek=tD.getDay();txt=formatSystemMessage(`📅 Date set: Year ${y}, ${this.months[mo-1]} ${d}.`);}else{txt=formatSystemMessage("⚠️ Invalid date values.");}}else{txt=formatSystemMessage("🤔 Use: /setdate YYYY-MM-DD");}cmdH=true;}
            else if(ci.startsWith("/defer")){
                const m=rawPlayerInput.match(/\/defer\s+(\d+)\s*(minutes?|mins?|hours?|hrs?|days?|weeks?|wks?|months?|mos?|years?|yrs?)/i); 
                if(m){
                    const amt=parseInt(m[1]); const u=m[2]?.toLowerCase()??'minutes'; let mins=0; let dU=u;
                    if(u.startsWith('min')){mins=amt;dU=amt===1?"minute":"minutes";} else if(u.startsWith('h')){mins=amt*60;dU=amt===1?"hour":"hours";} else if(u.startsWith('d')){mins=amt*1440;dU=amt===1?"day":"days";} else if(u.startsWith('w')){mins=amt*10080;dU=amt===1?"week":"weeks";} else if(u.startsWith('mo')){mins=amt*43800;dU=amt===1?"month":"months";} else if(u.startsWith('y')){mins=amt*525600;dU=amt===1?"year":"years";}
                    if(mins > 0) { this.advanceInGameTime(mins); txt = formatSystemMessage(`⏩ Time advanced ${amt} ${dU}. New time: ${this.getFormattedTime()}`);
                    } else { if (amt > 0 && mins === 0) { txt = formatSystemMessage(`⚠️ Invalid unit for defer: '${u}'. Use minutes, hours, days, weeks, months, or years.`); } else { txt = formatSystemMessage("⚠️ Invalid amount or unit for defer. Amount must be positive."); } }
                } else { txt = formatSystemMessage("🤔 Use: /defer N unit (e.g. /defer 5 hours, /defer 10 mins)"); }
                cmdH=true;
            }
            else if(ci.startsWith("/wait until")){const m=rawPlayerInput.match(/\/wait\s+until\s+(morning|noon|afternoon|evening|night)/i);if(m){const tod=m[1].toLowerCase();let th;switch(tod){case'morning':th=6;break;case'noon':th=12;break;case'afternoon':th=14;break;case'evening':th=18;break;case'night':th=22;break;default:th=(state.stt.gameHour||0);}const mtw=this.calculateMinutesUntilHour(th);if(mtw>=0){this.advanceInGameTime(mtw);txt=formatSystemMessage(`🌅 Time is now ${tod}. Current: ${this.getFormattedTime()}`);}else{txt=formatSystemMessage("🤔 Error calculating wait.");}}else{txt=formatSystemMessage("🤔 Use: /wait until [morning/etc]");}cmdH=true;}
            return{text:txt,commandHandled:cmdH};
        },
        advanceTimeBasedOnAction: function(){
            if(!state.stt || !state.stt.isEnabled) {
                return;
            }

            const actionTypeToUse = state.currentActionTypeForTimeAdvance || 'continue'; 
            
            if (actionTypeToUse === 'system_command' || actionTypeToUse === 'system_message_ignored') { 
                state.currentActionTypeForTimeAdvance = 'continue'; 
                return;
            }

            let tp = 0;
            const s = state.stt;

            switch(actionTypeToUse){
                case 'do':
                    tp = Number.isFinite(s.timePassOnDo) ? s.timePassOnDo : 0;
                    break;
                case 'say':
                    tp = Number.isFinite(s.timePassOnSay) ? s.timePassOnSay : 0;
                    break;
                case 'story':
                    tp = Number.isFinite(s.timePassOnStory) ? s.timePassOnStory : 0;
                    break;
                case 'continue':
                case 'start': 
                    tp = Number.isFinite(s.timePassOnContinue) ? s.timePassOnContinue : 0; 
                    break;
                default:
                    // Intentionally no time passage for unknown types in cleaned version
            }

            if (tp > 0 && typeof tp === 'number' && Number.isFinite(tp)) {
                this.advanceInGameTime(tp);
            }
            state.currentActionTypeForTimeAdvance = 'continue'; 
        },
        appendTimestampsToText: function(txtToMod){if(!state.stt||!state.stt.isEnabled||typeof txtToMod!=='string')return txtToMod;const turn=(typeof info!=='undefined'&&Number.isFinite(state.turnCount))?state.turnCount:0;let tsStr="";const isSysOut=/\[SYSTEM-MSG-START\]|\[SYSTEM:.*\]|>>>|<<<|{>/.test(txtToMod.trim());if(state.stt.showDateTimestamp&&turn>0&&turn%state.stt.dateTimestampFrequency===0){tsStr+=` [📅 Date: ${this.getFormattedTime(false)}]`;}if(state.stt.showTimeTimestamp&&turn>0&&turn%state.stt.timeTimestampFrequency===0){tsStr+=` [⏰ Time: ${String(state.stt.gameHour||0).padStart(2,'0')}:${String(state.stt.gameMinute||0).padStart(2,'0')} (${this.getDayNightStatus()})]`;}if(tsStr){if(state.stt.useToastForTimestamps&&!isSysOut){if(!state.toastQueue)state.toastQueue=[];state.toastQueue.push(tsStr.trim());return txtToMod;}else if(!isSysOut){return`${txtToMod.trim()}\n${tsStr.trim()}`;}}return txtToMod;},
        handleContext: function(text) {
            if(!state.stt || !state.stt.isEnabled || typeof text!=='string') return text;
            let p = "";
            const formattedTimeForContext = this.getFormattedTime(); 

            if (state.stt.timeSkipInfo) {
                p = `\n[SYSTEM INFO: A skip of roughly ${state.stt.timeSkipInfo} occurred. New date: ${formattedTimeForContext}. Adapt the story to reflect this passage of time.]\n`;
                state.stt.timeSkipInfo = null;
            } else {
                p = `\n[Current In-Game Time: ${formattedTimeForContext}. If asked for the time, present it exactly in this format: "${formattedTimeForContext}". Ensure your narrative response is consistent with this time.]\n`;
            }

            const anM = text.match(/(\[Author's note:[\s\S]*?)(\])/i);
            if (anM) {
                return text.replace(anM[0], `${anM[1]}${p.trim()} ${anM[2]}`);
            }
            return text + p;
        }
    };


// —————————————————————————————————————————————————————————————————————————————————
// MODULE: STORY ARC ENGINE (SAE)- with mid game fix
// —————————————————————————————————————————————————————————————————————————————————
const SAE = { 
    defaults: { 
        isEnabled: false,
        turnsPerAICall: 50,
        arcPrompt: `\n[SYSTEM: Stop story. List 11 brief, chronological future events (under 7 words each). Focus on turning points/twists, adhering to specified tone/intensity.]\n`,
        arcTone: null,
        arcIntensity: null,
        toneChosen: false,
        intensityChosen: false,
        storyArc: [],
        activePointIndex: 0,
        completionSuggested: false,
        isGenerating: false,
        saveOutput: false,
        attemptCounter: 0,
        hasRunEarly: false,
        initialized: true,
        initialized_mid_game: undefined,
        trigger_initial_arc_on_load: false,
        postReinitMessage: null
    },

    tonePrompts: {
        "sliceoflife": " Focus on personal relationships, daily routines, gentle challenges, character growth. Avoid grand conflicts.",
        "adventure": " Emphasize exploration, discovery, overcoming obstacles, exciting journeys. Include danger & reward.",
        "mystery": " Weave clues, red herrings, secrets, a central puzzle. Build suspense.",
        "romance": " Center on romantic relationship development, emotional connection, obstacles to love, milestones.",
        "intrigue": " Involve political maneuvering, espionage, hidden agendas, betrayal, power struggles. Subtlety & deception.",
        "horror": " Create dread, fear, unease. Unsettling elements, psychological tension, supernatural threats. Player vulnerability.",
        "darkfantasy": " Morally grey characters, bleak settings, corruption. Good may not triumph. Magic dangerous/costly.",
        "heroicfantasy": " Clear good vs evil, brave heroes, powerful villains, magical quests, triumph of good.",
        "comedy": " Prioritize humor, witty dialogue, absurd situations, lighthearted resolutions.",
        "gritty": " Harsh, realistic world, difficult choices, moral ambiguity, consequences. Survival themes.",
        "mature": "Uncensored, suggestive, moral ambiguity, realistic world, absurd situations"
    },

    intensityPrompts: {
        "relaxed": " Leisurely pace, minimal pressure/threat. Pleasant interactions, minor issues.",
        "moderate": " Meaningful challenges & stakes requiring effort, without overwhelming pressure.",
        "challenging": " Significant obstacles, tough decisions with consequences, palpable risk. Success earned.",
        "intense": " High-stakes, constant pressure, difficult moral choices, potential for severe consequences/failure."
    },

      initialize: function(acAPI) {
    this.acAPI = acAPI;
    let wasFreshSAEInit = false;

    if (!state.sae || !state.sae.initialized) {
        state.sae = JSON.parse(JSON.stringify(this.defaults));
        wasFreshSAEInit = true;
    } else {
        for (const key in this.defaults) {
            if (state.sae[key] === undefined) {
                state.sae[key] = JSON.parse(JSON.stringify(this.defaults[key]));
            }
        }
    }

    state.sae.initialized = true;
    state.sae.postReinitMessage = null;

    if (state.sae.initialized_mid_game === undefined || wasFreshSAEInit) {
        const currentTurn = (typeof info !== 'undefined' && state.turnCount !== undefined)
            ? state.turnCount
            : 0;

        if (currentTurn > 7 && (wasFreshSAEInit || (!state.sae.hasRunEarly && (!state.sae.storyArc || state.sae.storyArc.length === 0)))) {
            state.sae.trigger_initial_arc_on_load = true;
        }

        state.sae.initialized_mid_game = true;
    }

    if (wasFreshSAEInit) {
        state.sae.postReinitMessage = `Story Arc Engine initialized/reset. Use /setarctype [tone] / [intensity] to begin.`;
    }
},

       updateAndCreateCards: function() {
    if (!this.acAPI) return;
    if (!state.sae) state.sae = JSON.parse(JSON.stringify(this.defaults));

    let settingsCard = this.acAPI.getCard(c => c && c.title === "Story Arc Settings");
    if (!settingsCard) {
        settingsCard = this.acAPI.buildCard({
            title: "Story Arc Settings",
            entry: "",
            keys: "Story Arc Settings",
            description: ""
        });
        if (!settingsCard) return;
    }

    const s = state.sae;

    if (settingsCard.entry) {
        const cardEntryText = settingsCard.entry;
        const settingsOnCard = {};
        const lines = cardEntryText.split('\n');

        lines.forEach(line => {
            const parts = line.split('=');
            if (parts.length >= 2) {
                const key = parts[0].trim();
                const value = parts.slice(1).join('=').trim();
                settingsOnCard[key] = value;
            }
        });

        s.isEnabled = settingsOnCard.hasOwnProperty('isEnabled')
            ? (settingsOnCard.isEnabled.toLowerCase() === 'true')
            : (s.isEnabled !== undefined ? s.isEnabled : this.defaults.isEnabled);

        const parsedTurns = settingsOnCard.hasOwnProperty('turnsPerAICall')
            ? parseInt(settingsOnCard.turnsPerAICall)
            : NaN;
        s.turnsPerAICall = Number.isFinite(parsedTurns)
            ? parsedTurns
            : (s.turnsPerAICall !== undefined ? s.turnsPerAICall : this.defaults.turnsPerAICall);

        if (settingsOnCard.hasOwnProperty('arcTone') && !s.toneChosen) {
            const cardTone = settingsOnCard.arcTone.toLowerCase();
            if (this.tonePrompts.hasOwnProperty(cardTone)) {
                s.arcTone = cardTone;
            }
        } else if (!s.toneChosen && s.arcTone === undefined) {
            s.arcTone = this.defaults.arcTone;
        }

        if (settingsOnCard.hasOwnProperty('arcIntensity') && !s.intensityChosen) {
            const cardIntensity = settingsOnCard.arcIntensity.toLowerCase();
            if (this.intensityPrompts.hasOwnProperty(cardIntensity)) {
                s.arcIntensity = cardIntensity;
            }
        } else if (!s.intensityChosen && s.arcIntensity === undefined) {
            s.arcIntensity = this.defaults.arcIntensity;
        }

        s.arcPrompt = settingsOnCard.hasOwnProperty('arcPrompt')
            ? settingsOnCard.arcPrompt
            : (s.arcPrompt !== undefined ? s.arcPrompt : this.defaults.arcPrompt);

    } else {
        s.isEnabled = s.isEnabled !== undefined ? s.isEnabled : this.defaults.isEnabled;
        s.turnsPerAICall = s.turnsPerAICall !== undefined ? s.turnsPerAICall : this.defaults.turnsPerAICall;
        s.arcTone = (!s.toneChosen && s.arcTone === undefined) ? this.defaults.arcTone : s.arcTone;
        s.arcIntensity = (!s.intensityChosen && s.arcIntensity === undefined) ? this.defaults.arcIntensity : s.arcIntensity;
        s.arcPrompt = s.arcPrompt !== undefined ? s.arcPrompt : this.defaults.arcPrompt;
    }

    const displayTone = s.arcTone || "Not Set";
    const displayIntensity = s.arcIntensity || "Not Set";

    const newCardEntry = `isEnabled = ${s.isEnabled}\nturnsPerAICall = ${s.turnsPerAICall}\narcTone = ${displayTone}\narcIntensity = ${displayIntensity}\narcPrompt = ${s.arcPrompt}`;

    const toneOptions = Object.keys(this.tonePrompts).join(', ');
    
 const intensityOptions = Object.keys(this.intensityPrompts).join(', '); 
 
 const newCardDescription = `⚙️ SAE Controls:\n/setarctype [tone] / [intensity] ✨🔥\n/regeneratearc ✨\n/saestop 🛑\n/currentarcsettings ℹ️\n\nTone Opt: ${toneOptions}\nIntensity Opt: ${intensityOptions}\n\nSettings in entry. 'custom' tone uses arcPrompt.`; 
 
 if (settingsCard.entry !== newCardEntry) settingsCard.entry = newCardEntry; 
 if (settingsCard.description !== newCardDescription) settingsCard.description = newCardDescription; 
 let arcContentCard = this.acAPI.getCard(c => c && c.title === "Current Story Arc"); 
 if (!arcContentCard) { arcContentCard = this.acAPI.buildCard({ title: "Current Story Arc", entry: "", keys: "Current Story Arc", description: "🤫 SPOILERS! Plot outline." }); if (arcContentCard) s.storyArc = []; } 
 else if (arcContentCard.entry) 
 { const cardArcText = arcContentCard.entry.trim(); 
 if (!s.isGenerating) { s.storyArc = cardArcText ? cardArcText.split('\n').map(l => l.trim()).filter(ln => /^\d+\.\s/.test(ln)) : []; } } 
 else { if (!s.isGenerating) { s.storyArc = []; } } },


        handleInput: function(rawPlayerInput) {
    let txt = rawPlayerInput;
    let cmdH = false;

    if (!state.sae) return { text: txt, commandHandled: false };

    let cmd = (rawPlayerInput || "").trim().toLowerCase();

    // SAE is off message for certain commands
    if (
        !state.sae.isEnabled &&
        (cmd.startsWith("/regeneratearc") ||
            cmd.startsWith("/setarctype") ||
            cmd.startsWith("/currentarcsettings"))
    ) {
        txt = formatSystemMessage("⚙️ SAE is off. Check settings card to enable.");
        cmdH = true;
        return { text: txt, commandHandled: cmdH };
    }

    // /setarctype command
    if (cmd.startsWith("/setarctype")) {
        const argString = rawPlayerInput.substring("/setarctype".length).trim();
        const parts = argString.split('/');

        if (parts.length === 2) {
            let rawNewTone = parts[0].trim();
            let rawNewIntensity = parts[1].trim();

            const newTone = rawNewTone.replace(/[.!?]+$/, "").trim().toLowerCase();
            const newIntensity = rawNewIntensity.replace(/[.!?]+$/, "").trim().toLowerCase();

            let toneValid = this.tonePrompts.hasOwnProperty(newTone);
            let intensityValid = this.intensityPrompts.hasOwnProperty(newIntensity);

            if (toneValid && intensityValid) {
                state.sae.arcTone = newTone;
                state.sae.arcIntensity = newIntensity;
                state.sae.toneChosen = true;
                state.sae.intensityChosen = true;
                state.sae.isGenerating = true;
                state.sae.saveOutput = true;
                state.sae.attemptCounter = 0;
                state.sae.completionSuggested = false;
                state.sae.trigger_initial_arc_on_load = false;

                txt = formatSystemMessage(
                    `🎭 Arc Tone set to: '${newTone}'.\n🔥 Arc Intensity set to: '${newIntensity}'.\n🧠 Brainstorming new story arc...`
                );
            } else {
                let errorMsg = "🤔 Invalid input for /setarctype.\n";
                if (!toneValid)
                    errorMsg += `- Unknown tone: '${newTone}' (from input '${rawNewTone}'). Valid: ${Object.keys(
                        this.tonePrompts
                    ).join(', ')}\n`;
                if (!intensityValid)
                    errorMsg += `- Unknown intensity: '${newIntensity}' (from input '${rawNewIntensity}'). Valid: ${Object.keys(
                        this.intensityPrompts
                    ).join(', ')}\n`;
                txt = formatSystemMessage(errorMsg.trim() + "\nUsage: /setarctype [tone] / [intensity]");
            }
        } else {
            txt = formatSystemMessage(
                "🤔 Usage: /setarctype [tone] / [intensity]\nExample: /setarctype adventure / moderate"
            );
        }
        cmdH = true;

    // /currentarcsettings command
    } else if (cmd.startsWith("/currentarcsettings")) {
        const currentToneDisplay = state.sae.arcTone ? `'${state.sae.arcTone}'` : "Not Set (Use /setarctype)";
        const currentIntensityDisplay = state.sae.arcIntensity ? `'${state.sae.arcIntensity}'` : "Not Set (Use /setarctype)";

        txt = formatSystemMessage(
            `Current Settings:\n🎭 Tone: ${currentToneDisplay}\n🔥 Intensity: ${currentIntensityDisplay}`
        );
        cmdH = true;

    // /regeneratearc command
    } else if (cmd.startsWith("/regeneratearc")) {
        const choicesMade = state.sae.toneChosen && state.sae.intensityChosen;
        const toneIsValid = choicesMade && state.sae.arcTone && this.tonePrompts.hasOwnProperty(state.sae.arcTone);
        const intensityIsValid = choicesMade && state.sae.arcIntensity && this.intensityPrompts.hasOwnProperty(state.sae.arcIntensity);

        if (toneIsValid && intensityIsValid) {
            state.sae.isGenerating = true;
            state.sae.saveOutput = true;
            state.sae.completionSuggested = false;
            state.sae.attemptCounter = 0;
            state.sae.trigger_initial_arc_on_load = false;

            txt = formatSystemMessage(
                `🧠 Brainstorming new arc (Tone: ${state.sae.arcTone}, Intensity: ${state.sae.arcIntensity})...`
            );
        } else {
            txt = formatSystemMessage(`🤔 Set arc type first using: /setarctype [tone] / [intensity]`);
        }
        cmdH = true;

    // /saestop command
    } else if (cmd.startsWith("/saestop")) {
        state.sae.isGenerating = false;
        state.sae.saveOutput = false;
        state.sae.attemptCounter = 0;
        state.sae.trigger_initial_arc_on_load = false;

        txt = formatSystemMessage("🛑 Arc generation cancelled!");
        cmdH = true;
    }

    return { text: txt, commandHandled: cmdH };
},


handleContext: function(text) {
    if (!state.sae || !state.sae.isEnabled || typeof text !== 'string') return text;

    // Append prompts if generating
    if (state.sae.isGenerating && state.sae.saveOutput) {
        let basePrompt = state.sae.arcPrompt || this.defaults.arcPrompt;
        let toneModifier = "";
        let intensityModifier = "";

        const currentTone = state.sae.arcTone;
        const currentIntensity = state.sae.arcIntensity;

        if (currentTone && currentTone !== "custom" && this.tonePrompts.hasOwnProperty(currentTone)) {
            toneModifier = this.tonePrompts[currentTone];
        }
        if (currentIntensity && this.intensityPrompts.hasOwnProperty(currentIntensity)) {
            intensityModifier = this.intensityPrompts[currentIntensity];
        }

        let finalPrompt = basePrompt + toneModifier + intensityModifier;
        return text + finalPrompt;
    }

    // Add author note guidance if story arc exists
    if (
        state.sae.storyArc?.length > 0 &&
        state.sae.activePointIndex < state.sae.storyArc.length 
    ) {
        const currentToneDisplay = state.sae.arcTone || "N/A";
        const currentIntensityDisplay = state.sae.arcIntensity || "N/A";

        const currentPointText = state.sae.storyArc[state.sae.activePointIndex].replace(/^\d+\.\s*/, '');
        const guidancePrompt = `\n[Plot Hint (T:${currentToneDisplay},I:${currentIntensityDisplay}): Towards "${currentPointText}".]\n`;

        const authorsNoteMatch = text.match(/(\[Author's note:[\s\S]*?)(\])/i);
        if (authorsNoteMatch) {
            return text.replace(
                authorsNoteMatch[0],
                `${authorsNoteMatch[1]}${guidancePrompt.trim()} ${authorsNoteMatch[2]}`
            );
        }

        return text + `\n[Author's note:${guidancePrompt.trim()}]`;
    }

    return text;
},


shouldTriggerGeneration: function() {
    const currentTurn = (typeof info !== 'undefined' && Number.isFinite(state.turnCount)) ? state.turnCount : 0;

    if (!state.sae || state.sae.isGenerating || !state.sae.isEnabled) return false;

    const choicesMade = state.sae.toneChosen && state.sae.intensityChosen;
    const toneActuallyValid = choicesMade && state.sae.arcTone && this.tonePrompts.hasOwnProperty(state.sae.arcTone);
    const intensityActuallyValid = choicesMade && state.sae.arcIntensity && this.intensityPrompts.hasOwnProperty(state.sae.arcIntensity);
    const typeSettingsAreValidAndChosen = toneActuallyValid && intensityActuallyValid;

    if (state.sae.trigger_initial_arc_on_load) {
        if (!typeSettingsAreValidAndChosen) return "choose_type";
        return "generate_now";
    }

    if (currentTurn < 2) return false;

    if (state.sae.hasRunEarly !== true && currentTurn >= 2 && currentTurn <= 7) {
        if (!typeSettingsAreValidAndChosen) return "choose_type";
        return "generate_now";
    }

    if (
        state.sae.turnsPerAICall > 0 &&
        currentTurn > 1 &&
        currentTurn % state.sae.turnsPerAICall === 0
    ) {
        if (!typeSettingsAreValidAndChosen) return "choose_type";
        return "generate_now";
    }

    return false;
},




        handleOutput: function(text) { if (!state.sae || !state.sae.isEnabled || !state.sae.saveOutput) return text; 
            if (this.acAPI) {
        const arcCard = this.acAPI.getCard(c => c && c.title === "Current Story Arc");
        if (arcCard && arcCard.entry) {
            state.sae.storyArc = arcCard.entry
                .split('\n')
                .map(l => l.trim())
                .filter(ln => /^\d+\.\s/.test(ln));
        }
    }
        
        if (!text || typeof text !== 'string' || text.trim() === '') { state.sae.attemptCounter++; if (state.sae.attemptCounter >= 3) { state.sae.isGenerating = false; 
        state.sae.saveOutput = false; state.sae.attemptCounter = 0; state.sae.trigger_initial_arc_on_load = false; 
        return formatSystemMessage(`😥 AI shy! No arc ideas after 3 tries.`);
        
         } else { return formatSystemMessage(`😮 Empty AI response. Retrying arc (${state.sae.attemptCounter + 1}/3)...`); } }
         
          const pts = text.split('\n').map(l => l.trim()).filter(ln => /^\d+\.\s/.test(ln));

           if (pts.length < 8) 
          { state.sae.attemptCounter++;
          
           if (state.sae.attemptCounter >= 3) { state.sae.isGenerating = false; state.sae.saveOutput = false; state.sae.attemptCounter = 0; state.sae.trigger_initial_arc_on_load = false; 
           
           return formatSystemMessage(`😥 Invalid arc (less than 8 points after 3 tries).`); } else { 
            return formatSystemMessage(`🤔 Not a full arc (got ${pts.length} points). Retrying (${state.sae.attemptCounter + 1}/3)...`); }
            
             } else { state.sae.isGenerating = false; 
             state.sae.saveOutput = false; 
             state.sae.attemptCounter = 0;
              state.sae.activePointIndex = 0;
               state.sae.completionSuggested = false;

                state.sae.trigger_initial_arc_on_load = false; 
             
if (state.sae.hasRunEarly !== true) { 
    state.sae.hasRunEarly = true; 
} 

if (this.acAPI) { 
    const arcContentCard = this.acAPI.getCard(c => c && c.title === "Current Story Arc"); 
    if (arcContentCard) { 
        const oldEntry = arcContentCard.entry || " "; 
        const turn = (typeof info !== 'undefined' && Number.isFinite(state.turnCount)) ? state.turnCount : 'N/A'; 
        
        arcContentCard.description = `Log(Turn ${turn})|Previous Arc:\n${oldEntry}\n\n` 
            + (arcContentCard.description || "").substring(0, 1000); 
        
        arcContentCard.entry = pts.join('\n'); 

         state.sae.storyArc = arcContentCard.entry
           .split('\n')
         .map(l => l.trim())
         .filter(ln => /^\d+\.\s/.test(ln));
    } 
} 


return formatSystemMessage(
    `🎉 New arc (Tone: ${state.sae.arcTone}, Intensity: ${state.sae.arcIntensity}) saved to card!`
); 
} },

checkForCompletion: function(currentAiOutputText) { 
    if (!state.sae || !state.sae.isEnabled || !state.sae.storyArc?.length || state.sae.completionSuggested || state.sae.activePointIndex >= state.sae.storyArc.length) 
        return; 
    
    const activePointText = (state.sae.storyArc[state.sae.activePointIndex] || "")
        .replace(/^\d+\.\s*/, '')
        .trim(); 
    
    if (!activePointText) 
        return; 
    
    if (currentAiOutputText && typeof currentAiOutputText === 'string' && currentAiOutputText.trim()) { 
        if (textSimilarityScore(activePointText, currentAiOutputText) > 0.45) { 
            if (!state.toastQueue) 
                state.toastQueue = []; 
            state.toastQueue.push(`[SAE💡: Point "${activePointText}" seems complete.]`); 
            state.sae.completionSuggested = true;

          // ---- ADD THIS LINE TO ADVANCE THE INDEX ----
            state.sae.activePointIndex++;
      log(`SAE Active Point Index 4: ${state.sae.activePointIndex}`);  
        } } }
    };
    
// ==================================================================
// MASTER HOOK FUNCTIONS
// ==================================================================

function initializeCombinedModules() {
    // Initialize shared AutoCards API
    if (sharedAcAPI === null && typeof AutoCards === 'function') {
        try {
            const acI = AutoCards();
            if (acI && typeof acI.API === 'object') {
                sharedAcAPI = acI.API;
            } else {
                console.warn(`AutoCards() did not return expected API object.`);
                sharedAcAPI = null;
            }
        } catch (e) {
            console.error(`Error getting AutoCards API.`, e);
            sharedAcAPI = null;
        }
    }

    // Initialize modules
    Formatter.initialize(sharedAcAPI);
    STT.initialize(sharedAcAPI);
    SAE.initialize(sharedAcAPI);

    // Initialize state variables if undefined
    if (state.toastQueue === undefined) state.toastQueue = [];
    if (state.currentActionTypeForTimeAdvance === undefined) {
        const currentTurn = (typeof info !== 'undefined' && Number.isFinite(state.turnCount)) 
            ? state.turnCount 
            : 0;
        state.currentActionTypeForTimeAdvance = 
            (currentTurn === 0 && info?.actionType === 'start') 
            ? 'start' 
            : 'continue';
    }
}


globalThis.onInput_Combined = function(text) {
    initializeCombinedModules();

    // Collect post-init messages
    let postInitMessages = [];
    if (state.stt?.postReinitMessage) {
        postInitMessages.push(state.stt.postReinitMessage);
        state.stt.postReinitMessage = null;
    }
    if (state.sae?.postReinitMessage) {
        postInitMessages.push(state.sae.postReinitMessage);
        state.sae.postReinitMessage = null;
    }
    if (postInitMessages.length > 0) {
        const messageStr = postInitMessages.join('\n');
        if (state.message && typeof state.message === 'string') {
            state.message += '\n' + messageStr;
        } else {
            state.message = messageStr;
        }
    }

    // Update and create cards
    Formatter.updateAndCreateCards();
    STT.checkAndCreateCards();
    STT.updateSettingsFromCard();
    SAE.updateAndCreateCards();

    let currentText = text;
    let finalStopSignal = false;
    const originalTextForAC = text;
    let rawInputForActionTypeCheck = (text || "").trim();

    let identifiedPlayerActionForSTT = null;
    let isSystemMessageToIgnore = false;

    // Detect system messages
    const systemMessagePatterns = [
        /\[SYSTEM-MSG-START\]\s*🎭\s*Arc Tone set to:/i,
        /🧠\s*Brainstorming new story arc/i,
        />>>\s*please select "continue"/i
    ];
    for (const pattern of systemMessagePatterns) {
        if (pattern.test(rawInputForActionTypeCheck)) {
            isSystemMessageToIgnore = true;
            break;
        }
    }

    // Identify player action
    if (!isSystemMessageToIgnore) {
        if (rawInputForActionTypeCheck.startsWith("> You say") || rawInputForActionTypeCheck.match(/^\s*say\s*["“]/i)) {
            identifiedPlayerActionForSTT = "say";
        } else if (rawInputForActionTypeCheck.startsWith("> You do") || 
                   rawInputForActionTypeCheck.match(/^\s*do\s*["“]/i) || 
                   rawInputForActionTypeCheck.match(/^\s*>\s*you\s+[^s][^a][^y]/i)) {
            identifiedPlayerActionForSTT = "do";
        } else if (rawInputForActionTypeCheck.startsWith("> You add to the story") || rawInputForActionTypeCheck.startsWith("> Story:")) {
            identifiedPlayerActionForSTT = "story";
        } else if (!rawInputForActionTypeCheck.startsWith("/") && rawInputForActionTypeCheck.length > 0) {
            identifiedPlayerActionForSTT = "story";
        }
    }

    // Strip player action prefixes
    let commandInput = (text || "").trim();
    let commandCandidateAfterPrefixStrip = commandInput;
    const playerActionPrefixes = [
        /^\s*>\s*you\s+verb\s+/i,
        /^\s*>\s*you\s*say\s*:\s*/i,
        /^\s*>\s*you\s*/i,
        /^\s*>\s*/i
    ];
    for (const prefixRegex of playerActionPrefixes) {
        if (prefixRegex.test(commandCandidateAfterPrefixStrip)) {
            commandCandidateAfterPrefixStrip = commandCandidateAfterPrefixStrip.replace(prefixRegex, "").trim();
            break;
        }
    }

    // Extract direct command
    let potentialDirectCommand = commandCandidateAfterPrefixStrip;
    const sayWrappedCommandRegex = /^\s*say\s+["'](.+?)["']\s*$/i;
    const justQuotedCommandRegex = /^\s*["'](.+?)["']\s*$/i;

    let sayMatch = potentialDirectCommand.match(sayWrappedCommandRegex);
    if (sayMatch?.[1]?.trim().startsWith('/')) {
        potentialDirectCommand = sayMatch[1].trim();
    } else {
        let quoteMatch = potentialDirectCommand.match(justQuotedCommandRegex);
        if (quoteMatch?.[1]?.trim().startsWith('/')) potentialDirectCommand = quoteMatch[1].trim();
    }

    const cleanedCommandForMatching = potentialDirectCommand.toLowerCase();
    let modRes = null;
    let commandWasHandledByModule = false;

    // Handle commands starting with '/'
    if (cleanedCommandForMatching.startsWith('/')) {
        if (cleanedCommandForMatching.startsWith('/ac') || cleanedCommandForMatching.startsWith('/acredo')) {
            if (typeof AutoCards === 'function') {
                let acResult = AutoCards("input", originalTextForAC, false);
                currentText = (typeof acResult === 'object' && acResult.text !== undefined) 
                    ? acResult.text 
                    : (Array.isArray(acResult) ? acResult[0] : originalTextForAC);
                finalStopSignal = (typeof acResult === 'object' && acResult.stop !== undefined) 
                    ? acResult.stop 
                    : (Array.isArray(acResult) ? acResult[1] : false);
            }
            commandWasHandledByModule = true;
            state.currentActionTypeForTimeAdvance = 'system_command';
            return { text: currentText, stop: finalStopSignal };
        }
        else if (cleanedCommandForMatching === '/reinit_plugins') {
            state.formatter = null;
            state.stt = null;
            state.sae = null;
            initializeCombinedModules();

            currentText = formatSystemMessage("🔌 All core plugins re-initialized to their default states.");
            postInitMessages = [];

            if (state.stt?.postReinitMessage) { postInitMessages.push(state.stt.postReinitMessage); state.stt.postReinitMessage = null; }
            if (state.sae?.postReinitMessage) { postInitMessages.push(state.sae.postReinitMessage); state.sae.postReinitMessage = null; }
            if (postInitMessages.length > 0) { currentText += "\n" + postInitMessages.join("\n"); }

            commandWasHandledByModule = true;
            finalStopSignal = true;
        }
        else if (STT.handleInput && (
            cleanedCommandForMatching.startsWith('/settime') ||
            cleanedCommandForMatching.startsWith('/setdate') ||
            cleanedCommandForMatching.startsWith('/defer') ||
            cleanedCommandForMatching.startsWith('/wait')
        )) {
            modRes = STT.handleInput(potentialDirectCommand);
            if (modRes?.commandHandled) commandWasHandledByModule = true;
        }
        else if (SAE.handleInput && (
            cleanedCommandForMatching.startsWith('/setarctype') ||
            cleanedCommandForMatching.startsWith('/currentarcsettings') ||
            cleanedCommandForMatching.startsWith('/regeneratearc') ||
            cleanedCommandForMatching.startsWith('/saestop')
        )) {
            modRes = SAE.handleInput(potentialDirectCommand);
            if (modRes?.commandHandled) commandWasHandledByModule = true;
        }

        // Process module response
        if (commandWasHandledByModule && modRes) {
            if (cleanedCommandForMatching.startsWith('/defer')) {
                let playerNarrative = "";
                if (commandCandidateAfterPrefixStrip.toLowerCase().includes(cleanedCommandForMatching)) {
                    let tempNarrative = commandCandidateAfterPrefixStrip;
                    const escapedCmd = potentialDirectCommand.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
                    const cmdRegex = new RegExp(escapedCmd, "i");
                    tempNarrative = tempNarrative.replace(cmdRegex, "").trim();
                    if (tempNarrative) playerNarrative = tempNarrative;
                }
                currentText = playerNarrative
                    ? `${playerNarrative}\n\n${modRes.text.trim()}\n\n[The story continues after this time skip.]`
                    : `${modRes.text.trim()}\n\n[The story jumps forward. Describe what happens or the scene after this passage of time.]`;
            } else {
                currentText = modRes.text;
            }

            finalStopSignal = (cleanedCommandForMatching.startsWith('/currentarcsettings') ||
                               cleanedCommandForMatching.startsWith('/saestop') ||
                               cleanedCommandForMatching === '/reinit_plugins') ? true : false;
        }
    }

    // Set action type
    if (isSystemMessageToIgnore) state.currentActionTypeForTimeAdvance = 'system_message_ignored';
    else if (commandWasHandledByModule) state.currentActionTypeForTimeAdvance = 'system_command';
    else if (identifiedPlayerActionForSTT) state.currentActionTypeForTimeAdvance = identifiedPlayerActionForSTT;
    else {
        const currentTurn = (typeof info !== 'undefined' && Number.isFinite(state.turnCount)) ? state.turnCount : -1;
        if (currentTurn === 0 && info?.actionType === 'start') state.currentActionTypeForTimeAdvance = 'start';
        else state.currentActionTypeForTimeAdvance = 'continue';
    }

    // AutoCards fallback
    if (typeof AutoCards === 'function' && !commandWasHandledByModule) {
        let acResult = AutoCards("input", originalTextForAC, finalStopSignal);
        if (!isSystemMessageToIgnore) {
            currentText = (typeof acResult === 'object' && acResult.text !== undefined)
                ? acResult.text
                : (Array.isArray(acResult) ? acResult[0] : currentText);
        }
        finalStopSignal = (typeof acResult === 'object' && acResult.stop !== undefined)
            ? acResult.stop
            : (Array.isArray(acResult) ? acResult[1] : finalStopSignal);
    }

    return { text: currentText, stop: finalStopSignal };
};

globalThis.onContext_Combined = function(text, stop) {
    initializeCombinedModules();
    
    let currentText = text;
    let currentStop = stop;

    // Clean system messages from input
    const sysRgx = /\n*\s*\[SYSTEM-MSG-START\]\n?([\s\S]*?)\n?\[SYSTEM-MSG-END\]\s*\n*/g;
    currentText = (currentText || "")
        .replace(sysRgx, (m, c) => `\n\n${c.trim()}\n\n`)
        .replace(/\n{3,}/g, '\n\n')
        .trim();

    // Pass through STT and SAE context handlers
    if (STT.handleContext) currentText = STT.handleContext(currentText);
    if (SAE.handleContext) currentText = SAE.handleContext(currentText);

    // AutoCards context handling
    if (typeof AutoCards === 'function') {
        let acResult = AutoCards("context", currentText, currentStop);

        if (Array.isArray(acResult) && acResult.length >= 2) {
            currentText = acResult[0];
            currentStop = acResult[1];
        } else if (typeof acResult === 'object' && acResult !== null && acResult.text !== undefined && acResult.stop !== undefined) {
            currentText = acResult.text;
            currentStop = acResult.stop;
        }

        const isACG = state.AutoCards?.generation?.workpiece && Object.keys(state.AutoCards.generation.workpiece).length > 0;
        const isSAEG = state.sae?.isGenerating && state.sae.saveOutput;

        if (isACG || isSAEG) currentStop = false;
    }

    return { text: currentText, stop: currentStop };
};


globalThis.onOutput_Combined = function(text) {
    initializeCombinedModules();

    // Advance time based on player action
    if (STT.advanceTimeBasedOnAction) STT.advanceTimeBasedOnAction();

    let aiNarrativeOutput = text;
    let systemMessages = [];
    let saeSystemMessageGeneratedThisHook = null;

    const isInputFromOurSystem = /\[SYSTEM-MSG-START\][\s\S]*?\[SYSTEM-MSG-END\]/.test((text || "").trim());
    const isACGActive = state.AutoCards?.generation?.workpiece && Object.keys(state.AutoCards.generation.workpiece).length > 0;
    const isSAEExpectingAIOutputAsArc = state.sae?.isEnabled && state.sae.saveOutput;
    const currentTurnForOutputLog = state?.turnCount ?? 'N/A';

    // Handle system messages
    if (isInputFromOurSystem && !isACGActive && !isSAEExpectingAIOutputAsArc) {
        if (typeof text === 'string' && text.trim()) systemMessages.push(text);
        aiNarrativeOutput = "";
    }
    else if (isACGActive) {
        if (typeof AutoCards === 'function') {
            let acOutput = AutoCards("output", aiNarrativeOutput);
            if (typeof acOutput === 'string' && acOutput.trim()) {
                if (/\[SYSTEM-MSG-START\]|>>>|<<<|{>/.test(acOutput.trim())) {
                    systemMessages.push(acOutput);
                    aiNarrativeOutput = "";
                } else {
                    aiNarrativeOutput = acOutput;
                }
            } else {
                aiNarrativeOutput = "";
            }
        }
    }
    else if (isSAEExpectingAIOutputAsArc) {
        if (SAE.handleOutput) {
            saeSystemMessageGeneratedThisHook = SAE.handleOutput(aiNarrativeOutput);
            if (typeof saeSystemMessageGeneratedThisHook === 'string') systemMessages.push(saeSystemMessageGeneratedThisHook);
        }
        aiNarrativeOutput = "";
    }
    else {
        if (typeof AutoCards === 'function') aiNarrativeOutput = AutoCards("output", aiNarrativeOutput);

        // Check if SAE wants to trigger arc generation
        if (SAE.shouldTriggerGeneration) {
            const triggerResult = SAE.shouldTriggerGeneration();

            if (triggerResult === "choose_type") {
                saeSystemMessageGeneratedThisHook = formatSystemMessage(
                    `✨ Set Story Arc Type! ✨ (Turn ${currentTurnForOutputLog})\n` +
                    `Type: /setarctype [tone] / [intensity]\n\n` +
                    `Tone Options: ${Object.keys(SAE.tonePrompts || {}).join(', ')}\n` +
                    `(Current: '${state.sae?.arcTone || "null"}')\n\n` +
                    `Intensity Options: ${Object.keys(SAE.intensityPrompts || {}).join(', ')}\n` +
                    `(Current: '${state.sae?.arcIntensity || "null"}')\n\n` +
                    `Example: /setarctype adventure / moderate`
                );
                aiNarrativeOutput = "";
            }
            else if (triggerResult === "generate_now") {
                if (state.sae) {
                    state.sae.isGenerating = true;
                    state.sae.saveOutput = true;
                    state.sae.attemptCounter = 0;
                    state.sae.completionSuggested = false;
                    state.sae.trigger_initial_arc_on_load = false;
                    saeSystemMessageGeneratedThisHook = formatSystemMessage(
                        `📝 SAE preparing new plot (Tone: ${state.sae.arcTone}, Intensity: ${state.sae.arcIntensity}) for next turn! (Turn ${currentTurnForOutputLog})`
                    );
                }
            }
        }

        if (typeof saeSystemMessageGeneratedThisHook === 'string') systemMessages.push(saeSystemMessageGeneratedThisHook);

        // Apply formatter if enabled
        if (typeof aiNarrativeOutput === 'string' && aiNarrativeOutput.trim()) {
            const isNowSysMsg = /\[SYSTEM:.*\]|>>>|<<<|{>|AFK/.test(aiNarrativeOutput.trim());
            if (enableFormatter && Formatter.format && !isNowSysMsg) {
                const ctx = Array.isArray(history) ? history.map(h => h.text || "").join('\n') : '';
                aiNarrativeOutput = Formatter.format(aiNarrativeOutput, ctx);
            }
        }
    }

    // Combine AI output and system messages
    let outputParts = [];
    if (typeof aiNarrativeOutput === 'string' && aiNarrativeOutput.trim()) outputParts.push(aiNarrativeOutput);
    outputParts.push(...systemMessages.filter(p => typeof p === 'string' && p.trim()));

    let combinedOutput = outputParts
        .map(p => p.replace(/\n*\s*\[SYSTEM-MSG-START\]\n?([\s\S]*?)\n?\[SYSTEM-MSG-END\]\s*\n*/g, (m, c) => c.trim()))
        .filter(p => p && p.trim() !== "")
        .join("\n\n")
        .replace(/\n{3,}/g, '\n\n')
        .trim();

    if (STT.appendTimestampsToText) combinedOutput = STT.appendTimestampsToText(combinedOutput);
    if (SAE.checkForCompletion && typeof aiNarrativeOutput === 'string' && aiNarrativeOutput.trim()) SAE.checkForCompletion(aiNarrativeOutput);

    // Adjust newline endings
    if (combinedOutput.trim()) {
        const isAnySystemOutput = /\[SYSTEM:.*\]|>>>|<<<|{>|AFK|Auto-Cards:|SAE\💡|Time advanced|Time set|Date set|Current Settings:|Set Story Arc Type!|SAE preparing new plot|AI shy!|Empty AI response|Invalid arc|Not a full arc|New arc saved|🛑 Arc generation cancelled!|⚙️ SAE is off/.test(combinedOutput.trim());
        if (!isAnySystemOutput) {
            if (!combinedOutput.endsWith("\n\n")) combinedOutput += combinedOutput.endsWith("\n") ? "\n" : "\n\n";
        } else {
            if (!combinedOutput.endsWith("\n")) combinedOutput += "\n";
        }
    }

    // Handle toast queue
    if (state.toastQueue?.length > 0) {
        const tM = state.toastQueue.join('\n');
        if (state.message && typeof state.message === 'string' && !state.message.includes(tM.split('\n')[0])) {
            state.message += '\n' + tM;
        } else if (!state.message) {
            state.message = tM;
        }
        state.toastQueue = [];
    }

    return { text: combinedOutput };
};


})(); // End of IIFE wrapper



/////added last
function ParagraphFix(hook, inputText) {
    "use strict";
    
    // Default settings
    const DEFAULT_FORMATTING_TYPE = "none"; // "none", "basic", "empty-line", "newline"
    const DEFAULT_INDENT_PARAGRAPHS = false;
    
    // Initialize or retrieve state
    const PF = (function() {
        if (state.ParagraphFix) {
            const pf = state.ParagraphFix;
            delete state.ParagraphFix;
            return pf;
        }
        return {
            formattingType: DEFAULT_FORMATTING_TYPE,
            indentParagraphs: DEFAULT_INDENT_PARAGRAPHS
        };
    })();
    
    // Helper functions
    function readPastAction(lookBack = 0) {
        if (!Array.isArray(history) || history.length === 0) {
            return { text: "", type: "unknown" };
        }
        const index = Math.max(0, history.length - 1 - Math.abs(lookBack));
        const action = history[index] || {};
        return {
            text: action.text || action.rawText || "",
            type: action.type || "unknown"
        };
    }
    
    function adjustNewlines(text) {
        if (PF.formattingType === "none") {
            return text;
        }

        const previousAction = readPastAction(0);
        
        // Look at history[history.length - 1].type, if equal to "do", "say", or "see", then don't proceed
        if (["do", "say", "see"].includes(previousAction.type)) {
            return text;
        }
        
        // Count newlines at end of previous action's text (0, 1, or 2 max)
        const prevText = previousAction.text || "";
        const endNewlines = Math.min(2, (prevText.match(/\n*$/)?.[0] || "").length);
        
        // Count newlines at start of current text (0, 1, or 2 max)
        const startNewlines = Math.min(2, (text.match(/^\n*/)?.[0] || "").length);
        
        // Sum the two newline counts together
        const totalNewlines = endNewlines + startNewlines;
        
        // If the sum is less than 2, then proceed
        if (totalNewlines < 2) {
            if (totalNewlines === 0) {
                // If sum is 0, add nothing
                return text;
            } else if (totalNewlines === 1) {
                // If sum is 1, add "\n" and break
                return "\n" + text;
            }
        }
        
        return text;
    }
    
    function getConfigCardTemplate() {
        return {
            type: "class",
            title: "Configure Paragraph Fix",
            keys: "Edit the entry above to configure the Paragraph Fix",
            entry: "> The Paragraph Fix ensures consistent spacing in your adventure. You may configure the following settings by replacing the current values with your desired options.\n" +
                   "> Formatting Type: " + PF.formattingType + "\n" +
                   "> Indent Paragraphs: " + PF.indentParagraphs + "\n\n" +
                   "> Available formatting types:\n" +
                   "> - none: No formatting applied\n" +
                   "> - basic: Basic formatting (converts multiple spaces/newlines to double newlines)\n" +
                   "> - empty-line: Empty line dialogue formatting (adds spacing before quotes except after commas)\n" +
                   "> - newline: Newline dialogue formatting (basic + newlines before quotes)\n\n" +
                   "> Indent Paragraphs adds 4-space indents to new paragraphs",
            description: "The Paragraph Fix automatically applies consistent spacing and dialogue formatting to your story output. Set formatting type to 'none' to disable all formatting, and set indent paragraphs to 'true' or 'false' to control paragraph indentation."
        };
    }
    
    function extractSettings(text) {
        const settings = {};
        const lines = text.toLowerCase().replace(/[^a-z0-9:\->]+/g, "").split(">");
        
        for (const line of lines) {
            const parts = line.split(":");
            if (parts.length !== 2) continue;
            
            const key = parts[0].trim();
            const value = parts[1].trim();
            
            if (key.includes("formatting") && key.includes("type")) {
                const validTypes = ["none", "basic", "empty-line", "emptyline", "newline"];
                if (validTypes.includes(value)) {
                    settings.formattingType = value.replace("emptyline", "empty-line");
                }
            }
            
            if (key.includes("indent") && key.includes("paragraphs")) {
                const trueValues = ["true", "t", "yes", "y", "on"];
                const falseValues = ["false", "f", "no", "n", "off"];
                if (trueValues.includes(value)) {
                    settings.indentParagraphs = true;
                } else if (falseValues.includes(value)) {
                    settings.indentParagraphs = false;
                }
            }
        }
        
        return settings;
    }
    
    function findConfigCard() {
        const template = getConfigCardTemplate();
        for (const card of storyCards) {
            // Check for exact title match
            if (card.title === template.title) {
                return card;
            }
            // Check for exact keys match
            if (card.keys === template.keys) {
                return card;
            }
            // Check for partial matches in keys (like original code)
            if (card.keys && card.keys.includes("Configure Paragraph Fix")) {
                return card;
            }
            // Check for partial matches in title
            if (card.title && card.title.includes("Configure Paragraph Fix")) {
                return card;
            }
        }
        return null;
    }
    
    function createOrRepairCard() {
        let configCard = findConfigCard();
        const template = getConfigCardTemplate();
        
        if (!configCard) {
            // Create new card
            addStoryCard(template.keys);
            
            // Find and configure the newly created card
            for (let i = storyCards.length - 1; i >= 0; i--) {
                const card = storyCards[i];
                if (card.keys === template.keys) {
                    card.type = template.type;
                    card.title = template.title;
                    card.entry = template.entry;
                    card.description = template.description;
                    return card;
                }
            }
        } else {
            // Repair existing card if needed
            let needsRepair = false;
            
            // If title matches but keys don't, repair the keys
            if (configCard.title === template.title && configCard.keys !== template.keys) {
                configCard.keys = template.keys;
                needsRepair = true;
            }
            
            // If keys match but title doesn't, repair the title
            if (configCard.keys === template.keys && configCard.title !== template.title) {
                configCard.title = template.title;
                needsRepair = true;
            }
            
            // If partial matches, repair both title and keys
            if (configCard.title !== template.title && configCard.keys !== template.keys) {
                configCard.title = template.title;
                configCard.keys = template.keys;
                needsRepair = true;
            }
            
            // Always update the template parts but preserve user's settings
            const userSettings = extractSettings(configCard.entry);
            if (userSettings.formattingType) {
                PF.formattingType = userSettings.formattingType;
            }
            if (typeof userSettings.indentParagraphs === "boolean") {
                PF.indentParagraphs = userSettings.indentParagraphs;
            }
            
            // Update with current settings
            const updatedTemplate = getConfigCardTemplate();
            configCard.entry = updatedTemplate.entry;
            configCard.description = updatedTemplate.description;
            
            return configCard;
        }
        
        return null;
    }

    function applyFormatting(text, type) {
        switch (type) {
            case "basic":
                // Without dialogue formatting
                return text.replace(/\s{2,}|\n/g, '\n\n');

            case "empty-line":
                // With empty line dialogue formatting
                return text.replace(/(?<!,) (?=")|\s{2,}|\n/g, '\n\n');

            case "newline":
                // With newline dialogue formatting
                return text.replace(/\s{2,}|\n/g, '\n\n').replace(/(?<!,) (?=")/g, '\n');

            default:
                return text;
        }
    }
    
    function applyIndentation(text) {
        if (!PF.indentParagraphs) {
            return text;
        }
        
        const previousAction = readPastAction(0);
        const isAfterDoSay = ["do", "say", "see"].includes(previousAction.type);
        
        if (isAfterDoSay) {
            // Only indent if the text doesn't start with ">" (commands/dialogue)
            const lines = text.split('\n');
            return lines.map(line => {
                const trimmed = line.trimStart();
                if (trimmed.startsWith(">") || trimmed === "" || line.startsWith("    ")) {
                    return line;
                }
                return "    " + line;
            }).join('\n');
        } else {
            // Add indentation after paragraph breaks, but not to dialogue/commands
            return text.replace(/\n\n(\s*)(?=\S)(?!>)/g, (match, spaces) => {
                return '\n\n    ';
            });
        }
    }
    
    // Main logic based on hook
    switch (hook) {
        case "context":
            // Remove indentation from context so AI doesn't see it
            let contextResult = inputText.replace(/^    /gm, "");
            
            // Ensure config card exists and is properly configured
            createOrRepairCard();
            
            state.ParagraphFix = PF;
            return contextResult;
            
        case "output":
            // If formatting is "none", return unchanged
            if (!PF.formattingType || PF.formattingType === "none") {
                state.ParagraphFix = PF;
                return inputText;
            }

            // Start with the input text
            let result = inputText;

            // Apply formatting based on type
            result = applyFormatting(result, PF.formattingType);

            // Apply newline adjustment improvement
            result = adjustNewlines(result);

            // Apply indentation if enabled
            result = applyIndentation(result);

            state.ParagraphFix = PF;
            return result;
            
        default:
            state.ParagraphFix = PF;
            return inputText;
    }
}
//// added input time script

if (!state.globalTime) {
  state.globalTime = { year: 1454, month: 3, day: 27, hour: 7, minute: 0 };
}
if (!state.turnsPerElemRemoval){state.turnsPerElemRemoval = 50;}
if (!state.newNote){state.newNote = "";}

if (!state.turnNum_SAE) {
    state.turnNum_SAE = state.turnCount + 1; // first time initialization
} else {
    state.turnNum_SAE = state.turnCount + 1; // sync with current global turn
}

if (!state.worldClock) {
  // Customize starting year/month/day/hour/minute
 state.worldClock = state.globalTime;
 // <==Don't forget to Set your clock
}
if (!state.pendingMinutes) state.pendingMinutes = 0;

const MONTH_DAYS = [31,28,31,30,31,30,31,31,30,31,30,31];

// Helper: Is Leap Year?
function isLeapYear(year) {
  return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);
}

// Helper: Days in Month
function daysInMonth(year, month) {
  if (month === 2 && isLeapYear(year)) return 29;
  return MONTH_DAYS[month-1];
}

// Advance time by X minutes, handling all rollovers
function advanceTime(minutes) {
  state.pendingMinutes += minutes;
  let wc = state.worldClock;

  wc.minute += state.pendingMinutes;
  state.pendingMinutes = 0;

  while (wc.minute >= 60) {
    wc.minute -= 60;
    wc.hour += 1;
  }
  while (wc.hour >= 24) {
    wc.hour -= 24;
    wc.day += 1;
    // Optional: Trigger onNewDay() here!
    if (typeof onNewDay === "function") onNewDay();
  }
  // Day/month/year rollover
  while (wc.day > daysInMonth(wc.year, wc.month)) {
    wc.day -= daysInMonth(wc.year, wc.month);
    wc.month += 1;
    // Optional: Trigger onNewMonth() here!
    if (typeof onNewMonth === "function") onNewMonth();
  }
  while (wc.month > 12) {
    wc.month -= 12;
    wc.year += 1;
    // Optional: Trigger onNewYear() here!
    if (typeof onNewYear === "function") onNewYear();
  }
}

// Usage: advanceTime(actionMinutes.eat);

// === Status Bar Helper ===
function getClockString() {
  const wc = state.worldClock;
  // e.g. "Year 1234, 04-23 15:02"
  return `Year ${wc.year}, ${String(wc.month).padStart(2,"0")}-${String(wc.day).padStart(2,"0")} ${String(wc.hour).padStart(2,"0")}:${String(wc.minute).padStart(2,"0")}`;
}

// === Milestone/Event Hooks ===
// Example birthday system, etc
if (!state.birthdays) state.birthdays = {
  player:     { month: 3, day: 27 },   // <==Change as needed.
  mother:     { month: 8, day: 14 },
  father:     { month: 5, day: 9 },
  sibling:    { month: 2, day: 12 },
  grandma:    { month: 1, day: 7 },
  grandpa:    { month: 11, day: 22 },
  aunt:       { month: 6, day: 16 },
  uncle:      { month: 10, day: 3 },
  cousin:     { month: 9, day: 4 },
  // Add more as needed!
};

if (!state.ages) state.ages = {
  player:   5,    // <==Change as needed.
  mother:   34,
  father:   36,
  sibling:   7,
  grandma:  60,
  grandpa:  62,
  aunt:     32,
  uncle:    38,
  cousin:   12,
  // Add more as needed!
};


// Called on each new day, checks birthdays and advances ages
function onNewDay() {
  let wc = state.worldClock;
  for (const who in state.birthdays) {
    let bd = state.birthdays[who];
    if (wc.month === bd.month && wc.day === bd.day) {
      state.ages[who] = (state.ages[who] || 0) + 1;
      if (typeof output !== "undefined") output.push(`🎉 It's ${who}'s birthday! They are now ${state.ages[who]}.`);
    }
  }
  // You can hook in other daily/milestone events here!
}
// Recurring monthly events (cycling or random)
const MONTHLY_EVENTS = [
  "The city hosts the Lantern Festival.",   // <==Change as needed. Remember to make them fit Your Scenarios.
  "A new merchant guild caravan arrives.",
  "The rivers swell with spring rains.",
  "The Harvest Market draws crowds from afar.",
  "Rumors swirl of a masked thief prowling the night.",
  "The local lord calls a council in the square.",
  "A playwright debuts a scandalous new play.",
  "Children compete in the annual kite-flying contest.",
  "The temple holds a day of silent meditation.",
  "A rare flower blooms in the palace gardens.",
  "Street performers fill the market with music and dance.",
  "Local artists unveil murals in the city center.",
  "The Blacksmiths’ Guild forges a legendary blade (or so they claim).",
  "A rain of shooting stars is seen overhead.",
];

const YEARLY_EVENTS = [
  "Fireworks and bells ring in the new year.",   // <==Change as needed. Remember to make them fit Your Scenarios.
  "Tax collectors begin their rounds.",
  "The royal astrologer reads omens in the square.",
  "A grand tournament is announced.",
  "Peasants march for fairer grain prices.",
  "A rare comet blazes across the sky.",
  "The river floods, blessing the fields.",
  "The king’s health is rumored to be failing.",
  "The Academy opens applications for young apprentices.",
  "A ship brings spices and news from distant lands.",
  "A magical fog shrouds the city for three days.",
  "A famous bard composes a song about your deeds.",
];


// One-time events
const SPECIAL_EVENTS = [
  {
    key: "mysteriousVisitor",   // <==Change as needed. Remember to make them fit Your Scenarios.
    month: 5,
    year: 1455,
    text: "A mysterious visitor from the east arrives, bringing tales and strange gifts.",
  },
  {
    key: "plagueRumors",
    month: 10,
    year: 1456,
    text: "Whispers of a spreading plague send fear through the city.",
  },
  {
    key: "royalWedding",
    month: 2,
    year: 1457,
    text: "The city erupts in celebration for the royal wedding.",
  },
  {
    key: "firstMagicStorm",
    month: 8,
    year: 1455,
    text: "A wild magic storm lashes the city, enchanting random objects and animals for a day.",
  },
  {
    key: "libraryFire",
    month: 12,
    year: 1456,
    text: "A fire breaks out in the Grand Library. Scholars race to save ancient tomes.",
     
  },
  {
    key: "secretFestival",
    month: 9,
    year: 1455,
    text: "A secret, invite-only festival draws the city's elite into the moonlit gardens.",
    onceOnly: true // Example, in case you want some events absolutely one-time
  },
];


// You can use onNewMonth and onNewYear for bigger events/seasons if you want:
function onNewMonth() {
  let wc = state.worldClock;
  if (!state.firedEvents) state.firedEvents = {};

  // 1. One-time special events (fire if not already fired and matches date)
  for (const event of SPECIAL_EVENTS) {
    if (
      !state.firedEvents[event.key] &&
      wc.year === event.year &&
      wc.month === event.month
    ) {
      state.firedEvents[event.key] = true;
      if (typeof output !== "undefined") output.push(`🌟 ${event.text}`);
    }
  }

  // 2. Recurring event (pick by month or random)
  let eventLine = MONTHLY_EVENTS[(wc.month - 1) % MONTHLY_EVENTS.length];
  if (typeof output !== "undefined") output.push(`📅 ${eventLine}`);
}


function onNewYear() {
  let wc = state.worldClock;
  if (!state.firedEvents) state.firedEvents = {};

  // 1. One-time yearly special events if you want (repeat the above logic with year+month = 1 if needed)

  // 2. Recurring event (cycle by year, or pick random)
  let eventLine = YEARLY_EVENTS[(wc.year - 1454) % YEARLY_EVENTS.length];
  if (typeof output !== "undefined") output.push(`🎇 ${eventLine}`);
  if (wc.year === 1458 && !state.firedEvents["mysteriousComet"]) {
    state.firedEvents["mysteriousComet"] = true;
    if (typeof output !== "undefined") output.push("☄️ A blazing comet appears, and the city's fate is said to hang in the balance.");
  }
}


function timeSkip({days = 0, months = 0, years = 0} = {}) {
  if (!state.worldClock) state.worldClock = { year: 1454, month: 3, day: 27, hour: 7, minute: 0 };
  let clock = state.worldClock;

  // Calculate total days to skip (including months/years)
  let totalDays = days;

  // Add days for each year skipped
  for (let y = 0; y < years; y++) {
    let yVal = clock.year + y;
    for (let m = 1; m <= 12; m++) {
      totalDays += daysInMonth(yVal, m);
    }
  }

  // Add days for each month skipped
  for (let m = 0; m < months; m++) {
    let mYear = clock.year + Math.floor((clock.month + m - 1) / 12);
    let mNum = ((clock.month + m - 1) % 12) + 1;
    totalDays += daysInMonth(mYear, mNum);
  }

  // Advance day by day so daily events trigger
  for (let i = 0; i < totalDays; i++) {
    clock.day++;
    if (clock.day > daysInMonth(clock.year, clock.month)) {
      clock.day = 1;
      clock.month++;
      if (clock.month > 12) {
        clock.month = 1;
        clock.year++;
      }
    }
    if (typeof onNewDay === "function") onNewDay();
  }

  // Optionally, reset hour/minute (uncomment if you want this)
  // clock.hour = 7; clock.minute = 0;

  if (typeof output !== "undefined") {
    let parts = [];
    if (years) parts.push(`${years} year${years > 1 ? "s" : ""}`);
    if (months) parts.push(`${months} month${months > 1 ? "s" : ""}`);
    if (days) parts.push(`${days} day${days > 1 ? "s" : ""}`);
    output.push(`⏩ You skip ahead ${parts.join(", ")}. It is now ${getClockString()}.`);
  }
}
   function getCompoundActionMinutes(text) {
  let minutes = 0;
  let matches = new Set();

  // Your full actionMinutes and actionRegexList should be defined above!
  for (const [regex, key] of actionRegexList) {
    if (regex.test(text)) {
      if (!matches.has(key)) { // Prevent double-counting if two regexes point to the same action
        minutes += actionMinutes[key] || 0;
        matches.add(key);
      }
    }
  }
  // Fallback: If nothing matched, it's a minor action
  if (minutes === 0) return actionMinutes.minor || 1;
  return minutes;
}

const actionMinutes = {
  eat: 10, drink: 3, cook: 20, clean: 15, bathe: 15, wash: 10, dress: 5, sleep: 480, nap: 60, groom: 7, brush: 5,
  chat: 15, talk: 10, argue: 12, comfort: 8, teach: 25, scold: 6, debate: 20, joke: 5, lecture: 30, confess: 8, mrest: 180,
  feed: 7, soothe: 7, cuddle: 6, hug: 3, kiss: 2, play: 15, babysit: 30, care: 18, rock: 5, tuck: 5, discipline: 7,
  cry: 3, laugh: 2, sulk: 8, reminisce: 10, daydream: 7, meditate: 12, worry: 5,
  walk: 10, run: 4, jog: 6, hike: 18, ride: 15, sail: 30, row: 18, climb: 9, sneak: 6, swim: 12, fly: 25, explore: 18,
  study: 30, work: 60, write: 20, read: 15, paint: 30, sculpt: 40, invent: 50, build: 45, repair: 20, sew: 15, shop: 30, train: 35, plant: 20, harvest: 22, mine: 45, smith: 50, brew: 18, enchant: 25, experiment: 30,
  sing: 8, dance: 12, game: 15, listenmusic: 8, perform: 25, watch: 10, fish: 30, picnic: 40, gamble: 20, drinkalcohol: 30,
  fight: 8, battle: 10, spar: 12, duel: 12, hunt: 35, escape: 7, steal: 5, spy: 15, patrol: 25,
  cast: 5, ritual: 10, summon: 5, heal: 8, bless: 5, curse: 7, scry: 10, brewpotion: 15, commune: 12,
  minor: 1
};

const actionRegexList = [
  // 1️⃣ Nap / light rest (60 min)
  [ /\b(?:you|Nox)\b(?:\s+\w+){0,3}?\s+(takes?|enters?|catches?|has?|grabs?|lies? down|snuggles?|settles?|drifts?|relaxes?|decides? to take)\s+(?:\w+\s+){0,2}?(brief sleep|fleeting sleep|minor sleep|momentary sleep|passing sleep|quick sleep|short sleep|tiny sleep|transient sleep|breath|breathe|breathing|nap|snooze|siesta|rest)/i, 'nap' ],

  // 2️⃣ Moderate rest (mrest, 180 min)
  [ /\b(?:you|Nox)\b(?:\s+\w+){0,3}?\s+(takes?|gets?|enters?|settles?|lies? down|snuggles?|heads? for|proceeds?|prepares?)\s+(?:\w+\s+){0,2}?(catnap|doze|light sleep|power nap|repose|rest|siesta|snooze)/i, 'mrest' ],

  // 3️⃣ Full sleep (sleep, 480 min)
  [ /\b(?:you|Nox)\b(?:\s+\w+){0,3}?\s+(falls?|drifts?|goes?|turns? in|lies? down|makes?|slips?|enters?|surrenders?|crawls?|sinks?|heads?|steps?|moves?|sleeps?|transitions?|lays?)\s+(?:\w+\s+){0,2}?(deep sleep|deeply sleep|slumber|bed|hibernation|hibernate|uninterrupted sleep|rejuvenating sleep)/i, 'sleep' ],



// Eating / Drinking
[ /\beats?\b|\bbreakfast|\blunch\b|\bdinner\b|\bmeal\b|\bsnack/, 'eat' ],
[ /\b(drinks?(?!\s*(ale|beer|wine|liquor)))|\bsip(s)?\b|\bbeverage\b|\bwater\b|\btea\b|\bcoffee\b/, 'drink' ],
[ /\bdrinks? (ale|beer|wine|liquor)\b/, 'drinkalcohol' ],
[ /\bcooks?\b|\bbakes?\b|\bprepares? food\b/, 'cook' ],
[ /\bcleans?\b|\btidies?\b|\bsweeps?\b|\bscrubs?\b|\bmops?\b/, 'clean' ],
[ /\bbathes?\b|\bwashes?\b|\bshowers?\b|\brinses?\b/, 'bathe' ],
[ /\bdresses?\b|\bclothes?\b|\bchanges? clothes\b|\bputs? on\b/, 'dress' ],
[ /\bgrooms?\b|\bcombs?\b|\bbrushes? hair\b|\bstyles?\b/, 'groom' ],
[ /\bbrush(es)? (teeth|hair)\b/, 'brush' ],

// Conversation
[ /\bchats?\b|\btalks?\b|\bconverses?\b|\bspeaks?\b|\bconversation\b|\bgossip\b/, 'chat' ],
[ /\bargues?\b|\bdebates?\b|\bfights? verbally\b|\bconfronts?\b/, 'argue' ],
[ /\bcomforts?\b|\breassures?\b|\bconsoles?\b/, 'comfort' ],
[ /\bteaches?\b|\bexplains?\b|\binstructs?\b|\btutors?\b/, 'teach' ],
[ /\bscolds?\b|\bdisciplines?\b|\bchides?\b/, 'scold' ],
[ /\bjokes?\b|\bjest(s)?\b|\bbanters?\b|\bquips?\b/, 'joke' ],
[ /\blectures?\b|\blong talk\b/, 'lecture' ],
[ /\bconfesses?\b|\badmits?\b|\breveals? secret\b/, 'confess' ],


 // Family & care
[ /\bfeeds?\b|\bfeeding\b/, 'feed' ],
[ /\bsoothes?\b|\bcalms?\b|\bsettles?\b/, 'soothe' ],
[ /\bcuddles?\b|\bhugs?\b|\bembraces?\b/, 'cuddle' ],
[ /\bkisses?\b|\bpecks?\b|\bsmooches?\b/, 'kiss' ],
[ /\bplays?\b|\bgames?\b|\bfrolics?\b|\broughhouses?\b|\btags?\b/, 'play' ],
[ /\bbabysits?\b|\bwatch(es)? children\b/, 'babysit' ],
[ /\bcares?\b|\bnurses?\b|\battends?\b/, 'care' ],
[ /\brocks? (the|a) baby\b|\bcradles?\b/, 'rock' ],
[ /\btucks?( in)?\b/, 'tuck' ],

// Emotional
[ /\bcries?\b|\bweeps?\b|\bsobs?\b/, 'cry' ],
[ /\blaughs?\b|\bgiggles?\b|\bchuckles?\b/, 'laugh' ],
[ /\bsulks?\b|\bmopes?\b|\bbroods?\b/, 'sulk' ],
[ /\breminisces?\b|\bremembers?\b|\breflects?\b/, 'reminisce' ],
[ /\bdaydreams?\b|\bimagines?\b/, 'daydream' ],
[ /\bmeditates?\b|\bfocus(es)?\b|\bbreath(es)?\b/, 'meditate' ],
[ /\bworries?\b|\banxious\b|\bfrets?\b/, 'worry' ],

// Travel & movement
[ /\bwalks?\b|\bstrolls?\b|\bwanders?\b|\bambles?\b/, 'walk' ],
[ /\bruns?\b|\bdashes?\b|\bsprints?\b/, 'run' ],
[ /\bjogs?\b/, 'jog' ],
[ /\bhikes?\b/, 'hike' ],
[ /\brid(es)?\b|\bmounts?\b|\bhorsebacks?\b/, 'ride' ],
[ /\bsails?\b|\brows?\b|\bcanoes?\b|\bboats?\b/, 'sail' ],
[ /\bclimbs?\b|\bscales?\b/, 'climb' ],
[ /\bsneaks?\b|\btiptoes?\b|\bcreeps?\b/, 'sneak' ],
[ /\bswims?\b|\bdives?\b/, 'swim' ],
[ /\bflies?\b|\bglides?\b|\bsoars?\b/, 'fly' ],
[ /\bexplores?\b|\bscouts?\b|\binvestigates?\b/, 'explore' ],


  // Work & crafting
[ /\bstudies?\b|\breads?\b|\blearns?\b|\bresearch(es)?\b/, 'study' ],
[ /\bworks?\b|\blabors?\b|\btoils?\b|\bjobs?\b|\btasks?\b/, 'work' ],
[ /\bwrites?\b|\bscribbles?\b|\bcomposes?\b/, 'write' ],
[ /\bpaints?\b|\bdraws?\b|\bsketch(es)?\b/, 'paint' ],
[ /\bsculpts?\b|\bcarves?\b|\bmolds?\b/, 'sculpt' ],
[ /\binvents?\b|\btinkers?\b|\bengineers?\b/, 'invent' ],
[ /\bbuilds?\b|\bconstructs?\b/, 'build' ],
[ /\brepairs?\b|\bfixes?\b|\bmends?\b/, 'repair' ],
[ /\bsews?\b|\bstitches?\b|\bknits?\b/, 'sew' ],
[ /\bshops?\b|\bmarkets?\b|\bbuys?\b|\bsells?\b/, 'shop' ],
[ /\btrains?\b|\bpractices?\b|\bdrills?\b/, 'train' ],
[ /\bplants?\b|\bgardens?\b/, 'plant' ],
[ /\bharvests?\b|\breaps?\b/, 'harvest' ],
[ /\bmines?\b|\bdigs?\b|\bquarries?\b/, 'mine' ],
[ /\bsmiths?\b|\bforges?\b/, 'smith' ],
[ /\bbrews?\b|\bdistills?\b/, 'brew' ],
[ /\benchants?\b|\bimbues?\b/, 'enchant' ],
[ /\bexperiments?\b|\btests?\b/, 'experiment' ],

// Leisure & fun
[ /\bsings?\b|\bhums?\b|\bchants?\b/, 'sing' ],
[ /\bdances?\b|\bwaltzes?\b|\btwirls?\b/, 'dance' ],
[ /\bgames?\b|\bplays?\b|\bboard games?\b/, 'game' ],
[ /\blistens? to music\b|\bmusic\b|\bmelody\b/, 'listenmusic' ],
[ /\bperforms?\b|\bshows?\b|\brecitals?\b/, 'perform' ],
[ /\bwatches?\b|\bobserves?\b/, 'watch' ],
[ /\bfishes?\b|\bfishing\b/, 'fish' ],
[ /\bpicnics?\b/, 'picnic' ],
[ /\bgambles?\b|\bbets?\b|\bwagers?\b/, 'gamble' ],

// Combat & risk
[ /\bfights?\b|\bbrawls?\b|\bscuffles?\b/, 'fight' ],
[ /\bbattles?\b|\bwars?\b/, 'battle' ],
[ /\bspars?\b|\bpractice fights?\b/, 'spar' ],
[ /\bduels?\b|\bchallenges?\b/, 'duel' ],
[ /\bhunts?\b|\btracks?\b/, 'hunt' ],
[ /\bescapes?\b|\bflees?\b|\bruns? away\b/, 'escape' ],
[ /\bsteals?\b|\bpickpockets?\b|\blifts?\b/, 'steal' ],
[ /\bspies?\b|\beavesdrops?\b/, 'spy' ],
[ /\bpatrols?\b/, 'patrol' ],

// Magic & fantasy
[ /\bcasts?\b|\bspells?\b|\bincants?\b|\bmagics?\b/, 'cast' ],
[ /\brituals?\b|\bceremonies?\b/, 'ritual' ],
[ /\bsummons?\b|\bconjures?\b/, 'summon' ],
[ /\bheals?\b|\bcures?\b/, 'heal' ],
[ /\bblesses?\b/, 'bless' ],
[ /\bcurses?\b/, 'curse' ],
[ /\bscries?\b|\bdivines?\b|\bsee(s)? future\b/, 'scry' ],
[ /\bbrews? (potion|elixir)\b/, 'brewpotion' ],
[ /\bcommunes?\b|\bspirits?\b|\bghosts?\b|\bancestors?\b/, 'commune' ],
];
//added mapping logic


function retrieveSTTFromSC() {
    const currSC = storyCards.find(sc => sc.title === "Story Status");
    if (!currSC || !currSC.entry) return;

    const lines = currSC.entry.split('\n');

    lines.forEach(line => {
        const [key, ...rest] = line.split(':').map(s => s.trim());
        const value = rest.join(':'); 

        if (key === "Year") state.stt.year = Number(value);
        else if (key === "Month-Day") {
            const [month, day] = value.split('-').map(Number);
            state.stt.month = month - 1;  // STT month is 0–11
            state.stt.dayOfMonth = day;
        }
        else if (key === "Hour-Minute") {
            const [hour, minute] = value.split(':').map(Number);
            state.stt.gameHour = hour;
            state.stt.gameMinute = minute;
        }
        else if (key === "TD") state.stt.timePassOnDo = Number(value);
        else if (key === "TS") state.stt.timePassOnSay = Number(value);
        else if (key === "TST") state.stt.timePassOnStory = Number(value);
        else if (key === "TC") state.stt.timePassOnContinue = Number(value);
    });
  // --- Apply JSON/date recalculation logic exactly as given ---
  let needsDateRecalc = false;

  for (const key in this.defaultSettings) {
    if (state.stt[key] === undefined) {
      state.stt[key] = JSON.parse(JSON.stringify(this.defaultSettings[key]));
      if (['gameHour', 'gameMinute', 'dayOfMonth', 'month', 'year'].includes(key)) {
        needsDateRecalc = true;
      }
    }
  }
  state.stt.initialized = true;

  try {
    const currentDate = new Date(
      state.stt.year, state.stt.month, state.stt.dayOfMonth,
      state.stt.gameHour, state.stt.gameMinute
    );
    if (isNaN(currentDate.getTime())) {
      console.warn("STT.initialize: Invalid date in state. Resetting.");
      state.stt = JSON.parse(JSON.stringify(this.defaultSettings));
      const validDefaultDate = new Date(state.stt.year, state.stt.month, state.stt.dayOfMonth);
      state.stt.dayOfWeek = validDefaultDate.getDay();
    } else if (needsDateRecalc || state.stt.dayOfWeek !== currentDate.getDay()) {
      state.stt.dayOfWeek = currentDate.getDay();
    }
  } catch (e) {
    console.error("STT.initialize: Date validation error. Resetting.", e);
    state.stt = JSON.parse(JSON.stringify(this.defaultSettings));
    const validDefaultDate = new Date(state.stt.year, state.stt.month, state.stt.dayOfMonth);
    state.stt.dayOfWeek = validDefaultDate.getDay();
  }
}
function storeSTTToSC() {
    const currSC = storyCards.find(sc => sc.title === "Story Status");
    if (!currSC) return;

    currSC.entry =
        `World Clock:""\n` +
        `Year: ${state.stt.year}\n` +
        `Month-Day: ${String(state.stt.month + 1).padStart(2, '0')}-${String(state.stt.dayOfMonth).padStart(2, '0')}\n` +
        `Hour-Minute: ${String(state.stt.gameHour).padStart(2, '0')}:${String(state.stt.gameMinute).padStart(2, '0')}\n` + 
            `TD: ${state.stt.timePassOnDo}\n`+
    `TS: ${state.stt.timePassOnSay}\n`+
    `TST: ${state.stt.timePassOnStory}\n`+
    `TC: ${state.stt.timePassOnContinue} \n`;
}
function retrieveWCFromSC() {
    const currSC = storyCards.find(sc => sc.title === "Story Status");
    if (!currSC || !currSC.entry) return;

    const lines = currSC.entry.split('\n');

    lines.forEach(line => {
        const [key, ...rest] = line.split(':').map(s => s.trim());
        const value = rest.join(':'); 

        if (key === "Year") state.worldClock.year = Number(value);
        else if (key === "Month-Day") {
            const [month, day] = value.split('-').map(Number);
            state.worldClock.month = month;  // STT month is 0–11
            state.worldClock.day = day;
        }
        else if (key === "Hour-Minute") {
            const [hour, minute] = value.split(':').map(Number);
            state.worldClock.hour = hour;
            state.worldClock.minute = minute;
        }

    });
}
function storeWCToSC() {
    const currSC = storyCards.find(sc => sc.title === "Story Status");
    if (!currSC) return;

    currSC.entry =
        `World Clock:""\n` +
        `Year: ${state.worldClock.year}\n` +
        `Month-Day: ${String(state.worldClock.month).padStart(2, '0')}-${String(state.worldClock.day).padStart(2, '0')}\n` +
        `Hour-Minute: ${String(state.worldClock.hour).padStart(2, '0')}:${String(state.worldClock.minute).padStart(2, '0')}\n` +
            `TD: ${state.stt.timePassOnDo}\n`+
    `TS: ${state.stt.timePassOnSay}\n`+
    `TST: ${state.stt.timePassOnStory}\n`+
    `TC: ${state.stt.timePassOnContinue} \n`;
}



//added sae element removal syand alone


function itemRemoval() {
    // Find the "Current Story Arc" card
    const arcSC = storyCards.find(sc => sc.title === "Current Story Arc");
     
    if (!arcSC || !arcSC.entry || arcSC.entry.trim() === "") return; // Do nothing if empty

    // Split entry into lines
    const lines = arcSC.entry.split('\n');

    // Find the start of the numbered list
    const startIndex = lines.findIndex(line => /^\d+\.\s/.test(line));
    if (startIndex === -1) return; // No numbered list found

    // Separate text before the list and the list itself
    const beforeList = lines.slice(0, startIndex);
    const listLines = lines.slice(startIndex);

    //mark and log item removal
      const removedItem = listLines[0];
    // Prepend removed item to description
arcSC.description = `Log ${state.turnNum_SAE} | Previously:\n${removedItem}\n` + (arcSC.description || "");

// Trim description to max 3000 characters
if (arcSC.description.length > 3000) {
    arcSC.description = arcSC.description.slice(0, 3000);
}

    // Remove the first item
    listLines.shift();

    // Renumber remaining items
    const renumberedList = listLines.map((line, idx) => {
        return `${idx + 1}. ${line.replace(/^\d+\.\s*/, '')}`;
    });

    // Reassemble entry and save back
    arcSC.entry = [...beforeList, ...renumberedList].join('\n');
}

function arcElementRemoval() {
    // Always clamp activePointIndex first
    const arcSC = storyCards.find(sc => sc.title === "Current Story Arc");
    if (arcSC && arcSC.entry?.trim()) {
        const lines = arcSC.entry.split('\n');
        const startIndex = lines.findIndex(line => /^\s*\d+\.\s/.test(line));
        if (startIndex !== -1) {
            const numberedLines = lines.slice(startIndex);
            const maxIndex = numberedLines.length - 1; // zero-based
            if (state.sae.activePointIndex > maxIndex) {
                state.sae.activePointIndex = maxIndex;
            }
        }
    }

    // Trigger condition for element removal
    if (
        state.turnNum_SAE >= 5 &&
        state.turnNum_SAE % state.turnsPerElemRemoval === 0 &&
        state.turnsPerElemRemoval !== 0
    ) {
        itemRemoval();                  // remove first item
        state.sae.activePointIndex = 0; // reset pointer

        log("\narcElementRemoval ran. Active index reset and clamped.");
    }
}

////debug for checking guidance prompt
function createIfNoPromptSC(){
    formatForSC = [];
  if (!storyCards.find(sc => sc.title === "Prompt Debug")) {
    // If "Story Status" card doesn't exist, create it
    addStoryCard("Prompt Debug", "Blank", "Prompt Debug");

    // Fetch the "Story Status" card
    const promptSC = storyCards.find(sc => sc.title === "Prompt Debug");
     
// Convert holder to string, clean commas, and finally store to sc entry
  promptSC.entry = String(formatForSC).replace(/,/g, '');
  promptSC.description = String(formatForSC).replace(/,/g, '');
  };
  }
function storePromptToSC() {
  // Fetch the "Prompt debug" card
  const promptSC = storyCards.find(sc => sc.title === "Prompt Debug");
  if (!promptSC) return;

  // Format and update the entry
  promptSC.entry =
    `Current Time is ${String(state.globalTime.hour).padStart(2, '0')}hrs: ${String(state.globalTime.minute).padStart(2, '0')}mins\n`;

  // Also save into msgHolder if you still want that buffer

state.message = 
  `Turn: ${state.turnNum_SAE},Time: ${String(state.globalTime.hour).padStart(2,'0')}:${String(state.globalTime.minute).padStart(2,'0')}\n` +
  state.message;


}

// added ANuthors note
function createIfNoANSC(){
    formatForSC = [];
  if (!storyCards.find(sc => sc.title === "New Auth Note")) {
    // If "Story Status" card doesn't exist, create it
    addStoryCard("New Auth Note", "Blank", "New Auth Note");

    // Fetch the "Story Status" card
    const authNoteSC = storyCards.find(sc => sc.title === "New Auth Note");
     
// Convert holder to string, clean commas, and finally store to sc entry
    authNoteSC.entry = "Writing Style Genre: Adventure, Open World. Reflect Personality in Actions and Speech. Avoid Mentioning Secrets";
  authNoteSC.description = "this is the replacement for authors note. adjust it as you wish and after any action (do/say/story), it will be picked up by the AI";
  };
  }
  
function retrieveANFromSC() {
  const authNoteSC = storyCards.find(sc => sc.title === "New Auth Note");
  if (!authNoteSC || !authNoteSC.entry) return "";

  return authNoteSC.entry; // return the entry directly
}

// then wherever you want to update state.newNote:
state.newNote = retrieveANFromSC()


   

